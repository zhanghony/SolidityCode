{
	"id": "84a645e4f52f18b5b423432c4bfc0fd9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"contracts/demo/ReceiverPays.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.7.0 <0.9.0;\r\ncontract ReceiverPays {\r\n    address owner = msg.sender;\r\n\r\n    mapping(uint256 => bool) usedNonces;\r\n\r\n    constructor() payable {}\r\n\r\n    function claimPayment(uint256 amount, uint256 nonce, bytes memory signature) external {\r\n        require(!usedNonces[nonce]);\r\n        usedNonces[nonce] = true;\r\n\r\n        // 这将重新创建在客户端上签名的信息。\r\n        bytes32 message = prefixed(keccak256(abi.encodePacked(msg.sender, amount, nonce, this)));\r\n\r\n        require(recoverSigner(message, signature) == owner);\r\n\r\n        payable(msg.sender).transfer(amount);\r\n    }\r\n\r\n    /// 销毁合约并收回剩余的资金。\r\n    function shutdown() external {\r\n        require(msg.sender == owner);\r\n        selfdestruct(payable(msg.sender));\r\n    }\r\n\r\n    /// 签名方法。\r\n    function splitSignature(bytes memory sig)\r\n        internal\r\n        pure\r\n        returns (uint8 v, bytes32 r, bytes32 s)\r\n    {\r\n        require(sig.length == 65);\r\n\r\n        assembly {\r\n            // 前32个字节，在长度前缀之后。\r\n            r := mload(add(sig, 32))\r\n            // 第二个32字节。\r\n            s := mload(add(sig, 64))\r\n            // 最后一个字节（下一个32字节的第一个字节）。\r\n            v := byte(0, mload(add(sig, 96)))\r\n        }\r\n\r\n        return (v, r, s);\r\n    }\r\n\r\n    function recoverSigner(bytes32 message, bytes memory sig)\r\n        internal\r\n        pure\r\n        returns (address)\r\n    {\r\n        (uint8 v, bytes32 r, bytes32 s) = splitSignature(sig);\r\n\r\n        return ecrecover(message, v, r, s);\r\n    }\r\n\r\n    /// 构建一个前缀哈希值，以模仿 eth_sign 的行为。\r\n    function prefixed(bytes32 hash) internal pure returns (bytes32) {\r\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", hash));\r\n    }\r\n}"
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/demo/ReceiverPays.sol": {
				"ReceiverPays": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "nonce",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "claimPayment",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "shutdown",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/demo/ReceiverPays.sol\":70:1886  contract ReceiverPays {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/demo/ReceiverPays.sol\":99:125  address owner = msg.sender */\n  0x00\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"contracts/demo/ReceiverPays.sol\":115:125  msg.sender */\n  caller\n    /* \"contracts/demo/ReceiverPays.sol\":99:125  address owner = msg.sender */\n  or\n  swap1\n  sstore\n    /* \"contracts/demo/ReceiverPays.sol\":70:1886  contract ReceiverPays {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/demo/ReceiverPays.sol\":70:1886  contract ReceiverPays {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa90ae887\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xfc0e74d1\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/demo/ReceiverPays.sol\":210:655  function claimPayment(uint256 amount, uint256 nonce, bytes memory signature) external {\r... */\n    tag_3:\n      tag_5\n      tag_6\n      calldatasize\n      0x04\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      stop\n        /* \"contracts/demo/ReceiverPays.sol\":712:832  function shutdown() external {\r... */\n    tag_4:\n      tag_5\n      tag_10\n      jump\t// in\n        /* \"contracts/demo/ReceiverPays.sol\":210:655  function claimPayment(uint256 amount, uint256 nonce, bytes memory signature) external {\r... */\n    tag_8:\n        /* \"contracts/demo/ReceiverPays.sol\":316:333  usedNonces[nonce] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"contracts/demo/ReceiverPays.sol\":316:326  usedNonces */\n      0x01\n        /* \"contracts/demo/ReceiverPays.sol\":316:333  usedNonces[nonce] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/demo/ReceiverPays.sol\":315:333  !usedNonces[nonce] */\n      iszero\n        /* \"contracts/demo/ReceiverPays.sol\":307:334  require(!usedNonces[nonce]) */\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n        /* \"contracts/demo/ReceiverPays.sol\":345:362  usedNonces[nonce] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"contracts/demo/ReceiverPays.sol\":365:369  true */\n      0x01\n        /* \"contracts/demo/ReceiverPays.sol\":345:362  usedNonces[nonce] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"contracts/demo/ReceiverPays.sol\":345:369  usedNonces[nonce] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      swap4\n      or\n      swap1\n      swap3\n      sstore\n        /* \"contracts/demo/ReceiverPays.sol\":483:532  abi.encodePacked(msg.sender, amount, nonce, this) */\n      swap1\n      mload\n        /* \"contracts/demo/ReceiverPays.sol\":464:534  prefixed(keccak256(abi.encodePacked(msg.sender, amount, nonce, this))) */\n      tag_13\n      swap2\n        /* \"contracts/demo/ReceiverPays.sol\":483:532  abi.encodePacked(msg.sender, amount, nonce, this) */\n      tag_14\n      swap2\n        /* \"contracts/demo/ReceiverPays.sol\":500:510  msg.sender */\n      caller\n      swap2\n        /* \"contracts/demo/ReceiverPays.sol\":512:518  amount */\n      dup9\n      swap2\n        /* \"contracts/demo/ReceiverPays.sol\":356:361  nonce */\n      dup9\n      swap2\n        /* \"contracts/demo/ReceiverPays.sol\":527:531  this */\n      address\n      swap2\n        /* \"contracts/demo/ReceiverPays.sol\":483:532  abi.encodePacked(msg.sender, amount, nonce, this) */\n      add\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/demo/ReceiverPays.sol\":473:533  keccak256(abi.encodePacked(msg.sender, amount, nonce, this)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/demo/ReceiverPays.sol\":464:472  prefixed */\n      tag_16\n        /* \"contracts/demo/ReceiverPays.sol\":464:534  prefixed(keccak256(abi.encodePacked(msg.sender, amount, nonce, this))) */\n      jump\t// in\n    tag_13:\n        /* \"contracts/demo/ReceiverPays.sol\":592:597  owner */\n      sload(0x00)\n        /* \"contracts/demo/ReceiverPays.sol\":446:534  bytes32 message = prefixed(keccak256(abi.encodePacked(msg.sender, amount, nonce, this))) */\n      swap1\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/demo/ReceiverPays.sol\":592:597  owner */\n      and\n        /* \"contracts/demo/ReceiverPays.sol\":555:588  recoverSigner(message, signature) */\n      tag_17\n        /* \"contracts/demo/ReceiverPays.sol\":446:534  bytes32 message = prefixed(keccak256(abi.encodePacked(msg.sender, amount, nonce, this))) */\n      dup3\n        /* \"contracts/demo/ReceiverPays.sol\":578:587  signature */\n      dup5\n        /* \"contracts/demo/ReceiverPays.sol\":555:568  recoverSigner */\n      tag_18\n        /* \"contracts/demo/ReceiverPays.sol\":555:588  recoverSigner(message, signature) */\n      jump\t// in\n    tag_17:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/demo/ReceiverPays.sol\":555:597  recoverSigner(message, signature) == owner */\n      and\n      eq\n        /* \"contracts/demo/ReceiverPays.sol\":547:598  require(recoverSigner(message, signature) == owner) */\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n        /* \"contracts/demo/ReceiverPays.sol\":611:647  payable(msg.sender).transfer(amount) */\n      mload(0x40)\n        /* \"contracts/demo/ReceiverPays.sol\":619:629  msg.sender */\n      caller\n      swap1\n        /* \"contracts/demo/ReceiverPays.sol\":611:647  payable(msg.sender).transfer(amount) */\n      dup6\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"contracts/demo/ReceiverPays.sol\":640:646  amount */\n      dup7\n      swap1\n        /* \"contracts/demo/ReceiverPays.sol\":611:647  payable(msg.sender).transfer(amount) */\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"contracts/demo/ReceiverPays.sol\":640:646  amount */\n      dup6\n        /* \"contracts/demo/ReceiverPays.sol\":619:629  msg.sender */\n      dup9\n        /* \"contracts/demo/ReceiverPays.sol\":611:647  payable(msg.sender).transfer(amount) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_21\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_21:\n      pop\n        /* \"contracts/demo/ReceiverPays.sol\":210:655  function claimPayment(uint256 amount, uint256 nonce, bytes memory signature) external {\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/demo/ReceiverPays.sol\":712:832  function shutdown() external {\r... */\n    tag_10:\n        /* \"contracts/demo/ReceiverPays.sol\":774:779  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/demo/ReceiverPays.sol\":760:770  msg.sender */\n      caller\n        /* \"contracts/demo/ReceiverPays.sol\":760:779  msg.sender == owner */\n      eq\n        /* \"contracts/demo/ReceiverPays.sol\":752:780  require(msg.sender == owner) */\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n        /* \"contracts/demo/ReceiverPays.sol\":812:822  msg.sender */\n      caller\n        /* \"contracts/demo/ReceiverPays.sol\":791:824  selfdestruct(payable(msg.sender)) */\n      selfdestruct\n        /* \"contracts/demo/ReceiverPays.sol\":1724:1883  function prefixed(bytes32 hash) internal pure returns (bytes32) {\r... */\n    tag_16:\n        /* \"contracts/demo/ReceiverPays.sol\":1779:1786  bytes32 */\n      0x00\n        /* \"contracts/demo/ReceiverPays.sol\":1869:1873  hash */\n      dup2\n        /* \"contracts/demo/ReceiverPays.sol\":1816:1874  abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", hash) */\n      add(0x20, mload(0x40))\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/demo/ReceiverPays.sol\":1806:1875  keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", hash)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/demo/ReceiverPays.sol\":1799:1875  return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", hash)) */\n      swap1\n      pop\n        /* \"contracts/demo/ReceiverPays.sol\":1724:1883  function prefixed(bytes32 hash) internal pure returns (bytes32) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/demo/ReceiverPays.sol\":1404:1645  function recoverSigner(bytes32 message, bytes memory sig)\r... */\n    tag_18:\n        /* \"contracts/demo/ReceiverPays.sol\":1512:1519  address */\n      0x00\n        /* \"contracts/demo/ReceiverPays.sol\":1538:1545  uint8 v */\n      dup1\n        /* \"contracts/demo/ReceiverPays.sol\":1547:1556  bytes32 r */\n      0x00\n        /* \"contracts/demo/ReceiverPays.sol\":1558:1567  bytes32 s */\n      dup1\n        /* \"contracts/demo/ReceiverPays.sol\":1571:1590  splitSignature(sig) */\n      tag_28\n        /* \"contracts/demo/ReceiverPays.sol\":1586:1589  sig */\n      dup6\n        /* \"contracts/demo/ReceiverPays.sol\":1571:1585  splitSignature */\n      tag_29\n        /* \"contracts/demo/ReceiverPays.sol\":1571:1590  splitSignature(sig) */\n      jump\t// in\n    tag_28:\n        /* \"contracts/demo/ReceiverPays.sol\":1537:1590  (uint8 v, bytes32 r, bytes32 s) = splitSignature(sig) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"contracts/demo/ReceiverPays.sol\":1610:1637  ecrecover(message, v, r, s) */\n      0x01\n        /* \"contracts/demo/ReceiverPays.sol\":1620:1627  message */\n      dup7\n        /* \"contracts/demo/ReceiverPays.sol\":1629:1630  v */\n      dup5\n        /* \"contracts/demo/ReceiverPays.sol\":1632:1633  r */\n      dup5\n        /* \"contracts/demo/ReceiverPays.sol\":1635:1636  s */\n      dup5\n        /* \"contracts/demo/ReceiverPays.sol\":1610:1637  ecrecover(message, v, r, s) */\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      tag_30\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_33\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_33:\n      pop\n      pop\n      mload(add(not(0x1f), mload(0x40)))\n      swap8\n        /* \"contracts/demo/ReceiverPays.sol\":1404:1645  function recoverSigner(bytes32 message, bytes memory sig)\r... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/demo/ReceiverPays.sol\":865:1396  function splitSignature(bytes memory sig)\r... */\n    tag_29:\n        /* \"contracts/demo/ReceiverPays.sol\":957:964  uint8 v */\n      0x00\n        /* \"contracts/demo/ReceiverPays.sol\":966:975  bytes32 r */\n      dup1\n        /* \"contracts/demo/ReceiverPays.sol\":977:986  bytes32 s */\n      0x00\n        /* \"contracts/demo/ReceiverPays.sol\":1012:1015  sig */\n      dup4\n        /* \"contracts/demo/ReceiverPays.sol\":1012:1022  sig.length */\n      mload\n        /* \"contracts/demo/ReceiverPays.sol\":1026:1028  65 */\n      0x41\n        /* \"contracts/demo/ReceiverPays.sol\":1012:1028  sig.length == 65 */\n      eq\n        /* \"contracts/demo/ReceiverPays.sol\":1004:1029  require(sig.length == 65) */\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      pop\n      pop\n        /* \"contracts/demo/ReceiverPays.sol\":1144:1146  32 */\n      0x20\n        /* \"contracts/demo/ReceiverPays.sol\":1135:1147  add(sig, 32) */\n      dup2\n      add\n        /* \"contracts/demo/ReceiverPays.sol\":1129:1148  mload(add(sig, 32)) */\n      mload\n        /* \"contracts/demo/ReceiverPays.sol\":1219:1221  64 */\n      0x40\n        /* \"contracts/demo/ReceiverPays.sol\":1210:1222  add(sig, 64) */\n      dup3\n      add\n        /* \"contracts/demo/ReceiverPays.sol\":1204:1223  mload(add(sig, 64)) */\n      mload\n        /* \"contracts/demo/ReceiverPays.sol\":1344:1346  96 */\n      0x60\n        /* \"contracts/demo/ReceiverPays.sol\":1335:1347  add(sig, 96) */\n      swap1\n      swap3\n      add\n        /* \"contracts/demo/ReceiverPays.sol\":1329:1348  mload(add(sig, 96)) */\n      mload\n        /* \"contracts/demo/ReceiverPays.sol\":1326:1327  0 */\n      0x00\n        /* \"contracts/demo/ReceiverPays.sol\":1321:1349  byte(0, mload(add(sig, 96))) */\n      byte\n      swap3\n        /* \"contracts/demo/ReceiverPays.sol\":1129:1148  mload(add(sig, 32)) */\n      swap1\n      swap2\n        /* \"contracts/demo/ReceiverPays.sol\":1204:1223  mload(add(sig, 64)) */\n      swap1\n        /* \"contracts/demo/ReceiverPays.sol\":865:1396  function splitSignature(bytes memory sig)\r... */\n      jump\t// out\n        /* \"#utility.yul\":14:1107   */\n    tag_7:\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":169:171   */\n      0x60\n        /* \"#utility.yul\":157:166   */\n      dup5\n        /* \"#utility.yul\":148:155   */\n      dup7\n        /* \"#utility.yul\":144:167   */\n      sub\n        /* \"#utility.yul\":140:172   */\n      slt\n        /* \"#utility.yul\":137:139   */\n      iszero\n      tag_38\n      jumpi\n        /* \"#utility.yul\":190:196   */\n      dup3\n        /* \"#utility.yul\":182:188   */\n      dup4\n        /* \"#utility.yul\":175:197   */\n      revert\n        /* \"#utility.yul\":137:139   */\n    tag_38:\n        /* \"#utility.yul\":231:240   */\n      dup4\n        /* \"#utility.yul\":218:241   */\n      calldataload\n        /* \"#utility.yul\":208:241   */\n      swap3\n      pop\n        /* \"#utility.yul\":260:262   */\n      0x20\n        /* \"#utility.yul\":309:311   */\n      dup1\n        /* \"#utility.yul\":298:307   */\n      dup6\n        /* \"#utility.yul\":294:312   */\n      add\n        /* \"#utility.yul\":281:313   */\n      calldataload\n        /* \"#utility.yul\":271:313   */\n      swap3\n      pop\n        /* \"#utility.yul\":364:366   */\n      0x40\n        /* \"#utility.yul\":353:362   */\n      dup6\n        /* \"#utility.yul\":349:367   */\n      add\n        /* \"#utility.yul\":336:368   */\n      calldataload\n        /* \"#utility.yul\":387:405   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":428:430   */\n      dup1\n        /* \"#utility.yul\":420:426   */\n      dup3\n        /* \"#utility.yul\":417:431   */\n      gt\n        /* \"#utility.yul\":414:416   */\n      iszero\n      tag_39\n      jumpi\n        /* \"#utility.yul\":449:455   */\n      dup4\n        /* \"#utility.yul\":441:447   */\n      dup5\n        /* \"#utility.yul\":434:456   */\n      revert\n        /* \"#utility.yul\":414:416   */\n    tag_39:\n        /* \"#utility.yul\":492:498   */\n      dup2\n        /* \"#utility.yul\":481:490   */\n      dup8\n        /* \"#utility.yul\":477:499   */\n      add\n        /* \"#utility.yul\":467:499   */\n      swap2\n      pop\n        /* \"#utility.yul\":537:544   */\n      dup8\n        /* \"#utility.yul\":530:534   */\n      0x1f\n        /* \"#utility.yul\":526:528   */\n      dup4\n        /* \"#utility.yul\":522:535   */\n      add\n        /* \"#utility.yul\":518:545   */\n      slt\n        /* \"#utility.yul\":508:510   */\n      tag_40\n      jumpi\n        /* \"#utility.yul\":564:570   */\n      dup4\n        /* \"#utility.yul\":556:562   */\n      dup5\n        /* \"#utility.yul\":549:571   */\n      revert\n        /* \"#utility.yul\":508:510   */\n    tag_40:\n        /* \"#utility.yul\":605:607   */\n      dup2\n        /* \"#utility.yul\":592:608   */\n      calldataload\n        /* \"#utility.yul\":627:629   */\n      dup2\n        /* \"#utility.yul\":623:625   */\n      dup2\n        /* \"#utility.yul\":620:630   */\n      gt\n        /* \"#utility.yul\":617:619   */\n      iszero\n      tag_42\n      jumpi\n        /* \"#utility.yul\":633:651   */\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":682:684   */\n      0x40\n        /* \"#utility.yul\":676:685   */\n      mload\n        /* \"#utility.yul\":751:753   */\n      0x1f\n        /* \"#utility.yul\":732:745   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":728:755   */\n      and\n        /* \"#utility.yul\":716:756   */\n      dup2\n      add\n        /* \"#utility.yul\":712:761   */\n      dup6\n      add\n        /* \"#utility.yul\":776:794   */\n      dup4\n      dup2\n      gt\n        /* \"#utility.yul\":796:818   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":773:819   */\n      or\n        /* \"#utility.yul\":770:772   */\n      iszero\n      tag_45\n      jumpi\n        /* \"#utility.yul\":822:840   */\n      tag_45\n      tag_43\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":858:860   */\n      0x40\n        /* \"#utility.yul\":851:873   */\n      mstore\n        /* \"#utility.yul\":882:900   */\n      dup2\n      dup2\n      mstore\n        /* \"#utility.yul\":919:930   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":915:935   */\n      dup6\n      add\n        /* \"#utility.yul\":912:945   */\n      dup11\n      lt\n        /* \"#utility.yul\":909:911   */\n      iszero\n      tag_46\n      jumpi\n        /* \"#utility.yul\":963:969   */\n      dup6\n        /* \"#utility.yul\":955:961   */\n      dup7\n        /* \"#utility.yul\":948:970   */\n      revert\n        /* \"#utility.yul\":909:911   */\n    tag_46:\n        /* \"#utility.yul\":1024:1026   */\n      dup2\n        /* \"#utility.yul\":1019:1021   */\n      dup6\n        /* \"#utility.yul\":1015:1017   */\n      dup6\n        /* \"#utility.yul\":1011:1022   */\n      add\n        /* \"#utility.yul\":1006:1008   */\n      dup7\n        /* \"#utility.yul\":998:1004   */\n      dup4\n        /* \"#utility.yul\":994:1009   */\n      add\n        /* \"#utility.yul\":981:1027   */\n      calldatacopy\n        /* \"#utility.yul\":1069:1075   */\n      dup6\n        /* \"#utility.yul\":1064:1066   */\n      dup6\n        /* \"#utility.yul\":1059:1061   */\n      dup4\n        /* \"#utility.yul\":1051:1057   */\n      dup4\n        /* \"#utility.yul\":1047:1062   */\n      add\n        /* \"#utility.yul\":1043:1067   */\n      add\n        /* \"#utility.yul\":1036:1076   */\n      mstore\n        /* \"#utility.yul\":1095:1101   */\n      dup1\n        /* \"#utility.yul\":1085:1101   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":127:1107   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1112:1596   */\n    tag_15:\n      not(0xffffffffffffffffffffffff)\n        /* \"#utility.yul\":1415:1417   */\n      0x60\n        /* \"#utility.yul\":1411:1426   */\n      swap6\n      dup7\n      shl\n        /* \"#utility.yul\":1407:1431   */\n      dup2\n      and\n        /* \"#utility.yul\":1395:1432   */\n      dup3\n      mstore\n        /* \"#utility.yul\":1457:1459   */\n      0x14\n        /* \"#utility.yul\":1448:1460   */\n      dup3\n      add\n        /* \"#utility.yul\":1441:1469   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"#utility.yul\":1494:1496   */\n      0x34\n        /* \"#utility.yul\":1485:1497   */\n      dup2\n      add\n        /* \"#utility.yul\":1478:1506   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":1540:1555   */\n      swap1\n      swap3\n      shl\n        /* \"#utility.yul\":1536:1560   */\n      and\n        /* \"#utility.yul\":1531:1533   */\n      0x54\n        /* \"#utility.yul\":1522:1534   */\n      dup3\n      add\n        /* \"#utility.yul\":1515:1561   */\n      mstore\n        /* \"#utility.yul\":1586:1589   */\n      0x68\n        /* \"#utility.yul\":1577:1590   */\n      add\n      swap1\n        /* \"#utility.yul\":1335:1596   */\n      jump\t// out\n        /* \"#utility.yul\":1601:1981   */\n    tag_26:\n        /* \"#utility.yul\":1843:1909   */\n      0x19457468657265756d205369676e6564204d6573736167653a0a333200000000\n        /* \"#utility.yul\":1831:1910   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1935:1937   */\n      0x1c\n        /* \"#utility.yul\":1926:1938   */\n      dup2\n      add\n        /* \"#utility.yul\":1919:1947   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":1972:1974   */\n      0x3c\n        /* \"#utility.yul\":1963:1975   */\n      add\n      swap1\n        /* \"#utility.yul\":1821:1981   */\n      jump\t// out\n        /* \"#utility.yul\":1986:2384   */\n    tag_31:\n        /* \"#utility.yul\":2213:2238   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":2286:2290   */\n      0xff\n        /* \"#utility.yul\":2274:2291   */\n      swap3\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":2269:2271   */\n      0x20\n        /* \"#utility.yul\":2254:2272   */\n      dup5\n      add\n        /* \"#utility.yul\":2247:2292   */\n      mstore\n        /* \"#utility.yul\":2323:2325   */\n      0x40\n        /* \"#utility.yul\":2308:2326   */\n      dup4\n      add\n        /* \"#utility.yul\":2301:2335   */\n      mstore\n        /* \"#utility.yul\":2366:2368   */\n      0x60\n        /* \"#utility.yul\":2351:2369   */\n      dup3\n      add\n        /* \"#utility.yul\":2344:2378   */\n      mstore\n        /* \"#utility.yul\":2200:2203   */\n      0x80\n        /* \"#utility.yul\":2185:2204   */\n      add\n      swap1\n        /* \"#utility.yul\":2167:2384   */\n      jump\t// out\n        /* \"#utility.yul\":2389:2516   */\n    tag_43:\n        /* \"#utility.yul\":2450:2460   */\n      0x4e487b71\n        /* \"#utility.yul\":2445:2448   */\n      0xe0\n        /* \"#utility.yul\":2441:2461   */\n      shl\n        /* \"#utility.yul\":2438:2439   */\n      0x00\n        /* \"#utility.yul\":2431:2462   */\n      mstore\n        /* \"#utility.yul\":2481:2485   */\n      0x41\n        /* \"#utility.yul\":2478:2479   */\n      0x04\n        /* \"#utility.yul\":2471:2486   */\n      mstore\n        /* \"#utility.yul\":2505:2509   */\n      0x24\n        /* \"#utility.yul\":2502:2503   */\n      0x00\n        /* \"#utility.yul\":2495:2510   */\n      revert\n\n    auxdata: 0xa26469706673582212204e336bfe7c3cf5a1cb984713d081195676fdf215e796380e3654cfac6e9f206864736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052600080546001600160a01b03191633179055610393806100256000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063a90ae8871461003b578063fc0e74d114610050575b600080fd5b61004e61004936600461020c565b610058565b005b61004e610124565b60008281526001602052604090205460ff161561007457600080fd5b6000828152600160208181526040808420805460ff191690931790925590516100c4916100a9913391889188913091016102c2565b6040516020818303038152906040528051906020012061013e565b6000549091506001600160a01b03166100dd828461016e565b6001600160a01b0316146100f057600080fd5b604051339085156108fc029086906000818181858888f1935050505015801561011d573d6000803e3d6000fd5b5050505050565b6000546001600160a01b0316331461013b57600080fd5b33ff5b60008160405160200161015191906102f8565b604051602081830303815290604052805190602001209050919050565b60008060008061017d856101dd565b925092509250600186848484604051600081526020016040526040516101a69493929190610329565b6020604051602081039080840390855afa1580156101c8573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b600080600083516041146101f057600080fd5b5050506020810151604082015160609092015160001a92909190565b600080600060608486031215610220578283fd5b833592506020808501359250604085013567ffffffffffffffff80821115610246578384fd5b818701915087601f830112610259578384fd5b81358181111561026b5761026b610347565b604051601f8201601f191681018501838111828210171561028e5761028e610347565b60405281815283820185018a10156102a4578586fd5b81858501868301378585838301015280955050505050509250925092565b6bffffffffffffffffffffffff19606095861b811682526014820194909452603481019290925290921b16605482015260680190565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152601c810191909152603c0190565b93845260ff9290921660208401526040830152606082015260800190565b634e487b7160e01b600052604160045260246000fdfea26469706673582212204e336bfe7c3cf5a1cb984713d081195676fdf215e796380e3654cfac6e9f206864736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x393 DUP1 PUSH2 0x25 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA90AE887 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xFC0E74D1 EQ PUSH2 0x50 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x20C JUMP JUMPDEST PUSH2 0x58 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4E PUSH2 0x124 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE SWAP1 MLOAD PUSH2 0xC4 SWAP2 PUSH2 0xA9 SWAP2 CALLER SWAP2 DUP9 SWAP2 DUP9 SWAP2 ADDRESS SWAP2 ADD PUSH2 0x2C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x13E JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xDD DUP3 DUP5 PUSH2 0x16E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 DUP6 ISZERO PUSH2 0x8FC MUL SWAP1 DUP7 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x11D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER SELFDESTRUCT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x151 SWAP2 SWAP1 PUSH2 0x2F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x17D DUP6 PUSH2 0x1DD JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x1 DUP7 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1A6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x329 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x41 EQ PUSH2 0x1F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x60 SWAP1 SWAP3 ADD MLOAD PUSH1 0x0 BYTE SWAP3 SWAP1 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x220 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP1 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x246 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x259 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x26B JUMPI PUSH2 0x26B PUSH2 0x347 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD DUP6 ADD DUP4 DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x28E JUMPI PUSH2 0x28E PUSH2 0x347 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD DUP6 ADD DUP11 LT ISZERO PUSH2 0x2A4 JUMPI DUP6 DUP7 REVERT JUMPDEST DUP2 DUP6 DUP6 ADD DUP7 DUP4 ADD CALLDATACOPY DUP6 DUP6 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 SWAP6 DUP7 SHL DUP2 AND DUP3 MSTORE PUSH1 0x14 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x34 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP3 SHL AND PUSH1 0x54 DUP3 ADD MSTORE PUSH1 0x68 ADD SWAP1 JUMP JUMPDEST PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 DUP2 MSTORE PUSH1 0x1C DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3C ADD SWAP1 JUMP JUMPDEST SWAP4 DUP5 MSTORE PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E CALLER PUSH12 0xFE7C3CF5A1CB984713D08119 JUMP PUSH23 0xFDF215E796380E3654CFAC6E9F206864736F6C63430008 STOP STOP CALLER ",
							"sourceMap": "70:1816:0:-:0;;;99:26;;;-1:-1:-1;;;;;;99:26:0;115:10;99:26;;;70:1816;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2518:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "127:980:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "173:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "182:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "190:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "175:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "175:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "175:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "148:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "157:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "144:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "144:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "169:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "140:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "140:32:1"
															},
															"nodeType": "YulIf",
															"src": "137:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "208:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "231:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "218:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "218:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "208:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "250:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "260:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "254:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "271:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "298:9:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "309:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "294:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "294:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "281:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "281:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "322:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "353:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "364:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "349:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "349:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "336:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "336:32:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "326:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "377:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "387:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "381:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "432:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "441:6:1"
																				},
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "449:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "434:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "434:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "434:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "420:6:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "428:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "417:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "417:14:1"
															},
															"nodeType": "YulIf",
															"src": "414:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "467:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "481:9:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "492:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "477:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "477:22:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "471:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "547:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "556:6:1"
																				},
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "564:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "549:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "549:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "549:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "526:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "530:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "522:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "522:13:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "537:7:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "518:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "518:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "511:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "511:35:1"
															},
															"nodeType": "YulIf",
															"src": "508:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "582:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "605:2:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "592:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "592:16:1"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "586:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "631:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "633:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "633:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "633:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "623:2:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "627:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "620:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "620:10:1"
															},
															"nodeType": "YulIf",
															"src": "617:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "662:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "682:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "676:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "666:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "694:67:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "720:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "736:2:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "740:4:1",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "732:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "732:13:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "751:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "747:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "747:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "728:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "728:27:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "716:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "716:40:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "758:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "712:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "712:49:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "698:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "820:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "822:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "822:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "822:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "779:10:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "791:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "776:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "776:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "799:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "811:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "796:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "796:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "773:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "773:46:1"
															},
															"nodeType": "YulIf",
															"src": "770:2:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "858:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "862:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "851:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "851:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "851:22:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "889:6:1"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "897:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "882:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "882:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "882:18:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "946:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "955:6:1"
																				},
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "963:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "948:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "948:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "948:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "923:2:1"
																					},
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "927:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "919:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "919:11:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "932:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "915:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "915:20:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "937:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "912:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "912:33:1"
															},
															"nodeType": "YulIf",
															"src": "909:2:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "998:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1006:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "994:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "994:15:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "1015:2:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1019:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1011:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1011:11:1"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "1024:2:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "981:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "981:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "981:46:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:1"
																					},
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "1059:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1047:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1047:15:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1064:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1043:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1043:24:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "1069:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1036:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1036:40:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1036:40:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1085:16:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1095:6:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1085:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "77:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "88:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "100:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "108:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "116:6:1",
														"type": ""
													}
												],
												"src": "14:1093:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1335:261:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1345:41:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1359:26:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "1355:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1355:31:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1349:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1402:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1415:2:1",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1419:6:1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "1411:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1411:15:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1428:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1407:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1407:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1395:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1395:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1395:37:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1452:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1457:2:1",
																				"type": "",
																				"value": "20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1448:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1448:12:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1462:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1441:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1441:28:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1441:28:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1489:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1494:2:1",
																				"type": "",
																				"value": "52"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1485:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1485:12:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "1499:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1478:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1478:28:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1478:28:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1526:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1531:2:1",
																				"type": "",
																				"value": "84"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1522:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1522:12:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1544:2:1",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value3",
																						"nodeType": "YulIdentifier",
																						"src": "1548:6:1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "1540:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1540:15:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1557:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1536:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1515:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1515:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1515:46:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1570:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1581:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1586:3:1",
																		"type": "",
																		"value": "104"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1577:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1577:13:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1570:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_address_t_uint256_t_uint256_t_contract$_ReceiverPays_$160__to_t_address_t_uint256_t_uint256_t_address__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1287:3:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1292:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1300:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1308:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1316:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1327:3:1",
														"type": ""
													}
												],
												"src": "1112:484:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1821:160:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1838:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1843:66:1",
																		"type": "",
																		"value": "0x19457468657265756d205369676e6564204d6573736167653a0a333200000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1831:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1831:79:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1831:79:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1930:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1935:2:1",
																				"type": "",
																				"value": "28"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1926:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1926:12:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1940:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1919:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1919:28:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1919:28:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1956:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1967:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1972:2:1",
																		"type": "",
																		"value": "60"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1963:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1963:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1956:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1797:3:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1802:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1813:3:1",
														"type": ""
													}
												],
												"src": "1601:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2167:217:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2177:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2189:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2200:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2185:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2185:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2177:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2220:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2231:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2213:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2213:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2213:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2258:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2269:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2254:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2254:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "2278:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2286:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2274:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2274:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2247:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2247:45:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2247:45:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2312:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2323:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2308:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2308:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "2328:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2301:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2301:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2301:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2355:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2366:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2351:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2351:18:1"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2344:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2344:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2344:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2112:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2123:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2131:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2139:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2147:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2158:4:1",
														"type": ""
													}
												],
												"src": "1986:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2421:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2438:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2445:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2450:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2441:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2441:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2431:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2431:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2431:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2478:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2481:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2471:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2471:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2471:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2502:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2505:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2495:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2495:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2495:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2389:127:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        let _1 := 32\n        value1 := calldataload(add(headStart, _1))\n        let offset := calldataload(add(headStart, 64))\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(value2, value2) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(value2, value2) }\n        let _4 := calldataload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(add(memPtr, and(add(_4, 0x1f), not(31))), _1)\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(value2, value2) }\n        calldatacopy(add(memPtr, _1), add(_3, _1), _4)\n        mstore(add(add(memPtr, _4), _1), value2)\n        value2 := memPtr\n    }\n    function abi_encode_tuple_packed_t_address_t_uint256_t_uint256_t_contract$_ReceiverPays_$160__to_t_address_t_uint256_t_uint256_t_address__nonPadded_inplace_fromStack_reversed(pos, value3, value2, value1, value0) -> end\n    {\n        let _1 := not(0xffffffffffffffffffffffff)\n        mstore(pos, and(shl(96, value0), _1))\n        mstore(add(pos, 20), value1)\n        mstore(add(pos, 52), value2)\n        mstore(add(pos, 84), and(shl(96, value3), _1))\n        end := add(pos, 104)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, 0x19457468657265756d205369676e6564204d6573736167653a0a333200000000)\n        mstore(add(pos, 28), value0)\n        end := add(pos, 60)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c8063a90ae8871461003b578063fc0e74d114610050575b600080fd5b61004e61004936600461020c565b610058565b005b61004e610124565b60008281526001602052604090205460ff161561007457600080fd5b6000828152600160208181526040808420805460ff191690931790925590516100c4916100a9913391889188913091016102c2565b6040516020818303038152906040528051906020012061013e565b6000549091506001600160a01b03166100dd828461016e565b6001600160a01b0316146100f057600080fd5b604051339085156108fc029086906000818181858888f1935050505015801561011d573d6000803e3d6000fd5b5050505050565b6000546001600160a01b0316331461013b57600080fd5b33ff5b60008160405160200161015191906102f8565b604051602081830303815290604052805190602001209050919050565b60008060008061017d856101dd565b925092509250600186848484604051600081526020016040526040516101a69493929190610329565b6020604051602081039080840390855afa1580156101c8573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b600080600083516041146101f057600080fd5b5050506020810151604082015160609092015160001a92909190565b600080600060608486031215610220578283fd5b833592506020808501359250604085013567ffffffffffffffff80821115610246578384fd5b818701915087601f830112610259578384fd5b81358181111561026b5761026b610347565b604051601f8201601f191681018501838111828210171561028e5761028e610347565b60405281815283820185018a10156102a4578586fd5b81858501868301378585838301015280955050505050509250925092565b6bffffffffffffffffffffffff19606095861b811682526014820194909452603481019290925290921b16605482015260680190565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152601c810191909152603c0190565b93845260ff9290921660208401526040830152606082015260800190565b634e487b7160e01b600052604160045260246000fdfea26469706673582212204e336bfe7c3cf5a1cb984713d081195676fdf215e796380e3654cfac6e9f206864736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA90AE887 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xFC0E74D1 EQ PUSH2 0x50 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x20C JUMP JUMPDEST PUSH2 0x58 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4E PUSH2 0x124 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE SWAP1 MLOAD PUSH2 0xC4 SWAP2 PUSH2 0xA9 SWAP2 CALLER SWAP2 DUP9 SWAP2 DUP9 SWAP2 ADDRESS SWAP2 ADD PUSH2 0x2C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x13E JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xDD DUP3 DUP5 PUSH2 0x16E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 DUP6 ISZERO PUSH2 0x8FC MUL SWAP1 DUP7 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x11D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER SELFDESTRUCT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x151 SWAP2 SWAP1 PUSH2 0x2F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x17D DUP6 PUSH2 0x1DD JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x1 DUP7 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1A6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x329 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x41 EQ PUSH2 0x1F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x60 SWAP1 SWAP3 ADD MLOAD PUSH1 0x0 BYTE SWAP3 SWAP1 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x220 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP1 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x246 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x259 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x26B JUMPI PUSH2 0x26B PUSH2 0x347 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD DUP6 ADD DUP4 DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x28E JUMPI PUSH2 0x28E PUSH2 0x347 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD DUP6 ADD DUP11 LT ISZERO PUSH2 0x2A4 JUMPI DUP6 DUP7 REVERT JUMPDEST DUP2 DUP6 DUP6 ADD DUP7 DUP4 ADD CALLDATACOPY DUP6 DUP6 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 SWAP6 DUP7 SHL DUP2 AND DUP3 MSTORE PUSH1 0x14 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x34 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP3 SHL AND PUSH1 0x54 DUP3 ADD MSTORE PUSH1 0x68 ADD SWAP1 JUMP JUMPDEST PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 DUP2 MSTORE PUSH1 0x1C DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3C ADD SWAP1 JUMP JUMPDEST SWAP4 DUP5 MSTORE PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E CALLER PUSH12 0xFE7C3CF5A1CB984713D08119 JUMP PUSH23 0xFDF215E796380E3654CFAC6E9F206864736F6C63430008 STOP STOP CALLER ",
							"sourceMap": "70:1816:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;210:445;;;;;;:::i;:::-;;:::i;:::-;;712:120;;;:::i;210:445::-;316:17;;;;:10;:17;;;;;;;;315:18;307:27;;;;;;345:17;;;;365:4;345:17;;;;;;;;:24;;-1:-1:-1;;345:24:0;;;;;;;483:49;;464:70;;483:49;;500:10;;512:6;;356:5;;527:4;;483:49;;:::i;:::-;;;;;;;;;;;;;473:60;;;;;;464:8;:70::i;:::-;592:5;;446:88;;-1:-1:-1;;;;;;592:5:0;555:33;446:88;578:9;555:13;:33::i;:::-;-1:-1:-1;;;;;555:42:0;;547:51;;;;;;611:36;;619:10;;611:36;;;;;640:6;;611:36;;;;640:6;619:10;611:36;;;;;;;;;;;;;;;;;;;;;210:445;;;;:::o;712:120::-;774:5;;-1:-1:-1;;;;;774:5:0;760:10;:19;752:28;;;;;;812:10;791:33;1724:159;1779:7;1869:4;1816:58;;;;;;;;:::i;:::-;;;;;;;;;;;;;1806:69;;;;;;1799:76;;1724:159;;;:::o;1404:241::-;1512:7;1538;1547:9;1558;1571:19;1586:3;1571:14;:19::i;:::-;1537:53;;;;;;1610:27;1620:7;1629:1;1632;1635;1610:27;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1610:27:0;;-1:-1:-1;;1610:27:0;;;1404:241;-1:-1:-1;;;;;;;1404:241:0:o;865:531::-;957:7;966:9;977;1012:3;:10;1026:2;1012:16;1004:25;;;;;;-1:-1:-1;;;1144:2:0;1135:12;;1129:19;1219:2;1210:12;;1204:19;1344:2;1335:12;;;1329:19;1326:1;1321:28;;1129:19;;1204;865:531::o;14:1093:1:-;;;;169:2;157:9;148:7;144:23;140:32;137:2;;;190:6;182;175:22;137:2;231:9;218:23;208:33;;260:2;309;298:9;294:18;281:32;271:42;;364:2;353:9;349:18;336:32;387:18;428:2;420:6;417:14;414:2;;;449:6;441;434:22;414:2;492:6;481:9;477:22;467:32;;537:7;530:4;526:2;522:13;518:27;508:2;;564:6;556;549:22;508:2;605;592:16;627:2;623;620:10;617:2;;;633:18;;:::i;:::-;682:2;676:9;751:2;732:13;;-1:-1:-1;;728:27:1;716:40;;712:49;;776:18;;;796:22;;;773:46;770:2;;;822:18;;:::i;:::-;858:2;851:22;882:18;;;919:11;;;915:20;;912:33;-1:-1:-1;909:2:1;;;963:6;955;948:22;909:2;1024;1019;1015;1011:11;1006:2;998:6;994:15;981:46;1069:6;1064:2;1059;1051:6;1047:15;1043:24;1036:40;1095:6;1085:16;;;;;;;127:980;;;;;:::o;1112:484::-;-1:-1:-1;;1415:2:1;1411:15;;;1407:24;;1395:37;;1457:2;1448:12;;1441:28;;;;1494:2;1485:12;;1478:28;;;;1540:15;;;1536:24;1531:2;1522:12;;1515:46;1586:3;1577:13;;1335:261::o;1601:380::-;1843:66;1831:79;;1935:2;1926:12;;1919:28;;;;1972:2;1963:12;;1821:160::o;1986:398::-;2213:25;;;2286:4;2274:17;;;;2269:2;2254:18;;2247:45;2323:2;2308:18;;2301:34;2366:2;2351:18;;2344:34;2200:3;2185:19;;2167:217::o;2389:127::-;2450:10;2445:3;2441:20;2438:1;2431:31;2481:4;2478:1;2471:15;2505:4;2502:1;2495:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "183000",
								"executionCost": "21037",
								"totalCost": "204037"
							},
							"external": {
								"claimPayment(uint256,uint256,bytes)": "infinite",
								"shutdown()": "30977"
							},
							"internal": {
								"prefixed(bytes32)": "infinite",
								"recoverSigner(bytes32,bytes memory)": "infinite",
								"splitSignature(bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 70,
									"end": 1886,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 70,
									"end": 1886,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 70,
									"end": 1886,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 99,
									"end": 125,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 99,
									"end": 125,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 99,
									"end": 125,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 99,
									"end": 125,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 115,
									"end": 125,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 99,
									"end": 125,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 99,
									"end": 125,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 99,
									"end": 125,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 70,
									"end": 1886,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 70,
									"end": 1886,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 70,
									"end": 1886,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 70,
									"end": 1886,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 70,
									"end": 1886,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 70,
									"end": 1886,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 70,
									"end": 1886,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204e336bfe7c3cf5a1cb984713d081195676fdf215e796380e3654cfac6e9f206864736f6c63430008000033",
									".code": [
										{
											"begin": 70,
											"end": 1886,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 70,
											"end": 1886,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 70,
											"end": 1886,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1886,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1886,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1886,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 70,
											"end": 1886,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1886,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 70,
											"end": 1886,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1886,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1886,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 70,
											"end": 1886,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1886,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1886,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 70,
											"end": 1886,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1886,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 70,
											"end": 1886,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1886,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 70,
											"end": 1886,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1886,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 70,
											"end": 1886,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1886,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1886,
											"name": "PUSH",
											"source": 0,
											"value": "A90AE887"
										},
										{
											"begin": 70,
											"end": 1886,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 70,
											"end": 1886,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1886,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1886,
											"name": "PUSH",
											"source": 0,
											"value": "FC0E74D1"
										},
										{
											"begin": 70,
											"end": 1886,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 70,
											"end": 1886,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1886,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 70,
											"end": 1886,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1886,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 70,
											"end": 1886,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1886,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 210,
											"end": 655,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 210,
											"end": 655,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 210,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 210,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 210,
											"end": 655,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 210,
											"end": 655,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 210,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 210,
											"end": 655,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 210,
											"end": 655,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 210,
											"end": 655,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 210,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 210,
											"end": 655,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 210,
											"end": 655,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 210,
											"end": 655,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 210,
											"end": 655,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 712,
											"end": 832,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 712,
											"end": 832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 712,
											"end": 832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 712,
											"end": 832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 712,
											"end": 832,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 210,
											"end": 655,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 210,
											"end": 655,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 316,
											"end": 333,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 316,
											"end": 333,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 316,
											"end": 333,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 316,
											"end": 333,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 316,
											"end": 326,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 316,
											"end": 333,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 316,
											"end": 333,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 316,
											"end": 333,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 316,
											"end": 333,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 316,
											"end": 333,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 316,
											"end": 333,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 316,
											"end": 333,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 316,
											"end": 333,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 315,
											"end": 333,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 307,
											"end": 334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 307,
											"end": 334,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 307,
											"end": 334,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 307,
											"end": 334,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 307,
											"end": 334,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 307,
											"end": 334,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 307,
											"end": 334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 345,
											"end": 362,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 362,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 345,
											"end": 362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 345,
											"end": 362,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 365,
											"end": 369,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 345,
											"end": 362,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 345,
											"end": 362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 345,
											"end": 362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 345,
											"end": 362,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 345,
											"end": 362,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 345,
											"end": 362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 345,
											"end": 362,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 345,
											"end": 362,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 345,
											"end": 369,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 345,
											"end": 369,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 345,
											"end": 369,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 345,
											"end": 369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 345,
											"end": 369,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 345,
											"end": 369,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 345,
											"end": 369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 345,
											"end": 369,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 345,
											"end": 369,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 483,
											"end": 532,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 483,
											"end": 532,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 464,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 464,
											"end": 534,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 483,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 483,
											"end": 532,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 500,
											"end": 510,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 500,
											"end": 510,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 512,
											"end": 518,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 512,
											"end": 518,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 356,
											"end": 361,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 356,
											"end": 361,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 527,
											"end": 531,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 527,
											"end": 531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 483,
											"end": 532,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 483,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 483,
											"end": 532,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 483,
											"end": 532,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 483,
											"end": 532,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 483,
											"end": 532,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 532,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 483,
											"end": 532,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 483,
											"end": 532,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 483,
											"end": 532,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 483,
											"end": 532,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 483,
											"end": 532,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 483,
											"end": 532,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 483,
											"end": 532,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 483,
											"end": 532,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 483,
											"end": 532,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 532,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 473,
											"end": 533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 473,
											"end": 533,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 473,
											"end": 533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 473,
											"end": 533,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 473,
											"end": 533,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 473,
											"end": 533,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 464,
											"end": 472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 464,
											"end": 534,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 464,
											"end": 534,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 464,
											"end": 534,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 592,
											"end": 597,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 597,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 446,
											"end": 534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 446,
											"end": 534,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 592,
											"end": 597,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 555,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 446,
											"end": 534,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 578,
											"end": 587,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 555,
											"end": 568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 555,
											"end": 588,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 555,
											"end": 588,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 555,
											"end": 588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 555,
											"end": 597,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 555,
											"end": 597,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 547,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 547,
											"end": 598,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 547,
											"end": 598,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 547,
											"end": 598,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 547,
											"end": 598,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 547,
											"end": 598,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 547,
											"end": 598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 611,
											"end": 647,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 611,
											"end": 647,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 619,
											"end": 629,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 619,
											"end": 629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 611,
											"end": 647,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 611,
											"end": 647,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 611,
											"end": 647,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 611,
											"end": 647,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 611,
											"end": 647,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 640,
											"end": 646,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 640,
											"end": 646,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 611,
											"end": 647,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 611,
											"end": 647,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 611,
											"end": 647,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 611,
											"end": 647,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 640,
											"end": 646,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 619,
											"end": 629,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 611,
											"end": 647,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 611,
											"end": 647,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 611,
											"end": 647,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 611,
											"end": 647,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 611,
											"end": 647,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 611,
											"end": 647,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 611,
											"end": 647,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 611,
											"end": 647,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 611,
											"end": 647,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 611,
											"end": 647,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 611,
											"end": 647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 611,
											"end": 647,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 611,
											"end": 647,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 611,
											"end": 647,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 611,
											"end": 647,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 611,
											"end": 647,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 611,
											"end": 647,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 611,
											"end": 647,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 611,
											"end": 647,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 611,
											"end": 647,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 611,
											"end": 647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 611,
											"end": 647,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 210,
											"end": 655,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 210,
											"end": 655,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 210,
											"end": 655,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 210,
											"end": 655,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 210,
											"end": 655,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 712,
											"end": 832,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 712,
											"end": 832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 774,
											"end": 779,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 774,
											"end": 779,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 774,
											"end": 779,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 760,
											"end": 770,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 760,
											"end": 779,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 752,
											"end": 780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 752,
											"end": 780,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 752,
											"end": 780,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 752,
											"end": 780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 752,
											"end": 780,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 752,
											"end": 780,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 752,
											"end": 780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 812,
											"end": 822,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 791,
											"end": 824,
											"name": "SELFDESTRUCT",
											"source": 0
										},
										{
											"begin": 1724,
											"end": 1883,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1724,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1779,
											"end": 1786,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1869,
											"end": 1873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1816,
											"end": 1874,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1816,
											"end": 1874,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1816,
											"end": 1874,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1816,
											"end": 1874,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1816,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1816,
											"end": 1874,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1816,
											"end": 1874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1816,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1816,
											"end": 1874,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1816,
											"end": 1874,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1816,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1816,
											"end": 1874,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1816,
											"end": 1874,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1816,
											"end": 1874,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1816,
											"end": 1874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1816,
											"end": 1874,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1816,
											"end": 1874,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1816,
											"end": 1874,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1816,
											"end": 1874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1816,
											"end": 1874,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1816,
											"end": 1874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1816,
											"end": 1874,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1816,
											"end": 1874,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1806,
											"end": 1875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1806,
											"end": 1875,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1806,
											"end": 1875,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1806,
											"end": 1875,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1806,
											"end": 1875,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1806,
											"end": 1875,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1875,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1875,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1724,
											"end": 1883,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1724,
											"end": 1883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1724,
											"end": 1883,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1724,
											"end": 1883,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1404,
											"end": 1645,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1404,
											"end": 1645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1512,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1538,
											"end": 1545,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1547,
											"end": 1556,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1558,
											"end": 1567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1586,
											"end": 1589,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1571,
											"end": 1590,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1571,
											"end": 1590,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1571,
											"end": 1590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1590,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1590,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1590,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1590,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1590,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1590,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1620,
											"end": 1627,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1629,
											"end": 1630,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1632,
											"end": 1633,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1635,
											"end": 1636,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 1404,
											"end": 1645,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1404,
											"end": 1645,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 865,
											"end": 1396,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 865,
											"end": 1396,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 957,
											"end": 964,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 975,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 977,
											"end": 986,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1012,
											"end": 1015,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1012,
											"end": 1022,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1028,
											"name": "PUSH",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1012,
											"end": 1028,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1004,
											"end": 1029,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1029,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1004,
											"end": 1029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1029,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1029,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1004,
											"end": 1029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1144,
											"end": 1146,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1135,
											"end": 1147,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1135,
											"end": 1147,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1129,
											"end": 1148,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1219,
											"end": 1221,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1210,
											"end": 1222,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1222,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1204,
											"end": 1223,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1344,
											"end": 1346,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1335,
											"end": 1347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1335,
											"end": 1347,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1335,
											"end": 1347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1329,
											"end": 1348,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1321,
											"end": 1349,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 1321,
											"end": 1349,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1129,
											"end": 1148,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1129,
											"end": 1148,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1204,
											"end": 1223,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 865,
											"end": 1396,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 1107,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 14,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14,
											"end": 1107,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14,
											"end": 1107,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14,
											"end": 1107,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 169,
											"end": 171,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 157,
											"end": 166,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 148,
											"end": 155,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 144,
											"end": 167,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 140,
											"end": 172,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 137,
											"end": 139,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 137,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 137,
											"end": 139,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 190,
											"end": 196,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 182,
											"end": 188,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 175,
											"end": 197,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 137,
											"end": 139,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 137,
											"end": 139,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 231,
											"end": 240,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 218,
											"end": 241,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 208,
											"end": 241,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 208,
											"end": 241,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 260,
											"end": 262,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 309,
											"end": 311,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 298,
											"end": 307,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 294,
											"end": 312,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 281,
											"end": 313,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 271,
											"end": 313,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 271,
											"end": 313,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 364,
											"end": 366,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 353,
											"end": 362,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 349,
											"end": 367,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 336,
											"end": 368,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 387,
											"end": 405,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 428,
											"end": 430,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 420,
											"end": 426,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 417,
											"end": 431,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 414,
											"end": 416,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 414,
											"end": 416,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 449,
											"end": 455,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 441,
											"end": 447,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 434,
											"end": 456,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 414,
											"end": 416,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 414,
											"end": 416,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 492,
											"end": 498,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 481,
											"end": 490,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 477,
											"end": 499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 467,
											"end": 499,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 467,
											"end": 499,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 537,
											"end": 544,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 530,
											"end": 534,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 526,
											"end": 528,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 522,
											"end": 535,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 518,
											"end": 545,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 508,
											"end": 510,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 510,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 564,
											"end": 570,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 556,
											"end": 562,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 549,
											"end": 571,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 508,
											"end": 510,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 510,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 605,
											"end": 607,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 592,
											"end": 608,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 627,
											"end": 629,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 623,
											"end": 625,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 620,
											"end": 630,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 617,
											"end": 619,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 617,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 617,
											"end": 619,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 633,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 633,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 633,
											"end": 651,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 633,
											"end": 651,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 633,
											"end": 651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 682,
											"end": 684,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 676,
											"end": 685,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 751,
											"end": 753,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 732,
											"end": 745,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 732,
											"end": 745,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 728,
											"end": 755,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 716,
											"end": 756,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 716,
											"end": 756,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 712,
											"end": 761,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 712,
											"end": 761,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 776,
											"end": 794,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 776,
											"end": 794,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 776,
											"end": 794,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 796,
											"end": 818,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 796,
											"end": 818,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 796,
											"end": 818,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 773,
											"end": 819,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 770,
											"end": 772,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 770,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 770,
											"end": 772,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 822,
											"end": 840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 822,
											"end": 840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 822,
											"end": 840,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 822,
											"end": 840,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 822,
											"end": 840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 858,
											"end": 860,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 851,
											"end": 873,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 882,
											"end": 900,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 882,
											"end": 900,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 882,
											"end": 900,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 919,
											"end": 930,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 919,
											"end": 930,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 919,
											"end": 930,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 915,
											"end": 935,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 915,
											"end": 935,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 912,
											"end": 945,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 909,
											"end": 911,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 909,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 909,
											"end": 911,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 963,
											"end": 969,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 955,
											"end": 961,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 948,
											"end": 970,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 909,
											"end": 911,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 909,
											"end": 911,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1024,
											"end": 1026,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1019,
											"end": 1021,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1015,
											"end": 1017,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1011,
											"end": 1022,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1008,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 998,
											"end": 1004,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 994,
											"end": 1009,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 981,
											"end": 1027,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 1069,
											"end": 1075,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1064,
											"end": 1066,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1059,
											"end": 1061,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1043,
											"end": 1067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1076,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1095,
											"end": 1101,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1101,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1101,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1101,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1101,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1101,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1101,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1101,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 127,
											"end": 1107,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 127,
											"end": 1107,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 127,
											"end": 1107,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 127,
											"end": 1107,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 127,
											"end": 1107,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 127,
											"end": 1107,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1112,
											"end": 1596,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1112,
											"end": 1596,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1415,
											"end": 1417,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1411,
											"end": 1426,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1411,
											"end": 1426,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1411,
											"end": 1426,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1407,
											"end": 1431,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1407,
											"end": 1431,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1395,
											"end": 1432,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1395,
											"end": 1432,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1457,
											"end": 1459,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1448,
											"end": 1460,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1441,
											"end": 1469,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1441,
											"end": 1469,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1441,
											"end": 1469,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1441,
											"end": 1469,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1494,
											"end": 1496,
											"name": "PUSH",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1485,
											"end": 1497,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1485,
											"end": 1497,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1478,
											"end": 1506,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1478,
											"end": 1506,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1478,
											"end": 1506,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1478,
											"end": 1506,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1540,
											"end": 1555,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1540,
											"end": 1555,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1540,
											"end": 1555,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1536,
											"end": 1560,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1533,
											"name": "PUSH",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1522,
											"end": 1534,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1522,
											"end": 1534,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1515,
											"end": 1561,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1589,
											"name": "PUSH",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1577,
											"end": 1590,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1577,
											"end": 1590,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1335,
											"end": 1596,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1601,
											"end": 1981,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1601,
											"end": 1981,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1843,
											"end": 1909,
											"name": "PUSH",
											"source": 1,
											"value": "19457468657265756D205369676E6564204D6573736167653A0A333200000000"
										},
										{
											"begin": 1831,
											"end": 1910,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1831,
											"end": 1910,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1935,
											"end": 1937,
											"name": "PUSH",
											"source": 1,
											"value": "1C"
										},
										{
											"begin": 1926,
											"end": 1938,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1926,
											"end": 1938,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1919,
											"end": 1947,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1919,
											"end": 1947,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1919,
											"end": 1947,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1919,
											"end": 1947,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1972,
											"end": 1974,
											"name": "PUSH",
											"source": 1,
											"value": "3C"
										},
										{
											"begin": 1963,
											"end": 1975,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1963,
											"end": 1975,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1821,
											"end": 1981,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1986,
											"end": 2384,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1986,
											"end": 2384,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2213,
											"end": 2238,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2213,
											"end": 2238,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2213,
											"end": 2238,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2286,
											"end": 2290,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2269,
											"end": 2271,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2254,
											"end": 2272,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2254,
											"end": 2272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2292,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2323,
											"end": 2325,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2308,
											"end": 2326,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2308,
											"end": 2326,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2301,
											"end": 2335,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2366,
											"end": 2368,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2351,
											"end": 2369,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2369,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2344,
											"end": 2378,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2200,
											"end": 2203,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2185,
											"end": 2204,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2204,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2384,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2389,
											"end": 2516,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2389,
											"end": 2516,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2460,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2445,
											"end": 2448,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2441,
											"end": 2461,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2438,
											"end": 2439,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2431,
											"end": 2462,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2485,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2478,
											"end": 2479,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2471,
											"end": 2486,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2509,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2502,
											"end": 2503,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2495,
											"end": 2510,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"claimPayment(uint256,uint256,bytes)": "a90ae887",
							"shutdown()": "fc0e74d1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"claimPayment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shutdown\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"shutdown()\":{\"notice\":\"\\u9500\\u6bc1\\u5408\\u7ea6\\u5e76\\u6536\\u56de\\u5269\\u4f59\\u7684\\u8d44\\u91d1\\u3002\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/demo/ReceiverPays.sol\":\"ReceiverPays\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/demo/ReceiverPays.sol\":{\"keccak256\":\"0xe37dda00f34897395e9d5d7775f0c136b8071a48c63a442ba462a47399984e93\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://edd0edcd9980691516fb60c55b3433963ee38d1b977413f969226dddf6aeea99\",\"dweb:/ipfs/QmNaHBTRP5CnMt4nxGuY9eCyP14Gm5f63iKtxaBEPeJ6Ho\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 5,
								"contract": "contracts/demo/ReceiverPays.sol:ReceiverPays",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 9,
								"contract": "contracts/demo/ReceiverPays.sol:ReceiverPays",
								"label": "usedNonces",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_uint256,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_uint256,t_bool)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"shutdown()": {
								"notice": "销毁合约并收回剩余的资金。"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/demo/ReceiverPays.sol": {
				"ast": {
					"absolutePath": "contracts/demo/ReceiverPays.sol",
					"exportedSymbols": {
						"ReceiverPays": [
							160
						]
					},
					"id": 161,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 160,
							"linearizedBaseContracts": [
								160
							],
							"name": "ReceiverPays",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 160,
									"src": "99:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "99:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"expression": {
											"id": 3,
											"name": "msg",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967281,
											"src": "115:3:0",
											"typeDescriptions": {
												"typeIdentifier": "t_magic_message",
												"typeString": "msg"
											}
										},
										"id": 4,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"memberName": "sender",
										"nodeType": "MemberAccess",
										"src": "115:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 9,
									"mutability": "mutable",
									"name": "usedNonces",
									"nodeType": "VariableDeclaration",
									"scope": 160,
									"src": "134:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
										"typeString": "mapping(uint256 => bool)"
									},
									"typeName": {
										"id": 8,
										"keyType": {
											"id": 6,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "142:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "134:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
											"typeString": "mapping(uint256 => bool)"
										},
										"valueType": {
											"id": 7,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "153:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 12,
										"nodeType": "Block",
										"src": "200:2:0",
										"statements": []
									},
									"id": 13,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "189:2:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "200:0:0"
									},
									"scope": 160,
									"src": "178:24:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 68,
										"nodeType": "Block",
										"src": "296:359:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 26,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "315:18:0",
															"subExpression": {
																"baseExpression": {
																	"id": 23,
																	"name": "usedNonces",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "316:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																		"typeString": "mapping(uint256 => bool)"
																	}
																},
																"id": 25,
																"indexExpression": {
																	"id": 24,
																	"name": "nonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 17,
																	"src": "327:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "316:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 22,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "307:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "307:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "307:27:0"
											},
											{
												"expression": {
													"id": 33,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 29,
															"name": "usedNonces",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "345:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 31,
														"indexExpression": {
															"id": 30,
															"name": "nonce",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 17,
															"src": "356:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "345:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 32,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "365:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "345:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 34,
												"nodeType": "ExpressionStatement",
												"src": "345:24:0"
											},
											{
												"assignments": [
													36
												],
												"declarations": [
													{
														"constant": false,
														"id": 36,
														"mutability": "mutable",
														"name": "message",
														"nodeType": "VariableDeclaration",
														"scope": 68,
														"src": "446:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 35,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "446:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 49,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"expression": {
																				"id": 41,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "500:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 42,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "500:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 43,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 15,
																			"src": "512:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 44,
																			"name": "nonce",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 17,
																			"src": "520:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 45,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "527:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ReceiverPays_$160",
																				"typeString": "contract ReceiverPays"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_contract$_ReceiverPays_$160",
																				"typeString": "contract ReceiverPays"
																			}
																		],
																		"expression": {
																			"id": 39,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "483:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodePacked",
																		"nodeType": "MemberAccess",
																		"src": "483:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 46,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "483:49:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 38,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "473:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "473:60:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 37,
														"name": "prefixed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "464:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (bytes32)"
														}
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "464:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "446:88:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 52,
																		"name": "message",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 36,
																		"src": "569:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 53,
																		"name": "signature",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 19,
																		"src": "578:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 51,
																	"name": "recoverSigner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 142,
																	"src": "555:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
																		"typeString": "function (bytes32,bytes memory) pure returns (address)"
																	}
																},
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "555:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 55,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "592:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "555:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 50,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "547:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "547:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "547:51:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 65,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "640:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 61,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "619:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 62,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "619:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "611:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 59,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "611:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "611:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 64,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "611:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "611:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 67,
												"nodeType": "ExpressionStatement",
												"src": "611:36:0"
											}
										]
									},
									"functionSelector": "a90ae887",
									"id": 69,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimPayment",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "232:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 14,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "232:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "nonce",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "248:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 16,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "248:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "signature",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "263:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 18,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "263:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "231:55:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "296:0:0"
									},
									"scope": 160,
									"src": "210:445:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "741:91:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 77,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 74,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "760:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "760:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 76,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "774:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "760:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 73,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "752:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "752:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "752:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 83,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "812:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 84,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "812:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 82,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "804:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 81,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "804:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "804:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 80,
														"name": "selfdestruct",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967275,
														"src": "791:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
															"typeString": "function (address payable)"
														}
													},
													"id": 86,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "791:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 87,
												"nodeType": "ExpressionStatement",
												"src": "791:33:0"
											}
										]
									},
									"documentation": {
										"id": 70,
										"nodeType": "StructuredDocumentation",
										"src": "663:43:0",
										"text": "销毁合约并收回剩余的资金。"
									},
									"functionSelector": "fc0e74d1",
									"id": 89,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "shutdown",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "729:2:0"
									},
									"returnParameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "741:0:0"
									},
									"scope": 160,
									"src": "712:120:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 114,
										"nodeType": "Block",
										"src": "993:403:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 102,
																	"name": "sig",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 92,
																	"src": "1012:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 103,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1012:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "3635",
																"id": 104,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1026:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_65_by_1",
																	"typeString": "int_const 65"
																},
																"value": "65"
															},
															"src": "1012:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 101,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1004:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1004:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "1004:25:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1051:309:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1124:24:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "1139:3:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1144:2:0",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1135:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1135:12:0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1129:19:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "1124:1:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1199:24:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "1214:3:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1219:2:0",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1210:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1210:12:0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1204:5:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1204:19:0"
															},
															"variableNames": [
																{
																	"name": "s",
																	"nodeType": "YulIdentifier",
																	"src": "1199:1:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1316:33:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1326:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "sig",
																						"nodeType": "YulIdentifier",
																						"src": "1339:3:0"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1344:2:0",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1335:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1335:12:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1329:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1329:19:0"
																	}
																],
																"functionName": {
																	"name": "byte",
																	"nodeType": "YulIdentifier",
																	"src": "1321:4:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1321:28:0"
															},
															"variableNames": [
																{
																	"name": "v",
																	"nodeType": "YulIdentifier",
																	"src": "1316:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 97,
														"isOffset": false,
														"isSlot": false,
														"src": "1124:1:0",
														"valueSize": 1
													},
													{
														"declaration": 99,
														"isOffset": false,
														"isSlot": false,
														"src": "1199:1:0",
														"valueSize": 1
													},
													{
														"declaration": 92,
														"isOffset": false,
														"isSlot": false,
														"src": "1139:3:0",
														"valueSize": 1
													},
													{
														"declaration": 92,
														"isOffset": false,
														"isSlot": false,
														"src": "1214:3:0",
														"valueSize": 1
													},
													{
														"declaration": 92,
														"isOffset": false,
														"isSlot": false,
														"src": "1339:3:0",
														"valueSize": 1
													},
													{
														"declaration": 95,
														"isOffset": false,
														"isSlot": false,
														"src": "1316:1:0",
														"valueSize": 1
													}
												],
												"id": 108,
												"nodeType": "InlineAssembly",
												"src": "1042:318:0"
											},
											{
												"expression": {
													"components": [
														{
															"id": 109,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "1380:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 110,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 97,
															"src": "1383:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 111,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 99,
															"src": "1386:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"id": 112,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1379:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint8_$_t_bytes32_$_t_bytes32_$",
														"typeString": "tuple(uint8,bytes32,bytes32)"
													}
												},
												"functionReturnParameters": 100,
												"id": 113,
												"nodeType": "Return",
												"src": "1372:16:0"
											}
										]
									},
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "840:19:0",
										"text": "签名方法。"
									},
									"id": 115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "splitSignature",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "sig",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "889:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 91,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "889:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:18:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "957:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 94,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "957:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "966:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 96,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "966:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "977:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 98,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "977:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "956:31:0"
									},
									"scope": 160,
									"src": "865:531:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 141,
										"nodeType": "Block",
										"src": "1526:119:0",
										"statements": [
											{
												"assignments": [
													125,
													127,
													129
												],
												"declarations": [
													{
														"constant": false,
														"id": 125,
														"mutability": "mutable",
														"name": "v",
														"nodeType": "VariableDeclaration",
														"scope": 141,
														"src": "1538:7:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 124,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "1538:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 127,
														"mutability": "mutable",
														"name": "r",
														"nodeType": "VariableDeclaration",
														"scope": 141,
														"src": "1547:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 126,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1547:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 129,
														"mutability": "mutable",
														"name": "s",
														"nodeType": "VariableDeclaration",
														"scope": 141,
														"src": "1558:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 128,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1558:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 133,
												"initialValue": {
													"arguments": [
														{
															"id": 131,
															"name": "sig",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "1586:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 130,
														"name": "splitSignature",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "1571:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint8_$_t_bytes32_$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (uint8,bytes32,bytes32)"
														}
													},
													"id": 132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1571:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint8_$_t_bytes32_$_t_bytes32_$",
														"typeString": "tuple(uint8,bytes32,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1537:53:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 135,
															"name": "message",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "1620:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 136,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "1629:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 137,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 127,
															"src": "1632:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 138,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "1635:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 134,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967290,
														"src": "1610:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1610:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 123,
												"id": 140,
												"nodeType": "Return",
												"src": "1603:34:0"
											}
										]
									},
									"id": 142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recoverSigner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "message",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "1427:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 116,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1427:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "sig",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "1444:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 118,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1444:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1426:35:0"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "1512:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1512:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1511:9:0"
									},
									"scope": 160,
									"src": "1404:241:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "1788:95:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
																	"id": 153,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1833:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
																	},
																	"value": "\u0019Ethereum Signed Message:\n32"
																},
																{
																	"id": 154,
																	"name": "hash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "1869:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 151,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1816:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 152,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1816:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1816:58:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 150,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "1806:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1806:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 149,
												"id": 157,
												"nodeType": "Return",
												"src": "1799:76:0"
											}
										]
									},
									"documentation": {
										"id": 143,
										"nodeType": "StructuredDocumentation",
										"src": "1653:65:0",
										"text": "构建一个前缀哈希值，以模仿 eth_sign 的行为。"
									},
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "prefixed",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "hash",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "1742:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 144,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1741:14:0"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "1779:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 147,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1779:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1778:9:0"
									},
									"scope": 160,
									"src": "1724:159:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 161,
							"src": "70:1816:0"
						}
					],
					"src": "37:1849:0"
				},
				"id": 0
			}
		}
	}
}