{
	"id": "496e13148aafb4be2d1aeae543c3909e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"contracts/demo/Balances.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.5.0 <0.9.0;\r\n\r\nlibrary Balances {\r\n    function move(mapping(address => uint256) storage balances, address from, address to, uint amount) internal {\r\n        require(balances[from] >= amount);\r\n        require(balances[to] + amount >= balances[to]);\r\n        balances[from] -= amount;\r\n        balances[to] += amount;\r\n    }\r\n}\r\n\r\ncontract Token {\r\n    mapping(address => uint256) balances;\r\n    using Balances for *;\r\n    mapping(address => mapping (address => uint256)) allowed;\r\n\r\n    event Transfer(address from, address to, uint amount);\r\n    event Approval(address owner, address spender, uint amount);\r\n\r\n    function transfer(address to, uint amount) external returns (bool success) {\r\n        balances.move(msg.sender, to, amount);\r\n        emit Transfer(msg.sender, to, amount);\r\n        return true;\r\n\r\n    }\r\n\r\n    function transferFrom(address from, address to, uint amount) external returns (bool success) {\r\n        require(allowed[from][msg.sender] >= amount);\r\n        allowed[from][msg.sender] -= amount;\r\n        balances.move(from, to, amount);\r\n        emit Transfer(from, to, amount);\r\n        return true;\r\n    }\r\n\r\n    function approve(address spender, uint tokens) external returns (bool success) {\r\n        require(allowed[msg.sender][spender] == 0, \"\");\r\n        allowed[msg.sender][spender] = tokens;\r\n        emit Approval(msg.sender, spender, tokens);\r\n        return true;\r\n    }\r\n\r\n    function balanceOf(address tokenOwner) external view returns (uint balance) {\r\n        return balances[tokenOwner];\r\n    }\r\n}"
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/demo/Balances.sol": {
				"Balances": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/demo/Balances.sol\":72:384  library Balances {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/demo/Balances.sol\":72:384  library Balances {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220db9560a7b1b249db40f60d660c5db86e685fd8a3891640072c24f0e821f5838464736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220db9560a7b1b249db40f60d660c5db86e685fd8a3891640072c24f0e821f5838464736f6c63430008000033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB SWAP6 PUSH1 0xA7 0xB1 0xB2 0x49 0xDB BLOCKHASH 0xF6 0xD PUSH7 0xC5DB86E685FD8 LOG3 DUP10 AND BLOCKHASH SMOD 0x2C 0x24 CREATE 0xE8 0x21 CREATE2 DUP4 DUP5 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "72:312:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;72:312:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220db9560a7b1b249db40f60d660c5db86e685fd8a3891640072c24f0e821f5838464736f6c63430008000033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB SWAP6 PUSH1 0xA7 0xB1 0xB2 0x49 0xDB BLOCKHASH 0xF6 0xD PUSH7 0xC5DB86E685FD8 LOG3 DUP10 AND BLOCKHASH SMOD 0x2C 0x24 CREATE 0xE8 0x21 CREATE2 DUP4 DUP5 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "72:312:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"move(mapping(address => uint256),address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 72,
									"end": 384,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 72,
									"end": 384,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 72,
									"end": 384,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 72,
									"end": 384,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 72,
									"end": 384,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 72,
									"end": 384,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 72,
									"end": 384,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 72,
									"end": 384,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 72,
									"end": 384,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 72,
									"end": 384,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 72,
									"end": 384,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 72,
									"end": 384,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 72,
									"end": 384,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 72,
									"end": 384,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 72,
									"end": 384,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 72,
									"end": 384,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 72,
									"end": 384,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 72,
									"end": 384,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 72,
									"end": 384,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 72,
									"end": 384,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 72,
									"end": 384,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 72,
									"end": 384,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 72,
									"end": 384,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 72,
									"end": 384,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 72,
									"end": 384,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 72,
									"end": 384,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 72,
									"end": 384,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 72,
									"end": 384,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 72,
									"end": 384,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 72,
									"end": 384,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72,
									"end": 384,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 72,
									"end": 384,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 72,
									"end": 384,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72,
									"end": 384,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220db9560a7b1b249db40f60d660c5db86e685fd8a3891640072c24f0e821f5838464736f6c63430008000033",
									".code": [
										{
											"begin": 72,
											"end": 384,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 72,
											"end": 384,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 72,
											"end": 384,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 72,
											"end": 384,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 72,
											"end": 384,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 72,
											"end": 384,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 72,
											"end": 384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72,
											"end": 384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72,
											"end": 384,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/demo/Balances.sol\":\"Balances\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/demo/Balances.sol\":{\"keccak256\":\"0x05aba3a5cb171d14e4d40afab710387576e5b9be1a5e5b007ae3b1b1d7211c5a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f5dd2294966418e5199e63748c18a2dc42a21ac937d5043afaad8d22d9733507\",\"dweb:/ipfs/QmdP7DckGUV1BRJ93DA5AKj4a4cbVugzzvzb3LjHeRqQdD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Token": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokens",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenOwner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/demo/Balances.sol\":388:1600  contract Token {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/demo/Balances.sol\":388:1600  contract Token {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x095ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/demo/Balances.sol\":1200:1467  function approve(address spender, uint tokens) external returns (bool success) {\r... */\n    tag_3:\n      tag_7\n      tag_8\n      calldatasize\n      0x04\n      tag_9\n      jump\t// in\n    tag_8:\n      tag_10\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/demo/Balances.sol\":884:1192  function transferFrom(address from, address to, uint amount) external returns (bool success) {\r... */\n    tag_4:\n      tag_7\n      tag_14\n      calldatasize\n      0x04\n      tag_15\n      jump\t// in\n    tag_14:\n      tag_16\n      jump\t// in\n        /* \"contracts/demo/Balances.sol\":1475:1597  function balanceOf(address tokenOwner) external view returns (uint balance) {\r... */\n    tag_5:\n      tag_18\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n        /* \"contracts/demo/Balances.sol\":673:876  function transfer(address to, uint amount) external returns (bool success) {\r... */\n    tag_6:\n      tag_7\n      tag_25\n      calldatasize\n      0x04\n      tag_9\n      jump\t// in\n    tag_25:\n      tag_26\n      jump\t// in\n        /* \"contracts/demo/Balances.sol\":1200:1467  function approve(address spender, uint tokens) external returns (bool success) {\r... */\n    tag_10:\n        /* \"contracts/demo/Balances.sol\":1306:1316  msg.sender */\n      caller\n        /* \"contracts/demo/Balances.sol\":1265:1277  bool success */\n      0x00\n        /* \"contracts/demo/Balances.sol\":1298:1317  allowed[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/demo/Balances.sol\":1298:1305  allowed */\n      0x01\n        /* \"contracts/demo/Balances.sol\":1298:1317  allowed[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/demo/Balances.sol\":1298:1326  allowed[msg.sender][spender] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"contracts/demo/Balances.sol\":1298:1331  allowed[msg.sender][spender] == 0 */\n      iszero\n        /* \"contracts/demo/Balances.sol\":1290:1336  require(allowed[msg.sender][spender] == 0, \"\") */\n      tag_29\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_30\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_29:\n        /* \"contracts/demo/Balances.sol\":1355:1365  msg.sender */\n      caller\n        /* \"contracts/demo/Balances.sol\":1347:1366  allowed[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/demo/Balances.sol\":1347:1354  allowed */\n      0x01\n        /* \"contracts/demo/Balances.sol\":1347:1366  allowed[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/demo/Balances.sol\":1347:1375  allowed[msg.sender][spender] */\n      dup9\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/demo/Balances.sol\":1347:1384  allowed[msg.sender][spender] = tokens */\n      dup5\n      swap1\n      sstore\n        /* \"contracts/demo/Balances.sol\":1400:1437  Approval(msg.sender, spender, tokens) */\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n      tag_32\n      swap2\n        /* \"contracts/demo/Balances.sol\":1367:1374  spender */\n      dup7\n      swap1\n        /* \"contracts/demo/Balances.sol\":1378:1384  tokens */\n      dup7\n      swap1\n        /* \"contracts/demo/Balances.sol\":1400:1437  Approval(msg.sender, spender, tokens) */\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n      pop\n        /* \"contracts/demo/Balances.sol\":1455:1459  true */\n      0x01\n        /* \"contracts/demo/Balances.sol\":1200:1467  function approve(address spender, uint tokens) external returns (bool success) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/demo/Balances.sol\":884:1192  function transferFrom(address from, address to, uint amount) external returns (bool success) {\r... */\n    tag_16:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/demo/Balances.sol\":996:1009  allowed[from] */\n      dup4\n      and\n        /* \"contracts/demo/Balances.sol\":963:975  bool success */\n      0x00\n        /* \"contracts/demo/Balances.sol\":996:1009  allowed[from] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/demo/Balances.sol\":996:1003  allowed */\n      0x01\n        /* \"contracts/demo/Balances.sol\":996:1009  allowed[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/demo/Balances.sol\":1010:1020  msg.sender */\n      caller\n        /* \"contracts/demo/Balances.sol\":996:1021  allowed[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"contracts/demo/Balances.sol\":996:1031  allowed[from][msg.sender] >= amount */\n      dup3\n      gt\n      iszero\n        /* \"contracts/demo/Balances.sol\":988:1032  require(allowed[from][msg.sender] >= amount) */\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/demo/Balances.sol\":1043:1056  allowed[from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/demo/Balances.sol\":1043:1050  allowed */\n      0x01\n        /* \"contracts/demo/Balances.sol\":1043:1056  allowed[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/demo/Balances.sol\":1057:1067  msg.sender */\n      caller\n        /* \"contracts/demo/Balances.sol\":1043:1068  allowed[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"contracts/demo/Balances.sol\":1043:1078  allowed[from][msg.sender] -= amount */\n      dup1\n      sload\n        /* \"contracts/demo/Balances.sol\":1072:1078  amount */\n      dup5\n      swap3\n        /* \"contracts/demo/Balances.sol\":1043:1056  allowed[from] */\n      swap1\n        /* \"contracts/demo/Balances.sol\":1043:1078  allowed[from][msg.sender] -= amount */\n      tag_36\n      swap1\n        /* \"contracts/demo/Balances.sol\":1072:1078  amount */\n      dup5\n      swap1\n        /* \"contracts/demo/Balances.sol\":1043:1078  allowed[from][msg.sender] -= amount */\n      tag_37\n      jump\t// in\n    tag_36:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/demo/Balances.sol\":1089:1120  balances.move(from, to, amount) */\n      tag_38\n      swap1\n      pop\n        /* \"contracts/demo/Balances.sol\":1089:1097  balances */\n      0x00\n        /* \"contracts/demo/Balances.sol\":1103:1107  from */\n      dup6\n        /* \"contracts/demo/Balances.sol\":1109:1111  to */\n      dup6\n        /* \"contracts/demo/Balances.sol\":1113:1119  amount */\n      dup6\n        /* \"contracts/demo/Balances.sol\":1089:1102  balances.move */\n      tag_39\n        /* \"contracts/demo/Balances.sol\":1089:1120  balances.move(from, to, amount) */\n      jump\t// in\n    tag_38:\n        /* \"contracts/demo/Balances.sol\":1136:1162  Transfer(from, to, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/demo/Balances.sol\":1145:1149  from */\n      dup5\n        /* \"contracts/demo/Balances.sol\":1151:1153  to */\n      dup5\n        /* \"contracts/demo/Balances.sol\":1155:1161  amount */\n      dup5\n        /* \"contracts/demo/Balances.sol\":1136:1162  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_40\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n      pop\n        /* \"contracts/demo/Balances.sol\":1180:1184  true */\n      0x01\n        /* \"contracts/demo/Balances.sol\":884:1192  function transferFrom(address from, address to, uint amount) external returns (bool success) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/demo/Balances.sol\":1475:1597  function balanceOf(address tokenOwner) external view returns (uint balance) {\r... */\n    tag_21:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/demo/Balances.sol\":1569:1589  balances[tokenOwner] */\n      dup2\n      and\n        /* \"contracts/demo/Balances.sol\":1537:1549  uint balance */\n      0x00\n        /* \"contracts/demo/Balances.sol\":1569:1589  balances[tokenOwner] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/demo/Balances.sol\":1475:1597  function balanceOf(address tokenOwner) external view returns (uint balance) {\r... */\n    tag_41:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/demo/Balances.sol\":673:876  function transfer(address to, uint amount) external returns (bool success) {\r... */\n    tag_26:\n        /* \"contracts/demo/Balances.sol\":734:746  bool success */\n      0x00\n        /* \"contracts/demo/Balances.sol\":759:796  balances.move(msg.sender, to, amount) */\n      tag_43\n        /* \"contracts/demo/Balances.sol\":734:746  bool success */\n      dup2\n        /* \"contracts/demo/Balances.sol\":773:783  msg.sender */\n      caller\n        /* \"contracts/demo/Balances.sol\":785:787  to */\n      dup6\n        /* \"contracts/demo/Balances.sol\":789:795  amount */\n      dup6\n        /* \"contracts/demo/Balances.sol\":759:772  balances.move */\n      tag_39\n        /* \"contracts/demo/Balances.sol\":759:796  balances.move(msg.sender, to, amount) */\n      jump\t// in\n    tag_43:\n        /* \"contracts/demo/Balances.sol\":812:844  Transfer(msg.sender, to, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/demo/Balances.sol\":821:831  msg.sender */\n      caller\n        /* \"contracts/demo/Balances.sol\":833:835  to */\n      dup5\n        /* \"contracts/demo/Balances.sol\":837:843  amount */\n      dup5\n        /* \"contracts/demo/Balances.sol\":812:844  Transfer(msg.sender, to, amount) */\n      mload(0x40)\n      tag_32\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n        /* \"contracts/demo/Balances.sol\":96:381  function move(mapping(address => uint256) storage balances, address from, address to, uint amount) internal {\r... */\n    tag_39:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/demo/Balances.sol\":223:237  balances[from] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n      0x20\n      dup6\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/demo/Balances.sol\":223:247  balances[from] >= amount */\n      dup2\n      gt\n      iszero\n        /* \"contracts/demo/Balances.sol\":215:248  require(balances[from] >= amount) */\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/demo/Balances.sol\":292:304  balances[to] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n      0x20\n      dup6\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/demo/Balances.sol\":267:288  balances[to] + amount */\n      tag_47\n        /* \"contracts/demo/Balances.sol\":282:288  amount */\n      dup3\n        /* \"contracts/demo/Balances.sol\":292:304  balances[to] */\n      dup3\n        /* \"contracts/demo/Balances.sol\":267:288  balances[to] + amount */\n      tag_48\n      jump\t// in\n    tag_47:\n        /* \"contracts/demo/Balances.sol\":267:304  balances[to] + amount >= balances[to] */\n      lt\n      iszero\n        /* \"contracts/demo/Balances.sol\":259:305  require(balances[to] + amount >= balances[to]) */\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/demo/Balances.sol\":316:330  balances[from] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n      0x20\n      dup6\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/demo/Balances.sol\":316:340  balances[from] -= amount */\n      dup1\n      sload\n        /* \"contracts/demo/Balances.sol\":334:340  amount */\n      dup4\n      swap3\n        /* \"contracts/demo/Balances.sol\":316:330  balances[from] */\n      swap1\n        /* \"contracts/demo/Balances.sol\":316:340  balances[from] -= amount */\n      tag_50\n      swap1\n        /* \"contracts/demo/Balances.sol\":334:340  amount */\n      dup5\n      swap1\n        /* \"contracts/demo/Balances.sol\":316:340  balances[from] -= amount */\n      tag_37\n      jump\t// in\n    tag_50:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/demo/Balances.sol\":351:363  balances[to] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n      0x20\n      dup6\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/demo/Balances.sol\":351:373  balances[to] += amount */\n      dup1\n      sload\n        /* \"contracts/demo/Balances.sol\":367:373  amount */\n      dup4\n      swap3\n        /* \"contracts/demo/Balances.sol\":351:363  balances[to] */\n      swap1\n        /* \"contracts/demo/Balances.sol\":351:373  balances[to] += amount */\n      tag_51\n      swap1\n        /* \"contracts/demo/Balances.sol\":367:373  amount */\n      dup5\n      swap1\n        /* \"contracts/demo/Balances.sol\":351:373  balances[to] += amount */\n      tag_48\n      jump\t// in\n    tag_51:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/demo/Balances.sol\":96:381  function move(mapping(address => uint256) storage balances, address from, address to, uint amount) internal {\r... */\n      jump\t// out\n        /* \"#utility.yul\":14:189   */\n    tag_53:\n        /* \"#utility.yul\":84:104   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":133:164   */\n      dup2\n      and\n        /* \"#utility.yul\":123:165   */\n      dup2\n      eq\n        /* \"#utility.yul\":113:115   */\n      tag_41\n      jumpi\n        /* \"#utility.yul\":179:180   */\n      0x00\n        /* \"#utility.yul\":176:177   */\n      dup1\n        /* \"#utility.yul\":169:181   */\n      revert\n        /* \"#utility.yul\":194:392   */\n    tag_20:\n      0x00\n        /* \"#utility.yul\":306:308   */\n      0x20\n        /* \"#utility.yul\":294:303   */\n      dup3\n        /* \"#utility.yul\":285:292   */\n      dup5\n        /* \"#utility.yul\":281:304   */\n      sub\n        /* \"#utility.yul\":277:309   */\n      slt\n        /* \"#utility.yul\":274:276   */\n      iszero\n      tag_57\n      jumpi\n        /* \"#utility.yul\":327:333   */\n      dup1\n        /* \"#utility.yul\":319:325   */\n      dup2\n        /* \"#utility.yul\":312:334   */\n      revert\n        /* \"#utility.yul\":274:276   */\n    tag_57:\n        /* \"#utility.yul\":355:386   */\n      tag_58\n        /* \"#utility.yul\":376:385   */\n      dup3\n        /* \"#utility.yul\":355:386   */\n      tag_53\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":345:386   */\n      swap4\n        /* \"#utility.yul\":264:392   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":397:739   */\n    tag_15:\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":543:545   */\n      0x60\n        /* \"#utility.yul\":531:540   */\n      dup5\n        /* \"#utility.yul\":522:529   */\n      dup7\n        /* \"#utility.yul\":518:541   */\n      sub\n        /* \"#utility.yul\":514:546   */\n      slt\n        /* \"#utility.yul\":511:513   */\n      iszero\n      tag_60\n      jumpi\n        /* \"#utility.yul\":564:570   */\n      dup2\n        /* \"#utility.yul\":556:562   */\n      dup3\n        /* \"#utility.yul\":549:571   */\n      revert\n        /* \"#utility.yul\":511:513   */\n    tag_60:\n        /* \"#utility.yul\":592:623   */\n      tag_61\n        /* \"#utility.yul\":613:622   */\n      dup5\n        /* \"#utility.yul\":592:623   */\n      tag_53\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":582:623   */\n      swap3\n      pop\n        /* \"#utility.yul\":642:682   */\n      tag_62\n        /* \"#utility.yul\":678:680   */\n      0x20\n        /* \"#utility.yul\":667:676   */\n      dup6\n        /* \"#utility.yul\":663:681   */\n      add\n        /* \"#utility.yul\":642:682   */\n      tag_53\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":632:682   */\n      swap2\n      pop\n        /* \"#utility.yul\":729:731   */\n      0x40\n        /* \"#utility.yul\":718:727   */\n      dup5\n        /* \"#utility.yul\":714:732   */\n      add\n        /* \"#utility.yul\":701:733   */\n      calldataload\n        /* \"#utility.yul\":691:733   */\n      swap1\n      pop\n        /* \"#utility.yul\":501:739   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":744:1010   */\n    tag_9:\n      0x00\n      dup1\n        /* \"#utility.yul\":873:875   */\n      0x40\n        /* \"#utility.yul\":861:870   */\n      dup4\n        /* \"#utility.yul\":852:859   */\n      dup6\n        /* \"#utility.yul\":848:871   */\n      sub\n        /* \"#utility.yul\":844:876   */\n      slt\n        /* \"#utility.yul\":841:843   */\n      iszero\n      tag_64\n      jumpi\n        /* \"#utility.yul\":894:900   */\n      dup2\n        /* \"#utility.yul\":886:892   */\n      dup3\n        /* \"#utility.yul\":879:901   */\n      revert\n        /* \"#utility.yul\":841:843   */\n    tag_64:\n        /* \"#utility.yul\":922:953   */\n      tag_65\n        /* \"#utility.yul\":943:952   */\n      dup4\n        /* \"#utility.yul\":922:953   */\n      tag_53\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":912:953   */\n      swap5\n        /* \"#utility.yul\":1000:1002   */\n      0x20\n        /* \"#utility.yul\":985:1003   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":972:1004   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":831:1010   */\n      jump\t// out\n        /* \"#utility.yul\":1015:1390   */\n    tag_33:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1273:1288   */\n      swap4\n      dup5\n      and\n        /* \"#utility.yul\":1255:1289   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1325:1340   */\n      swap2\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":1320:1322   */\n      0x20\n        /* \"#utility.yul\":1305:1323   */\n      dup3\n      add\n        /* \"#utility.yul\":1298:1341   */\n      mstore\n        /* \"#utility.yul\":1372:1374   */\n      0x40\n        /* \"#utility.yul\":1357:1375   */\n      dup2\n      add\n        /* \"#utility.yul\":1350:1384   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":1205:1207   */\n      0x60\n        /* \"#utility.yul\":1190:1208   */\n      add\n      swap1\n        /* \"#utility.yul\":1172:1390   */\n      jump\t// out\n        /* \"#utility.yul\":1395:1582   */\n    tag_12:\n        /* \"#utility.yul\":1560:1574   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1553:1575   */\n      iszero\n        /* \"#utility.yul\":1535:1576   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1523:1525   */\n      0x20\n        /* \"#utility.yul\":1508:1526   */\n      add\n      swap1\n        /* \"#utility.yul\":1490:1582   */\n      jump\t// out\n        /* \"#utility.yul\":1587:1874   */\n    tag_31:\n        /* \"#utility.yul\":1789:1791   */\n      0x20\n        /* \"#utility.yul\":1771:1792   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":1587:1874   */\n      0x00\n        /* \"#utility.yul\":1808:1826   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":1801:1833   */\n      mstore\n        /* \"#utility.yul\":1865:1867   */\n      0x40\n        /* \"#utility.yul\":1850:1868   */\n      add\n      swap1\n        /* \"#utility.yul\":1761:1874   */\n      jump\t// out\n        /* \"#utility.yul\":1879:2056   */\n    tag_23:\n        /* \"#utility.yul\":2025:2050   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2013:2015   */\n      0x20\n        /* \"#utility.yul\":1998:2016   */\n      add\n      swap1\n        /* \"#utility.yul\":1980:2056   */\n      jump\t// out\n        /* \"#utility.yul\":2061:2189   */\n    tag_48:\n      0x00\n        /* \"#utility.yul\":2132:2133   */\n      dup3\n        /* \"#utility.yul\":2128:2134   */\n      not\n        /* \"#utility.yul\":2125:2126   */\n      dup3\n        /* \"#utility.yul\":2122:2135   */\n      gt\n        /* \"#utility.yul\":2119:2121   */\n      iszero\n      tag_72\n      jumpi\n        /* \"#utility.yul\":2138:2156   */\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      pop\n        /* \"#utility.yul\":2174:2183   */\n      add\n      swap1\n        /* \"#utility.yul\":2109:2189   */\n      jump\t// out\n        /* \"#utility.yul\":2194:2319   */\n    tag_37:\n      0x00\n        /* \"#utility.yul\":2262:2263   */\n      dup3\n        /* \"#utility.yul\":2259:2260   */\n      dup3\n        /* \"#utility.yul\":2256:2264   */\n      lt\n        /* \"#utility.yul\":2253:2255   */\n      iszero\n      tag_76\n      jumpi\n        /* \"#utility.yul\":2267:2285   */\n      tag_76\n      tag_73\n      jump\t// in\n    tag_76:\n      pop\n        /* \"#utility.yul\":2304:2313   */\n      sub\n      swap1\n        /* \"#utility.yul\":2243:2319   */\n      jump\t// out\n        /* \"#utility.yul\":2324:2451   */\n    tag_73:\n        /* \"#utility.yul\":2385:2395   */\n      0x4e487b71\n        /* \"#utility.yul\":2380:2383   */\n      0xe0\n        /* \"#utility.yul\":2376:2396   */\n      shl\n        /* \"#utility.yul\":2373:2374   */\n      0x00\n        /* \"#utility.yul\":2366:2397   */\n      mstore\n        /* \"#utility.yul\":2416:2420   */\n      0x11\n        /* \"#utility.yul\":2413:2414   */\n      0x04\n        /* \"#utility.yul\":2406:2421   */\n      mstore\n        /* \"#utility.yul\":2440:2444   */\n      0x24\n        /* \"#utility.yul\":2437:2438   */\n      0x00\n        /* \"#utility.yul\":2430:2445   */\n      revert\n\n    auxdata: 0xa264697066735822122014fd9519376807cbc7bffb6c5ca2f1c014f0e3c7bf619a7c6cc90854311d93e664736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506104a1806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063095ea7b31461005157806323b872dd1461007a57806370a082311461008d578063a9059cbb146100ad575b600080fd5b61006461005f3660046103b4565b6100c0565b6040516100719190610401565b60405180910390f35b610064610088366004610379565b610173565b6100a061009b366004610358565b61022e565b604051610071919061041d565b6100646100bb3660046103b4565b61024d565b3360009081526001602090815260408083206001600160a01b03861684529091528120541561010a5760405162461bcd60e51b81526004016101019061040c565b60405180910390fd5b3360008181526001602090815260408083206001600160a01b038816845290915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259161016291869086906103dd565b60405180910390a150600192915050565b6001600160a01b03831660009081526001602090815260408083203384529091528120548211156101a357600080fd5b6001600160a01b0384166000908152600160209081526040808320338452909152812080548492906101d690849061043e565b909155506101e99050600085858561028e565b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84848460405161021c939291906103dd565b60405180910390a15060019392505050565b6001600160a01b0381166000908152602081905260409020545b919050565b600061025b8133858561028e565b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef338484604051610162939291906103dd565b6001600160a01b0383166000908152602085905260409020548111156102b357600080fd5b6001600160a01b0382166000908152602085905260409020546102d68282610426565b10156102e157600080fd5b6001600160a01b0383166000908152602085905260408120805483929061030990849061043e565b90915550506001600160a01b03821660009081526020859052604081208054839290610336908490610426565b909155505050505050565b80356001600160a01b038116811461024857600080fd5b600060208284031215610369578081fd5b61037282610341565b9392505050565b60008060006060848603121561038d578182fd5b61039684610341565b92506103a460208501610341565b9150604084013590509250925092565b600080604083850312156103c6578182fd5b6103cf83610341565b946020939093013593505050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b901515815260200190565b602080825260009082015260400190565b90815260200190565b6000821982111561043957610439610455565b500190565b60008282101561045057610450610455565b500390565b634e487b7160e01b600052601160045260246000fdfea264697066735822122014fd9519376807cbc7bffb6c5ca2f1c014f0e3c7bf619a7c6cc90854311d93e664736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A1 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xAD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x5F CALLDATASIZE PUSH1 0x4 PUSH2 0x3B4 JUMP JUMPDEST PUSH2 0xC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x401 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x64 PUSH2 0x88 CALLDATASIZE PUSH1 0x4 PUSH2 0x379 JUMP JUMPDEST PUSH2 0x173 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x358 JUMP JUMPDEST PUSH2 0x22E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x41D JUMP JUMPDEST PUSH2 0x64 PUSH2 0xBB CALLDATASIZE PUSH1 0x4 PUSH2 0x3B4 JUMP JUMPDEST PUSH2 0x24D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD ISZERO PUSH2 0x10A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x101 SWAP1 PUSH2 0x40C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 PUSH2 0x162 SWAP2 DUP7 SWAP1 DUP7 SWAP1 PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x1A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1D6 SWAP1 DUP5 SWAP1 PUSH2 0x43E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1E9 SWAP1 POP PUSH1 0x0 DUP6 DUP6 DUP6 PUSH2 0x28E JUMP JUMPDEST PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x21C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25B DUP2 CALLER DUP6 DUP6 PUSH2 0x28E JUMP JUMPDEST PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF CALLER DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x162 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP6 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x2B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP6 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2D6 DUP3 DUP3 PUSH2 0x426 JUMP JUMPDEST LT ISZERO PUSH2 0x2E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP6 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x309 SWAP1 DUP5 SWAP1 PUSH2 0x43E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP6 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x336 SWAP1 DUP5 SWAP1 PUSH2 0x426 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x369 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x372 DUP3 PUSH2 0x341 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x38D JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x396 DUP5 PUSH2 0x341 JUMP JUMPDEST SWAP3 POP PUSH2 0x3A4 PUSH1 0x20 DUP6 ADD PUSH2 0x341 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3C6 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x3CF DUP4 PUSH2 0x341 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x0 SWAP1 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x439 JUMPI PUSH2 0x439 PUSH2 0x455 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x450 JUMPI PUSH2 0x450 PUSH2 0x455 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ REVERT SWAP6 NOT CALLDATACOPY PUSH9 0x7CBC7BFFB6C5CA2F1 0xC0 EQ CREATE 0xE3 0xC7 0xBF PUSH2 0x9A7C PUSH13 0xC90854311D93E664736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "388:1212:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2453:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "65:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "75:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "97:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "84:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "84:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "75:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "167:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "176:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "179:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "169:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "169:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "169:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "126:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "137:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "152:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "157:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "148:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "148:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "161:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "144:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "144:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "133:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "133:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "123:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "123:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "116:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "116:50:1"
															},
															"nodeType": "YulIf",
															"src": "113:2:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "44:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "55:5:1",
														"type": ""
													}
												],
												"src": "14:175:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "264:128:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "310:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "319:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "327:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "312:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "312:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "312:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "285:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "294:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "281:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "281:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "306:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "277:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "277:32:1"
															},
															"nodeType": "YulIf",
															"src": "274:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "345:41:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "376:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "355:20:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "355:31:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "345:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "230:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "241:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "253:6:1",
														"type": ""
													}
												],
												"src": "194:198:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "501:238:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "547:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "556:6:1"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "564:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "549:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "549:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "549:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "522:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "531:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "518:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "518:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "543:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "514:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "514:32:1"
															},
															"nodeType": "YulIf",
															"src": "511:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "582:41:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "613:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "592:20:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "592:31:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "582:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "632:50:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "667:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "678:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "663:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "663:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "642:20:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "642:40:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "632:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "691:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "718:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "729:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "714:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "714:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "701:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "691:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "451:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "462:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "474:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "482:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "490:6:1",
														"type": ""
													}
												],
												"src": "397:342:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "831:179:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "877:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "886:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "894:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "879:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "879:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "879:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "852:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "861:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "848:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "848:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "873:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "844:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "844:32:1"
															},
															"nodeType": "YulIf",
															"src": "841:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "912:41:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "943:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "922:20:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "922:31:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "912:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "962:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "989:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1000:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "985:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "985:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "972:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "972:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "962:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "789:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "800:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "812:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "820:6:1",
														"type": ""
													}
												],
												"src": "744:266:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1172:218:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1182:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1194:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1205:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1190:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1190:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1182:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1217:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1235:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1240:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1231:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1231:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1244:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1227:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1227:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1221:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1262:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1277:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1285:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1273:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1273:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1255:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1255:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1255:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1309:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1320:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1305:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1305:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "1329:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1337:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1325:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1325:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1298:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1298:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1298:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1361:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1372:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1357:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1357:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "1377:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1350:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1350:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1350:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1125:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1136:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1144:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1152:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1163:4:1",
														"type": ""
													}
												],
												"src": "1015:375:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1490:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1500:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1512:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1523:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1508:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1508:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1542:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1567:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1560:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1560:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1553:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1553:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1535:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1535:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1535:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1459:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1470:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1481:4:1",
														"type": ""
													}
												],
												"src": "1395:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1761:113:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1778:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1789:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1771:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1771:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1771:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1812:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1823:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1808:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1808:18:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1828:4:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1801:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1801:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1801:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1842:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1854:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1865:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1850:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1850:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1842:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1738:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1752:4:1",
														"type": ""
													}
												],
												"src": "1587:287:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1980:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1990:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2002:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2013:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1998:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1998:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1990:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2032:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2043:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2025:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2025:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2025:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1949:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1960:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1971:4:1",
														"type": ""
													}
												],
												"src": "1879:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2109:80:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2136:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2138:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2138:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2138:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2125:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2132:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2128:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2128:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2122:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2122:13:1"
															},
															"nodeType": "YulIf",
															"src": "2119:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2167:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2178:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2181:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2174:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2174:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2167:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2092:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2095:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2101:3:1",
														"type": ""
													}
												],
												"src": "2061:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2243:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2265:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2267:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2267:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2267:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2259:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2262:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2256:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2256:8:1"
															},
															"nodeType": "YulIf",
															"src": "2253:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2296:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2308:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2311:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2304:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2304:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "2296:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2225:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2228:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "2234:4:1",
														"type": ""
													}
												],
												"src": "2194:125:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2356:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2373:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2380:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2385:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2376:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2376:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2366:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2366:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2366:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2413:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2416:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2406:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2406:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2406:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2437:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2440:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2430:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2430:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2430:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2324:127:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value1, value1) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), tail)\n        tail := add(headStart, 64)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c8063095ea7b31461005157806323b872dd1461007a57806370a082311461008d578063a9059cbb146100ad575b600080fd5b61006461005f3660046103b4565b6100c0565b6040516100719190610401565b60405180910390f35b610064610088366004610379565b610173565b6100a061009b366004610358565b61022e565b604051610071919061041d565b6100646100bb3660046103b4565b61024d565b3360009081526001602090815260408083206001600160a01b03861684529091528120541561010a5760405162461bcd60e51b81526004016101019061040c565b60405180910390fd5b3360008181526001602090815260408083206001600160a01b038816845290915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259161016291869086906103dd565b60405180910390a150600192915050565b6001600160a01b03831660009081526001602090815260408083203384529091528120548211156101a357600080fd5b6001600160a01b0384166000908152600160209081526040808320338452909152812080548492906101d690849061043e565b909155506101e99050600085858561028e565b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84848460405161021c939291906103dd565b60405180910390a15060019392505050565b6001600160a01b0381166000908152602081905260409020545b919050565b600061025b8133858561028e565b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef338484604051610162939291906103dd565b6001600160a01b0383166000908152602085905260409020548111156102b357600080fd5b6001600160a01b0382166000908152602085905260409020546102d68282610426565b10156102e157600080fd5b6001600160a01b0383166000908152602085905260408120805483929061030990849061043e565b90915550506001600160a01b03821660009081526020859052604081208054839290610336908490610426565b909155505050505050565b80356001600160a01b038116811461024857600080fd5b600060208284031215610369578081fd5b61037282610341565b9392505050565b60008060006060848603121561038d578182fd5b61039684610341565b92506103a460208501610341565b9150604084013590509250925092565b600080604083850312156103c6578182fd5b6103cf83610341565b946020939093013593505050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b901515815260200190565b602080825260009082015260400190565b90815260200190565b6000821982111561043957610439610455565b500190565b60008282101561045057610450610455565b500390565b634e487b7160e01b600052601160045260246000fdfea264697066735822122014fd9519376807cbc7bffb6c5ca2f1c014f0e3c7bf619a7c6cc90854311d93e664736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xAD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x5F CALLDATASIZE PUSH1 0x4 PUSH2 0x3B4 JUMP JUMPDEST PUSH2 0xC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x401 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x64 PUSH2 0x88 CALLDATASIZE PUSH1 0x4 PUSH2 0x379 JUMP JUMPDEST PUSH2 0x173 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x358 JUMP JUMPDEST PUSH2 0x22E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x41D JUMP JUMPDEST PUSH2 0x64 PUSH2 0xBB CALLDATASIZE PUSH1 0x4 PUSH2 0x3B4 JUMP JUMPDEST PUSH2 0x24D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD ISZERO PUSH2 0x10A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x101 SWAP1 PUSH2 0x40C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 PUSH2 0x162 SWAP2 DUP7 SWAP1 DUP7 SWAP1 PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x1A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1D6 SWAP1 DUP5 SWAP1 PUSH2 0x43E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1E9 SWAP1 POP PUSH1 0x0 DUP6 DUP6 DUP6 PUSH2 0x28E JUMP JUMPDEST PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x21C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25B DUP2 CALLER DUP6 DUP6 PUSH2 0x28E JUMP JUMPDEST PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF CALLER DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x162 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP6 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x2B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP6 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2D6 DUP3 DUP3 PUSH2 0x426 JUMP JUMPDEST LT ISZERO PUSH2 0x2E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP6 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x309 SWAP1 DUP5 SWAP1 PUSH2 0x43E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP6 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x336 SWAP1 DUP5 SWAP1 PUSH2 0x426 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x369 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x372 DUP3 PUSH2 0x341 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x38D JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x396 DUP5 PUSH2 0x341 JUMP JUMPDEST SWAP3 POP PUSH2 0x3A4 PUSH1 0x20 DUP6 ADD PUSH2 0x341 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3C6 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x3CF DUP4 PUSH2 0x341 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x0 SWAP1 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x439 JUMPI PUSH2 0x439 PUSH2 0x455 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x450 JUMPI PUSH2 0x450 PUSH2 0x455 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ REVERT SWAP6 NOT CALLDATACOPY PUSH9 0x7CBC7BFFB6C5CA2F1 0xC0 EQ CREATE 0xE3 0xC7 0xBF PUSH2 0x9A7C PUSH13 0xC90854311D93E664736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "388:1212:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1200:267;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;884:308;;;;;;:::i;:::-;;:::i;1475:122::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;673:203::-;;;;;;:::i;:::-;;:::i;1200:267::-;1306:10;1265:12;1298:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;1298:28:0;;;;;;;;;;:33;1290:46;;;;-1:-1:-1;;;1290:46:0;;;;;;;:::i;:::-;;;;;;;;;1355:10;1347:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;1347:28:0;;;;;;;;;;;:37;;;1400;;;;;1367:7;;1378:6;;1400:37;:::i;:::-;;;;;;;;-1:-1:-1;1455:4:0;1200:267;;;;:::o;884:308::-;-1:-1:-1;;;;;996:13:0;;963:12;996:13;;;:7;:13;;;;;;;;1010:10;996:25;;;;;;;;:35;-1:-1:-1;996:35:0;988:44;;;;;;-1:-1:-1;;;;;1043:13:0;;;;;;:7;:13;;;;;;;;1057:10;1043:25;;;;;;;:35;;1072:6;;1043:13;:35;;1072:6;;1043:35;:::i;:::-;;;;-1:-1:-1;1089:31:0;;-1:-1:-1;1089:8:0;1103:4;1109:2;1113:6;1089:13;:31::i;:::-;1136:26;1145:4;1151:2;1155:6;1136:26;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;1180:4:0;884:308;;;;;:::o;1475:122::-;-1:-1:-1;;;;;1569:20:0;;1537:12;1569:20;;;;;;;;;;;1475:122;;;;:::o;673:203::-;734:12;759:37;734:12;773:10;785:2;789:6;759:13;:37::i;:::-;812:32;821:10;833:2;837:6;812:32;;;;;;;;:::i;96:285::-;-1:-1:-1;;;;;223:14:0;;;;;;;;;;;;;;:24;-1:-1:-1;223:24:0;215:33;;;;;;-1:-1:-1;;;;;292:12:0;;;;;;;;;;;;;;267:21;282:6;292:12;267:21;:::i;:::-;:37;;259:46;;;;;;-1:-1:-1;;;;;316:14:0;;;;;;;;;;;;;:24;;334:6;;316:14;:24;;334:6;;316:24;:::i;:::-;;;;-1:-1:-1;;;;;;;351:12:0;;;;;;;;;;;;;:22;;367:6;;351:12;:22;;367:6;;351:22;:::i;:::-;;;;-1:-1:-1;;;;;;96:285:0:o;14:175:1:-;84:20;;-1:-1:-1;;;;;133:31:1;;123:42;;113:2;;179:1;176;169:12;194:198;;306:2;294:9;285:7;281:23;277:32;274:2;;;327:6;319;312:22;274:2;355:31;376:9;355:31;:::i;:::-;345:41;264:128;-1:-1:-1;;;264:128:1:o;397:342::-;;;;543:2;531:9;522:7;518:23;514:32;511:2;;;564:6;556;549:22;511:2;592:31;613:9;592:31;:::i;:::-;582:41;;642:40;678:2;667:9;663:18;642:40;:::i;:::-;632:50;;729:2;718:9;714:18;701:32;691:42;;501:238;;;;;:::o;744:266::-;;;873:2;861:9;852:7;848:23;844:32;841:2;;;894:6;886;879:22;841:2;922:31;943:9;922:31;:::i;:::-;912:41;1000:2;985:18;;;;972:32;;-1:-1:-1;;;831:179:1:o;1015:375::-;-1:-1:-1;;;;;1273:15:1;;;1255:34;;1325:15;;;;1320:2;1305:18;;1298:43;1372:2;1357:18;;1350:34;;;;1205:2;1190:18;;1172:218::o;1395:187::-;1560:14;;1553:22;1535:41;;1523:2;1508:18;;1490:92::o;1587:287::-;1789:2;1771:21;;;1587:287;1808:18;;;1801:32;1865:2;1850:18;;1761:113::o;1879:177::-;2025:25;;;2013:2;1998:18;;1980:76::o;2061:128::-;;2132:1;2128:6;2125:1;2122:13;2119:2;;;2138:18;;:::i;:::-;-1:-1:-1;2174:9:1;;2109:80::o;2194:125::-;;2262:1;2259;2256:8;2253:2;;;2267:18;;:::i;:::-;-1:-1:-1;2304:9:1;;2243:76::o;2324:127::-;2385:10;2380:3;2376:20;2373:1;2366:31;2416:4;2413:1;2406:15;2440:4;2437:1;2430:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "237000",
								"executionCost": "281",
								"totalCost": "237281"
							},
							"external": {
								"approve(address,uint256)": "23225",
								"balanceOf(address)": "infinite",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 388,
									"end": 1600,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 388,
									"end": 1600,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 388,
									"end": 1600,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 388,
									"end": 1600,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 388,
									"end": 1600,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 388,
									"end": 1600,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 388,
									"end": 1600,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 388,
									"end": 1600,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 388,
									"end": 1600,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 388,
									"end": 1600,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 388,
									"end": 1600,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 388,
									"end": 1600,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 388,
									"end": 1600,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 388,
									"end": 1600,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 388,
									"end": 1600,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 388,
									"end": 1600,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 388,
									"end": 1600,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 388,
									"end": 1600,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 388,
									"end": 1600,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 388,
									"end": 1600,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 388,
									"end": 1600,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122014fd9519376807cbc7bffb6c5ca2f1c014f0e3c7bf619a7c6cc90854311d93e664736f6c63430008000033",
									".code": [
										{
											"begin": 388,
											"end": 1600,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 388,
											"end": 1600,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 388,
											"end": 1600,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 388,
											"end": 1600,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 388,
											"end": 1600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 1600,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 388,
											"end": 1600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 388,
											"end": 1600,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 388,
											"end": 1600,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 388,
											"end": 1600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 1600,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 388,
											"end": 1600,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 388,
											"end": 1600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 388,
											"end": 1600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 388,
											"end": 1600,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 388,
											"end": 1600,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 388,
											"end": 1600,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 388,
											"end": 1600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 388,
											"end": 1600,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 388,
											"end": 1600,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 388,
											"end": 1600,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 388,
											"end": 1600,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 388,
											"end": 1600,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 388,
											"end": 1600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 1600,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 388,
											"end": 1600,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 388,
											"end": 1600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 388,
											"end": 1600,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 388,
											"end": 1600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 1600,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 388,
											"end": 1600,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 388,
											"end": 1600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 388,
											"end": 1600,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 388,
											"end": 1600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 1600,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 388,
											"end": 1600,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 388,
											"end": 1600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 388,
											"end": 1600,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 388,
											"end": 1600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 1600,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 388,
											"end": 1600,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 388,
											"end": 1600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 388,
											"end": 1600,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 388,
											"end": 1600,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 388,
											"end": 1600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 388,
											"end": 1600,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 388,
											"end": 1600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 1600,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1200,
											"end": 1467,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1200,
											"end": 1467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1200,
											"end": 1467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1200,
											"end": 1467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1200,
											"end": 1467,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1200,
											"end": 1467,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1200,
											"end": 1467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1200,
											"end": 1467,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1200,
											"end": 1467,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1200,
											"end": 1467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1200,
											"end": 1467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1200,
											"end": 1467,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1200,
											"end": 1467,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1200,
											"end": 1467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1200,
											"end": 1467,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1200,
											"end": 1467,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1200,
											"end": 1467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1200,
											"end": 1467,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1200,
											"end": 1467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1200,
											"end": 1467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1200,
											"end": 1467,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1200,
											"end": 1467,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1200,
											"end": 1467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1200,
											"end": 1467,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1200,
											"end": 1467,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1200,
											"end": 1467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1200,
											"end": 1467,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1200,
											"end": 1467,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1200,
											"end": 1467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1200,
											"end": 1467,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 884,
											"end": 1192,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 884,
											"end": 1192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 884,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 884,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 884,
											"end": 1192,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 884,
											"end": 1192,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 884,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 884,
											"end": 1192,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 884,
											"end": 1192,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 884,
											"end": 1192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 884,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 884,
											"end": 1192,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1475,
											"end": 1597,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1475,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1475,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1475,
											"end": 1597,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1597,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1475,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1475,
											"end": 1597,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1475,
											"end": 1597,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1475,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1475,
											"end": 1597,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1475,
											"end": 1597,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1475,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1597,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1475,
											"end": 1597,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1475,
											"end": 1597,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1475,
											"end": 1597,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 673,
											"end": 876,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 673,
											"end": 876,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 673,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 673,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 673,
											"end": 876,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 673,
											"end": 876,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 673,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 673,
											"end": 876,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 673,
											"end": 876,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 673,
											"end": 876,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 673,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 673,
											"end": 876,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1200,
											"end": 1467,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1200,
											"end": 1467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1306,
											"end": 1316,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1265,
											"end": 1277,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1298,
											"end": 1317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1298,
											"end": 1317,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1298,
											"end": 1317,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1298,
											"end": 1305,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1298,
											"end": 1317,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1298,
											"end": 1317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1298,
											"end": 1317,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1298,
											"end": 1317,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1298,
											"end": 1317,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1298,
											"end": 1317,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1298,
											"end": 1317,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1298,
											"end": 1317,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1298,
											"end": 1326,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1298,
											"end": 1326,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1298,
											"end": 1326,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1298,
											"end": 1326,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1298,
											"end": 1326,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1298,
											"end": 1326,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1298,
											"end": 1326,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1298,
											"end": 1326,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1298,
											"end": 1326,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1298,
											"end": 1326,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1298,
											"end": 1331,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1290,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1290,
											"end": 1336,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1290,
											"end": 1336,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1290,
											"end": 1336,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1290,
											"end": 1336,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1290,
											"end": 1336,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1290,
											"end": 1336,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1290,
											"end": 1336,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1290,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1290,
											"end": 1336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1290,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1290,
											"end": 1336,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1290,
											"end": 1336,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1290,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1290,
											"end": 1336,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1290,
											"end": 1336,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1290,
											"end": 1336,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1290,
											"end": 1336,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1290,
											"end": 1336,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1290,
											"end": 1336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1290,
											"end": 1336,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1290,
											"end": 1336,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1290,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1355,
											"end": 1365,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1347,
											"end": 1366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1347,
											"end": 1366,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1347,
											"end": 1366,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1347,
											"end": 1366,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1347,
											"end": 1354,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1347,
											"end": 1366,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1347,
											"end": 1366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1347,
											"end": 1366,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1347,
											"end": 1366,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1347,
											"end": 1366,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1347,
											"end": 1366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1347,
											"end": 1366,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1347,
											"end": 1366,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1347,
											"end": 1375,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 1347,
											"end": 1375,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1347,
											"end": 1375,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1347,
											"end": 1375,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1347,
											"end": 1375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1347,
											"end": 1375,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1347,
											"end": 1375,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1347,
											"end": 1375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1347,
											"end": 1375,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1347,
											"end": 1375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1347,
											"end": 1375,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1347,
											"end": 1384,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1347,
											"end": 1384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1347,
											"end": 1384,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1437,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1437,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 1400,
											"end": 1437,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1400,
											"end": 1437,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1374,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1374,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1378,
											"end": 1384,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1378,
											"end": 1384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1400,
											"end": 1437,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1400,
											"end": 1437,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1400,
											"end": 1437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1437,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1400,
											"end": 1437,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1437,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1437,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1437,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1437,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1437,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1455,
											"end": 1459,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1200,
											"end": 1467,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1200,
											"end": 1467,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1200,
											"end": 1467,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1200,
											"end": 1467,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1200,
											"end": 1467,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 884,
											"end": 1192,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 884,
											"end": 1192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 996,
											"end": 1009,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1009,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 963,
											"end": 975,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 996,
											"end": 1009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1009,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1009,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1003,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 996,
											"end": 1009,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 996,
											"end": 1009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1009,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1009,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1009,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 996,
											"end": 1009,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1009,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1009,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1020,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1021,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1021,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1021,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1021,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1021,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1021,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1031,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 996,
											"end": 1031,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 988,
											"end": 1032,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 988,
											"end": 1032,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 988,
											"end": 1032,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 988,
											"end": 1032,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 988,
											"end": 1032,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 988,
											"end": 1032,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 988,
											"end": 1032,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1043,
											"end": 1056,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1043,
											"end": 1056,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1043,
											"end": 1056,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1043,
											"end": 1056,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1043,
											"end": 1056,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1043,
											"end": 1056,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1043,
											"end": 1050,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1043,
											"end": 1056,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1043,
											"end": 1056,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1043,
											"end": 1056,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1043,
											"end": 1056,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1043,
											"end": 1056,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1043,
											"end": 1056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1043,
											"end": 1056,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1043,
											"end": 1056,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1057,
											"end": 1067,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1043,
											"end": 1068,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1043,
											"end": 1068,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1043,
											"end": 1068,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1043,
											"end": 1068,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1043,
											"end": 1068,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1043,
											"end": 1068,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1043,
											"end": 1068,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1043,
											"end": 1078,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1043,
											"end": 1078,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1072,
											"end": 1078,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1072,
											"end": 1078,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1043,
											"end": 1056,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1043,
											"end": 1078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1043,
											"end": 1078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1072,
											"end": 1078,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1072,
											"end": 1078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1043,
											"end": 1078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1043,
											"end": 1078,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1043,
											"end": 1078,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1043,
											"end": 1078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1043,
											"end": 1078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1043,
											"end": 1078,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1043,
											"end": 1078,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1089,
											"end": 1120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1089,
											"end": 1120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1089,
											"end": 1097,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1103,
											"end": 1107,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1111,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1113,
											"end": 1119,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1089,
											"end": 1120,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1089,
											"end": 1120,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1089,
											"end": 1120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1162,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1153,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 1161,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1162,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1136,
											"end": 1162,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1136,
											"end": 1162,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1162,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1162,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1162,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1136,
											"end": 1162,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1136,
											"end": 1162,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1136,
											"end": 1162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1162,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1136,
											"end": 1162,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1162,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1162,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1162,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1162,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1180,
											"end": 1184,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 884,
											"end": 1192,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 884,
											"end": 1192,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 884,
											"end": 1192,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 884,
											"end": 1192,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 884,
											"end": 1192,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 884,
											"end": 1192,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1475,
											"end": 1597,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1475,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1569,
											"end": 1589,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1569,
											"end": 1589,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1549,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1569,
											"end": 1589,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1569,
											"end": 1589,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1569,
											"end": 1589,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1569,
											"end": 1589,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1569,
											"end": 1589,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1569,
											"end": 1589,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1569,
											"end": 1589,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1569,
											"end": 1589,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1569,
											"end": 1589,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1569,
											"end": 1589,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1569,
											"end": 1589,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1597,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1475,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1597,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1597,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1597,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 673,
											"end": 876,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 673,
											"end": 876,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 734,
											"end": 746,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 734,
											"end": 746,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 773,
											"end": 783,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 785,
											"end": 787,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 789,
											"end": 795,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 759,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 759,
											"end": 796,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 759,
											"end": 796,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 759,
											"end": 796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 812,
											"end": 844,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 821,
											"end": 831,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 833,
											"end": 835,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 837,
											"end": 843,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 812,
											"end": 844,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 812,
											"end": 844,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 812,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 812,
											"end": 844,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 812,
											"end": 844,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 812,
											"end": 844,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 812,
											"end": 844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 812,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 812,
											"end": 844,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 96,
											"end": 381,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 96,
											"end": 381,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 223,
											"end": 237,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 223,
											"end": 237,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 223,
											"end": 237,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 223,
											"end": 237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 223,
											"end": 237,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 223,
											"end": 237,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 223,
											"end": 237,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 223,
											"end": 237,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 223,
											"end": 237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 223,
											"end": 237,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 223,
											"end": 237,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 223,
											"end": 237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 223,
											"end": 237,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 223,
											"end": 237,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 223,
											"end": 247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 223,
											"end": 247,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 215,
											"end": 248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 215,
											"end": 248,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 215,
											"end": 248,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 215,
											"end": 248,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 215,
											"end": 248,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 215,
											"end": 248,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 215,
											"end": 248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 292,
											"end": 304,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 292,
											"end": 304,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 292,
											"end": 304,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 292,
											"end": 304,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 292,
											"end": 304,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 292,
											"end": 304,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 304,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 292,
											"end": 304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 292,
											"end": 304,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 292,
											"end": 304,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 292,
											"end": 304,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 292,
											"end": 304,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 267,
											"end": 288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 282,
											"end": 288,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 292,
											"end": 304,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 267,
											"end": 288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 267,
											"end": 288,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 267,
											"end": 288,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 267,
											"end": 288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 267,
											"end": 304,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 267,
											"end": 304,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 259,
											"end": 305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 259,
											"end": 305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 259,
											"end": 305,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 259,
											"end": 305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 259,
											"end": 305,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 259,
											"end": 305,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 259,
											"end": 305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 316,
											"end": 330,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 316,
											"end": 330,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 316,
											"end": 330,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 316,
											"end": 330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 316,
											"end": 330,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 316,
											"end": 330,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 316,
											"end": 330,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 316,
											"end": 330,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 316,
											"end": 330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 316,
											"end": 330,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 316,
											"end": 330,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 316,
											"end": 330,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 316,
											"end": 330,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 316,
											"end": 340,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 316,
											"end": 340,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 334,
											"end": 340,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 334,
											"end": 340,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 316,
											"end": 330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 316,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 316,
											"end": 340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 334,
											"end": 340,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 334,
											"end": 340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 316,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 316,
											"end": 340,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 316,
											"end": 340,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 316,
											"end": 340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 316,
											"end": 340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 316,
											"end": 340,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 316,
											"end": 340,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 351,
											"end": 363,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 351,
											"end": 363,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 351,
											"end": 363,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 351,
											"end": 363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 351,
											"end": 363,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 351,
											"end": 363,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 351,
											"end": 363,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 351,
											"end": 363,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 351,
											"end": 363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 351,
											"end": 363,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 351,
											"end": 363,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 351,
											"end": 363,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 351,
											"end": 363,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 351,
											"end": 373,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 351,
											"end": 373,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 367,
											"end": 373,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 367,
											"end": 373,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 351,
											"end": 363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 351,
											"end": 373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 351,
											"end": 373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 367,
											"end": 373,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 367,
											"end": 373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 351,
											"end": 373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 351,
											"end": 373,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 351,
											"end": 373,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 351,
											"end": 373,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 351,
											"end": 373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 351,
											"end": 373,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 351,
											"end": 373,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 96,
											"end": 381,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 189,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 14,
											"end": 189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 84,
											"end": 104,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 84,
											"end": 104,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 133,
											"end": 164,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 133,
											"end": 164,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 123,
											"end": 165,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 123,
											"end": 165,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 113,
											"end": 115,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 113,
											"end": 115,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 179,
											"end": 180,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 176,
											"end": 177,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 169,
											"end": 181,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 194,
											"end": 392,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 194,
											"end": 392,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 194,
											"end": 392,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 308,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 294,
											"end": 303,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 285,
											"end": 292,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 281,
											"end": 304,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 277,
											"end": 309,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 274,
											"end": 276,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 274,
											"end": 276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 274,
											"end": 276,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 327,
											"end": 333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 319,
											"end": 325,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 312,
											"end": 334,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 274,
											"end": 276,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 274,
											"end": 276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 355,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 376,
											"end": 385,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 355,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 355,
											"end": 386,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 355,
											"end": 386,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 355,
											"end": 386,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 345,
											"end": 386,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 264,
											"end": 392,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 264,
											"end": 392,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 397,
											"end": 739,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 397,
											"end": 739,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 397,
											"end": 739,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 397,
											"end": 739,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 397,
											"end": 739,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 543,
											"end": 545,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 531,
											"end": 540,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 522,
											"end": 529,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 518,
											"end": 541,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 514,
											"end": 546,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 511,
											"end": 513,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 511,
											"end": 513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 511,
											"end": 513,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 564,
											"end": 570,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 556,
											"end": 562,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 549,
											"end": 571,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 511,
											"end": 513,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 511,
											"end": 513,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 592,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 613,
											"end": 622,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 592,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 592,
											"end": 623,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 592,
											"end": 623,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 592,
											"end": 623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 582,
											"end": 623,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 582,
											"end": 623,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 642,
											"end": 682,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 678,
											"end": 680,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 667,
											"end": 676,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 663,
											"end": 681,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 642,
											"end": 682,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 642,
											"end": 682,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 642,
											"end": 682,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 642,
											"end": 682,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 632,
											"end": 682,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 632,
											"end": 682,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 729,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 718,
											"end": 727,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 714,
											"end": 732,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 701,
											"end": 733,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 691,
											"end": 733,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 691,
											"end": 733,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 501,
											"end": 739,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 501,
											"end": 739,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 501,
											"end": 739,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 501,
											"end": 739,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 501,
											"end": 739,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 501,
											"end": 739,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 744,
											"end": 1010,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 744,
											"end": 1010,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 744,
											"end": 1010,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 744,
											"end": 1010,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 873,
											"end": 875,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 861,
											"end": 870,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 852,
											"end": 859,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 848,
											"end": 871,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 844,
											"end": 876,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 841,
											"end": 843,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 841,
											"end": 843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 841,
											"end": 843,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 894,
											"end": 900,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 886,
											"end": 892,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 879,
											"end": 901,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 841,
											"end": 843,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 841,
											"end": 843,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 922,
											"end": 953,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 943,
											"end": 952,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 922,
											"end": 953,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 922,
											"end": 953,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 922,
											"end": 953,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 922,
											"end": 953,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 912,
											"end": 953,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1002,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 985,
											"end": 1003,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 985,
											"end": 1003,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 985,
											"end": 1003,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 985,
											"end": 1003,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 972,
											"end": 1004,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 972,
											"end": 1004,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 831,
											"end": 1010,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1015,
											"end": 1390,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1015,
											"end": 1390,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1288,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1288,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1288,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1255,
											"end": 1289,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1255,
											"end": 1289,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 1340,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 1340,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 1340,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 1340,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1320,
											"end": 1322,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1305,
											"end": 1323,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1305,
											"end": 1323,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1298,
											"end": 1341,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1372,
											"end": 1374,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1357,
											"end": 1375,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1357,
											"end": 1375,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1350,
											"end": 1384,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1350,
											"end": 1384,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1350,
											"end": 1384,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1350,
											"end": 1384,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1207,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1190,
											"end": 1208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1190,
											"end": 1208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1172,
											"end": 1390,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1395,
											"end": 1582,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1395,
											"end": 1582,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1574,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1574,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1575,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1576,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1576,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1523,
											"end": 1525,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1508,
											"end": 1526,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1508,
											"end": 1526,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1490,
											"end": 1582,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1587,
											"end": 1874,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1587,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1789,
											"end": 1791,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1771,
											"end": 1792,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1771,
											"end": 1792,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1771,
											"end": 1792,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1587,
											"end": 1874,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1808,
											"end": 1826,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1826,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1826,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1801,
											"end": 1833,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1865,
											"end": 1867,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1850,
											"end": 1868,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1850,
											"end": 1868,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1761,
											"end": 1874,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1879,
											"end": 2056,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1879,
											"end": 2056,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2050,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2050,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2050,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2013,
											"end": 2015,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1998,
											"end": 2016,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2016,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2056,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2061,
											"end": 2189,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2061,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2061,
											"end": 2189,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2132,
											"end": 2133,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2128,
											"end": 2134,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2125,
											"end": 2126,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2122,
											"end": 2135,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2119,
											"end": 2121,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2119,
											"end": 2121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2119,
											"end": 2121,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2138,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2138,
											"end": 2156,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2138,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2138,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2174,
											"end": 2183,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2174,
											"end": 2183,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2189,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2194,
											"end": 2319,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2194,
											"end": 2319,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2194,
											"end": 2319,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2262,
											"end": 2263,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2259,
											"end": 2260,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2256,
											"end": 2264,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2253,
											"end": 2255,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2253,
											"end": 2255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2253,
											"end": 2255,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2267,
											"end": 2285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2267,
											"end": 2285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2267,
											"end": 2285,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2267,
											"end": 2285,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2267,
											"end": 2285,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2304,
											"end": 2313,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2304,
											"end": 2313,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2243,
											"end": 2319,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2324,
											"end": 2451,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2324,
											"end": 2451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2385,
											"end": 2395,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2380,
											"end": 2383,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2376,
											"end": 2396,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2373,
											"end": 2374,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2366,
											"end": 2397,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2416,
											"end": 2420,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2413,
											"end": 2414,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2406,
											"end": 2421,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2440,
											"end": 2444,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2437,
											"end": 2438,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2430,
											"end": 2445,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/demo/Balances.sol\":\"Token\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/demo/Balances.sol\":{\"keccak256\":\"0x05aba3a5cb171d14e4d40afab710387576e5b9be1a5e5b007ae3b1b1d7211c5a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f5dd2294966418e5199e63748c18a2dc42a21ac937d5043afaad8d22d9733507\",\"dweb:/ipfs/QmdP7DckGUV1BRJ93DA5AKj4a4cbVugzzvzb3LjHeRqQdD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 52,
								"contract": "contracts/demo/Balances.sol:Token",
								"label": "balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 60,
								"contract": "contracts/demo/Balances.sol:Token",
								"label": "allowed",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/demo/Balances.sol": {
				"ast": {
					"absolutePath": "contracts/demo/Balances.sol",
					"exportedSymbols": {
						"Balances": [
							48
						],
						"Token": [
							205
						]
					},
					"id": 206,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 48,
							"linearizedBaseContracts": [
								48
							],
							"name": "Balances",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 46,
										"nodeType": "Block",
										"src": "204:177:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 15,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "223:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 17,
																"indexExpression": {
																	"id": 16,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 7,
																	"src": "232:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "223:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 18,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "241:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "223:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 14,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "215:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "215:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "215:33:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 31,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 27,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 23,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5,
																		"src": "267:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 25,
																	"indexExpression": {
																		"id": 24,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 9,
																		"src": "276:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "267:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 26,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "282:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "267:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"baseExpression": {
																	"id": 28,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "292:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 30,
																"indexExpression": {
																	"id": 29,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "301:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "292:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "267:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 22,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "259:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "259:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 33,
												"nodeType": "ExpressionStatement",
												"src": "259:46:0"
											},
											{
												"expression": {
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 34,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "316:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 36,
														"indexExpression": {
															"id": 35,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "325:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "316:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 37,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "334:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "316:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 39,
												"nodeType": "ExpressionStatement",
												"src": "316:24:0"
											},
											{
												"expression": {
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 40,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "351:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 42,
														"indexExpression": {
															"id": 41,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "360:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "351:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 43,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "367:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "351:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 45,
												"nodeType": "ExpressionStatement",
												"src": "351:22:0"
											}
										]
									},
									"id": 47,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "move",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "balances",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "110:44:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"typeName": {
													"id": 4,
													"keyType": {
														"id": 2,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "118:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Mapping",
													"src": "110:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
														"typeString": "mapping(address => uint256)"
													},
													"valueType": {
														"id": 3,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "129:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "156:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "156:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "170:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "170:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "182:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "182:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "109:85:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "204:0:0"
									},
									"scope": 48,
									"src": "96:285:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 206,
							"src": "72:312:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 205,
							"linearizedBaseContracts": [
								205
							],
							"name": "Token",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 52,
									"mutability": "mutable",
									"name": "balances",
									"nodeType": "VariableDeclaration",
									"scope": 205,
									"src": "410:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 51,
										"keyType": {
											"id": 49,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "418:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "410:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 50,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "429:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"id": 54,
									"libraryName": {
										"id": 53,
										"name": "Balances",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 48,
										"src": "459:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "453:21:0"
								},
								{
									"constant": false,
									"id": 60,
									"mutability": "mutable",
									"name": "allowed",
									"nodeType": "VariableDeclaration",
									"scope": 205,
									"src": "480:56:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 59,
										"keyType": {
											"id": 55,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "488:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "480:48:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 58,
											"keyType": {
												"id": 56,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "508:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "499:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 57,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "519:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"id": 68,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"indexed": false,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "560:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "560:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"indexed": false,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "574:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "586:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 65,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "586:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "559:39:0"
									},
									"src": "545:54:0"
								},
								{
									"anonymous": false,
									"id": 76,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "620:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "620:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"indexed": false,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "635:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "652:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "652:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "619:45:0"
									},
									"src": "605:60:0"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "748:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 88,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "773:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "773:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 90,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 78,
															"src": "785:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 91,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "789:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 85,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 52,
															"src": "759:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 87,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "move",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 47,
														"src": "759:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_mapping$_t_address_$_t_uint256_$_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_mapping$_t_address_$_t_uint256_$_$",
															"typeString": "function (mapping(address => uint256),address,address,uint256)"
														}
													},
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "759:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 93,
												"nodeType": "ExpressionStatement",
												"src": "759:37:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 95,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "821:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "821:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 97,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 78,
															"src": "833:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 98,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "837:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 94,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 68,
														"src": "812:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "812:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 100,
												"nodeType": "EmitStatement",
												"src": "807:37:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 101,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "862:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 84,
												"id": 102,
												"nodeType": "Return",
												"src": "855:11:0"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "691:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 77,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "691:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "703:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 79,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "703:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "690:25:0"
									},
									"returnParameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "734:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 82,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "734:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:14:0"
									},
									"scope": 205,
									"src": "673:203:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 151,
										"nodeType": "Block",
										"src": "977:215:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 116,
																		"name": "allowed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 60,
																		"src": "996:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 118,
																	"indexExpression": {
																		"id": 117,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 106,
																		"src": "1004:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "996:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 121,
																"indexExpression": {
																	"expression": {
																		"id": 119,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1010:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 120,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1010:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "996:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 122,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 110,
																"src": "1025:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "996:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 115,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "988:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "988:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 125,
												"nodeType": "ExpressionStatement",
												"src": "988:44:0"
											},
											{
												"expression": {
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 126,
																"name": "allowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 60,
																"src": "1043:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 130,
															"indexExpression": {
																"id": 127,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 106,
																"src": "1051:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1043:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 131,
														"indexExpression": {
															"expression": {
																"id": 128,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1057:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1057:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1043:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 132,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "1072:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1043:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "1043:35:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 138,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 106,
															"src": "1103:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 139,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 108,
															"src": "1109:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 140,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "1113:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 135,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 52,
															"src": "1089:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 137,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "move",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 47,
														"src": "1089:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_mapping$_t_address_$_t_uint256_$_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_mapping$_t_address_$_t_uint256_$_$",
															"typeString": "function (mapping(address => uint256),address,address,uint256)"
														}
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1089:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "1089:31:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 144,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 106,
															"src": "1145:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 145,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 108,
															"src": "1151:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 146,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "1155:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 143,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 68,
														"src": "1136:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1136:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 148,
												"nodeType": "EmitStatement",
												"src": "1131:31:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1180:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 114,
												"id": 150,
												"nodeType": "Return",
												"src": "1173:11:0"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "906:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "906:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "920:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "920:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "932:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 109,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "932:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "905:39:0"
									},
									"returnParameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "963:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 112,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "963:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "962:14:0"
									},
									"scope": 205,
									"src": "884:308:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "1279:188:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 169,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 162,
																		"name": "allowed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 60,
																		"src": "1298:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 165,
																	"indexExpression": {
																		"expression": {
																			"id": 163,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1306:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 164,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1306:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1298:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 167,
																"indexExpression": {
																	"id": 166,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 154,
																	"src": "1318:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1298:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 168,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1330:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1298:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "",
															"id": 170,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1333:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 161,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1290:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1290:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 172,
												"nodeType": "ExpressionStatement",
												"src": "1290:46:0"
											},
											{
												"expression": {
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 173,
																"name": "allowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 60,
																"src": "1347:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 177,
															"indexExpression": {
																"expression": {
																	"id": 174,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1355:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 175,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1355:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1347:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 178,
														"indexExpression": {
															"id": 176,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 154,
															"src": "1367:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1347:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 179,
														"name": "tokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "1378:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1347:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 181,
												"nodeType": "ExpressionStatement",
												"src": "1347:37:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 183,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1409:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1409:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 185,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 154,
															"src": "1421:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 186,
															"name": "tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 156,
															"src": "1430:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 182,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "1400:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1400:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 188,
												"nodeType": "EmitStatement",
												"src": "1395:42:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1455:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 160,
												"id": 190,
												"nodeType": "Return",
												"src": "1448:11:0"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1217:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1217:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "tokens",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1234:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1234:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1216:30:0"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1265:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 158,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1265:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1264:14:0"
									},
									"scope": 205,
									"src": "1200:267:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 203,
										"nodeType": "Block",
										"src": "1551:46:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 199,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "1569:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 201,
													"indexExpression": {
														"id": 200,
														"name": "tokenOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "1578:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1569:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 198,
												"id": 202,
												"nodeType": "Return",
												"src": "1562:27:0"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 204,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "tokenOwner",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1494:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1494:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1493:20:0"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "balance",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1537:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 196,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1537:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1536:14:0"
									},
									"scope": 205,
									"src": "1475:122:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 206,
							"src": "388:1212:0"
						}
					],
					"src": "37:1563:0"
				},
				"id": 0
			}
		}
	}
}