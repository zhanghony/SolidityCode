{
	"compiler": {
		"version": "0.8.26+commit.8a97fa7a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "bytes32[]",
						"name": "proposalNames",
						"type": "bytes32[]"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "chairperson",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					}
				],
				"name": "delegate",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "voter",
						"type": "address"
					}
				],
				"name": "giveRightToVote",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "proposals",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "name",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "voteCount",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "proposal",
						"type": "uint256"
					}
				],
				"name": "vote",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "voters",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "weight",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "voted",
						"type": "bool"
					},
					{
						"internalType": "address",
						"name": "delegate",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "vote",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "winnerName",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "winnerName_",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "winningProposal",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "winningProposal_",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"author": "zhanghony",
			"details": "vote 加上截至时间  当前，为了把投票权分配给所有参与者，需要执行很多交易。 此外，如果两个或更多的提案有相同的票数， winningProposal() 无法登记平局。",
			"kind": "dev",
			"methods": {
				"winningProposal()": {
					"details": "结合之前所有投票的情况下，计算出获胜的提案。"
				}
			},
			"title": "投票合约",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"constructor": {
					"notice": "为 `proposalNames` 中的每个提案，创建一个新的（投票）表决"
				},
				"delegate(address)": {
					"notice": "把您的投票委托给投票者 `to`。"
				},
				"vote(uint256)": {
					"notice": "把您的票(包括委托给您的票)， 投给提案 `proposals[proposal].name`。"
				}
			},
			"notice": "它实现了一个投票合约。当然， 电子投票的主要问题是如何将投票权分配给正确的人以及如何防止人为操纵。 我们不会在这里解决所有的问题，但至少我们会展示如何进行委托投票， 与此同时，使计票是 自动且完全透明的。",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"demo/Ballot.sol": "Ballot"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"demo/Ballot.sol": {
			"keccak256": "0x10657f870e1f088fb2582fe2be23cee7b0e733491b4a5e64d8e823db84731c4e",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://cc478989087e8858cc955819f44b7e7b42a1a21558912db6a3adfc448b758418",
				"dweb:/ipfs/QmdvrYqpWBoAnsP5ruC7vwrMyMMjC3Tu9SvTtNoGtqhD8K"
			]
		}
	},
	"version": 1
}