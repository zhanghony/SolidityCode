{
	"compiler": {
		"version": "0.8.26+commit.8a97fa7a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_a",
						"type": "bytes32"
					}
				],
				"name": "bytes32ToAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_addr",
						"type": "address"
					}
				],
				"name": "demoAddress",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "balance",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "code",
						"type": "bytes"
					},
					{
						"internalType": "bytes32",
						"name": "codehash",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes",
						"name": "bytecode",
						"type": "bytes"
					},
					{
						"internalType": "uint256",
						"name": "_salt",
						"type": "uint256"
					}
				],
				"name": "getAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getDefaultStatus",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getHex",
				"outputs": [],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getLargestValue",
				"outputs": [
					{
						"internalType": "enum TypeOfData.Status",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getMax",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getMin",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getSmallestValue",
				"outputs": [
					{
						"internalType": "enum TypeOfData.Status",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getStatus",
				"outputs": [
					{
						"internalType": "enum TypeOfData.Status",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getString",
				"outputs": [
					{
						"internalType": "string",
						"name": "a",
						"type": "string"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "reset",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "enum TypeOfData.Status",
						"name": "_status",
						"type": "uint8"
					}
				],
				"name": "set",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "ship",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "status",
				"outputs": [
					{
						"internalType": "enum TypeOfData.Status",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"bytes32ToAddress(bytes32)": {
					"params": {
						"_a": "bytes32"
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"bytes32ToAddress(bytes32)": {
					"notice": "1 字节 8 位，一个 address 是 20 个字节，是 160 位，所以 address 可以用 uint160 表示。 1 字节可以表示为两个连续的十六进制数字，所以 address 可以用连续的 40 个十六进制数字表示。"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"demo/TypeOfData.sol": "TypeOfData"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"demo/TypeOfData.sol": {
			"keccak256": "0xa4655b9b5da10786fe7303880d72e041fb94d7116cabcfeaa1e7c9248912b40b",
			"license": "MIT",
			"urls": [
				"bzz-raw://4958a982cff1c06199974d27ad3f754ab73d082286f13308eb3b9d6bb4a1a605",
				"dweb:/ipfs/QmW7Ajd8By1rnArB8GxB94BPrwxgCtb8CK1YPdvBvKdyHk"
			]
		}
	},
	"version": 1
}