{
	"id": "1da7a9085b0640e67bac81eb7cd304f9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"contracts/Online/ERC20/Uni.sol": {
				"content": "/**\n *Submitted for verification at Etherscan.io on 2020-09-16\n */\n\n/**\n *Submitted for verification at Etherscan.io on 2020-09-15\n */\n\npragma solidity ^0.8.0;\npragma experimental ABIEncoderV2;\n\n// From https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/math/Math.sol\n// Subject to the MIT license.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting with custom message on overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     * - Addition cannot overflow.\n     */\n    function add(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, errorMessage);\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on underflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot underflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction underflow\");\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on underflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot underflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     * - Multiplication cannot overflow.\n     */\n    function mul(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, errorMessage);\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers.\n     * Reverts on division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers.\n     * Reverts with custom message on division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        // Solidity only automatically asserts when dividing by 0\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return mod(a, b, \"SafeMath: modulo by zero\");\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts with custom message when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        require(b != 0, errorMessage);\n        return a % b;\n    }\n}\n\ncontract Uni {\n    /// @notice EIP-20 token name for this token\n    string public constant name = \"Uniswap\";\n\n    /// @notice EIP-20 token symbol for this token\n    string public constant symbol = \"UNI\";\n\n    /// @notice EIP-20 token decimals for this token\n    uint8 public constant decimals = 18;\n\n    /// @notice Total number of tokens in circulation\n    uint256 public totalSupply = 1_000_000_000e18; // 1 billion Uni\n\n    /// @notice Address which may mint new tokens\n    address public minter;\n\n    /// @notice The timestamp after which minting may occur\n    uint256 public mintingAllowedAfter;\n\n    /// @notice Minimum time between mints\n    uint32 public constant minimumTimeBetweenMints = 1 days * 365;\n\n    /// @notice Cap on the percentage of totalSupply that can be minted at each mint\n    uint8 public constant mintCap = 2;\n\n    /// @notice Allowance amounts on behalf of others\n    mapping(address => mapping(address => uint96)) internal allowances;\n\n    /// @notice Official record of token balances for each account\n    mapping(address => uint96) internal balances;\n\n    /// @notice A record of each accounts delegate\n    mapping(address => address) public delegates;\n\n    /// @notice A checkpoint for marking number of votes from a given block\n    struct Checkpoint {\n        uint32 fromBlock;\n        uint96 votes;\n    }\n\n    /// @notice A record of votes checkpoints for each account, by index\n    mapping(address => mapping(uint32 => Checkpoint)) public checkpoints;\n\n    /// @notice The number of checkpoints for each account\n    mapping(address => uint32) public numCheckpoints;\n\n    /// @notice The EIP-712 typehash for the contract's domain\n    bytes32 public constant DOMAIN_TYPEHASH =\n        keccak256(\n            \"EIP712Domain(string name,uint256 chainId,address verifyingContract)\"\n        );\n\n    /// @notice The EIP-712 typehash for the delegation struct used by the contract\n    bytes32 public constant DELEGATION_TYPEHASH =\n        keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\");\n\n    /// @notice The EIP-712 typehash for the permit struct used by the contract\n    bytes32 public constant PERMIT_TYPEHASH =\n        keccak256(\n            \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\"\n        );\n\n    /// @notice A record of states for signing / validating signatures\n    mapping(address => uint256) public nonces;\n\n    /// @notice An event thats emitted when the minter address is changed\n    event MinterChanged(address minter, address newMinter);\n\n    /// @notice An event thats emitted when an account changes its delegate\n    event DelegateChanged(\n        address indexed delegator,\n        address indexed fromDelegate,\n        address indexed toDelegate\n    );\n\n    /// @notice An event thats emitted when a delegate account's vote balance changes\n    event DelegateVotesChanged(\n        address indexed delegate,\n        uint256 previousBalance,\n        uint256 newBalance\n    );\n\n    /// @notice The standard EIP-20 transfer event\n    event Transfer(address indexed from, address indexed to, uint256 amount);\n\n    /// @notice The standard EIP-20 approval event\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        uint256 amount\n    );\n\n    /**\n     * @notice Construct a new Uni token\n     * @param account The initial account to grant all the tokens\n     * @param minter_ The account with minting ability\n     * @param mintingAllowedAfter_ The timestamp after which minting may occur\n     */\n    constructor(\n        address account,\n        address minter_,\n        uint256 mintingAllowedAfter_\n    ) public {\n        require(\n            mintingAllowedAfter_ >= block.timestamp,\n            \"Uni::constructor: minting can only begin after deployment\"\n        );\n\n        balances[account] = uint96(totalSupply);\n        emit Transfer(address(0), account, totalSupply);\n        minter = minter_;\n        emit MinterChanged(address(0), minter);\n        mintingAllowedAfter = mintingAllowedAfter_;\n    }\n\n    /**\n     * @notice Change the minter address\n     * @param minter_ The address of the new minter\n     */\n    function setMinter(address minter_) external {\n        require(\n            msg.sender == minter,\n            \"Uni::setMinter: only the minter can change the minter address\"\n        );\n        emit MinterChanged(minter, minter_);\n        minter = minter_;\n    }\n\n    /**\n     * @notice Mint new tokens\n     * @param dst The address of the destination account\n     * @param rawAmount The number of tokens to be minted\n     */\n    function mint(address dst, uint256 rawAmount) external {\n        require(msg.sender == minter, \"Uni::mint: only the minter can mint\");\n        require(\n            block.timestamp >= mintingAllowedAfter,\n            \"Uni::mint: minting not allowed yet\"\n        );\n        require(\n            dst != address(0),\n            \"Uni::mint: cannot transfer to the zero address\"\n        );\n\n        // record the mint\n        mintingAllowedAfter = SafeMath.add(\n            block.timestamp,\n            minimumTimeBetweenMints\n        );\n\n        // mint the amount\n        uint96 amount = safe96(rawAmount, \"Uni::mint: amount exceeds 96 bits\");\n        require(\n            amount <= SafeMath.div(SafeMath.mul(totalSupply, mintCap), 100),\n            \"Uni::mint: exceeded mint cap\"\n        );\n        totalSupply = safe96(\n            SafeMath.add(totalSupply, amount),\n            \"Uni::mint: totalSupply exceeds 96 bits\"\n        );\n\n        // transfer the amount to the recipient\n        balances[dst] = add96(\n            balances[dst],\n            amount,\n            \"Uni::mint: transfer amount overflows\"\n        );\n        emit Transfer(address(0), dst, amount);\n\n        // move delegates\n        _moveDelegates(address(0), delegates[dst], amount);\n    }\n\n    /**\n     * @notice Get the number of tokens `spender` is approved to spend on behalf of `account`\n     * @param account The address of the account holding the funds\n     * @param spender The address of the account spending the funds\n     * @return The number of tokens approved\n     */\n    function allowance(address account, address spender)\n        external\n        view\n        returns (uint256)\n    {\n        return allowances[account][spender];\n    }\n\n    /**\n     * @notice Approve `spender` to transfer up to `amount` from `src`\n     * @dev This will overwrite the approval amount for `spender`\n     *  and is subject to issues noted [here](https://eips.ethereum.org/EIPS/eip-20#approve)\n     * @param spender The address of the account which may transfer tokens\n     * @param rawAmount The number of tokens that are approved (2^256-1 means infinite)\n     * @return Whether or not the approval succeeded\n     */\n    function approve(address spender, uint256 rawAmount)\n        external\n        returns (bool)\n    {\n        uint96 amount;\n        amount = safe96(rawAmount, \"Uni::approve: amount exceeds 96 bits\");\n       \n\n        allowances[msg.sender][spender] = amount;\n\n        emit Approval(msg.sender, spender, amount);\n        return true;\n    }\n\n    /**\n     * @notice Triggers an approval from owner to spends\n     * @param owner The address to approve from\n     * @param spender The address to be approved\n     * @param rawAmount The number of tokens that are approved (2^256-1 means infinite)\n     * @param deadline The time at which to expire the signature\n     * @param v The recovery byte of the signature\n     * @param r Half of the ECDSA signature pair\n     * @param s Half of the ECDSA signature pair\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 rawAmount,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external {\n        uint96 amount;\n        amount = safe96(rawAmount, \"Uni::permit: amount exceeds 96 bits\");\n         \n\n        bytes32 domainSeparator = keccak256(\n            abi.encode(\n                DOMAIN_TYPEHASH,\n                keccak256(bytes(name)),\n                getChainId(),\n                address(this)\n            )\n        );\n        bytes32 structHash = keccak256(\n            abi.encode(\n                PERMIT_TYPEHASH,\n                owner,\n                spender,\n                rawAmount,\n                nonces[owner]++,\n                deadline\n            )\n        );\n        bytes32 digest = keccak256(\n            abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash)\n        );\n        address signatory = ecrecover(digest, v, r, s);\n        require(signatory != address(0), \"Uni::permit: invalid signature\");\n        require(signatory == owner, \"Uni::permit: unauthorized\");\n        require(block.timestamp <= deadline, \"Uni::permit: signature expired\");\n\n        allowances[owner][spender] = amount;\n\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @notice Get the number of tokens held by the `account`\n     * @param account The address of the account to get the balance of\n     * @return The number of tokens held\n     */\n    function balanceOf(address account) external view returns (uint256) {\n        return balances[account];\n    }\n\n    /**\n     * @notice Transfer `amount` tokens from `msg.sender` to `dst`\n     * @param dst The address of the destination account\n     * @param rawAmount The number of tokens to transfer\n     * @return Whether or not the transfer succeeded\n     */\n    function transfer(address dst, uint256 rawAmount) external returns (bool) {\n        uint96 amount = safe96(\n            rawAmount,\n            \"Uni::transfer: amount exceeds 96 bits\"\n        );\n        _transferTokens(msg.sender, dst, amount);\n        return true;\n    }\n\n    /**\n     * @notice Transfer `amount` tokens from `src` to `dst`\n     * @param src The address of the source account\n     * @param dst The address of the destination account\n     * @param rawAmount The number of tokens to transfer\n     * @return Whether or not the transfer succeeded\n     */\n    function transferFrom(\n        address src,\n        address dst,\n        uint256 rawAmount\n    ) external returns (bool) {\n        address spender = msg.sender;\n        uint96 spenderAllowance = allowances[src][spender];\n        uint96 amount = safe96(\n            rawAmount,\n            \"Uni::approve: amount exceeds 96 bits\"\n        );\n\n        if (spender != src ) {\n            uint96 newAllowance = sub96(\n                spenderAllowance,\n                amount,\n                \"Uni::transferFrom: transfer amount exceeds spender allowance\"\n            );\n            allowances[src][spender] = newAllowance;\n\n            emit Approval(src, spender, newAllowance);\n        }\n\n        _transferTokens(src, dst, amount);\n        return true;\n    }\n\n    /**\n     * @notice Delegate votes from `msg.sender` to `delegatee`\n     * @param delegatee The address to delegate votes to\n     */\n    function delegate(address delegatee) public {\n        return _delegate(msg.sender, delegatee);\n    }\n\n    /**\n     * @notice Delegates votes from signatory to `delegatee`\n     * @param delegatee The address to delegate votes to\n     * @param nonce The contract state required to match the signature\n     * @param expiry The time at which to expire the signature\n     * @param v The recovery byte of the signature\n     * @param r Half of the ECDSA signature pair\n     * @param s Half of the ECDSA signature pair\n     */\n    function delegateBySig(\n        address delegatee,\n        uint256 nonce,\n        uint256 expiry,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public {\n        bytes32 domainSeparator = keccak256(\n            abi.encode(\n                DOMAIN_TYPEHASH,\n                keccak256(bytes(name)),\n                getChainId(),\n                address(this)\n            )\n        );\n        bytes32 structHash = keccak256(\n            abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry)\n        );\n        bytes32 digest = keccak256(\n            abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash)\n        );\n        address signatory = ecrecover(digest, v, r, s);\n        require(\n            signatory != address(0),\n            \"Uni::delegateBySig: invalid signature\"\n        );\n        require(\n            nonce == nonces[signatory]++,\n            \"Uni::delegateBySig: invalid nonce\"\n        );\n        require(block.timestamp <= expiry, \"Uni::delegateBySig: signature expired\");\n        return _delegate(signatory, delegatee);\n    }\n\n    /**\n     * @notice Gets the current votes balance for `account`\n     * @param account The address to get votes balance\n     * @return The number of current votes for `account`\n     */\n    function getCurrentVotes(address account) external view returns (uint96) {\n        uint32 nCheckpoints = numCheckpoints[account];\n        return\n            nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0;\n    }\n\n    /**\n     * @notice Determine the prior number of votes for an account as of a block number\n     * @dev Block number must be a finalized block or else this function will revert to prevent misinformation.\n     * @param account The address of the account to check\n     * @param blockNumber The block number to get the vote balance at\n     * @return The number of votes the account had as of the given block\n     */\n    function getPriorVotes(address account, uint256 blockNumber)\n        public\n        view\n        returns (uint96)\n    {\n        require(\n            blockNumber < block.number,\n            \"Uni::getPriorVotes: not yet determined\"\n        );\n\n        uint32 nCheckpoints = numCheckpoints[account];\n        if (nCheckpoints == 0) {\n            return 0;\n        }\n\n        // First check most recent balance\n        if (checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber) {\n            return checkpoints[account][nCheckpoints - 1].votes;\n        }\n\n        // Next check implicit zero balance\n        if (checkpoints[account][0].fromBlock > blockNumber) {\n            return 0;\n        }\n\n        uint32 lower = 0;\n        uint32 upper = nCheckpoints - 1;\n        while (upper > lower) {\n            uint32 center = upper - (upper - lower) / 2; // ceil, avoiding overflow\n            Checkpoint memory cp = checkpoints[account][center];\n            if (cp.fromBlock == blockNumber) {\n                return cp.votes;\n            } else if (cp.fromBlock < blockNumber) {\n                lower = center;\n            } else {\n                upper = center - 1;\n            }\n        }\n        return checkpoints[account][lower].votes;\n    }\n\n    function _delegate(address delegator, address delegatee) internal {\n        address currentDelegate = delegates[delegator];\n        uint96 delegatorBalance = balances[delegator];\n        delegates[delegator] = delegatee;\n\n        emit DelegateChanged(delegator, currentDelegate, delegatee);\n\n        _moveDelegates(currentDelegate, delegatee, delegatorBalance);\n    }\n\n    function _transferTokens(\n        address src,\n        address dst,\n        uint96 amount\n    ) internal {\n        require(\n            src != address(0),\n            \"Uni::_transferTokens: cannot transfer from the zero address\"\n        );\n        require(\n            dst != address(0),\n            \"Uni::_transferTokens: cannot transfer to the zero address\"\n        );\n\n        balances[src] = sub96(\n            balances[src],\n            amount,\n            \"Uni::_transferTokens: transfer amount exceeds balance\"\n        );\n        balances[dst] = add96(\n            balances[dst],\n            amount,\n            \"Uni::_transferTokens: transfer amount overflows\"\n        );\n        emit Transfer(src, dst, amount);\n\n        _moveDelegates(delegates[src], delegates[dst], amount);\n    }\n\n    function _moveDelegates(\n        address srcRep,\n        address dstRep,\n        uint96 amount\n    ) internal {\n        if (srcRep != dstRep && amount > 0) {\n            if (srcRep != address(0)) {\n                uint32 srcRepNum = numCheckpoints[srcRep];\n                uint96 srcRepOld = srcRepNum > 0\n                    ? checkpoints[srcRep][srcRepNum - 1].votes\n                    : 0;\n                uint96 srcRepNew = sub96(\n                    srcRepOld,\n                    amount,\n                    \"Uni::_moveVotes: vote amount underflows\"\n                );\n                _writeCheckpoint(srcRep, srcRepNum, srcRepOld, srcRepNew);\n            }\n\n            if (dstRep != address(0)) {\n                uint32 dstRepNum = numCheckpoints[dstRep];\n                uint96 dstRepOld = dstRepNum > 0\n                    ? checkpoints[dstRep][dstRepNum - 1].votes\n                    : 0;\n                uint96 dstRepNew = add96(\n                    dstRepOld,\n                    amount,\n                    \"Uni::_moveVotes: vote amount overflows\"\n                );\n                _writeCheckpoint(dstRep, dstRepNum, dstRepOld, dstRepNew);\n            }\n        }\n    }\n\n    function _writeCheckpoint(\n        address delegatee,\n        uint32 nCheckpoints,\n        uint96 oldVotes,\n        uint96 newVotes\n    ) internal {\n        uint32 blockNumber = safe32(\n            block.number,\n            \"Uni::_writeCheckpoint: block number exceeds 32 bits\"\n        );\n\n        if (\n            nCheckpoints > 0 &&\n            checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber\n        ) {\n            checkpoints[delegatee][nCheckpoints - 1].votes = newVotes;\n        } else {\n            checkpoints[delegatee][nCheckpoints] = Checkpoint(\n                blockNumber,\n                newVotes\n            );\n            numCheckpoints[delegatee] = nCheckpoints + 1;\n        }\n\n        emit DelegateVotesChanged(delegatee, oldVotes, newVotes);\n    }\n\n    function safe32(uint256 n, string memory errorMessage)\n        internal\n        pure\n        returns (uint32)\n    {\n        require(n < 2**32, errorMessage);\n        return uint32(n);\n    }\n\n    function safe96(uint256 n, string memory errorMessage)\n        internal\n        pure\n        returns (uint96)\n    {\n        require(n < 2**96, errorMessage);\n        return uint96(n);\n    }\n\n    function add96(\n        uint96 a,\n        uint96 b,\n        string memory errorMessage\n    ) internal pure returns (uint96) {\n        uint96 c = a + b;\n        require(c >= a, errorMessage);\n        return c;\n    }\n\n    function sub96(\n        uint96 a,\n        uint96 b,\n        string memory errorMessage\n    ) internal pure returns (uint96) {\n        require(b <= a, errorMessage);\n        return a - b;\n    }\n\n    function getChainId() internal view  returns (uint256) {\n        uint256 chainId;\n        assembly {\n            chainId := chainid()\n        }\n        return chainId;\n    }\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Online/ERC20/Uni.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Online/ERC20/Uni.sol\":890:6730  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Online/ERC20/Uni.sol\":890:6730  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203bf0fba4d86c389bddc937755aad2563e4e24367c626062f7e9a27d20451feb564736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212203bf0fba4d86c389bddc937755aad2563e4e24367c626062f7e9a27d20451feb564736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE CREATE 0xFB LOG4 0xD8 PUSH13 0x389BDDC937755AAD2563E4E243 PUSH8 0xC626062F7E9A27D2 DIV MLOAD INVALID 0xB5 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "890:5840:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;890:5840:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212203bf0fba4d86c389bddc937755aad2563e4e24367c626062f7e9a27d20451feb564736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE CREATE 0xFB LOG4 0xD8 PUSH13 0x389BDDC937755AAD2563E4E243 PUSH8 0xC626062F7E9A27D2 DIV MLOAD INVALID 0xB5 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "890:5840:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"add(uint256,uint256,string memory)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"mul(uint256,uint256,string memory)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 890,
									"end": 6730,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 890,
									"end": 6730,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 890,
									"end": 6730,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 890,
									"end": 6730,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 890,
									"end": 6730,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 890,
									"end": 6730,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 890,
									"end": 6730,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 890,
									"end": 6730,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 890,
									"end": 6730,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 890,
									"end": 6730,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 890,
									"end": 6730,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 890,
									"end": 6730,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 890,
									"end": 6730,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 890,
									"end": 6730,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 890,
									"end": 6730,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 890,
									"end": 6730,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 890,
									"end": 6730,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 890,
									"end": 6730,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 890,
									"end": 6730,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 890,
									"end": 6730,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 890,
									"end": 6730,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 890,
									"end": 6730,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 890,
									"end": 6730,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 890,
									"end": 6730,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 890,
									"end": 6730,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 890,
									"end": 6730,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 890,
									"end": 6730,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 890,
									"end": 6730,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 890,
									"end": 6730,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 890,
									"end": 6730,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 890,
									"end": 6730,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 890,
									"end": 6730,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 890,
									"end": 6730,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 890,
									"end": 6730,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203bf0fba4d86c389bddc937755aad2563e4e24367c626062f7e9a27d20451feb564736f6c634300081a0033",
									".code": [
										{
											"begin": 890,
											"end": 6730,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 890,
											"end": 6730,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 890,
											"end": 6730,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 890,
											"end": 6730,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 890,
											"end": 6730,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 890,
											"end": 6730,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 890,
											"end": 6730,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 890,
											"end": 6730,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 890,
											"end": 6730,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/Online/ERC20/Uni.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Online/ERC20/Uni.sol\":\"SafeMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Online/ERC20/Uni.sol\":{\"keccak256\":\"0xe832840aff7bec9eac140bb98fc8e67ec99e44d123767426486227b3410a0e50\",\"urls\":[\"bzz-raw://8b55ed0aa2706b2224ffcce466e7a3b9ce85945b345bb77db407860f32b5d515\",\"dweb:/ipfs/QmS6aCiwUYGknjd7MqbB1WL745Hhp8dSx58v1pChL2B7um\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Uni": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "minter_",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "mintingAllowedAfter_",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "delegator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "fromDelegate",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "toDelegate",
									"type": "address"
								}
							],
							"name": "DelegateChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "delegate",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "previousBalance",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newBalance",
									"type": "uint256"
								}
							],
							"name": "DelegateVotesChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "minter",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newMinter",
									"type": "address"
								}
							],
							"name": "MinterChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DELEGATION_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DOMAIN_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "rawAmount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"name": "checkpoints",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "fromBlock",
									"type": "uint32"
								},
								{
									"internalType": "uint96",
									"name": "votes",
									"type": "uint96"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegatee",
									"type": "address"
								}
							],
							"name": "delegate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegatee",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "nonce",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "expiry",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "delegateBySig",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "delegates",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getCurrentVotes",
							"outputs": [
								{
									"internalType": "uint96",
									"name": "",
									"type": "uint96"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "blockNumber",
									"type": "uint256"
								}
							],
							"name": "getPriorVotes",
							"outputs": [
								{
									"internalType": "uint96",
									"name": "",
									"type": "uint96"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "minimumTimeBetweenMints",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "dst",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "rawAmount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mintCap",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "minter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mintingAllowedAfter",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "numCheckpoints",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "rawAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "minter_",
									"type": "address"
								}
							],
							"name": "setMinter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "dst",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "rawAmount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "src",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "dst",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "rawAmount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"params": {
									"account": "The address of the account holding the funds",
									"spender": "The address of the account spending the funds"
								},
								"returns": {
									"_0": "The number of tokens approved"
								}
							},
							"approve(address,uint256)": {
								"details": "This will overwrite the approval amount for `spender`  and is subject to issues noted [here](https://eips.ethereum.org/EIPS/eip-20#approve)",
								"params": {
									"rawAmount": "The number of tokens that are approved (2^256-1 means infinite)",
									"spender": "The address of the account which may transfer tokens"
								},
								"returns": {
									"_0": "Whether or not the approval succeeded"
								}
							},
							"balanceOf(address)": {
								"params": {
									"account": "The address of the account to get the balance of"
								},
								"returns": {
									"_0": "The number of tokens held"
								}
							},
							"constructor": {
								"params": {
									"account": "The initial account to grant all the tokens",
									"minter_": "The account with minting ability",
									"mintingAllowedAfter_": "The timestamp after which minting may occur"
								}
							},
							"delegate(address)": {
								"params": {
									"delegatee": "The address to delegate votes to"
								}
							},
							"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"params": {
									"delegatee": "The address to delegate votes to",
									"expiry": "The time at which to expire the signature",
									"nonce": "The contract state required to match the signature",
									"r": "Half of the ECDSA signature pair",
									"s": "Half of the ECDSA signature pair",
									"v": "The recovery byte of the signature"
								}
							},
							"getCurrentVotes(address)": {
								"params": {
									"account": "The address to get votes balance"
								},
								"returns": {
									"_0": "The number of current votes for `account`"
								}
							},
							"getPriorVotes(address,uint256)": {
								"details": "Block number must be a finalized block or else this function will revert to prevent misinformation.",
								"params": {
									"account": "The address of the account to check",
									"blockNumber": "The block number to get the vote balance at"
								},
								"returns": {
									"_0": "The number of votes the account had as of the given block"
								}
							},
							"mint(address,uint256)": {
								"params": {
									"dst": "The address of the destination account",
									"rawAmount": "The number of tokens to be minted"
								}
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"params": {
									"deadline": "The time at which to expire the signature",
									"owner": "The address to approve from",
									"r": "Half of the ECDSA signature pair",
									"rawAmount": "The number of tokens that are approved (2^256-1 means infinite)",
									"s": "Half of the ECDSA signature pair",
									"spender": "The address to be approved",
									"v": "The recovery byte of the signature"
								}
							},
							"setMinter(address)": {
								"params": {
									"minter_": "The address of the new minter"
								}
							},
							"transfer(address,uint256)": {
								"params": {
									"dst": "The address of the destination account",
									"rawAmount": "The number of tokens to transfer"
								},
								"returns": {
									"_0": "Whether or not the transfer succeeded"
								}
							},
							"transferFrom(address,address,uint256)": {
								"params": {
									"dst": "The address of the destination account",
									"rawAmount": "The number of tokens to transfer",
									"src": "The address of the source account"
								},
								"returns": {
									"_0": "Whether or not the transfer succeeded"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Online/ERC20/Uni.sol\":6732:25451  contract Uni {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Online/ERC20/Uni.sol\":7119:7135  1_000_000_000e18 */\n  0x033b2e3c9fd0803ce8000000\n    /* \"contracts/Online/ERC20/Uni.sol\":7090:7135  uint256 public totalSupply = 1_000_000_000e18 */\n  0x00\n  sstore\n    /* \"contracts/Online/ERC20/Uni.sol\":10276:10782  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Online/ERC20/Uni.sol\":10444:10459  block.timestamp */\n  timestamp\n    /* \"contracts/Online/ERC20/Uni.sol\":10420:10440  mintingAllowedAfter_ */\n  dup2\n    /* \"contracts/Online/ERC20/Uni.sol\":10420:10459  mintingAllowedAfter_ >= block.timestamp */\n  lt\n  iszero\n    /* \"contracts/Online/ERC20/Uni.sol\":10399:10542  require(... */\n  tag_6\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":757:759   */\n  0x20\n    /* \"contracts/Online/ERC20/Uni.sol\":10399:10542  require(... */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":739:760   */\n  mstore\n    /* \"#utility.yul\":796:798   */\n  0x39\n    /* \"#utility.yul\":776:794   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":769:799   */\n  mstore\n    /* \"#utility.yul\":835:869   */\n  0x556e693a3a636f6e7374727563746f723a206d696e74696e672063616e206f6e\n    /* \"#utility.yul\":815:833   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":808:870   */\n  mstore\n    /* \"#utility.yul\":906:933   */\n  0x6c7920626567696e206166746572206465706c6f796d656e7400000000000000\n    /* \"#utility.yul\":886:904   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":879:934   */\n  mstore\n    /* \"#utility.yul\":951:970   */\n  0x84\n  add\n    /* \"contracts/Online/ERC20/Uni.sol\":10399:10542  require(... */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_6:\n    /* \"contracts/Online/ERC20/Uni.sol\":10580:10591  totalSupply */\n  0x00\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/Online/ERC20/Uni.sol\":10553:10570  balances[account] */\n  dup6\n  and\n  dup1\n  dup4\n  mstore\n    /* \"contracts/Online/ERC20/Uni.sol\":10553:10561  balances */\n  0x04\n    /* \"contracts/Online/ERC20/Uni.sol\":10553:10570  balances[account] */\n  0x20\n  swap1\n  dup2\n  mstore\n  0x40\n  dup1\n  dup6\n  keccak256\n    /* \"contracts/Online/ERC20/Uni.sol\":10553:10592  balances[account] = uint96(totalSupply) */\n  dup1\n  sload\n  not(sub(shl(0x60, 0x01), 0x01))\n  and\n  sub(shl(0x60, 0x01), 0x01)\n  swap1\n  swap6\n  and\n  swap5\n  swap1\n  swap5\n  or\n  swap1\n  swap4\n  sstore\n    /* \"contracts/Online/ERC20/Uni.sol\":10637:10648  totalSupply */\n  dup4\n  sload\n    /* \"contracts/Online/ERC20/Uni.sol\":10607:10649  Transfer(address(0), account, totalSupply) */\n  swap3\n  mload\n    /* \"#utility.yul\":1127:1152   */\n  swap3\n  dup4\n  mstore\n    /* \"contracts/Online/ERC20/Uni.sol\":10553:10570  balances[account] */\n  swap1\n  swap3\n    /* \"contracts/Online/ERC20/Uni.sol\":10580:10591  totalSupply */\n  swap2\n    /* \"contracts/Online/ERC20/Uni.sol\":10607:10649  Transfer(address(0), account, totalSupply) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap2\n    /* \"#utility.yul\":1100:1118   */\n  add\n    /* \"contracts/Online/ERC20/Uni.sol\":10607:10649  Transfer(address(0), account, totalSupply) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/Online/ERC20/Uni.sol\":10659:10665  minter */\n  0x01\n    /* \"contracts/Online/ERC20/Uni.sol\":10659:10675  minter = minter_ */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup5\n  and\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/Online/ERC20/Uni.sol\":10690:10723  MinterChanged(address(0), minter) */\n  0x40\n  dup1\n  mload\n  0x00\n    /* \"#utility.yul\":1337:1388   */\n  dup2\n  mstore\n    /* \"#utility.yul\":1419:1421   */\n  0x20\n    /* \"#utility.yul\":1404:1422   */\n  dup2\n  add\n    /* \"#utility.yul\":1397:1457   */\n  swap3\n  swap1\n  swap3\n  mstore\n    /* \"contracts/Online/ERC20/Uni.sol\":10690:10723  MinterChanged(address(0), minter) */\n  0x3b0007eb941cf645526cbb3a4fdaecda9d28ce4843167d9263b536a1f1edc0f6\n  swap2\n    /* \"#utility.yul\":1310:1328   */\n  add\n    /* \"contracts/Online/ERC20/Uni.sol\":10690:10723  MinterChanged(address(0), minter) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"contracts/Online/ERC20/Uni.sol\":10733:10752  mintingAllowedAfter */\n  0x02\n    /* \"contracts/Online/ERC20/Uni.sol\":10733:10775  mintingAllowedAfter = mintingAllowedAfter_ */\n  sstore\n  pop\n    /* \"contracts/Online/ERC20/Uni.sol\":6732:25451  contract Uni {... */\n  tag_15\n  swap1\n  pop\n  jump\n    /* \"#utility.yul\":14:191   */\ntag_14:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_17\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_17:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:550   */\ntag_3:\n    /* \"#utility.yul\":284:290   */\n  0x00\n    /* \"#utility.yul\":292:298   */\n  dup1\n    /* \"#utility.yul\":300:306   */\n  0x00\n    /* \"#utility.yul\":353:355   */\n  0x60\n    /* \"#utility.yul\":341:350   */\n  dup5\n    /* \"#utility.yul\":332:339   */\n  dup7\n    /* \"#utility.yul\":328:351   */\n  sub\n    /* \"#utility.yul\":324:356   */\n  slt\n    /* \"#utility.yul\":321:373   */\n  iszero\n  tag_19\n  jumpi\n    /* \"#utility.yul\":369:370   */\n  0x00\n    /* \"#utility.yul\":366:367   */\n  dup1\n    /* \"#utility.yul\":359:371   */\n  revert\n    /* \"#utility.yul\":321:373   */\ntag_19:\n    /* \"#utility.yul\":392:432   */\n  tag_20\n    /* \"#utility.yul\":422:431   */\n  dup5\n    /* \"#utility.yul\":392:432   */\n  tag_14\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":382:432   */\n  swap3\n  pop\n    /* \"#utility.yul\":451:500   */\n  tag_21\n    /* \"#utility.yul\":496:498   */\n  0x20\n    /* \"#utility.yul\":485:494   */\n  dup6\n    /* \"#utility.yul\":481:499   */\n  add\n    /* \"#utility.yul\":451:500   */\n  tag_14\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":441:500   */\n  swap2\n  pop\n    /* \"#utility.yul\":540:542   */\n  0x40\n    /* \"#utility.yul\":529:538   */\n  dup5\n    /* \"#utility.yul\":525:543   */\n  add\n    /* \"#utility.yul\":519:544   */\n  mload\n    /* \"#utility.yul\":509:544   */\n  swap1\n  pop\n    /* \"#utility.yul\":196:550   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1163:1463   */\ntag_15:\n    /* \"contracts/Online/ERC20/Uni.sol\":6732:25451  contract Uni {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Online/ERC20/Uni.sol\":6732:25451  contract Uni {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6fcfff45\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xb4b5ea57\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xdd62ed3e\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xe7a324dc\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xf1127ed8\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xfca3b5aa\n      eq\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup1\n      0xb4b5ea57\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xc3cda520\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xd505accf\n      eq\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      dup1\n      0x782d6fe1\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x782d6fe1\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup1\n      0x6fcfff45\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x76c71ca1\n      eq\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      dup1\n      0x30adf81f\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x40c10f19\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x587cde1e\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x5c11d62f\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x5c19a95c\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup1\n      0x30adf81f\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x30b36cef\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x07546172\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x20606b70\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Online/ERC20/Uni.sol\":6800:6839  string public constant name = \"Uniswap\" */\n    tag_3:\n      tag_36\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x07\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xcc, 0x0556e697377617)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Online/ERC20/Uni.sol\":7209:7230  address public minter */\n    tag_4:\n      sload(0x01)\n      tag_40\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_40:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":601:633   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":583:634   */\n      dup2\n      mstore\n        /* \"#utility.yul\":571:573   */\n      0x20\n        /* \"#utility.yul\":556:574   */\n      add\n        /* \"contracts/Online/ERC20/Uni.sol\":7209:7230  address public minter */\n      tag_38\n        /* \"#utility.yul\":437:640   */\n      jump\n        /* \"contracts/Online/ERC20/Uni.sol\":13513:13849  function approve(address spender, uint256 rawAmount)... */\n    tag_5:\n      tag_44\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n        /* \"#utility.yul\":1293:1307   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1286:1308   */\n      iszero\n        /* \"#utility.yul\":1268:1309   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1256:1258   */\n      0x20\n        /* \"#utility.yul\":1241:1259   */\n      add\n        /* \"contracts/Online/ERC20/Uni.sol\":13513:13849  function approve(address spender, uint256 rawAmount)... */\n      tag_38\n        /* \"#utility.yul\":1128:1315   */\n      jump\n        /* \"contracts/Online/ERC20/Uni.sol\":7090:7135  uint256 public totalSupply = 1_000_000_000e18 */\n    tag_6:\n      tag_50\n      sload(0x00)\n      dup2\n      jump\n    tag_50:\n      mload(0x40)\n        /* \"#utility.yul\":1466:1491   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1454:1456   */\n      0x20\n        /* \"#utility.yul\":1439:1457   */\n      add\n        /* \"contracts/Online/ERC20/Uni.sol\":7090:7135  uint256 public totalSupply = 1_000_000_000e18 */\n      tag_38\n        /* \"#utility.yul\":1320:1497   */\n      jump\n        /* \"contracts/Online/ERC20/Uni.sol\":8401:8553  bytes32 public constant DOMAIN_TYPEHASH =... */\n    tag_7:\n      tag_50\n        /* \"contracts/Online/ERC20/Uni.sol\":8451:8553  keccak256(... */\n      0x8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866\n        /* \"contracts/Online/ERC20/Uni.sol\":8401:8553  bytes32 public constant DOMAIN_TYPEHASH =... */\n      dup2\n      jump\n        /* \"contracts/Online/ERC20/Uni.sol\":16733:17485  function transferFrom(... */\n    tag_8:\n      tag_44\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"contracts/Online/ERC20/Uni.sol\":8856:9023  bytes32 public constant PERMIT_TYPEHASH =... */\n    tag_9:\n      tag_50\n        /* \"contracts/Online/ERC20/Uni.sol\":8906:9023  keccak256(... */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"contracts/Online/ERC20/Uni.sol\":8856:9023  bytes32 public constant PERMIT_TYPEHASH =... */\n      dup2\n      jump\n        /* \"contracts/Online/ERC20/Uni.sol\":7297:7331  uint256 public mintingAllowedAfter */\n    tag_10:\n      tag_50\n      sload(0x02)\n      dup2\n      jump\n        /* \"contracts/Online/ERC20/Uni.sol\":6994:7029  uint8 public constant decimals = 18 */\n    tag_11:\n      tag_69\n        /* \"contracts/Online/ERC20/Uni.sol\":7027:7029  18 */\n      0x12\n        /* \"contracts/Online/ERC20/Uni.sol\":6994:7029  uint8 public constant decimals = 18 */\n      dup2\n      jump\n    tag_69:\n      mload(0x40)\n        /* \"#utility.yul\":2235:2239   */\n      0xff\n        /* \"#utility.yul\":2223:2240   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2205:2241   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2193:2195   */\n      0x20\n        /* \"#utility.yul\":2178:2196   */\n      add\n        /* \"contracts/Online/ERC20/Uni.sol\":6994:7029  uint8 public constant decimals = 18 */\n      tag_38\n        /* \"#utility.yul\":2063:2247   */\n      jump\n        /* \"contracts/Online/ERC20/Uni.sol\":11326:12584  function mint(address dst, uint256 rawAmount) external {... */\n    tag_12:\n      tag_73\n      tag_74\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n    tag_73:\n      stop\n        /* \"contracts/Online/ERC20/Uni.sol\":7870:7914  mapping(address => address) public delegates */\n    tag_13:\n      tag_40\n      tag_77\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_77:\n      mstore(0x20, 0x05)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/Online/ERC20/Uni.sol\":7381:7442  uint32 public constant minimumTimeBetweenMints = 1 days * 365 */\n    tag_14:\n      tag_81\n        /* \"contracts/Online/ERC20/Uni.sol\":7430:7442  1 days * 365 */\n      0x01e13380\n        /* \"contracts/Online/ERC20/Uni.sol\":7381:7442  uint32 public constant minimumTimeBetweenMints = 1 days * 365 */\n      dup2\n      jump\n    tag_81:\n      mload(0x40)\n        /* \"#utility.yul\":2617:2627   */\n      0xffffffff\n        /* \"#utility.yul\":2605:2628   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2587:2629   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2575:2577   */\n      0x20\n        /* \"#utility.yul\":2560:2578   */\n      add\n        /* \"contracts/Online/ERC20/Uni.sol\":7381:7442  uint32 public constant minimumTimeBetweenMints = 1 days * 365 */\n      tag_38\n        /* \"#utility.yul\":2443:2635   */\n      jump\n        /* \"contracts/Online/ERC20/Uni.sol\":17627:17727  function delegate(address delegatee) public {... */\n    tag_15:\n      tag_73\n      tag_86\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_86:\n      tag_87\n      jump\t// in\n        /* \"contracts/Online/ERC20/Uni.sol\":8283:8331  mapping(address => uint32) public numCheckpoints */\n    tag_16:\n      tag_81\n      tag_89\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_89:\n      mstore(0x20, 0x07)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xffffffff\n      and\n      dup2\n      jump\n        /* \"contracts/Online/ERC20/Uni.sol\":15797:15906  function balanceOf(address account) external view returns (uint256) {... */\n    tag_17:\n      tag_50\n      tag_93\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_93:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Online/ERC20/Uni.sol\":15882:15899  balances[account] */\n      and\n        /* \"contracts/Online/ERC20/Uni.sol\":15856:15863  uint256 */\n      0x00\n        /* \"contracts/Online/ERC20/Uni.sol\":15882:15899  balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Online/ERC20/Uni.sol\":15882:15890  balances */\n      0x04\n        /* \"contracts/Online/ERC20/Uni.sol\":15882:15899  balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0x60, 0x01), 0x01)\n      and\n      swap1\n        /* \"contracts/Online/ERC20/Uni.sol\":15797:15906  function balanceOf(address account) external view returns (uint256) {... */\n      jump\n        /* \"contracts/Online/ERC20/Uni.sol\":7534:7567  uint8 public constant mintCap = 2 */\n    tag_18:\n      tag_69\n        /* \"contracts/Online/ERC20/Uni.sol\":7566:7567  2 */\n      0x02\n        /* \"contracts/Online/ERC20/Uni.sol\":7534:7567  uint8 public constant mintCap = 2 */\n      dup2\n      jump\n        /* \"contracts/Online/ERC20/Uni.sol\":20058:21308  function getPriorVotes(address account, uint256 blockNumber)... */\n    tag_19:\n      tag_99\n      tag_100\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_100:\n      tag_101\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"#utility.yul\":2802:2841   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2784:2842   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2772:2774   */\n      0x20\n        /* \"#utility.yul\":2757:2775   */\n      add\n        /* \"contracts/Online/ERC20/Uni.sol\":20058:21308  function getPriorVotes(address account, uint256 blockNumber)... */\n      tag_38\n        /* \"#utility.yul\":2640:2848   */\n      jump\n        /* \"contracts/Online/ERC20/Uni.sol\":9101:9142  mapping(address => uint256) public nonces */\n    tag_20:\n      tag_50\n      tag_105\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_105:\n      mstore(0x20, 0x08)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/Online/ERC20/Uni.sol\":6897:6934  string public constant symbol = \"UNI\" */\n    tag_21:\n      tag_36\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x03\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xe8, 0x554e49)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\n        /* \"contracts/Online/ERC20/Uni.sol\":16162:16432  function transfer(address dst, uint256 rawAmount) external returns (bool) {... */\n    tag_22:\n      tag_44\n      tag_112\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_112:\n      tag_113\n      jump\t// in\n        /* \"contracts/Online/ERC20/Uni.sol\":19405:19636  function getCurrentVotes(address account) external view returns (uint96) {... */\n    tag_23:\n      tag_99\n      tag_116\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_116:\n      tag_117\n      jump\t// in\n        /* \"contracts/Online/ERC20/Uni.sol\":18150:19211  function delegateBySig(... */\n    tag_24:\n      tag_73\n      tag_120\n      calldatasize\n      0x04\n      tag_121\n      jump\t// in\n    tag_120:\n      tag_122\n      jump\t// in\n        /* \"contracts/Online/ERC20/Uni.sol\":14327:15601  function permit(... */\n    tag_25:\n      tag_73\n      tag_124\n      calldatasize\n      0x04\n      tag_125\n      jump\t// in\n    tag_124:\n      tag_126\n      jump\t// in\n        /* \"contracts/Online/ERC20/Uni.sol\":12880:13045  function allowance(address account, address spender)... */\n    tag_26:\n      tag_50\n      tag_128\n      calldatasize\n      0x04\n      tag_129\n      jump\t// in\n    tag_128:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Online/ERC20/Uni.sol\":13010:13029  allowances[account] */\n      swap2\n      dup3\n      and\n        /* \"contracts/Online/ERC20/Uni.sol\":12980:12987  uint256 */\n      0x00\n        /* \"contracts/Online/ERC20/Uni.sol\":13010:13029  allowances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Online/ERC20/Uni.sol\":13010:13020  allowances */\n      0x03\n        /* \"contracts/Online/ERC20/Uni.sol\":13010:13029  allowances[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Online/ERC20/Uni.sol\":13010:13038  allowances[account][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      sub(shl(0x60, 0x01), 0x01)\n      and\n      swap1\n        /* \"contracts/Online/ERC20/Uni.sol\":12880:13045  function allowance(address account, address spender)... */\n      jump\n        /* \"contracts/Online/ERC20/Uni.sol\":8644:8769  bytes32 public constant DELEGATION_TYPEHASH =... */\n    tag_27:\n      tag_50\n        /* \"contracts/Online/ERC20/Uni.sol\":8698:8769  keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n      0xe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf\n        /* \"contracts/Online/ERC20/Uni.sol\":8644:8769  bytes32 public constant DELEGATION_TYPEHASH =... */\n      dup2\n      jump\n        /* \"contracts/Online/ERC20/Uni.sol\":8149:8217  mapping(address => mapping(uint32 => Checkpoint)) public checkpoints */\n    tag_28:\n      tag_135\n      tag_136\n      calldatasize\n      0x04\n      tag_137\n      jump\t// in\n    tag_136:\n      0x06\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      0xffffffff\n      dup2\n      and\n      swap1\n      shl(0x20, 0x01)\n      swap1\n      div\n      sub(shl(0x60, 0x01), 0x01)\n      and\n      dup3\n      jump\n    tag_135:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":5385:5395   */\n      0xffffffff\n        /* \"#utility.yul\":5373:5396   */\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":5355:5397   */\n      dup4\n      mstore\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"#utility.yul\":5433:5472   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":5428:5430   */\n      0x20\n        /* \"#utility.yul\":5413:5431   */\n      dup4\n      add\n        /* \"#utility.yul\":5406:5473   */\n      mstore\n        /* \"#utility.yul\":5328:5346   */\n      add\n        /* \"contracts/Online/ERC20/Uni.sol\":8149:8217  mapping(address => mapping(uint32 => Checkpoint)) public checkpoints */\n      tag_38\n        /* \"#utility.yul\":5185:5479   */\n      jump\n        /* \"contracts/Online/ERC20/Uni.sol\":10897:11158  function setMinter(address minter_) external {... */\n    tag_29:\n      tag_73\n      tag_142\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_142:\n      tag_143\n      jump\t// in\n        /* \"contracts/Online/ERC20/Uni.sol\":13513:13849  function approve(address spender, uint256 rawAmount)... */\n    tag_47:\n        /* \"contracts/Online/ERC20/Uni.sol\":13600:13604  bool */\n      0x00\n        /* \"contracts/Online/ERC20/Uni.sol\":13620:13633  uint96 amount */\n      dup1\n        /* \"contracts/Online/ERC20/Uni.sol\":13652:13709  safe96(rawAmount, \"Uni::approve: amount exceeds 96 bits\") */\n      tag_145\n        /* \"contracts/Online/ERC20/Uni.sol\":13659:13668  rawAmount */\n      dup4\n        /* \"contracts/Online/ERC20/Uni.sol\":13652:13709  safe96(rawAmount, \"Uni::approve: amount exceeds 96 bits\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      data_cb3e128da7f3f16c83a901cce3ab145c66bad45a0cd648091fecc9964ebf42fe\n      0x24\n      swap2\n      codecopy\n        /* \"contracts/Online/ERC20/Uni.sol\":13652:13658  safe96 */\n      tag_146\n        /* \"contracts/Online/ERC20/Uni.sol\":13652:13709  safe96(rawAmount, \"Uni::approve: amount exceeds 96 bits\") */\n      jump\t// in\n    tag_145:\n        /* \"contracts/Online/ERC20/Uni.sol\":13739:13749  msg.sender */\n      caller\n        /* \"contracts/Online/ERC20/Uni.sol\":13728:13750  allowances[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Online/ERC20/Uni.sol\":13728:13738  allowances */\n      0x03\n        /* \"contracts/Online/ERC20/Uni.sol\":13728:13750  allowances[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Online/ERC20/Uni.sol\":13728:13759  allowances[msg.sender][spender] */\n      dup11\n      and\n      dup1\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/Online/ERC20/Uni.sol\":13728:13768  allowances[msg.sender][spender] = amount */\n      dup1\n      sload\n      not(sub(shl(0x60, 0x01), 0x01))\n      and\n      sub(shl(0x60, 0x01), 0x01)\n      dup8\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/Online/ERC20/Uni.sol\":13784:13821  Approval(msg.sender, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":2784:2842   */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Online/ERC20/Uni.sol\":13728:13768  allowances[msg.sender][spender] = amount */\n      swap4\n      swap5\n      pop\n        /* \"contracts/Online/ERC20/Uni.sol\":13728:13759  allowances[msg.sender][spender] */\n      swap1\n      swap3\n        /* \"contracts/Online/ERC20/Uni.sol\":13784:13821  Approval(msg.sender, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":2757:2775   */\n      add\n        /* \"contracts/Online/ERC20/Uni.sol\":13784:13821  Approval(msg.sender, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Online/ERC20/Uni.sol\":13838:13842  true */\n      0x01\n        /* \"contracts/Online/ERC20/Uni.sol\":13831:13842  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/Online/ERC20/Uni.sol\":13513:13849  function approve(address spender, uint256 rawAmount)... */\n    tag_144:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Online/ERC20/Uni.sol\":16733:17485  function transferFrom(... */\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Online/ERC20/Uni.sol\":16928:16943  allowances[src] */\n      dup4\n      and\n        /* \"contracts/Online/ERC20/Uni.sol\":16848:16852  bool */\n      0x00\n        /* \"contracts/Online/ERC20/Uni.sol\":16928:16943  allowances[src] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Online/ERC20/Uni.sol\":16928:16938  allowances */\n      0x03\n        /* \"contracts/Online/ERC20/Uni.sol\":16928:16943  allowances[src] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Online/ERC20/Uni.sol\":16882:16892  msg.sender */\n      caller\n        /* \"contracts/Online/ERC20/Uni.sol\":16928:16952  allowances[src][spender] */\n      dup1\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      dup2\n      dup5\n      keccak256\n      sload\n        /* \"contracts/Online/ERC20/Uni.sol\":16978:17069  safe96(... */\n      dup3\n      mload\n      0x60\n      dup2\n      add\n      swap1\n      swap4\n      mstore\n      0x24\n      dup1\n      dup5\n      mstore\n        /* \"contracts/Online/ERC20/Uni.sol\":16882:16892  msg.sender */\n      swap2\n      swap4\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/Online/ERC20/Uni.sol\":16928:16952  allowances[src][spender] */\n      swap1\n      swap2\n      and\n      swap3\n        /* \"contracts/Online/ERC20/Uni.sol\":16848:16852  bool */\n      dup6\n      swap3\n        /* \"contracts/Online/ERC20/Uni.sol\":16978:17069  safe96(... */\n      tag_150\n      swap3\n        /* \"contracts/Online/ERC20/Uni.sol\":16998:17007  rawAmount */\n      dup9\n      swap3\n        /* \"contracts/Online/ERC20/Uni.sol\":16978:17069  safe96(... */\n      swap2\n      swap1\n      data_cb3e128da7f3f16c83a901cce3ab145c66bad45a0cd648091fecc9964ebf42fe\n      swap1\n      dup4\n      add\n      codecopy\n        /* \"contracts/Online/ERC20/Uni.sol\":16978:16984  safe96 */\n      tag_146\n        /* \"contracts/Online/ERC20/Uni.sol\":16978:17069  safe96(... */\n      jump\t// in\n    tag_150:\n        /* \"contracts/Online/ERC20/Uni.sol\":16962:17069  uint96 amount = safe96(... */\n      swap1\n      pop\n        /* \"contracts/Online/ERC20/Uni.sol\":17095:17098  src */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Online/ERC20/Uni.sol\":17084:17098  spender != src */\n      and\n        /* \"contracts/Online/ERC20/Uni.sol\":17084:17091  spender */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Online/ERC20/Uni.sol\":17084:17098  spender != src */\n      and\n      eq\n        /* \"contracts/Online/ERC20/Uni.sol\":17080:17414  if (spender != src ) {... */\n      tag_151\n      jumpi\n        /* \"contracts/Online/ERC20/Uni.sol\":17115:17134  uint96 newAllowance */\n      0x00\n        /* \"contracts/Online/ERC20/Uni.sol\":17137:17294  sub96(... */\n      tag_152\n        /* \"contracts/Online/ERC20/Uni.sol\":17160:17176  spenderAllowance */\n      dup4\n        /* \"contracts/Online/ERC20/Uni.sol\":17194:17200  amount */\n      dup4\n        /* \"contracts/Online/ERC20/Uni.sol\":17137:17294  sub96(... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x3c\n      dup2\n      mstore\n      0x20\n      add\n      data_136758788d48ec4d9744ba8c2136a9c9406d6c92cd4a81eff0de4942b636db13\n      0x3c\n      swap2\n      codecopy\n        /* \"contracts/Online/ERC20/Uni.sol\":17137:17142  sub96 */\n      tag_153\n        /* \"contracts/Online/ERC20/Uni.sol\":17137:17294  sub96(... */\n      jump\t// in\n    tag_152:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Online/ERC20/Uni.sol\":17308:17323  allowances[src] */\n      dup10\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Online/ERC20/Uni.sol\":17308:17318  allowances */\n      0x03\n        /* \"contracts/Online/ERC20/Uni.sol\":17308:17323  allowances[src] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Online/ERC20/Uni.sol\":17308:17332  allowances[src][spender] */\n      swap5\n      dup11\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/Online/ERC20/Uni.sol\":17308:17347  allowances[src][spender] = newAllowance */\n      dup1\n      sload\n      not(sub(shl(0x60, 0x01), 0x01))\n      and\n      sub(shl(0x60, 0x01), 0x01)\n      dup8\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/Online/ERC20/Uni.sol\":17367:17403  Approval(src, spender, newAllowance) */\n      swap2\n      mload\n        /* \"#utility.yul\":2784:2842   */\n      swap2\n      dup3\n      mstore\n        /* \"contracts/Online/ERC20/Uni.sol\":17308:17347  allowances[src][spender] = newAllowance */\n      swap4\n      swap5\n      pop\n        /* \"contracts/Online/ERC20/Uni.sol\":17308:17332  allowances[src][spender] */\n      swap2\n      swap3\n        /* \"contracts/Online/ERC20/Uni.sol\":17308:17323  allowances[src] */\n      swap1\n      swap2\n        /* \"contracts/Online/ERC20/Uni.sol\":17367:17403  Approval(src, spender, newAllowance) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":2757:2775   */\n      add\n        /* \"contracts/Online/ERC20/Uni.sol\":17367:17403  Approval(src, spender, newAllowance) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Online/ERC20/Uni.sol\":17101:17414  {... */\n      pop\n        /* \"contracts/Online/ERC20/Uni.sol\":17080:17414  if (spender != src ) {... */\n    tag_151:\n        /* \"contracts/Online/ERC20/Uni.sol\":17424:17457  _transferTokens(src, dst, amount) */\n      tag_155\n        /* \"contracts/Online/ERC20/Uni.sol\":17440:17443  src */\n      dup8\n        /* \"contracts/Online/ERC20/Uni.sol\":17445:17448  dst */\n      dup8\n        /* \"contracts/Online/ERC20/Uni.sol\":17450:17456  amount */\n      dup4\n        /* \"contracts/Online/ERC20/Uni.sol\":17424:17439  _transferTokens */\n      tag_156\n        /* \"contracts/Online/ERC20/Uni.sol\":17424:17457  _transferTokens(src, dst, amount) */\n      jump\t// in\n    tag_155:\n      pop\n        /* \"contracts/Online/ERC20/Uni.sol\":17474:17478  true */\n      0x01\n      swap7\n        /* \"contracts/Online/ERC20/Uni.sol\":16733:17485  function transferFrom(... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Online/ERC20/Uni.sol\":11326:12584  function mint(address dst, uint256 rawAmount) external {... */\n    tag_75:\n        /* \"contracts/Online/ERC20/Uni.sol\":11413:11419  minter */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"contracts/Online/ERC20/Uni.sol\":11399:11409  msg.sender */\n      caller\n        /* \"contracts/Online/ERC20/Uni.sol\":11399:11419  msg.sender == minter */\n      eq\n        /* \"contracts/Online/ERC20/Uni.sol\":11391:11459  require(msg.sender == minter, \"Uni::mint: only the minter can mint\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5900:5902   */\n      0x20\n        /* \"contracts/Online/ERC20/Uni.sol\":11391:11459  require(msg.sender == minter, \"Uni::mint: only the minter can mint\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5882:5903   */\n      mstore\n        /* \"#utility.yul\":5939:5941   */\n      0x23\n        /* \"#utility.yul\":5919:5937   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5912:5942   */\n      mstore\n        /* \"#utility.yul\":5978:6012   */\n      0x556e693a3a6d696e743a206f6e6c7920746865206d696e7465722063616e206d\n        /* \"#utility.yul\":5958:5976   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5951:6013   */\n      mstore\n      shl(0xea, 0x1a5b9d)\n        /* \"#utility.yul\":6029:6047   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6022:6055   */\n      mstore\n        /* \"#utility.yul\":6072:6091   */\n      0x84\n      add\n        /* \"contracts/Online/ERC20/Uni.sol\":11391:11459  require(msg.sender == minter, \"Uni::mint: only the minter can mint\") */\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_158:\n        /* \"contracts/Online/ERC20/Uni.sol\":11509:11528  mintingAllowedAfter */\n      sload(0x02)\n        /* \"contracts/Online/ERC20/Uni.sol\":11490:11505  block.timestamp */\n      timestamp\n        /* \"contracts/Online/ERC20/Uni.sol\":11490:11528  block.timestamp >= mintingAllowedAfter */\n      lt\n      iszero\n        /* \"contracts/Online/ERC20/Uni.sol\":11469:11588  require(... */\n      tag_161\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6304:6306   */\n      0x20\n        /* \"contracts/Online/ERC20/Uni.sol\":11469:11588  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6286:6307   */\n      mstore\n        /* \"#utility.yul\":6343:6345   */\n      0x22\n        /* \"#utility.yul\":6323:6341   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6316:6346   */\n      mstore\n        /* \"#utility.yul\":6382:6416   */\n      0x556e693a3a6d696e743a206d696e74696e67206e6f7420616c6c6f7765642079\n        /* \"#utility.yul\":6362:6380   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6355:6417   */\n      mstore\n      shl(0xf2, 0x195d)\n        /* \"#utility.yul\":6433:6451   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6426:6458   */\n      mstore\n        /* \"#utility.yul\":6475:6494   */\n      0x84\n      add\n        /* \"contracts/Online/ERC20/Uni.sol\":11469:11588  require(... */\n      tag_159\n        /* \"#utility.yul\":6102:6500   */\n      jump\n        /* \"contracts/Online/ERC20/Uni.sol\":11469:11588  require(... */\n    tag_161:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Online/ERC20/Uni.sol\":11619:11636  dst != address(0) */\n      dup3\n      and\n        /* \"contracts/Online/ERC20/Uni.sol\":11598:11708  require(... */\n      tag_164\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6707:6709   */\n      0x20\n        /* \"contracts/Online/ERC20/Uni.sol\":11598:11708  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6689:6710   */\n      mstore\n        /* \"#utility.yul\":6746:6748   */\n      0x2e\n        /* \"#utility.yul\":6726:6744   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6719:6749   */\n      mstore\n        /* \"#utility.yul\":6785:6819   */\n      0x556e693a3a6d696e743a2063616e6e6f74207472616e7366657220746f207468\n        /* \"#utility.yul\":6765:6783   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6758:6820   */\n      mstore\n      shl(0x90, 0x65207a65726f2061646472657373)\n        /* \"#utility.yul\":6836:6854   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6829:6873   */\n      mstore\n        /* \"#utility.yul\":6890:6909   */\n      0x84\n      add\n        /* \"contracts/Online/ERC20/Uni.sol\":11598:11708  require(... */\n      tag_159\n        /* \"#utility.yul\":6505:6915   */\n      jump\n        /* \"contracts/Online/ERC20/Uni.sol\":11598:11708  require(... */\n    tag_164:\n        /* \"contracts/Online/ERC20/Uni.sol\":11768:11856  SafeMath.add(... */\n      tag_167\n        /* \"contracts/Online/ERC20/Uni.sol\":11794:11809  block.timestamp */\n      timestamp\n        /* \"contracts/Online/ERC20/Uni.sol\":7430:7442  1 days * 365 */\n      0x01e13380\n        /* \"contracts/Online/ERC20/Uni.sol\":11768:11780  SafeMath.add */\n      tag_168\n        /* \"contracts/Online/ERC20/Uni.sol\":11768:11856  SafeMath.add(... */\n      jump\t// in\n    tag_167:\n        /* \"contracts/Online/ERC20/Uni.sol\":11746:11765  mintingAllowedAfter */\n      0x02\n        /* \"contracts/Online/ERC20/Uni.sol\":11746:11856  mintingAllowedAfter = SafeMath.add(... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Online/ERC20/Uni.sol\":11894:11907  uint96 amount */\n      0x00\n        /* \"contracts/Online/ERC20/Uni.sol\":11910:11964  safe96(rawAmount, \"Uni::mint: amount exceeds 96 bits\") */\n      tag_169\n        /* \"contracts/Online/ERC20/Uni.sol\":11917:11926  rawAmount */\n      dup3\n        /* \"contracts/Online/ERC20/Uni.sol\":11910:11964  safe96(rawAmount, \"Uni::mint: amount exceeds 96 bits\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      data_bcb6733e7ac2aee3c3602ee664d4b3cb251e429df5c7e9148d412d0b60f07b16\n      0x21\n      swap2\n      codecopy\n        /* \"contracts/Online/ERC20/Uni.sol\":11910:11916  safe96 */\n      tag_146\n        /* \"contracts/Online/ERC20/Uni.sol\":11910:11964  safe96(rawAmount, \"Uni::mint: amount exceeds 96 bits\") */\n      jump\t// in\n    tag_169:\n        /* \"contracts/Online/ERC20/Uni.sol\":11894:11964  uint96 amount = safe96(rawAmount, \"Uni::mint: amount exceeds 96 bits\") */\n      swap1\n      pop\n        /* \"contracts/Online/ERC20/Uni.sol\":12005:12058  SafeMath.div(SafeMath.mul(totalSupply, mintCap), 100) */\n      tag_170\n        /* \"contracts/Online/ERC20/Uni.sol\":12018:12052  SafeMath.mul(totalSupply, mintCap) */\n      tag_171\n        /* \"contracts/Online/ERC20/Uni.sol\":12031:12042  totalSupply */\n      sload(0x00)\n        /* \"contracts/Online/ERC20/Uni.sol\":7566:7567  2 */\n      0x02\n        /* \"contracts/Online/ERC20/Uni.sol\":12018:12052  SafeMath.mul(totalSupply, mintCap) */\n      0xff\n      and\n        /* \"contracts/Online/ERC20/Uni.sol\":12018:12030  SafeMath.mul */\n      tag_172\n        /* \"contracts/Online/ERC20/Uni.sol\":12018:12052  SafeMath.mul(totalSupply, mintCap) */\n      jump\t// in\n    tag_171:\n        /* \"contracts/Online/ERC20/Uni.sol\":12054:12057  100 */\n      0x64\n        /* \"contracts/Online/ERC20/Uni.sol\":12005:12017  SafeMath.div */\n      tag_173\n        /* \"contracts/Online/ERC20/Uni.sol\":12005:12058  SafeMath.div(SafeMath.mul(totalSupply, mintCap), 100) */\n      jump\t// in\n    tag_170:\n        /* \"contracts/Online/ERC20/Uni.sol\":11995:12001  amount */\n      dup2\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/Online/ERC20/Uni.sol\":11995:12058  amount <= SafeMath.div(SafeMath.mul(totalSupply, mintCap), 100) */\n      and\n      gt\n      iszero\n        /* \"contracts/Online/ERC20/Uni.sol\":11974:12112  require(... */\n      tag_174\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7122:7124   */\n      0x20\n        /* \"contracts/Online/ERC20/Uni.sol\":11974:12112  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7104:7125   */\n      mstore\n        /* \"#utility.yul\":7161:7163   */\n      0x1c\n        /* \"#utility.yul\":7141:7159   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7134:7164   */\n      mstore\n        /* \"#utility.yul\":7200:7230   */\n      0x556e693a3a6d696e743a206578636565646564206d696e742063617000000000\n        /* \"#utility.yul\":7180:7198   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7173:7231   */\n      mstore\n        /* \"#utility.yul\":7248:7266   */\n      0x64\n      add\n        /* \"contracts/Online/ERC20/Uni.sol\":11974:12112  require(... */\n      tag_159\n        /* \"#utility.yul\":6920:7272   */\n      jump\n        /* \"contracts/Online/ERC20/Uni.sol\":11974:12112  require(... */\n    tag_174:\n        /* \"contracts/Online/ERC20/Uni.sol\":12136:12253  safe96(... */\n      tag_177\n        /* \"contracts/Online/ERC20/Uni.sol\":12156:12189  SafeMath.add(totalSupply, amount) */\n      tag_178\n        /* \"contracts/Online/ERC20/Uni.sol\":12169:12180  totalSupply */\n      sload(0x00)\n        /* \"contracts/Online/ERC20/Uni.sol\":12182:12188  amount */\n      dup4\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/Online/ERC20/Uni.sol\":12156:12189  SafeMath.add(totalSupply, amount) */\n      and\n        /* \"contracts/Online/ERC20/Uni.sol\":12156:12168  SafeMath.add */\n      tag_168\n        /* \"contracts/Online/ERC20/Uni.sol\":12156:12189  SafeMath.add(totalSupply, amount) */\n      jump\t// in\n    tag_178:\n        /* \"contracts/Online/ERC20/Uni.sol\":12136:12253  safe96(... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_1ef2347f5dbb97e8eb7bc1442a128a1c6e65386b013257fe2b8ad95aaaa96ab8\n      0x26\n      swap2\n      codecopy\n        /* \"contracts/Online/ERC20/Uni.sol\":12136:12142  safe96 */\n      tag_146\n        /* \"contracts/Online/ERC20/Uni.sol\":12136:12253  safe96(... */\n      jump\t// in\n    tag_177:\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/Online/ERC20/Uni.sol\":12122:12253  totalSupply = safe96(... */\n      swap1\n      dup2\n      and\n        /* \"contracts/Online/ERC20/Uni.sol\":12122:12133  totalSupply */\n      0x00\n        /* \"contracts/Online/ERC20/Uni.sol\":12122:12253  totalSupply = safe96(... */\n      swap1\n      dup2\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Online/ERC20/Uni.sol\":12347:12360  balances[dst] */\n      dup6\n      and\n      dup2\n      mstore\n        /* \"contracts/Online/ERC20/Uni.sol\":12347:12355  balances */\n      0x04\n        /* \"contracts/Online/ERC20/Uni.sol\":12347:12360  balances[dst] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Online/ERC20/Uni.sol\":12328:12442  add96(... */\n      dup3\n      mload\n      0x60\n      dup2\n      add\n      swap1\n      swap4\n      mstore\n      0x24\n      dup1\n      dup5\n      mstore\n      tag_179\n      swap5\n        /* \"contracts/Online/ERC20/Uni.sol\":12347:12360  balances[dst] */\n      swap2\n      swap1\n      swap2\n      and\n      swap3\n        /* \"contracts/Online/ERC20/Uni.sol\":12374:12380  amount */\n      dup6\n      swap3\n        /* \"contracts/Online/ERC20/Uni.sol\":12328:12442  add96(... */\n      swap1\n      swap2\n      swap1\n      data_0ab5eae08d50cc345c58c2d7d67f9034a98d0a88dd540314c408c39a8dcec01d\n      swap1\n      dup4\n      add\n      codecopy\n        /* \"contracts/Online/ERC20/Uni.sol\":12328:12333  add96 */\n      tag_180\n        /* \"contracts/Online/ERC20/Uni.sol\":12328:12442  add96(... */\n      jump\t// in\n    tag_179:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Online/ERC20/Uni.sol\":12312:12325  balances[dst] */\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Online/ERC20/Uni.sol\":12312:12320  balances */\n      0x04\n        /* \"contracts/Online/ERC20/Uni.sol\":12312:12325  balances[dst] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Online/ERC20/Uni.sol\":12312:12442  balances[dst] = add96(... */\n      dup1\n      sload\n      not(sub(shl(0x60, 0x01), 0x01))\n      and\n      sub(shl(0x60, 0x01), 0x01)\n      swap7\n      dup8\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/Online/ERC20/Uni.sol\":12457:12490  Transfer(address(0), dst, amount) */\n      mload\n        /* \"#utility.yul\":2802:2841   */\n      swap4\n      dup6\n      and\n        /* \"#utility.yul\":2784:2842   */\n      dup5\n      mstore\n        /* \"contracts/Online/ERC20/Uni.sol\":12312:12325  balances[dst] */\n      swap2\n      swap3\n      swap1\n      swap2\n        /* \"contracts/Online/ERC20/Uni.sol\":12457:12490  Transfer(address(0), dst, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":2757:2775   */\n      add\n        /* \"contracts/Online/ERC20/Uni.sol\":12457:12490  Transfer(address(0), dst, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Online/ERC20/Uni.sol\":12554:12568  delegates[dst] */\n      dup1\n      dup5\n      and\n        /* \"contracts/Online/ERC20/Uni.sol\":12550:12551  0 */\n      0x00\n        /* \"contracts/Online/ERC20/Uni.sol\":12554:12568  delegates[dst] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Online/ERC20/Uni.sol\":12554:12563  delegates */\n      0x05\n        /* \"contracts/Online/ERC20/Uni.sol\":12554:12568  delegates[dst] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/Online/ERC20/Uni.sol\":12527:12577  _moveDelegates(address(0), delegates[dst], amount) */\n      tag_182\n      swap3\n        /* \"contracts/Online/ERC20/Uni.sol\":12554:12568  delegates[dst] */\n      and\n        /* \"contracts/Online/ERC20/Uni.sol\":12570:12576  amount */\n      dup4\n        /* \"contracts/Online/ERC20/Uni.sol\":12527:12541  _moveDelegates */\n      tag_183\n        /* \"contracts/Online/ERC20/Uni.sol\":12527:12577  _moveDelegates(address(0), delegates[dst], amount) */\n      jump\t// in\n    tag_182:\n        /* \"contracts/Online/ERC20/Uni.sol\":11381:12584  {... */\n      pop\n        /* \"contracts/Online/ERC20/Uni.sol\":11326:12584  function mint(address dst, uint256 rawAmount) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Online/ERC20/Uni.sol\":17627:17727  function delegate(address delegatee) public {... */\n    tag_87:\n        /* \"contracts/Online/ERC20/Uni.sol\":17688:17720  _delegate(msg.sender, delegatee) */\n      tag_185\n        /* \"contracts/Online/ERC20/Uni.sol\":17698:17708  msg.sender */\n      caller\n        /* \"contracts/Online/ERC20/Uni.sol\":17710:17719  delegatee */\n      dup3\n        /* \"contracts/Online/ERC20/Uni.sol\":17688:17697  _delegate */\n      tag_186\n        /* \"contracts/Online/ERC20/Uni.sol\":17688:17720  _delegate(msg.sender, delegatee) */\n      jump\t// in\n    tag_185:\n        /* \"contracts/Online/ERC20/Uni.sol\":17627:17727  function delegate(address delegatee) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/Online/ERC20/Uni.sol\":20058:21308  function getPriorVotes(address account, uint256 blockNumber)... */\n    tag_101:\n        /* \"contracts/Online/ERC20/Uni.sol\":20164:20170  uint96 */\n      0x00\n        /* \"contracts/Online/ERC20/Uni.sol\":20221:20233  block.number */\n      number\n        /* \"contracts/Online/ERC20/Uni.sol\":20207:20218  blockNumber */\n      dup3\n        /* \"contracts/Online/ERC20/Uni.sol\":20207:20233  blockNumber < block.number */\n      lt\n        /* \"contracts/Online/ERC20/Uni.sol\":20186:20297  require(... */\n      tag_189\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7479:7481   */\n      0x20\n        /* \"contracts/Online/ERC20/Uni.sol\":20186:20297  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7461:7482   */\n      mstore\n        /* \"#utility.yul\":7518:7520   */\n      0x26\n        /* \"#utility.yul\":7498:7516   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7491:7521   */\n      mstore\n        /* \"#utility.yul\":7557:7591   */\n      0x556e693a3a6765745072696f72566f7465733a206e6f74207965742064657465\n        /* \"#utility.yul\":7537:7555   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7530:7592   */\n      mstore\n      shl(0xd2, 0x1c9b5a5b9959)\n        /* \"#utility.yul\":7608:7626   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7601:7637   */\n      mstore\n        /* \"#utility.yul\":7654:7673   */\n      0x84\n      add\n        /* \"contracts/Online/ERC20/Uni.sol\":20186:20297  require(... */\n      tag_159\n        /* \"#utility.yul\":7277:7679   */\n      jump\n        /* \"contracts/Online/ERC20/Uni.sol\":20186:20297  require(... */\n    tag_189:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Online/ERC20/Uni.sol\":20330:20353  numCheckpoints[account] */\n      dup4\n      and\n        /* \"contracts/Online/ERC20/Uni.sol\":20308:20327  uint32 nCheckpoints */\n      0x00\n        /* \"contracts/Online/ERC20/Uni.sol\":20330:20353  numCheckpoints[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Online/ERC20/Uni.sol\":20330:20344  numCheckpoints */\n      0x07\n        /* \"contracts/Online/ERC20/Uni.sol\":20330:20353  numCheckpoints[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xffffffff\n      and\n      swap1\n        /* \"contracts/Online/ERC20/Uni.sol\":20367:20384  nCheckpoints == 0 */\n      dup2\n      swap1\n      sub\n        /* \"contracts/Online/ERC20/Uni.sol\":20363:20419  if (nCheckpoints == 0) {... */\n      tag_192\n      jumpi\n        /* \"contracts/Online/ERC20/Uni.sol\":20407:20408  0 */\n      0x00\n        /* \"contracts/Online/ERC20/Uni.sol\":20400:20408  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_144)\n        /* \"contracts/Online/ERC20/Uni.sol\":20363:20419  if (nCheckpoints == 0) {... */\n    tag_192:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Online/ERC20/Uni.sol\":20476:20496  checkpoints[account] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Online/ERC20/Uni.sol\":20476:20487  checkpoints */\n      0x06\n        /* \"contracts/Online/ERC20/Uni.sol\":20476:20496  checkpoints[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Online/ERC20/Uni.sol\":20528:20539  blockNumber */\n      dup5\n      swap2\n        /* \"contracts/Online/ERC20/Uni.sol\":20497:20513  nCheckpoints - 1 */\n      tag_193\n        /* \"contracts/Online/ERC20/Uni.sol\":20512:20513  1 */\n      0x01\n        /* \"contracts/Online/ERC20/Uni.sol\":20497:20509  nCheckpoints */\n      dup6\n        /* \"contracts/Online/ERC20/Uni.sol\":20497:20513  nCheckpoints - 1 */\n      tag_194\n      jump\t// in\n    tag_193:\n        /* \"contracts/Online/ERC20/Uni.sol\":20476:20514  checkpoints[account][nCheckpoints - 1] */\n      0xffffffff\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"contracts/Online/ERC20/Uni.sol\":20476:20524  checkpoints[account][nCheckpoints - 1].fromBlock */\n      sload\n      and\n        /* \"contracts/Online/ERC20/Uni.sol\":20476:20539  checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber */\n      gt\n        /* \"contracts/Online/ERC20/Uni.sol\":20472:20617  if (checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber) {... */\n      tag_195\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Online/ERC20/Uni.sol\":20562:20582  checkpoints[account] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Online/ERC20/Uni.sol\":20562:20573  checkpoints */\n      0x06\n        /* \"contracts/Online/ERC20/Uni.sol\":20562:20582  checkpoints[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"contracts/Online/ERC20/Uni.sol\":20583:20599  nCheckpoints - 1 */\n      tag_196\n        /* \"contracts/Online/ERC20/Uni.sol\":20598:20599  1 */\n      0x01\n        /* \"contracts/Online/ERC20/Uni.sol\":20583:20595  nCheckpoints */\n      dup5\n        /* \"contracts/Online/ERC20/Uni.sol\":20583:20599  nCheckpoints - 1 */\n      tag_194\n      jump\t// in\n    tag_196:\n        /* \"contracts/Online/ERC20/Uni.sol\":20562:20600  checkpoints[account][nCheckpoints - 1] */\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"contracts/Online/ERC20/Uni.sol\":20562:20606  checkpoints[account][nCheckpoints - 1].votes */\n      sload\n      shl(0x20, 0x01)\n      swap1\n      div\n      sub(shl(0x60, 0x01), 0x01)\n      and\n      swap2\n      pop\n        /* \"contracts/Online/ERC20/Uni.sol\":20555:20606  return checkpoints[account][nCheckpoints - 1].votes */\n      tag_144\n      swap1\n      pop\n      jump\n        /* \"contracts/Online/ERC20/Uni.sol\":20472:20617  if (checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber) {... */\n    tag_195:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Online/ERC20/Uni.sol\":20675:20695  checkpoints[account] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Online/ERC20/Uni.sol\":20675:20686  checkpoints */\n      0x06\n        /* \"contracts/Online/ERC20/Uni.sol\":20675:20695  checkpoints[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Online/ERC20/Uni.sol\":20675:20698  checkpoints[account][0] */\n      dup4\n      dup1\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/Online/ERC20/Uni.sol\":20675:20708  checkpoints[account][0].fromBlock */\n      sload\n        /* \"contracts/Online/ERC20/Uni.sol\":20675:20698  checkpoints[account][0] */\n      0xffffffff\n        /* \"contracts/Online/ERC20/Uni.sol\":20675:20708  checkpoints[account][0].fromBlock */\n      and\n        /* \"contracts/Online/ERC20/Uni.sol\":20675:20722  checkpoints[account][0].fromBlock > blockNumber */\n      dup4\n      lt\n        /* \"contracts/Online/ERC20/Uni.sol\":20671:20757  if (checkpoints[account][0].fromBlock > blockNumber) {... */\n      iszero\n      tag_197\n      jumpi\n        /* \"contracts/Online/ERC20/Uni.sol\":20745:20746  0 */\n      0x00\n        /* \"contracts/Online/ERC20/Uni.sol\":20738:20746  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_144)\n        /* \"contracts/Online/ERC20/Uni.sol\":20671:20757  if (checkpoints[account][0].fromBlock > blockNumber) {... */\n    tag_197:\n        /* \"contracts/Online/ERC20/Uni.sol\":20767:20779  uint32 lower */\n      0x00\n      dup1\n        /* \"contracts/Online/ERC20/Uni.sol\":20808:20824  nCheckpoints - 1 */\n      tag_198\n        /* \"contracts/Online/ERC20/Uni.sol\":20823:20824  1 */\n      0x01\n        /* \"contracts/Online/ERC20/Uni.sol\":20808:20820  nCheckpoints */\n      dup5\n        /* \"contracts/Online/ERC20/Uni.sol\":20808:20824  nCheckpoints - 1 */\n      tag_194\n      jump\t// in\n    tag_198:\n        /* \"contracts/Online/ERC20/Uni.sol\":20793:20824  uint32 upper = nCheckpoints - 1 */\n      swap1\n      pop\n        /* \"contracts/Online/ERC20/Uni.sol\":20834:21252  while (upper > lower) {... */\n    tag_199:\n        /* \"contracts/Online/ERC20/Uni.sol\":20849:20854  lower */\n      dup2\n        /* \"contracts/Online/ERC20/Uni.sol\":20841:20854  upper > lower */\n      0xffffffff\n      and\n        /* \"contracts/Online/ERC20/Uni.sol\":20841:20846  upper */\n      dup2\n        /* \"contracts/Online/ERC20/Uni.sol\":20841:20854  upper > lower */\n      0xffffffff\n      and\n      gt\n        /* \"contracts/Online/ERC20/Uni.sol\":20834:21252  while (upper > lower) {... */\n      iszero\n      tag_200\n      jumpi\n        /* \"contracts/Online/ERC20/Uni.sol\":20870:20883  uint32 center */\n      0x00\n        /* \"contracts/Online/ERC20/Uni.sol\":20912:20913  2 */\n      0x02\n        /* \"contracts/Online/ERC20/Uni.sol\":20895:20908  upper - lower */\n      tag_201\n        /* \"contracts/Online/ERC20/Uni.sol\":20903:20908  lower */\n      dup5\n        /* \"contracts/Online/ERC20/Uni.sol\":20895:20900  upper */\n      dup5\n        /* \"contracts/Online/ERC20/Uni.sol\":20895:20908  upper - lower */\n      tag_194\n      jump\t// in\n    tag_201:\n        /* \"contracts/Online/ERC20/Uni.sol\":20894:20913  (upper - lower) / 2 */\n      tag_202\n      swap2\n      swap1\n      tag_203\n      jump\t// in\n    tag_202:\n        /* \"contracts/Online/ERC20/Uni.sol\":20886:20913  upper - (upper - lower) / 2 */\n      tag_204\n      swap1\n        /* \"contracts/Online/ERC20/Uni.sol\":20886:20891  upper */\n      dup4\n        /* \"contracts/Online/ERC20/Uni.sol\":20886:20913  upper - (upper - lower) / 2 */\n      tag_194\n      jump\t// in\n    tag_204:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Online/ERC20/Uni.sol\":20977:20997  checkpoints[account] */\n      dup9\n      and\n        /* \"contracts/Online/ERC20/Uni.sol\":20954:20974  Checkpoint memory cp */\n      0x00\n        /* \"contracts/Online/ERC20/Uni.sol\":20977:20997  checkpoints[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Online/ERC20/Uni.sol\":20977:20988  checkpoints */\n      0x06\n        /* \"contracts/Online/ERC20/Uni.sol\":20977:20997  checkpoints[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Online/ERC20/Uni.sol\":20977:21005  checkpoints[account][center] */\n      0xffffffff\n      dup6\n      dup2\n      and\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/Online/ERC20/Uni.sol\":20954:21005  Checkpoint memory cp = checkpoints[account][center] */\n      dup2\n      mload\n      dup1\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n      sload\n      swap3\n      dup4\n      and\n      dup1\n      dup3\n      mstore\n      shl(0x20, 0x01)\n      swap1\n      swap4\n      div\n      sub(shl(0x60, 0x01), 0x01)\n      and\n      swap2\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"contracts/Online/ERC20/Uni.sol\":20977:21005  checkpoints[account][center] */\n      swap2\n      swap3\n      pop\n        /* \"contracts/Online/ERC20/Uni.sol\":21023:21050  cp.fromBlock == blockNumber */\n      dup8\n      swap1\n      sub\n        /* \"contracts/Online/ERC20/Uni.sol\":21019:21242  if (cp.fromBlock == blockNumber) {... */\n      tag_205\n      jumpi\n        /* \"contracts/Online/ERC20/Uni.sol\":21077:21085  cp.votes */\n      0x20\n      add\n      mload\n      swap5\n      pop\n        /* \"contracts/Online/ERC20/Uni.sol\":21070:21085  return cp.votes */\n      tag_144\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\n        /* \"contracts/Online/ERC20/Uni.sol\":21019:21242  if (cp.fromBlock == blockNumber) {... */\n    tag_205:\n        /* \"contracts/Online/ERC20/Uni.sol\":21110:21122  cp.fromBlock */\n      dup1\n      mload\n        /* \"contracts/Online/ERC20/Uni.sol\":21110:21136  cp.fromBlock < blockNumber */\n      0xffffffff\n      and\n      dup8\n      gt\n        /* \"contracts/Online/ERC20/Uni.sol\":21106:21242  if (cp.fromBlock < blockNumber) {... */\n      iszero\n      tag_207\n      jumpi\n        /* \"contracts/Online/ERC20/Uni.sol\":21164:21170  center */\n      dup2\n        /* \"contracts/Online/ERC20/Uni.sol\":21156:21170  lower = center */\n      swap4\n      pop\n        /* \"contracts/Online/ERC20/Uni.sol\":21106:21242  if (cp.fromBlock < blockNumber) {... */\n      jump(tag_208)\n    tag_207:\n        /* \"contracts/Online/ERC20/Uni.sol\":21217:21227  center - 1 */\n      tag_209\n        /* \"contracts/Online/ERC20/Uni.sol\":21226:21227  1 */\n      0x01\n        /* \"contracts/Online/ERC20/Uni.sol\":21217:21223  center */\n      dup4\n        /* \"contracts/Online/ERC20/Uni.sol\":21217:21227  center - 1 */\n      tag_194\n      jump\t// in\n    tag_209:\n        /* \"contracts/Online/ERC20/Uni.sol\":21209:21227  upper = center - 1 */\n      swap3\n      pop\n        /* \"contracts/Online/ERC20/Uni.sol\":21106:21242  if (cp.fromBlock < blockNumber) {... */\n    tag_208:\n        /* \"contracts/Online/ERC20/Uni.sol\":20856:21252  {... */\n      pop\n      pop\n        /* \"contracts/Online/ERC20/Uni.sol\":20834:21252  while (upper > lower) {... */\n      jump(tag_199)\n    tag_200:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Online/ERC20/Uni.sol\":21268:21288  checkpoints[account] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Online/ERC20/Uni.sol\":21268:21279  checkpoints */\n      0x06\n        /* \"contracts/Online/ERC20/Uni.sol\":21268:21288  checkpoints[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Online/ERC20/Uni.sol\":21268:21295  checkpoints[account][lower] */\n      0xffffffff\n      swap1\n      swap5\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"contracts/Online/ERC20/Uni.sol\":21268:21301  checkpoints[account][lower].votes */\n      sload\n      sub(shl(0x60, 0x01), 0x01)\n      shl(0x20, 0x01)\n      swap1\n      swap2\n      div\n      and\n      swap2\n      pop\n      pop\n        /* \"contracts/Online/ERC20/Uni.sol\":20058:21308  function getPriorVotes(address account, uint256 blockNumber)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Online/ERC20/Uni.sol\":16162:16432  function transfer(address dst, uint256 rawAmount) external returns (bool) {... */\n    tag_113:\n        /* \"contracts/Online/ERC20/Uni.sol\":16230:16234  bool */\n      0x00\n        /* \"contracts/Online/ERC20/Uni.sol\":16246:16259  uint96 amount */\n      dup1\n        /* \"contracts/Online/ERC20/Uni.sol\":16262:16354  safe96(... */\n      tag_211\n        /* \"contracts/Online/ERC20/Uni.sol\":16282:16291  rawAmount */\n      dup4\n        /* \"contracts/Online/ERC20/Uni.sol\":16262:16354  safe96(... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_9bc67db7413f33b8f7a9995149809b7b3a4a83b5ba884084bea06cfb35986555\n      0x25\n      swap2\n      codecopy\n        /* \"contracts/Online/ERC20/Uni.sol\":16262:16268  safe96 */\n      tag_146\n        /* \"contracts/Online/ERC20/Uni.sol\":16262:16354  safe96(... */\n      jump\t// in\n    tag_211:\n        /* \"contracts/Online/ERC20/Uni.sol\":16246:16354  uint96 amount = safe96(... */\n      swap1\n      pop\n        /* \"contracts/Online/ERC20/Uni.sol\":16364:16404  _transferTokens(msg.sender, dst, amount) */\n      tag_212\n        /* \"contracts/Online/ERC20/Uni.sol\":16380:16390  msg.sender */\n      caller\n        /* \"contracts/Online/ERC20/Uni.sol\":16392:16395  dst */\n      dup6\n        /* \"contracts/Online/ERC20/Uni.sol\":16397:16403  amount */\n      dup4\n        /* \"contracts/Online/ERC20/Uni.sol\":16364:16379  _transferTokens */\n      tag_156\n        /* \"contracts/Online/ERC20/Uni.sol\":16364:16404  _transferTokens(msg.sender, dst, amount) */\n      jump\t// in\n    tag_212:\n      pop\n        /* \"contracts/Online/ERC20/Uni.sol\":16421:16425  true */\n      0x01\n      swap4\n        /* \"contracts/Online/ERC20/Uni.sol\":16162:16432  function transfer(address dst, uint256 rawAmount) external returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Online/ERC20/Uni.sol\":19405:19636  function getCurrentVotes(address account) external view returns (uint96) {... */\n    tag_117:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Online/ERC20/Uni.sol\":19510:19533  numCheckpoints[account] */\n      dup2\n      and\n        /* \"contracts/Online/ERC20/Uni.sol\":19470:19476  uint96 */\n      0x00\n        /* \"contracts/Online/ERC20/Uni.sol\":19510:19533  numCheckpoints[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Online/ERC20/Uni.sol\":19510:19524  numCheckpoints */\n      0x07\n        /* \"contracts/Online/ERC20/Uni.sol\":19510:19533  numCheckpoints[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xffffffff\n      and\n        /* \"contracts/Online/ERC20/Uni.sol\":19562:19578  nCheckpoints > 0 */\n      dup1\n        /* \"contracts/Online/ERC20/Uni.sol\":19562:19629  nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0 */\n      tag_214\n      jumpi\n        /* \"contracts/Online/ERC20/Uni.sol\":19628:19629  0 */\n      0x00\n        /* \"contracts/Online/ERC20/Uni.sol\":19562:19629  nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0 */\n      jump(tag_215)\n    tag_214:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Online/ERC20/Uni.sol\":19581:19601  checkpoints[account] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Online/ERC20/Uni.sol\":19581:19592  checkpoints */\n      0x06\n        /* \"contracts/Online/ERC20/Uni.sol\":19581:19601  checkpoints[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"contracts/Online/ERC20/Uni.sol\":19602:19618  nCheckpoints - 1 */\n      tag_216\n        /* \"contracts/Online/ERC20/Uni.sol\":19617:19618  1 */\n      0x01\n        /* \"contracts/Online/ERC20/Uni.sol\":19602:19614  nCheckpoints */\n      dup5\n        /* \"contracts/Online/ERC20/Uni.sol\":19602:19618  nCheckpoints - 1 */\n      tag_194\n      jump\t// in\n    tag_216:\n        /* \"contracts/Online/ERC20/Uni.sol\":19581:19619  checkpoints[account][nCheckpoints - 1] */\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"contracts/Online/ERC20/Uni.sol\":19581:19625  checkpoints[account][nCheckpoints - 1].votes */\n      sload\n      shl(0x20, 0x01)\n      swap1\n      div\n      sub(shl(0x60, 0x01), 0x01)\n      and\n        /* \"contracts/Online/ERC20/Uni.sol\":19562:19629  nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0 */\n    tag_215:\n        /* \"contracts/Online/ERC20/Uni.sol\":19543:19629  return... */\n      swap4\n        /* \"contracts/Online/ERC20/Uni.sol\":19405:19636  function getCurrentVotes(address account) external view returns (uint96) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Online/ERC20/Uni.sol\":18150:19211  function delegateBySig(... */\n    tag_122:\n        /* \"contracts/Online/ERC20/Uni.sol\":18451:18455  name */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      dup3\n      mstore\n      0x07\n      dup2\n      mstore\n      shl(0xcc, 0x0556e697377617)\n      0x20\n      swap2\n      dup3\n      add\n      mstore\n        /* \"contracts/Online/ERC20/Uni.sol\":18374:18532  abi.encode(... */\n      dup2\n      mload\n        /* \"contracts/Online/ERC20/Uni.sol\":8451:8553  keccak256(... */\n      0x8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866\n        /* \"contracts/Online/ERC20/Uni.sol\":18374:18532  abi.encode(... */\n      dup2\n      dup4\n      add\n        /* \"#utility.yul\":8537:8562   */\n      mstore\n        /* \"contracts/Online/ERC20/Uni.sol\":18435:18457  keccak256(bytes(name)) */\n      0x99c45e8ee5dde061ced9c812089094fbd28a020e7e37f2851198887e5ca64985\n        /* \"#utility.yul\":8578:8596   */\n      dup2\n      dup5\n      add\n        /* \"#utility.yul\":8571:8605   */\n      mstore\n        /* \"contracts/Online/ERC20/Uni.sol\":25400:25409  chainid() */\n      chainid\n        /* \"#utility.yul\":8621:8639   */\n      0x60\n      dup3\n      add\n        /* \"#utility.yul\":8614:8648   */\n      mstore\n        /* \"contracts/Online/ERC20/Uni.sol\":18513:18517  this */\n      address\n        /* \"#utility.yul\":8664:8682   */\n      0x80\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":8657:8717   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"contracts/Online/ERC20/Uni.sol\":18374:18532  abi.encode(... */\n      dup4\n      mload\n      dup1\n      dup4\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":8509:8528   */\n      0xa0\n      dup3\n      add\n        /* \"contracts/Online/ERC20/Uni.sol\":18374:18532  abi.encode(... */\n      dup5\n      mstore\n        /* \"contracts/Online/ERC20/Uni.sol\":18351:18542  keccak256(... */\n      dup1\n      mload\n      swap1\n      dup4\n      add\n      keccak256\n        /* \"contracts/Online/ERC20/Uni.sol\":8698:8769  keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n      0xe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf\n        /* \"contracts/Online/ERC20/Uni.sol\":18596:18653  abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry) */\n      0xc0\n      dup4\n      add\n        /* \"#utility.yul\":8959:8984   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9020:9052   */\n      dup11\n      and\n        /* \"#utility.yul\":9000:9018   */\n      0xe0\n      dup4\n      add\n        /* \"#utility.yul\":8993:9053   */\n      mstore\n        /* \"#utility.yul\":9069:9087   */\n      0x0100\n      dup3\n      add\n        /* \"#utility.yul\":9062:9096   */\n      dup10\n      swap1\n      mstore\n        /* \"#utility.yul\":9112:9130   */\n      0x0120\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":9105:9139   */\n      dup10\n      swap1\n      mstore\n        /* \"contracts/Online/ERC20/Uni.sol\":18596:18653  abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry) */\n      dup5\n      mload\n      dup1\n      dup5\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":8931:8950   */\n      0x0140\n      dup4\n      add\n        /* \"contracts/Online/ERC20/Uni.sol\":18596:18653  abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry) */\n      swap1\n      swap5\n      mstore\n        /* \"contracts/Online/ERC20/Uni.sol\":18573:18663  keccak256(... */\n      dup4\n      mload\n      swap4\n      swap1\n      swap3\n      add\n      swap3\n      swap1\n      swap3\n      keccak256\n      shl(0xf0, 0x1901)\n        /* \"contracts/Online/ERC20/Uni.sol\":18713:18770  abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash) */\n      0x0160\n      dup5\n      add\n        /* \"#utility.yul\":9408:9435   */\n      mstore\n        /* \"#utility.yul\":9451:9462   */\n      0x0162\n      dup4\n      add\n        /* \"#utility.yul\":9444:9471   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":9487:9499   */\n      0x0182\n      dup4\n      add\n        /* \"#utility.yul\":9480:9508   */\n      dup2\n      swap1\n      mstore\n        /* \"contracts/Online/ERC20/Uni.sol\":18351:18542  keccak256(... */\n      swap1\n      swap2\n      0x00\n      swap1\n        /* \"#utility.yul\":9524:9536   */\n      0x01a2\n      add\n        /* \"contracts/Online/ERC20/Uni.sol\":18713:18770  abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash) */\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      dup3\n      dup3\n      mstore\n        /* \"contracts/Online/ERC20/Uni.sol\":18690:18780  keccak256(... */\n      dup1\n      mload\n        /* \"contracts/Online/ERC20/Uni.sol\":18713:18770  abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash) */\n      0x20\n        /* \"contracts/Online/ERC20/Uni.sol\":18690:18780  keccak256(... */\n      swap2\n      dup3\n      add\n      keccak256\n        /* \"contracts/Online/ERC20/Uni.sol\":18790:18807  address signatory */\n      0x00\n        /* \"contracts/Online/ERC20/Uni.sol\":18810:18836  ecrecover(digest, v, r, s) */\n      dup1\n      dup6\n      mstore\n      swap2\n      dup5\n      add\n      dup1\n      dup5\n      mstore\n        /* \"#utility.yul\":9774:9799   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":9847:9851   */\n      0xff\n        /* \"#utility.yul\":9835:9852   */\n      dup11\n      and\n        /* \"#utility.yul\":9815:9833   */\n      swap3\n      dup5\n      add\n        /* \"#utility.yul\":9808:9853   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":9869:9887   */\n      0x60\n      dup4\n      add\n        /* \"#utility.yul\":9862:9896   */\n      dup9\n      swap1\n      mstore\n        /* \"#utility.yul\":9912:9930   */\n      0x80\n      dup4\n      add\n        /* \"#utility.yul\":9905:9939   */\n      dup8\n      swap1\n      mstore\n        /* \"contracts/Online/ERC20/Uni.sol\":18690:18780  keccak256(... */\n      swap1\n      swap3\n      pop\n        /* \"contracts/Online/ERC20/Uni.sol\":18790:18807  address signatory */\n      swap1\n        /* \"contracts/Online/ERC20/Uni.sol\":18810:18836  ecrecover(digest, v, r, s) */\n      0x01\n      swap1\n        /* \"#utility.yul\":9746:9765   */\n      0xa0\n      add\n        /* \"contracts/Online/ERC20/Uni.sol\":18810:18836  ecrecover(digest, v, r, s) */\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_229\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_229:\n      pop\n      pop\n      mload(add(not(0x1f), mload(0x40)))\n      swap2\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Online/ERC20/Uni.sol\":18867:18890  signatory != address(0) */\n      dup2\n      and\n        /* \"contracts/Online/ERC20/Uni.sol\":18846:18953  require(... */\n      tag_230\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10152:10154   */\n      0x20\n        /* \"contracts/Online/ERC20/Uni.sol\":18846:18953  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10134:10155   */\n      mstore\n        /* \"#utility.yul\":10191:10193   */\n      0x25\n        /* \"#utility.yul\":10171:10189   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10164:10194   */\n      mstore\n        /* \"#utility.yul\":10230:10264   */\n      0x556e693a3a64656c656761746542795369673a20696e76616c6964207369676e\n        /* \"#utility.yul\":10210:10228   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10203:10265   */\n      mstore\n      shl(0xd8, 0x6174757265)\n        /* \"#utility.yul\":10281:10299   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10274:10309   */\n      mstore\n        /* \"#utility.yul\":10326:10345   */\n      0x84\n      add\n        /* \"contracts/Online/ERC20/Uni.sol\":18846:18953  require(... */\n      tag_159\n        /* \"#utility.yul\":9950:10351   */\n      jump\n        /* \"contracts/Online/ERC20/Uni.sol\":18846:18953  require(... */\n    tag_230:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Online/ERC20/Uni.sol\":18993:19010  nonces[signatory] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Online/ERC20/Uni.sol\":18993:18999  nonces */\n      0x08\n        /* \"contracts/Online/ERC20/Uni.sol\":18993:19010  nonces[signatory] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Online/ERC20/Uni.sol\":18993:19012  nonces[signatory]++ */\n      dup1\n      sload\n      swap2\n      tag_233\n      dup4\n      tag_234\n      jump\t// in\n    tag_233:\n      swap2\n      swap1\n      pop\n      sstore\n        /* \"contracts/Online/ERC20/Uni.sol\":18984:18989  nonce */\n      dup10\n        /* \"contracts/Online/ERC20/Uni.sol\":18984:19012  nonce == nonces[signatory]++ */\n      eq\n        /* \"contracts/Online/ERC20/Uni.sol\":18963:19071  require(... */\n      tag_235\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10698:10700   */\n      0x20\n        /* \"contracts/Online/ERC20/Uni.sol\":18963:19071  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10680:10701   */\n      mstore\n        /* \"#utility.yul\":10737:10739   */\n      0x21\n        /* \"#utility.yul\":10717:10735   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10710:10740   */\n      mstore\n        /* \"#utility.yul\":10776:10810   */\n      0x556e693a3a64656c656761746542795369673a20696e76616c6964206e6f6e63\n        /* \"#utility.yul\":10756:10774   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10749:10811   */\n      mstore\n      shl(0xf8, 0x65)\n        /* \"#utility.yul\":10827:10845   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10820:10851   */\n      mstore\n        /* \"#utility.yul\":10868:10887   */\n      0x84\n      add\n        /* \"contracts/Online/ERC20/Uni.sol\":18963:19071  require(... */\n      tag_159\n        /* \"#utility.yul\":10496:10893   */\n      jump\n        /* \"contracts/Online/ERC20/Uni.sol\":18963:19071  require(... */\n    tag_235:\n        /* \"contracts/Online/ERC20/Uni.sol\":19108:19114  expiry */\n      dup8\n        /* \"contracts/Online/ERC20/Uni.sol\":19089:19104  block.timestamp */\n      timestamp\n        /* \"contracts/Online/ERC20/Uni.sol\":19089:19114  block.timestamp <= expiry */\n      gt\n      iszero\n        /* \"contracts/Online/ERC20/Uni.sol\":19081:19156  require(block.timestamp <= expiry, \"Uni::delegateBySig: signature expired\") */\n      tag_238\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11100:11102   */\n      0x20\n        /* \"contracts/Online/ERC20/Uni.sol\":19081:19156  require(block.timestamp <= expiry, \"Uni::delegateBySig: signature expired\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11082:11103   */\n      mstore\n        /* \"#utility.yul\":11139:11141   */\n      0x25\n        /* \"#utility.yul\":11119:11137   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11112:11142   */\n      mstore\n        /* \"#utility.yul\":11178:11212   */\n      0x556e693a3a64656c656761746542795369673a207369676e6174757265206578\n        /* \"#utility.yul\":11158:11176   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11151:11213   */\n      mstore\n      shl(0xda, 0x1c1a5c9959)\n        /* \"#utility.yul\":11229:11247   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11222:11257   */\n      mstore\n        /* \"#utility.yul\":11274:11293   */\n      0x84\n      add\n        /* \"contracts/Online/ERC20/Uni.sol\":19081:19156  require(block.timestamp <= expiry, \"Uni::delegateBySig: signature expired\") */\n      tag_159\n        /* \"#utility.yul\":10898:11299   */\n      jump\n        /* \"contracts/Online/ERC20/Uni.sol\":19081:19156  require(block.timestamp <= expiry, \"Uni::delegateBySig: signature expired\") */\n    tag_238:\n        /* \"contracts/Online/ERC20/Uni.sol\":19173:19204  _delegate(signatory, delegatee) */\n      tag_241\n        /* \"contracts/Online/ERC20/Uni.sol\":19183:19192  signatory */\n      dup2\n        /* \"contracts/Online/ERC20/Uni.sol\":19194:19203  delegatee */\n      dup12\n        /* \"contracts/Online/ERC20/Uni.sol\":19173:19182  _delegate */\n      tag_186\n        /* \"contracts/Online/ERC20/Uni.sol\":19173:19204  _delegate(signatory, delegatee) */\n      jump\t// in\n    tag_241:\n        /* \"contracts/Online/ERC20/Uni.sol\":19166:19204  return _delegate(signatory, delegatee) */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Online/ERC20/Uni.sol\":18150:19211  function delegateBySig(... */\n    tag_217:\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Online/ERC20/Uni.sol\":14327:15601  function permit(... */\n    tag_126:\n        /* \"contracts/Online/ERC20/Uni.sol\":14524:14537  uint96 amount */\n      0x00\n        /* \"contracts/Online/ERC20/Uni.sol\":14556:14612  safe96(rawAmount, \"Uni::permit: amount exceeds 96 bits\") */\n      tag_243\n        /* \"contracts/Online/ERC20/Uni.sol\":14563:14572  rawAmount */\n      dup7\n        /* \"contracts/Online/ERC20/Uni.sol\":14556:14612  safe96(rawAmount, \"Uni::permit: amount exceeds 96 bits\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      data_58da0b91010307ee6a63257c5283618928105e355857d8f79cf7e017ad7082f4\n      0x23\n      swap2\n      codecopy\n        /* \"contracts/Online/ERC20/Uni.sol\":14556:14562  safe96 */\n      tag_146\n        /* \"contracts/Online/ERC20/Uni.sol\":14556:14612  safe96(rawAmount, \"Uni::permit: amount exceeds 96 bits\") */\n      jump\t// in\n    tag_243:\n        /* \"contracts/Online/ERC20/Uni.sol\":14759:14763  name */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      dup3\n      mstore\n      0x07\n      dup2\n      mstore\n      shl(0xcc, 0x0556e697377617)\n      0x20\n      swap2\n      dup3\n      add\n      mstore\n        /* \"contracts/Online/ERC20/Uni.sol\":14682:14840  abi.encode(... */\n      dup2\n      mload\n        /* \"contracts/Online/ERC20/Uni.sol\":8451:8553  keccak256(... */\n      0x8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866\n        /* \"contracts/Online/ERC20/Uni.sol\":14682:14840  abi.encode(... */\n      dup2\n      dup4\n      add\n        /* \"#utility.yul\":8537:8562   */\n      mstore\n        /* \"contracts/Online/ERC20/Uni.sol\":14743:14765  keccak256(bytes(name)) */\n      0x99c45e8ee5dde061ced9c812089094fbd28a020e7e37f2851198887e5ca64985\n        /* \"#utility.yul\":8578:8596   */\n      dup2\n      dup5\n      add\n        /* \"#utility.yul\":8571:8605   */\n      mstore\n        /* \"contracts/Online/ERC20/Uni.sol\":25400:25409  chainid() */\n      chainid\n        /* \"#utility.yul\":8621:8639   */\n      0x60\n      dup3\n      add\n        /* \"#utility.yul\":8614:8648   */\n      mstore\n        /* \"contracts/Online/ERC20/Uni.sol\":14821:14825  this */\n      address\n        /* \"#utility.yul\":8664:8682   */\n      0x80\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":8657:8717   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"contracts/Online/ERC20/Uni.sol\":14682:14840  abi.encode(... */\n      dup4\n      mload\n      dup1\n      dup4\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":8509:8528   */\n      0xa0\n      swap1\n      swap2\n      add\n        /* \"contracts/Online/ERC20/Uni.sol\":14682:14840  abi.encode(... */\n      dup4\n      mstore\n        /* \"contracts/Online/ERC20/Uni.sol\":14659:14850  keccak256(... */\n      dup1\n      mload\n      swap1\n      dup3\n      add\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Online/ERC20/Uni.sol\":15040:15053  nonces[owner] */\n      dup13\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Online/ERC20/Uni.sol\":15040:15046  nonces */\n      0x08\n        /* \"contracts/Online/ERC20/Uni.sol\":15040:15053  nonces[owner] */\n      swap1\n      swap3\n      mstore\n      swap2\n      dup2\n      keccak256\n        /* \"contracts/Online/ERC20/Uni.sol\":15040:15055  nonces[owner]++ */\n      dup1\n      sload\n        /* \"contracts/Online/ERC20/Uni.sol\":14547:14612  amount = safe96(rawAmount, \"Uni::permit: amount exceeds 96 bits\") */\n      swap4\n      swap5\n      pop\n        /* \"contracts/Online/ERC20/Uni.sol\":14659:14850  keccak256(... */\n      swap2\n      swap3\n      swap1\n      swap2\n        /* \"contracts/Online/ERC20/Uni.sol\":8906:9023  keccak256(... */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n      swap2\n        /* \"contracts/Online/ERC20/Uni.sol\":15040:15053  nonces[owner] */\n      dup13\n      swap2\n        /* \"contracts/Online/ERC20/Uni.sol\":14988:14995  spender */\n      dup13\n      swap2\n        /* \"contracts/Online/ERC20/Uni.sol\":15013:15022  rawAmount */\n      dup13\n      swap2\n      dup7\n        /* \"contracts/Online/ERC20/Uni.sol\":15040:15055  nonces[owner]++ */\n      tag_246\n      dup4\n      tag_234\n      jump\t// in\n    tag_246:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/Online/ERC20/Uni.sol\":14904:15095  abi.encode(... */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n        /* \"#utility.yul\":11591:11616   */\n      swap7\n      swap1\n      swap7\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":11652:11684   */\n      swap5\n      dup6\n      and\n        /* \"#utility.yul\":11632:11650   */\n      swap1\n      dup7\n      add\n        /* \"#utility.yul\":11625:11685   */\n      mstore\n        /* \"#utility.yul\":11721:11753   */\n      swap3\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":11701:11719   */\n      0x60\n      dup5\n      add\n        /* \"#utility.yul\":11694:11754   */\n      mstore\n        /* \"#utility.yul\":11770:11788   */\n      0x80\n      dup4\n      add\n        /* \"#utility.yul\":11763:11797   */\n      mstore\n        /* \"#utility.yul\":11813:11832   */\n      0xa0\n      dup3\n      add\n        /* \"#utility.yul\":11806:11841   */\n      mstore\n        /* \"#utility.yul\":11857:11876   */\n      0xc0\n      dup2\n      add\n        /* \"#utility.yul\":11850:11885   */\n      dup9\n      swap1\n      mstore\n        /* \"#utility.yul\":11563:11582   */\n      0xe0\n      add\n        /* \"contracts/Online/ERC20/Uni.sol\":14904:15095  abi.encode(... */\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/Online/ERC20/Uni.sol\":14881:15105  keccak256(... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/Online/ERC20/Uni.sol\":14860:15105  bytes32 structHash = keccak256(... */\n      swap1\n      pop\n        /* \"contracts/Online/ERC20/Uni.sol\":15115:15129  bytes32 digest */\n      0x00\n        /* \"contracts/Online/ERC20/Uni.sol\":15184:15199  domainSeparator */\n      dup3\n        /* \"contracts/Online/ERC20/Uni.sol\":15201:15211  structHash */\n      dup3\n        /* \"contracts/Online/ERC20/Uni.sol\":15155:15212  abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash) */\n      add(0x20, mload(0x40))\n      tag_249\n      swap3\n      swap2\n      swap1\n      shl(0xf0, 0x1901)\n        /* \"#utility.yul\":9408:9435   */\n      dup2\n      mstore\n        /* \"#utility.yul\":9460:9461   */\n      0x02\n        /* \"#utility.yul\":9451:9462   */\n      dup2\n      add\n        /* \"#utility.yul\":9444:9471   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":9496:9498   */\n      0x22\n        /* \"#utility.yul\":9487:9499   */\n      dup3\n      add\n        /* \"#utility.yul\":9480:9508   */\n      mstore\n        /* \"#utility.yul\":9533:9535   */\n      0x42\n        /* \"#utility.yul\":9524:9536   */\n      add\n      swap1\n        /* \"#utility.yul\":9150:9542   */\n      jump\n        /* \"contracts/Online/ERC20/Uni.sol\":15155:15212  abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash) */\n    tag_249:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      dup3\n      dup3\n      mstore\n        /* \"contracts/Online/ERC20/Uni.sol\":15132:15222  keccak256(... */\n      dup1\n      mload\n        /* \"contracts/Online/ERC20/Uni.sol\":15155:15212  abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash) */\n      0x20\n        /* \"contracts/Online/ERC20/Uni.sol\":15132:15222  keccak256(... */\n      swap2\n      dup3\n      add\n      keccak256\n        /* \"contracts/Online/ERC20/Uni.sol\":15232:15249  address signatory */\n      0x00\n        /* \"contracts/Online/ERC20/Uni.sol\":15252:15278  ecrecover(digest, v, r, s) */\n      dup1\n      dup6\n      mstore\n      swap2\n      dup5\n      add\n      dup1\n      dup5\n      mstore\n        /* \"#utility.yul\":9774:9799   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":9847:9851   */\n      0xff\n        /* \"#utility.yul\":9835:9852   */\n      dup12\n      and\n        /* \"#utility.yul\":9815:9833   */\n      swap3\n      dup5\n      add\n        /* \"#utility.yul\":9808:9853   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":9869:9887   */\n      0x60\n      dup4\n      add\n        /* \"#utility.yul\":9862:9896   */\n      dup10\n      swap1\n      mstore\n        /* \"#utility.yul\":9912:9930   */\n      0x80\n      dup4\n      add\n        /* \"#utility.yul\":9905:9939   */\n      dup9\n      swap1\n      mstore\n        /* \"contracts/Online/ERC20/Uni.sol\":15132:15222  keccak256(... */\n      swap1\n      swap3\n      pop\n        /* \"contracts/Online/ERC20/Uni.sol\":15232:15249  address signatory */\n      swap1\n        /* \"contracts/Online/ERC20/Uni.sol\":15252:15278  ecrecover(digest, v, r, s) */\n      0x01\n      swap1\n        /* \"#utility.yul\":9746:9765   */\n      0xa0\n      add\n        /* \"contracts/Online/ERC20/Uni.sol\":15252:15278  ecrecover(digest, v, r, s) */\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_252\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_252:\n      pop\n      pop\n      mload(add(not(0x1f), mload(0x40)))\n      swap2\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Online/ERC20/Uni.sol\":15296:15319  signatory != address(0) */\n      dup2\n      and\n        /* \"contracts/Online/ERC20/Uni.sol\":15288:15354  require(signatory != address(0), \"Uni::permit: invalid signature\") */\n      tag_253\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12098:12100   */\n      0x20\n        /* \"contracts/Online/ERC20/Uni.sol\":15288:15354  require(signatory != address(0), \"Uni::permit: invalid signature\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12080:12101   */\n      mstore\n        /* \"#utility.yul\":12137:12139   */\n      0x1e\n        /* \"#utility.yul\":12117:12135   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12110:12140   */\n      mstore\n        /* \"#utility.yul\":12176:12208   */\n      0x556e693a3a7065726d69743a20696e76616c6964207369676e61747572650000\n        /* \"#utility.yul\":12156:12174   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12149:12209   */\n      mstore\n        /* \"#utility.yul\":12226:12244   */\n      0x64\n      add\n        /* \"contracts/Online/ERC20/Uni.sol\":15288:15354  require(signatory != address(0), \"Uni::permit: invalid signature\") */\n      tag_159\n        /* \"#utility.yul\":11896:12250   */\n      jump\n        /* \"contracts/Online/ERC20/Uni.sol\":15288:15354  require(signatory != address(0), \"Uni::permit: invalid signature\") */\n    tag_253:\n        /* \"contracts/Online/ERC20/Uni.sol\":15385:15390  owner */\n      dup12\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Online/ERC20/Uni.sol\":15372:15390  signatory == owner */\n      and\n        /* \"contracts/Online/ERC20/Uni.sol\":15372:15381  signatory */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Online/ERC20/Uni.sol\":15372:15390  signatory == owner */\n      and\n      eq\n        /* \"contracts/Online/ERC20/Uni.sol\":15364:15420  require(signatory == owner, \"Uni::permit: unauthorized\") */\n      tag_256\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12457:12459   */\n      0x20\n        /* \"contracts/Online/ERC20/Uni.sol\":15364:15420  require(signatory == owner, \"Uni::permit: unauthorized\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12439:12460   */\n      mstore\n        /* \"#utility.yul\":12496:12498   */\n      0x19\n        /* \"#utility.yul\":12476:12494   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12469:12499   */\n      mstore\n        /* \"#utility.yul\":12535:12562   */\n      0x556e693a3a7065726d69743a20756e617574686f72697a656400000000000000\n        /* \"#utility.yul\":12515:12533   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12508:12563   */\n      mstore\n        /* \"#utility.yul\":12580:12598   */\n      0x64\n      add\n        /* \"contracts/Online/ERC20/Uni.sol\":15364:15420  require(signatory == owner, \"Uni::permit: unauthorized\") */\n      tag_159\n        /* \"#utility.yul\":12255:12604   */\n      jump\n        /* \"contracts/Online/ERC20/Uni.sol\":15364:15420  require(signatory == owner, \"Uni::permit: unauthorized\") */\n    tag_256:\n        /* \"contracts/Online/ERC20/Uni.sol\":15457:15465  deadline */\n      dup9\n        /* \"contracts/Online/ERC20/Uni.sol\":15438:15453  block.timestamp */\n      timestamp\n        /* \"contracts/Online/ERC20/Uni.sol\":15438:15465  block.timestamp <= deadline */\n      gt\n      iszero\n        /* \"contracts/Online/ERC20/Uni.sol\":15430:15500  require(block.timestamp <= deadline, \"Uni::permit: signature expired\") */\n      tag_259\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12811:12813   */\n      0x20\n        /* \"contracts/Online/ERC20/Uni.sol\":15430:15500  require(block.timestamp <= deadline, \"Uni::permit: signature expired\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12793:12814   */\n      mstore\n        /* \"#utility.yul\":12850:12852   */\n      0x1e\n        /* \"#utility.yul\":12830:12848   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12823:12853   */\n      mstore\n        /* \"#utility.yul\":12889:12921   */\n      0x556e693a3a7065726d69743a207369676e617475726520657870697265640000\n        /* \"#utility.yul\":12869:12887   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12862:12922   */\n      mstore\n        /* \"#utility.yul\":12939:12957   */\n      0x64\n      add\n        /* \"contracts/Online/ERC20/Uni.sol\":15430:15500  require(block.timestamp <= deadline, \"Uni::permit: signature expired\") */\n      tag_159\n        /* \"#utility.yul\":12609:12963   */\n      jump\n        /* \"contracts/Online/ERC20/Uni.sol\":15430:15500  require(block.timestamp <= deadline, \"Uni::permit: signature expired\") */\n    tag_259:\n        /* \"contracts/Online/ERC20/Uni.sol\":15540:15546  amount */\n      dup5\n        /* \"contracts/Online/ERC20/Uni.sol\":15511:15521  allowances */\n      0x03\n        /* \"contracts/Online/ERC20/Uni.sol\":15511:15528  allowances[owner] */\n      0x00\n        /* \"contracts/Online/ERC20/Uni.sol\":15522:15527  owner */\n      dup15\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Online/ERC20/Uni.sol\":15511:15528  allowances[owner] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Online/ERC20/Uni.sol\":15511:15537  allowances[owner][spender] */\n      0x00\n        /* \"contracts/Online/ERC20/Uni.sol\":15529:15536  spender */\n      dup14\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Online/ERC20/Uni.sol\":15511:15537  allowances[owner][spender] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Online/ERC20/Uni.sol\":15511:15546  allowances[owner][spender] = amount */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      sub(shl(0x60, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0x60, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Online/ERC20/Uni.sol\":15578:15585  spender */\n      dup11\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Online/ERC20/Uni.sol\":15562:15594  Approval(owner, spender, amount) */\n      and\n        /* \"contracts/Online/ERC20/Uni.sol\":15571:15576  owner */\n      dup13\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Online/ERC20/Uni.sol\":15562:15594  Approval(owner, spender, amount) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/Online/ERC20/Uni.sol\":15587:15593  amount */\n      dup8\n        /* \"contracts/Online/ERC20/Uni.sol\":15562:15594  Approval(owner, spender, amount) */\n      mload(0x40)\n      tag_262\n      swap2\n      swap1\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"#utility.yul\":2802:2841   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2784:2842   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2772:2774   */\n      0x20\n        /* \"#utility.yul\":2757:2775   */\n      add\n      swap1\n        /* \"#utility.yul\":2640:2848   */\n      jump\n        /* \"contracts/Online/ERC20/Uni.sol\":15562:15594  Approval(owner, spender, amount) */\n    tag_262:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Online/ERC20/Uni.sol\":14514:15601  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Online/ERC20/Uni.sol\":14327:15601  function permit(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Online/ERC20/Uni.sol\":10897:11158  function setMinter(address minter_) external {... */\n    tag_143:\n        /* \"contracts/Online/ERC20/Uni.sol\":10987:10993  minter */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"contracts/Online/ERC20/Uni.sol\":10973:10983  msg.sender */\n      caller\n        /* \"contracts/Online/ERC20/Uni.sol\":10973:10993  msg.sender == minter */\n      eq\n        /* \"contracts/Online/ERC20/Uni.sol\":10952:11080  require(... */\n      tag_265\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13170:13172   */\n      0x20\n        /* \"contracts/Online/ERC20/Uni.sol\":10952:11080  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13152:13173   */\n      mstore\n        /* \"#utility.yul\":13209:13211   */\n      0x3d\n        /* \"#utility.yul\":13189:13207   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13182:13212   */\n      mstore\n        /* \"#utility.yul\":13248:13282   */\n      0x556e693a3a7365744d696e7465723a206f6e6c7920746865206d696e74657220\n        /* \"#utility.yul\":13228:13246   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13221:13283   */\n      mstore\n        /* \"#utility.yul\":13319:13350   */\n      0x63616e206368616e676520746865206d696e7465722061646472657373000000\n        /* \"#utility.yul\":13299:13317   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13292:13351   */\n      mstore\n        /* \"#utility.yul\":13368:13387   */\n      0x84\n      add\n        /* \"contracts/Online/ERC20/Uni.sol\":10952:11080  require(... */\n      tag_159\n        /* \"#utility.yul\":12968:13393   */\n      jump\n        /* \"contracts/Online/ERC20/Uni.sol\":10952:11080  require(... */\n    tag_265:\n        /* \"contracts/Online/ERC20/Uni.sol\":11109:11115  minter */\n      sload(0x01)\n        /* \"contracts/Online/ERC20/Uni.sol\":11095:11125  MinterChanged(minter, minter_) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Online/ERC20/Uni.sol\":11109:11115  minter */\n      swap3\n      dup4\n      and\n        /* \"#utility.yul\":13572:13623   */\n      dup2\n      mstore\n        /* \"#utility.yul\":13659:13691   */\n      swap2\n      dup4\n      and\n        /* \"#utility.yul\":13654:13656   */\n      0x20\n        /* \"#utility.yul\":13639:13657   */\n      dup4\n      add\n        /* \"#utility.yul\":13632:13692   */\n      mstore\n        /* \"contracts/Online/ERC20/Uni.sol\":11095:11125  MinterChanged(minter, minter_) */\n      0x3b0007eb941cf645526cbb3a4fdaecda9d28ce4843167d9263b536a1f1edc0f6\n      swap2\n        /* \"#utility.yul\":13545:13563   */\n      add\n        /* \"contracts/Online/ERC20/Uni.sol\":11095:11125  MinterChanged(minter, minter_) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Online/ERC20/Uni.sol\":11135:11141  minter */\n      0x01\n        /* \"contracts/Online/ERC20/Uni.sol\":11135:11151  minter = minter_ */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/Online/ERC20/Uni.sol\":10897:11158  function setMinter(address minter_) external {... */\n      jump\t// out\n        /* \"contracts/Online/ERC20/Uni.sol\":24663:24852  function safe96(uint256 n, string memory errorMessage)... */\n    tag_146:\n        /* \"contracts/Online/ERC20/Uni.sol\":24765:24771  uint96 */\n      0x00\n        /* \"contracts/Online/ERC20/Uni.sol\":24806:24818  errorMessage */\n      dup2\n      shl(0x60, 0x01)\n        /* \"contracts/Online/ERC20/Uni.sol\":24795:24804  n < 2**96 */\n      dup5\n      lt\n        /* \"contracts/Online/ERC20/Uni.sol\":24787:24819  require(n < 2**96, errorMessage) */\n      tag_271\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_159\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_271:\n      pop\n        /* \"contracts/Online/ERC20/Uni.sol\":24843:24844  n */\n      swap2\n      swap3\n        /* \"contracts/Online/ERC20/Uni.sol\":24663:24852  function safe96(uint256 n, string memory errorMessage)... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Online/ERC20/Uni.sol\":25078:25270  function sub96(... */\n    tag_153:\n        /* \"contracts/Online/ERC20/Uni.sol\":25194:25200  uint96 */\n      0x00\n        /* \"contracts/Online/ERC20/Uni.sol\":25225:25226  a */\n      dup4\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/Online/ERC20/Uni.sol\":25220:25226  b <= a */\n      and\n        /* \"contracts/Online/ERC20/Uni.sol\":25220:25221  b */\n      dup4\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/Online/ERC20/Uni.sol\":25220:25226  b <= a */\n      and\n      gt\n      iszero\n        /* \"contracts/Online/ERC20/Uni.sol\":25228:25240  errorMessage */\n      dup3\n        /* \"contracts/Online/ERC20/Uni.sol\":25212:25241  require(b <= a, errorMessage) */\n      swap1\n      tag_274\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_159\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_274:\n      pop\n        /* \"contracts/Online/ERC20/Uni.sol\":25258:25263  a - b */\n      tag_276\n        /* \"contracts/Online/ERC20/Uni.sol\":25262:25263  b */\n      dup4\n        /* \"contracts/Online/ERC20/Uni.sol\":25258:25259  a */\n      dup6\n        /* \"contracts/Online/ERC20/Uni.sol\":25258:25263  a - b */\n      tag_277\n      jump\t// in\n    tag_276:\n        /* \"contracts/Online/ERC20/Uni.sol\":25251:25263  return a - b */\n      swap5\n        /* \"contracts/Online/ERC20/Uni.sol\":25078:25270  function sub96(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Online/ERC20/Uni.sol\":21687:22478  function _transferTokens(... */\n    tag_156:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Online/ERC20/Uni.sol\":21823:21840  src != address(0) */\n      dup4\n      and\n        /* \"contracts/Online/ERC20/Uni.sol\":21802:21925  require(... */\n      tag_279\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14128:14130   */\n      0x20\n        /* \"contracts/Online/ERC20/Uni.sol\":21802:21925  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14110:14131   */\n      mstore\n        /* \"#utility.yul\":14167:14169   */\n      0x3b\n        /* \"#utility.yul\":14147:14165   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14140:14170   */\n      mstore\n        /* \"#utility.yul\":14206:14240   */\n      0x556e693a3a5f7472616e73666572546f6b656e733a2063616e6e6f7420747261\n        /* \"#utility.yul\":14186:14204   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14179:14241   */\n      mstore\n        /* \"#utility.yul\":14277:14306   */\n      0x6e736665722066726f6d20746865207a65726f20616464726573730000000000\n        /* \"#utility.yul\":14257:14275   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14250:14307   */\n      mstore\n        /* \"#utility.yul\":14324:14343   */\n      0x84\n      add\n        /* \"contracts/Online/ERC20/Uni.sol\":21802:21925  require(... */\n      tag_159\n        /* \"#utility.yul\":13926:14349   */\n      jump\n        /* \"contracts/Online/ERC20/Uni.sol\":21802:21925  require(... */\n    tag_279:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Online/ERC20/Uni.sol\":21956:21973  dst != address(0) */\n      dup3\n      and\n        /* \"contracts/Online/ERC20/Uni.sol\":21935:22056  require(... */\n      tag_282\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14556:14558   */\n      0x20\n        /* \"contracts/Online/ERC20/Uni.sol\":21935:22056  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14538:14559   */\n      mstore\n        /* \"#utility.yul\":14595:14597   */\n      0x39\n        /* \"#utility.yul\":14575:14593   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14568:14598   */\n      mstore\n        /* \"#utility.yul\":14634:14668   */\n      0x556e693a3a5f7472616e73666572546f6b656e733a2063616e6e6f7420747261\n        /* \"#utility.yul\":14614:14632   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14607:14669   */\n      mstore\n        /* \"#utility.yul\":14705:14732   */\n      0x6e7366657220746f20746865207a65726f206164647265737300000000000000\n        /* \"#utility.yul\":14685:14703   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14678:14733   */\n      mstore\n        /* \"#utility.yul\":14750:14769   */\n      0x84\n      add\n        /* \"contracts/Online/ERC20/Uni.sol\":21935:22056  require(... */\n      tag_159\n        /* \"#utility.yul\":14354:14775   */\n      jump\n        /* \"contracts/Online/ERC20/Uni.sol\":21935:22056  require(... */\n    tag_282:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Online/ERC20/Uni.sol\":22102:22115  balances[src] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Online/ERC20/Uni.sol\":22102:22110  balances */\n      0x04\n        /* \"contracts/Online/ERC20/Uni.sol\":22102:22115  balances[src] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Online/ERC20/Uni.sol\":22083:22214  sub96(... */\n      dup3\n      mload\n      0x60\n      dup2\n      add\n      swap1\n      swap4\n      mstore\n      0x35\n      dup1\n      dup5\n      mstore\n      tag_285\n      swap4\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/Online/ERC20/Uni.sol\":22102:22115  balances[src] */\n      swap1\n      swap3\n      and\n      swap3\n        /* \"contracts/Online/ERC20/Uni.sol\":22129:22135  amount */\n      dup6\n      swap3\n        /* \"contracts/Online/ERC20/Uni.sol\":22083:22214  sub96(... */\n      swap2\n      swap1\n      data_3230ba2cb739b33589720b8a5892642694535e935234939514431ff16907d24a\n      swap1\n      dup4\n      add\n      codecopy\n        /* \"contracts/Online/ERC20/Uni.sol\":22083:22088  sub96 */\n      tag_153\n        /* \"contracts/Online/ERC20/Uni.sol\":22083:22214  sub96(... */\n      jump\t// in\n    tag_285:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Online/ERC20/Uni.sol\":22067:22080  balances[src] */\n      dup5\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Online/ERC20/Uni.sol\":22067:22075  balances */\n      0x04\n        /* \"contracts/Online/ERC20/Uni.sol\":22067:22080  balances[src] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Online/ERC20/Uni.sol\":22067:22214  balances[src] = sub96(... */\n      dup1\n      sload\n      not(sub(shl(0x60, 0x01), 0x01))\n      and\n      sub(shl(0x60, 0x01), 0x01)\n      swap7\n      dup8\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/Online/ERC20/Uni.sol\":22259:22272  balances[dst] */\n      swap3\n      dup7\n      and\n      dup3\n      mstore\n      swap1\n      dup3\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Online/ERC20/Uni.sol\":22240:22365  add96(... */\n      dup3\n      mload\n      0x60\n      dup2\n      add\n      swap1\n      swap4\n      mstore\n      0x2f\n      dup1\n      dup5\n      mstore\n      tag_286\n      swap5\n        /* \"contracts/Online/ERC20/Uni.sol\":22259:22272  balances[dst] */\n      swap2\n      swap1\n      swap2\n      and\n      swap3\n        /* \"contracts/Online/ERC20/Uni.sol\":22286:22292  amount */\n      dup6\n      swap3\n        /* \"contracts/Online/ERC20/Uni.sol\":22240:22365  add96(... */\n      swap1\n      swap2\n      swap1\n      data_f838ee8b15c3d07740bb9b304b8146ec63bb435a7703825b5e6424ee2072674a\n      swap1\n      dup4\n      add\n      codecopy\n        /* \"contracts/Online/ERC20/Uni.sol\":22240:22245  add96 */\n      tag_180\n        /* \"contracts/Online/ERC20/Uni.sol\":22240:22365  add96(... */\n      jump\t// in\n    tag_286:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Online/ERC20/Uni.sol\":22224:22237  balances[dst] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Online/ERC20/Uni.sol\":22224:22232  balances */\n      0x04\n        /* \"contracts/Online/ERC20/Uni.sol\":22224:22237  balances[dst] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/Online/ERC20/Uni.sol\":22224:22365  balances[dst] = add96(... */\n      dup1\n      sload\n      not(sub(shl(0x60, 0x01), 0x01))\n      and\n      sub(shl(0x60, 0x01), 0x01)\n      swap7\n      dup8\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/Online/ERC20/Uni.sol\":22380:22406  Transfer(src, dst, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":2802:2841   */\n      swap4\n      dup6\n      and\n        /* \"#utility.yul\":2784:2842   */\n      dup5\n      mstore\n        /* \"contracts/Online/ERC20/Uni.sol\":22224:22237  balances[dst] */\n      swap1\n      swap3\n        /* \"contracts/Online/ERC20/Uni.sol\":22380:22406  Transfer(src, dst, amount) */\n      swap2\n      dup7\n      and\n      swap2\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":2757:2775   */\n      add\n        /* \"contracts/Online/ERC20/Uni.sol\":22380:22406  Transfer(src, dst, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Online/ERC20/Uni.sol\":22432:22446  delegates[src] */\n      dup1\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Online/ERC20/Uni.sol\":22432:22441  delegates */\n      0x05\n        /* \"contracts/Online/ERC20/Uni.sol\":22432:22446  delegates[src] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      sload\n        /* \"contracts/Online/ERC20/Uni.sol\":22448:22462  delegates[dst] */\n      dup6\n      dup5\n      and\n      dup4\n      mstore\n      swap2\n      keccak256\n      sload\n        /* \"contracts/Online/ERC20/Uni.sol\":22417:22471  _moveDelegates(delegates[src], delegates[dst], amount) */\n      tag_182\n      swap3\n        /* \"contracts/Online/ERC20/Uni.sol\":22432:22446  delegates[src] */\n      swap2\n      dup3\n      and\n      swap2\n        /* \"contracts/Online/ERC20/Uni.sol\":22448:22462  delegates[dst] */\n      and\n        /* \"contracts/Online/ERC20/Uni.sol\":22464:22470  amount */\n      dup4\n        /* \"contracts/Online/ERC20/Uni.sol\":22417:22431  _moveDelegates */\n      tag_183\n        /* \"contracts/Online/ERC20/Uni.sol\":22417:22471  _moveDelegates(delegates[src], delegates[dst], amount) */\n      jump\t// in\n        /* \"contracts/Online/ERC20/Uni.sol\":1128:1304  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_168:\n        /* \"contracts/Online/ERC20/Uni.sol\":1186:1193  uint256 */\n      0x00\n      dup1\n        /* \"contracts/Online/ERC20/Uni.sol\":1217:1222  a + b */\n      tag_290\n        /* \"contracts/Online/ERC20/Uni.sol\":1221:1222  b */\n      dup4\n        /* \"contracts/Online/ERC20/Uni.sol\":1217:1218  a */\n      dup6\n        /* \"contracts/Online/ERC20/Uni.sol\":1217:1222  a + b */\n      tag_291\n      jump\t// in\n    tag_290:\n        /* \"contracts/Online/ERC20/Uni.sol\":1205:1222  uint256 c = a + b */\n      swap1\n      pop\n        /* \"contracts/Online/ERC20/Uni.sol\":1245:1246  a */\n      dup4\n        /* \"contracts/Online/ERC20/Uni.sol\":1240:1241  c */\n      dup2\n        /* \"contracts/Online/ERC20/Uni.sol\":1240:1246  c >= a */\n      lt\n      iszero\n        /* \"contracts/Online/ERC20/Uni.sol\":1232:1278  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_215\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15112:15114   */\n      0x20\n        /* \"contracts/Online/ERC20/Uni.sol\":1232:1278  require(c >= a, \"SafeMath: addition overflow\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15094:15115   */\n      mstore\n        /* \"#utility.yul\":15151:15153   */\n      0x1b\n        /* \"#utility.yul\":15131:15149   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15124:15154   */\n      mstore\n        /* \"#utility.yul\":15190:15219   */\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n        /* \"#utility.yul\":15170:15188   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15163:15220   */\n      mstore\n        /* \"#utility.yul\":15237:15255   */\n      0x64\n      add\n        /* \"contracts/Online/ERC20/Uni.sol\":1232:1278  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_159\n        /* \"#utility.yul\":14910:15261   */\n      jump\n        /* \"contracts/Online/ERC20/Uni.sol\":2885:3344  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_172:\n        /* \"contracts/Online/ERC20/Uni.sol\":2943:2950  uint256 */\n      0x00\n        /* \"contracts/Online/ERC20/Uni.sol\":3184:3185  a */\n      dup3\n        /* \"contracts/Online/ERC20/Uni.sol\":3189:3190  0 */\n      0x00\n        /* \"contracts/Online/ERC20/Uni.sol\":3184:3190  a == 0 */\n      sub\n        /* \"contracts/Online/ERC20/Uni.sol\":3180:3225  if (a == 0) {... */\n      tag_296\n      jumpi\n      pop\n        /* \"contracts/Online/ERC20/Uni.sol\":3213:3214  0 */\n      0x00\n        /* \"contracts/Online/ERC20/Uni.sol\":3206:3214  return 0 */\n      jump(tag_144)\n        /* \"contracts/Online/ERC20/Uni.sol\":3180:3225  if (a == 0) {... */\n    tag_296:\n        /* \"contracts/Online/ERC20/Uni.sol\":3235:3244  uint256 c */\n      0x00\n        /* \"contracts/Online/ERC20/Uni.sol\":3247:3252  a * b */\n      tag_297\n        /* \"contracts/Online/ERC20/Uni.sol\":3251:3252  b */\n      dup4\n        /* \"contracts/Online/ERC20/Uni.sol\":3247:3248  a */\n      dup6\n        /* \"contracts/Online/ERC20/Uni.sol\":3247:3252  a * b */\n      tag_298\n      jump\t// in\n    tag_297:\n        /* \"contracts/Online/ERC20/Uni.sol\":3235:3252  uint256 c = a * b */\n      swap1\n      pop\n        /* \"contracts/Online/ERC20/Uni.sol\":3279:3280  b */\n      dup3\n        /* \"contracts/Online/ERC20/Uni.sol\":3270:3275  c / a */\n      tag_299\n        /* \"contracts/Online/ERC20/Uni.sol\":3274:3275  a */\n      dup6\n        /* \"contracts/Online/ERC20/Uni.sol\":3235:3252  uint256 c = a * b */\n      dup4\n        /* \"contracts/Online/ERC20/Uni.sol\":3270:3275  c / a */\n      tag_300\n      jump\t// in\n    tag_299:\n        /* \"contracts/Online/ERC20/Uni.sol\":3270:3280  c / a == b */\n      eq\n        /* \"contracts/Online/ERC20/Uni.sol\":3262:3318  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_215\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15766:15768   */\n      0x20\n        /* \"contracts/Online/ERC20/Uni.sol\":3262:3318  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15748:15769   */\n      mstore\n        /* \"#utility.yul\":15805:15807   */\n      0x21\n        /* \"#utility.yul\":15785:15803   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15778:15808   */\n      mstore\n        /* \"#utility.yul\":15844:15878   */\n      0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f\n        /* \"#utility.yul\":15824:15842   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15817:15879   */\n      mstore\n      shl(0xf8, 0x77)\n        /* \"#utility.yul\":15895:15913   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":15888:15919   */\n      mstore\n        /* \"#utility.yul\":15936:15955   */\n      0x84\n      add\n        /* \"contracts/Online/ERC20/Uni.sol\":3262:3318  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_159\n        /* \"#utility.yul\":15564:15961   */\n      jump\n        /* \"contracts/Online/ERC20/Uni.sol\":4526:4656  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_173:\n        /* \"contracts/Online/ERC20/Uni.sol\":4584:4591  uint256 */\n      0x00\n        /* \"contracts/Online/ERC20/Uni.sol\":4610:4649  div(a, b, \"SafeMath: division by zero\") */\n      tag_215\n        /* \"contracts/Online/ERC20/Uni.sol\":4614:4615  a */\n      dup4\n        /* \"contracts/Online/ERC20/Uni.sol\":4617:4618  b */\n      dup4\n        /* \"contracts/Online/ERC20/Uni.sol\":4610:4649  div(a, b, \"SafeMath: division by zero\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/Online/ERC20/Uni.sol\":4610:4613  div */\n      tag_306\n        /* \"contracts/Online/ERC20/Uni.sol\":4610:4649  div(a, b, \"SafeMath: division by zero\") */\n      jump\t// in\n        /* \"contracts/Online/ERC20/Uni.sol\":24858:25072  function add96(... */\n    tag_180:\n        /* \"contracts/Online/ERC20/Uni.sol\":24974:24980  uint96 */\n      0x00\n      dup1\n        /* \"contracts/Online/ERC20/Uni.sol\":25003:25008  a + b */\n      tag_308\n        /* \"contracts/Online/ERC20/Uni.sol\":25007:25008  b */\n      dup5\n        /* \"contracts/Online/ERC20/Uni.sol\":25003:25004  a */\n      dup7\n        /* \"contracts/Online/ERC20/Uni.sol\":25003:25008  a + b */\n      tag_309\n      jump\t// in\n    tag_308:\n        /* \"contracts/Online/ERC20/Uni.sol\":24992:25008  uint96 c = a + b */\n      swap1\n      pop\n        /* \"contracts/Online/ERC20/Uni.sol\":25031:25032  a */\n      dup5\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/Online/ERC20/Uni.sol\":25026:25032  c >= a */\n      and\n        /* \"contracts/Online/ERC20/Uni.sol\":25026:25027  c */\n      dup2\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/Online/ERC20/Uni.sol\":25026:25032  c >= a */\n      and\n      lt\n      iszero\n        /* \"contracts/Online/ERC20/Uni.sol\":25034:25046  errorMessage */\n      dup4\n        /* \"contracts/Online/ERC20/Uni.sol\":25018:25047  require(c >= a, errorMessage) */\n      swap1\n      tag_310\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_159\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_310:\n      pop\n        /* \"contracts/Online/ERC20/Uni.sol\":25064:25065  c */\n      swap5\n        /* \"contracts/Online/ERC20/Uni.sol\":24858:25072  function add96(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Online/ERC20/Uni.sol\":22484:23671  function _moveDelegates(... */\n    tag_183:\n        /* \"contracts/Online/ERC20/Uni.sol\":22618:22624  dstRep */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Online/ERC20/Uni.sol\":22608:22624  srcRep != dstRep */\n      and\n        /* \"contracts/Online/ERC20/Uni.sol\":22608:22614  srcRep */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Online/ERC20/Uni.sol\":22608:22624  srcRep != dstRep */\n      and\n      eq\n      iszero\n        /* \"contracts/Online/ERC20/Uni.sol\":22608:22638  srcRep != dstRep && amount > 0 */\n      dup1\n      iszero\n      tag_313\n      jumpi\n      pop\n        /* \"contracts/Online/ERC20/Uni.sol\":22637:22638  0 */\n      0x00\n        /* \"contracts/Online/ERC20/Uni.sol\":22628:22634  amount */\n      dup2\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/Online/ERC20/Uni.sol\":22628:22638  amount > 0 */\n      and\n      gt\n        /* \"contracts/Online/ERC20/Uni.sol\":22608:22638  srcRep != dstRep && amount > 0 */\n    tag_313:\n        /* \"contracts/Online/ERC20/Uni.sol\":22604:23665  if (srcRep != dstRep && amount > 0) {... */\n      iszero\n      tag_182\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Online/ERC20/Uni.sol\":22658:22678  srcRep != address(0) */\n      dup4\n      and\n      iszero\n        /* \"contracts/Online/ERC20/Uni.sol\":22654:23148  if (srcRep != address(0)) {... */\n      tag_315\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Online/ERC20/Uni.sol\":22717:22739  numCheckpoints[srcRep] */\n      dup4\n      and\n        /* \"contracts/Online/ERC20/Uni.sol\":22698:22714  uint32 srcRepNum */\n      0x00\n        /* \"contracts/Online/ERC20/Uni.sol\":22717:22739  numCheckpoints[srcRep] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Online/ERC20/Uni.sol\":22717:22731  numCheckpoints */\n      0x07\n        /* \"contracts/Online/ERC20/Uni.sol\":22717:22739  numCheckpoints[srcRep] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xffffffff\n      and\n      swap1\n        /* \"contracts/Online/ERC20/Uni.sol\":22776:22789  srcRepNum > 0 */\n      dup2\n        /* \"contracts/Online/ERC20/Uni.sol\":22776:22876  srcRepNum > 0... */\n      tag_316\n      jumpi\n        /* \"contracts/Online/ERC20/Uni.sol\":22875:22876  0 */\n      0x00\n        /* \"contracts/Online/ERC20/Uni.sol\":22776:22876  srcRepNum > 0... */\n      jump(tag_317)\n    tag_316:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Online/ERC20/Uni.sol\":22812:22831  checkpoints[srcRep] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Online/ERC20/Uni.sol\":22812:22823  checkpoints */\n      0x06\n        /* \"contracts/Online/ERC20/Uni.sol\":22812:22831  checkpoints[srcRep] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"contracts/Online/ERC20/Uni.sol\":22832:22845  srcRepNum - 1 */\n      tag_318\n        /* \"contracts/Online/ERC20/Uni.sol\":22844:22845  1 */\n      0x01\n        /* \"contracts/Online/ERC20/Uni.sol\":22832:22841  srcRepNum */\n      dup6\n        /* \"contracts/Online/ERC20/Uni.sol\":22832:22845  srcRepNum - 1 */\n      tag_194\n      jump\t// in\n    tag_318:\n        /* \"contracts/Online/ERC20/Uni.sol\":22812:22846  checkpoints[srcRep][srcRepNum - 1] */\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"contracts/Online/ERC20/Uni.sol\":22812:22852  checkpoints[srcRep][srcRepNum - 1].votes */\n      sload\n      shl(0x20, 0x01)\n      swap1\n      div\n      sub(shl(0x60, 0x01), 0x01)\n      and\n        /* \"contracts/Online/ERC20/Uni.sol\":22776:22876  srcRepNum > 0... */\n    tag_317:\n        /* \"contracts/Online/ERC20/Uni.sol\":22757:22876  uint96 srcRepOld = srcRepNum > 0... */\n      swap1\n      pop\n        /* \"contracts/Online/ERC20/Uni.sol\":22894:22910  uint96 srcRepNew */\n      0x00\n        /* \"contracts/Online/ERC20/Uni.sol\":22913:23058  sub96(... */\n      tag_319\n        /* \"contracts/Online/ERC20/Uni.sol\":22940:22949  srcRepOld */\n      dup3\n        /* \"contracts/Online/ERC20/Uni.sol\":22971:22977  amount */\n      dup6\n        /* \"contracts/Online/ERC20/Uni.sol\":22913:23058  sub96(... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x27\n      dup2\n      mstore\n      0x20\n      add\n      data_8f9e8e1e6816d4a772d233c08b8292a576126f7dbd1d9b7cd30ef07f7c3d78d2\n      0x27\n      swap2\n      codecopy\n        /* \"contracts/Online/ERC20/Uni.sol\":22913:22918  sub96 */\n      tag_153\n        /* \"contracts/Online/ERC20/Uni.sol\":22913:23058  sub96(... */\n      jump\t// in\n    tag_319:\n        /* \"contracts/Online/ERC20/Uni.sol\":22894:23058  uint96 srcRepNew = sub96(... */\n      swap1\n      pop\n        /* \"contracts/Online/ERC20/Uni.sol\":23076:23133  _writeCheckpoint(srcRep, srcRepNum, srcRepOld, srcRepNew) */\n      tag_320\n        /* \"contracts/Online/ERC20/Uni.sol\":23093:23099  srcRep */\n      dup7\n        /* \"contracts/Online/ERC20/Uni.sol\":23101:23110  srcRepNum */\n      dup5\n        /* \"contracts/Online/ERC20/Uni.sol\":23112:23121  srcRepOld */\n      dup5\n        /* \"contracts/Online/ERC20/Uni.sol\":23123:23132  srcRepNew */\n      dup5\n        /* \"contracts/Online/ERC20/Uni.sol\":23076:23092  _writeCheckpoint */\n      tag_321\n        /* \"contracts/Online/ERC20/Uni.sol\":23076:23133  _writeCheckpoint(srcRep, srcRepNum, srcRepOld, srcRepNew) */\n      jump\t// in\n    tag_320:\n        /* \"contracts/Online/ERC20/Uni.sol\":22680:23148  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/Online/ERC20/Uni.sol\":22654:23148  if (srcRep != address(0)) {... */\n    tag_315:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Online/ERC20/Uni.sol\":23166:23186  dstRep != address(0) */\n      dup3\n      and\n      iszero\n        /* \"contracts/Online/ERC20/Uni.sol\":23162:23655  if (dstRep != address(0)) {... */\n      tag_182\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Online/ERC20/Uni.sol\":23225:23247  numCheckpoints[dstRep] */\n      dup3\n      and\n        /* \"contracts/Online/ERC20/Uni.sol\":23206:23222  uint32 dstRepNum */\n      0x00\n        /* \"contracts/Online/ERC20/Uni.sol\":23225:23247  numCheckpoints[dstRep] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Online/ERC20/Uni.sol\":23225:23239  numCheckpoints */\n      0x07\n        /* \"contracts/Online/ERC20/Uni.sol\":23225:23247  numCheckpoints[dstRep] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xffffffff\n      and\n      swap1\n        /* \"contracts/Online/ERC20/Uni.sol\":23284:23297  dstRepNum > 0 */\n      dup2\n        /* \"contracts/Online/ERC20/Uni.sol\":23284:23384  dstRepNum > 0... */\n      tag_323\n      jumpi\n        /* \"contracts/Online/ERC20/Uni.sol\":23383:23384  0 */\n      0x00\n        /* \"contracts/Online/ERC20/Uni.sol\":23284:23384  dstRepNum > 0... */\n      jump(tag_324)\n    tag_323:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Online/ERC20/Uni.sol\":23320:23339  checkpoints[dstRep] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Online/ERC20/Uni.sol\":23320:23331  checkpoints */\n      0x06\n        /* \"contracts/Online/ERC20/Uni.sol\":23320:23339  checkpoints[dstRep] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"contracts/Online/ERC20/Uni.sol\":23340:23353  dstRepNum - 1 */\n      tag_325\n        /* \"contracts/Online/ERC20/Uni.sol\":23352:23353  1 */\n      0x01\n        /* \"contracts/Online/ERC20/Uni.sol\":23340:23349  dstRepNum */\n      dup6\n        /* \"contracts/Online/ERC20/Uni.sol\":23340:23353  dstRepNum - 1 */\n      tag_194\n      jump\t// in\n    tag_325:\n        /* \"contracts/Online/ERC20/Uni.sol\":23320:23354  checkpoints[dstRep][dstRepNum - 1] */\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"contracts/Online/ERC20/Uni.sol\":23320:23360  checkpoints[dstRep][dstRepNum - 1].votes */\n      sload\n      shl(0x20, 0x01)\n      swap1\n      div\n      sub(shl(0x60, 0x01), 0x01)\n      and\n        /* \"contracts/Online/ERC20/Uni.sol\":23284:23384  dstRepNum > 0... */\n    tag_324:\n        /* \"contracts/Online/ERC20/Uni.sol\":23265:23384  uint96 dstRepOld = dstRepNum > 0... */\n      swap1\n      pop\n        /* \"contracts/Online/ERC20/Uni.sol\":23402:23418  uint96 dstRepNew */\n      0x00\n        /* \"contracts/Online/ERC20/Uni.sol\":23421:23565  add96(... */\n      tag_326\n        /* \"contracts/Online/ERC20/Uni.sol\":23448:23457  dstRepOld */\n      dup3\n        /* \"contracts/Online/ERC20/Uni.sol\":23479:23485  amount */\n      dup6\n        /* \"contracts/Online/ERC20/Uni.sol\":23421:23565  add96(... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_5c6c891434a3c5951db59f5fe43d566b04bf54e07bc444b7f9f72601e608dc42\n      0x26\n      swap2\n      codecopy\n        /* \"contracts/Online/ERC20/Uni.sol\":23421:23426  add96 */\n      tag_180\n        /* \"contracts/Online/ERC20/Uni.sol\":23421:23565  add96(... */\n      jump\t// in\n    tag_326:\n        /* \"contracts/Online/ERC20/Uni.sol\":23402:23565  uint96 dstRepNew = add96(... */\n      swap1\n      pop\n        /* \"contracts/Online/ERC20/Uni.sol\":23583:23640  _writeCheckpoint(dstRep, dstRepNum, dstRepOld, dstRepNew) */\n      tag_217\n        /* \"contracts/Online/ERC20/Uni.sol\":23600:23606  dstRep */\n      dup6\n        /* \"contracts/Online/ERC20/Uni.sol\":23608:23617  dstRepNum */\n      dup5\n        /* \"contracts/Online/ERC20/Uni.sol\":23619:23628  dstRepOld */\n      dup5\n        /* \"contracts/Online/ERC20/Uni.sol\":23630:23639  dstRepNew */\n      dup5\n        /* \"contracts/Online/ERC20/Uni.sol\":23583:23599  _writeCheckpoint */\n      tag_321\n        /* \"contracts/Online/ERC20/Uni.sol\":23583:23640  _writeCheckpoint(dstRep, dstRepNum, dstRepOld, dstRepNew) */\n      jump\t// in\n        /* \"contracts/Online/ERC20/Uni.sol\":21314:21681  function _delegate(address delegator, address delegatee) internal {... */\n    tag_186:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Online/ERC20/Uni.sol\":21416:21436  delegates[delegator] */\n      dup1\n      dup4\n      and\n        /* \"contracts/Online/ERC20/Uni.sol\":21390:21413  address currentDelegate */\n      0x00\n        /* \"contracts/Online/ERC20/Uni.sol\":21416:21436  delegates[delegator] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Online/ERC20/Uni.sol\":21416:21425  delegates */\n      0x05\n        /* \"contracts/Online/ERC20/Uni.sol\":21416:21436  delegates[delegator] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      dup1\n      sload\n        /* \"contracts/Online/ERC20/Uni.sol\":21472:21480  balances */\n      0x04\n        /* \"contracts/Online/ERC20/Uni.sol\":21472:21491  balances[delegator] */\n      dup5\n      mstore\n      dup3\n      dup7\n      keccak256\n      sload\n        /* \"contracts/Online/ERC20/Uni.sol\":21501:21521  delegates[delegator] */\n      swap5\n      swap1\n      swap4\n      mstore\n        /* \"contracts/Online/ERC20/Uni.sol\":21501:21533  delegates[delegator] = delegatee */\n      dup8\n      dup8\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup5\n      and\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/Online/ERC20/Uni.sol\":21549:21603  DelegateChanged(delegator, currentDelegate, delegatee) */\n      swap1\n      mload\n        /* \"contracts/Online/ERC20/Uni.sol\":21416:21436  delegates[delegator] */\n      swap2\n      swap1\n      swap6\n      and\n      swap5\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/Online/ERC20/Uni.sol\":21472:21491  balances[delegator] */\n      swap1\n      swap3\n      and\n      swap4\n        /* \"contracts/Online/ERC20/Uni.sol\":21501:21533  delegates[delegator] = delegatee */\n      swap2\n      swap3\n        /* \"contracts/Online/ERC20/Uni.sol\":21416:21436  delegates[delegator] */\n      dup6\n      swap3\n      swap2\n        /* \"contracts/Online/ERC20/Uni.sol\":21549:21603  DelegateChanged(delegator, currentDelegate, delegatee) */\n      0x3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f\n      swap2\n        /* \"contracts/Online/ERC20/Uni.sol\":21390:21413  address currentDelegate */\n      swap1\n        /* \"contracts/Online/ERC20/Uni.sol\":21549:21603  DelegateChanged(delegator, currentDelegate, delegatee) */\n      log4\n        /* \"contracts/Online/ERC20/Uni.sol\":21614:21674  _moveDelegates(currentDelegate, delegatee, delegatorBalance) */\n      tag_329\n        /* \"contracts/Online/ERC20/Uni.sol\":21629:21644  currentDelegate */\n      dup3\n        /* \"contracts/Online/ERC20/Uni.sol\":21646:21655  delegatee */\n      dup5\n        /* \"contracts/Online/ERC20/Uni.sol\":21657:21673  delegatorBalance */\n      dup4\n        /* \"contracts/Online/ERC20/Uni.sol\":21614:21628  _moveDelegates */\n      tag_183\n        /* \"contracts/Online/ERC20/Uni.sol\":21614:21674  _moveDelegates(currentDelegate, delegatee, delegatorBalance) */\n      jump\t// in\n    tag_329:\n        /* \"contracts/Online/ERC20/Uni.sol\":21380:21681  {... */\n      pop\n      pop\n        /* \"contracts/Online/ERC20/Uni.sol\":21314:21681  function _delegate(address delegator, address delegatee) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Online/ERC20/Uni.sol\":5131:5499  function div(... */\n    tag_306:\n        /* \"contracts/Online/ERC20/Uni.sol\":5247:5254  uint256 */\n      0x00\n        /* \"contracts/Online/ERC20/Uni.sol\":5347:5359  errorMessage */\n      dup2\n        /* \"contracts/Online/ERC20/Uni.sol\":5340:5345  b > 0 */\n      dup4\n        /* \"contracts/Online/ERC20/Uni.sol\":5332:5360  require(b > 0, errorMessage) */\n      tag_332\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_159\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_332:\n      pop\n        /* \"contracts/Online/ERC20/Uni.sol\":5370:5379  uint256 c */\n      0x00\n        /* \"contracts/Online/ERC20/Uni.sol\":5382:5387  a / b */\n      tag_334\n        /* \"contracts/Online/ERC20/Uni.sol\":5386:5387  b */\n      dup5\n        /* \"contracts/Online/ERC20/Uni.sol\":5382:5383  a */\n      dup7\n        /* \"contracts/Online/ERC20/Uni.sol\":5382:5387  a / b */\n      tag_300\n      jump\t// in\n    tag_334:\n        /* \"contracts/Online/ERC20/Uni.sol\":5370:5387  uint256 c = a / b */\n      swap6\n        /* \"contracts/Online/ERC20/Uni.sol\":5131:5499  function div(... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Online/ERC20/Uni.sol\":23677:24462  function _writeCheckpoint(... */\n    tag_321:\n        /* \"contracts/Online/ERC20/Uni.sol\":23834:23852  uint32 blockNumber */\n      0x00\n        /* \"contracts/Online/ERC20/Uni.sol\":23855:23964  safe32(... */\n      tag_336\n        /* \"contracts/Online/ERC20/Uni.sol\":23875:23887  block.number */\n      number\n        /* \"contracts/Online/ERC20/Uni.sol\":23855:23964  safe32(... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x33\n      dup2\n      mstore\n      0x20\n      add\n      data_66157ef8d926a3327823fecd4ce53edfcb6533c37c90dc98acfb91e4f2854725\n      0x33\n      swap2\n      codecopy\n        /* \"contracts/Online/ERC20/Uni.sol\":23855:23861  safe32 */\n      tag_337\n        /* \"contracts/Online/ERC20/Uni.sol\":23855:23964  safe32(... */\n      jump\t// in\n    tag_336:\n        /* \"contracts/Online/ERC20/Uni.sol\":23834:23964  uint32 blockNumber = safe32(... */\n      swap1\n      pop\n        /* \"contracts/Online/ERC20/Uni.sol\":24007:24008  0 */\n      0x00\n        /* \"contracts/Online/ERC20/Uni.sol\":23992:24004  nCheckpoints */\n      dup5\n        /* \"contracts/Online/ERC20/Uni.sol\":23992:24008  nCheckpoints > 0 */\n      0xffffffff\n      and\n      gt\n        /* \"contracts/Online/ERC20/Uni.sol\":23992:24089  nCheckpoints > 0 &&... */\n      dup1\n      iszero\n      tag_338\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Online/ERC20/Uni.sol\":24024:24046  checkpoints[delegatee] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Online/ERC20/Uni.sol\":24024:24035  checkpoints */\n      0x06\n        /* \"contracts/Online/ERC20/Uni.sol\":24024:24046  checkpoints[delegatee] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Online/ERC20/Uni.sol\":24024:24089  checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber */\n      0xffffffff\n      dup4\n      and\n      swap2\n        /* \"contracts/Online/ERC20/Uni.sol\":24047:24063  nCheckpoints - 1 */\n      tag_339\n        /* \"contracts/Online/ERC20/Uni.sol\":24062:24063  1 */\n      0x01\n        /* \"contracts/Online/ERC20/Uni.sol\":24047:24059  nCheckpoints */\n      dup9\n        /* \"contracts/Online/ERC20/Uni.sol\":24047:24063  nCheckpoints - 1 */\n      tag_194\n      jump\t// in\n    tag_339:\n        /* \"contracts/Online/ERC20/Uni.sol\":24024:24064  checkpoints[delegatee][nCheckpoints - 1] */\n      0xffffffff\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"contracts/Online/ERC20/Uni.sol\":24024:24074  checkpoints[delegatee][nCheckpoints - 1].fromBlock */\n      sload\n      and\n        /* \"contracts/Online/ERC20/Uni.sol\":24024:24089  checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber */\n      eq\n        /* \"contracts/Online/ERC20/Uni.sol\":23992:24089  nCheckpoints > 0 &&... */\n    tag_338:\n        /* \"contracts/Online/ERC20/Uni.sol\":23975:24389  if (... */\n      iszero\n      tag_340\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Online/ERC20/Uni.sol\":24114:24136  checkpoints[delegatee] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Online/ERC20/Uni.sol\":24114:24125  checkpoints */\n      0x06\n        /* \"contracts/Online/ERC20/Uni.sol\":24114:24136  checkpoints[delegatee] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Online/ERC20/Uni.sol\":24163:24171  newVotes */\n      dup4\n      swap2\n        /* \"contracts/Online/ERC20/Uni.sol\":24137:24153  nCheckpoints - 1 */\n      tag_341\n        /* \"contracts/Online/ERC20/Uni.sol\":24152:24153  1 */\n      0x01\n        /* \"contracts/Online/ERC20/Uni.sol\":24137:24149  nCheckpoints */\n      dup9\n        /* \"contracts/Online/ERC20/Uni.sol\":24137:24153  nCheckpoints - 1 */\n      tag_194\n      jump\t// in\n    tag_341:\n        /* \"contracts/Online/ERC20/Uni.sol\":24114:24154  checkpoints[delegatee][nCheckpoints - 1] */\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"contracts/Online/ERC20/Uni.sol\":24114:24171  checkpoints[delegatee][nCheckpoints - 1].votes = newVotes */\n      dup1\n      sload\n      sub(shl(0x60, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      shl(0x20, 0x01)\n      mul\n      not(0xffffffffffffffffffffffff00000000)\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/Online/ERC20/Uni.sol\":23975:24389  if (... */\n      jump(tag_342)\n    tag_340:\n        /* \"contracts/Online/ERC20/Uni.sol\":24241:24320  Checkpoint(... */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      dup3\n      mstore\n      0xffffffff\n      dup1\n      dup5\n      and\n      dup3\n      mstore\n      sub(shl(0x60, 0x01), 0x01)\n      dup1\n      dup7\n      and\n      0x20\n      dup1\n      dup6\n      add\n      swap2\n      dup3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Online/ERC20/Uni.sol\":24202:24224  checkpoints[delegatee] */\n      dup12\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Online/ERC20/Uni.sol\":24202:24213  checkpoints */\n      0x06\n        /* \"contracts/Online/ERC20/Uni.sol\":24202:24224  checkpoints[delegatee] */\n      dup3\n      mstore\n      dup7\n      dup2\n      keccak256\n        /* \"contracts/Online/ERC20/Uni.sol\":24202:24238  checkpoints[delegatee][nCheckpoints] */\n      dup12\n      dup7\n      and\n      dup3\n      mstore\n      swap1\n      swap2\n      mstore\n      swap5\n      swap1\n      swap5\n      keccak256\n        /* \"contracts/Online/ERC20/Uni.sol\":24202:24320  checkpoints[delegatee][nCheckpoints] = Checkpoint(... */\n      swap3\n      mload\n      dup4\n      sload\n      swap5\n      mload\n      swap1\n      swap2\n      and\n      shl(0x20, 0x01)\n      mul\n      not(0xffffffffffffffffffffffffffffffff)\n      swap1\n      swap5\n      and\n      swap2\n      and\n      or\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/Online/ERC20/Uni.sol\":24362:24378  nCheckpoints + 1 */\n      tag_343\n        /* \"contracts/Online/ERC20/Uni.sol\":24225:24237  nCheckpoints */\n      dup5\n        /* \"contracts/Online/ERC20/Uni.sol\":24202:24320  checkpoints[delegatee][nCheckpoints] = Checkpoint(... */\n      0x01\n        /* \"contracts/Online/ERC20/Uni.sol\":24362:24378  nCheckpoints + 1 */\n      tag_344\n      jump\t// in\n    tag_343:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Online/ERC20/Uni.sol\":24334:24359  numCheckpoints[delegatee] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Online/ERC20/Uni.sol\":24334:24348  numCheckpoints */\n      0x07\n        /* \"contracts/Online/ERC20/Uni.sol\":24334:24359  numCheckpoints[delegatee] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Online/ERC20/Uni.sol\":24334:24378  numCheckpoints[delegatee] = nCheckpoints + 1 */\n      dup1\n      sload\n      not(0xffffffff)\n      and\n      0xffffffff\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/Online/ERC20/Uni.sol\":23975:24389  if (... */\n    tag_342:\n        /* \"contracts/Online/ERC20/Uni.sol\":24404:24455  DelegateVotesChanged(delegatee, oldVotes, newVotes) */\n      0x40\n      dup1\n      mload\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"#utility.yul\":16548:16587   */\n      dup1\n      dup7\n      and\n        /* \"#utility.yul\":16530:16588   */\n      dup3\n      mstore\n        /* \"#utility.yul\":16624:16663   */\n      dup5\n      and\n        /* \"#utility.yul\":16619:16621   */\n      0x20\n        /* \"#utility.yul\":16604:16622   */\n      dup3\n      add\n        /* \"#utility.yul\":16597:16664   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Online/ERC20/Uni.sol\":24404:24455  DelegateVotesChanged(delegatee, oldVotes, newVotes) */\n      dup8\n      and\n      swap2\n      0xdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724\n      swap2\n        /* \"#utility.yul\":16503:16521   */\n      add\n        /* \"contracts/Online/ERC20/Uni.sol\":24404:24455  DelegateVotesChanged(delegatee, oldVotes, newVotes) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Online/ERC20/Uni.sol\":23824:24462  {... */\n      pop\n        /* \"contracts/Online/ERC20/Uni.sol\":23677:24462  function _writeCheckpoint(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Online/ERC20/Uni.sol\":24468:24657  function safe32(uint256 n, string memory errorMessage)... */\n    tag_337:\n        /* \"contracts/Online/ERC20/Uni.sol\":24570:24576  uint32 */\n      0x00\n        /* \"contracts/Online/ERC20/Uni.sol\":24611:24623  errorMessage */\n      dup2\n      shl(0x20, 0x01)\n        /* \"contracts/Online/ERC20/Uni.sol\":24600:24609  n < 2**32 */\n      dup5\n      lt\n        /* \"contracts/Online/ERC20/Uni.sol\":24592:24624  require(n < 2**32, errorMessage) */\n      tag_271\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_159\n      swap2\n      swap1\n        /* \"#utility.yul\":14:432   */\n    tag_39:\n        /* \"#utility.yul\":163:165   */\n      0x20\n        /* \"#utility.yul\":152:161   */\n      dup2\n        /* \"#utility.yul\":145:166   */\n      mstore\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":195:201   */\n      dup3\n        /* \"#utility.yul\":189:202   */\n      mload\n        /* \"#utility.yul\":238:244   */\n      dup1\n        /* \"#utility.yul\":233:235   */\n      0x20\n        /* \"#utility.yul\":222:231   */\n      dup5\n        /* \"#utility.yul\":218:236   */\n      add\n        /* \"#utility.yul\":211:245   */\n      mstore\n        /* \"#utility.yul\":297:303   */\n      dup1\n        /* \"#utility.yul\":292:294   */\n      0x20\n        /* \"#utility.yul\":284:290   */\n      dup6\n        /* \"#utility.yul\":280:295   */\n      add\n        /* \"#utility.yul\":275:277   */\n      0x40\n        /* \"#utility.yul\":264:273   */\n      dup6\n        /* \"#utility.yul\":260:278   */\n      add\n        /* \"#utility.yul\":254:304   */\n      mcopy\n        /* \"#utility.yul\":353:354   */\n      0x00\n        /* \"#utility.yul\":348:350   */\n      0x40\n        /* \"#utility.yul\":339:345   */\n      dup3\n        /* \"#utility.yul\":328:337   */\n      dup6\n        /* \"#utility.yul\":324:346   */\n      add\n        /* \"#utility.yul\":320:351   */\n      add\n        /* \"#utility.yul\":313:355   */\n      mstore\n        /* \"#utility.yul\":423:425   */\n      0x40\n        /* \"#utility.yul\":416:418   */\n      0x1f\n        /* \"#utility.yul\":412:419   */\n      not\n        /* \"#utility.yul\":407:409   */\n      0x1f\n        /* \"#utility.yul\":399:405   */\n      dup4\n        /* \"#utility.yul\":395:410   */\n      add\n        /* \"#utility.yul\":391:420   */\n      and\n        /* \"#utility.yul\":380:389   */\n      dup5\n        /* \"#utility.yul\":376:421   */\n      add\n        /* \"#utility.yul\":372:426   */\n      add\n        /* \"#utility.yul\":364:426   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":14:432   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":645:818   */\n    tag_350:\n        /* \"#utility.yul\":713:733   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":762:793   */\n      dup2\n      and\n        /* \"#utility.yul\":752:794   */\n      dup2\n      eq\n        /* \"#utility.yul\":742:812   */\n      tag_358\n      jumpi\n        /* \"#utility.yul\":808:809   */\n      0x00\n        /* \"#utility.yul\":805:806   */\n      dup1\n        /* \"#utility.yul\":798:810   */\n      revert\n        /* \"#utility.yul\":742:812   */\n    tag_358:\n        /* \"#utility.yul\":645:818   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":823:1123   */\n    tag_46:\n        /* \"#utility.yul\":891:897   */\n      0x00\n        /* \"#utility.yul\":899:905   */\n      dup1\n        /* \"#utility.yul\":952:954   */\n      0x40\n        /* \"#utility.yul\":940:949   */\n      dup4\n        /* \"#utility.yul\":931:938   */\n      dup6\n        /* \"#utility.yul\":927:950   */\n      sub\n        /* \"#utility.yul\":923:955   */\n      slt\n        /* \"#utility.yul\":920:972   */\n      iszero\n      tag_360\n      jumpi\n        /* \"#utility.yul\":968:969   */\n      0x00\n        /* \"#utility.yul\":965:966   */\n      dup1\n        /* \"#utility.yul\":958:970   */\n      revert\n        /* \"#utility.yul\":920:972   */\n    tag_360:\n        /* \"#utility.yul\":991:1020   */\n      tag_361\n        /* \"#utility.yul\":1010:1019   */\n      dup4\n        /* \"#utility.yul\":991:1020   */\n      tag_350\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":981:1020   */\n      swap5\n        /* \"#utility.yul\":1089:1091   */\n      0x20\n        /* \"#utility.yul\":1074:1092   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1061:1093   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":823:1123   */\n      jump\t// out\n        /* \"#utility.yul\":1684:2058   */\n    tag_60:\n        /* \"#utility.yul\":1761:1767   */\n      0x00\n        /* \"#utility.yul\":1769:1775   */\n      dup1\n        /* \"#utility.yul\":1777:1783   */\n      0x00\n        /* \"#utility.yul\":1830:1832   */\n      0x60\n        /* \"#utility.yul\":1818:1827   */\n      dup5\n        /* \"#utility.yul\":1809:1816   */\n      dup7\n        /* \"#utility.yul\":1805:1828   */\n      sub\n        /* \"#utility.yul\":1801:1833   */\n      slt\n        /* \"#utility.yul\":1798:1850   */\n      iszero\n      tag_366\n      jumpi\n        /* \"#utility.yul\":1846:1847   */\n      0x00\n        /* \"#utility.yul\":1843:1844   */\n      dup1\n        /* \"#utility.yul\":1836:1848   */\n      revert\n        /* \"#utility.yul\":1798:1850   */\n    tag_366:\n        /* \"#utility.yul\":1869:1898   */\n      tag_367\n        /* \"#utility.yul\":1888:1897   */\n      dup5\n        /* \"#utility.yul\":1869:1898   */\n      tag_350\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":1859:1898   */\n      swap3\n      pop\n        /* \"#utility.yul\":1917:1955   */\n      tag_368\n        /* \"#utility.yul\":1951:1953   */\n      0x20\n        /* \"#utility.yul\":1940:1949   */\n      dup6\n        /* \"#utility.yul\":1936:1954   */\n      add\n        /* \"#utility.yul\":1917:1955   */\n      tag_350\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":1684:2058   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1907:1955   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2024:2026   */\n      0x40\n        /* \"#utility.yul\":2009:2027   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1996:2028   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1684:2058   */\n      jump\t// out\n        /* \"#utility.yul\":2252:2438   */\n    tag_78:\n        /* \"#utility.yul\":2311:2317   */\n      0x00\n        /* \"#utility.yul\":2364:2366   */\n      0x20\n        /* \"#utility.yul\":2352:2361   */\n      dup3\n        /* \"#utility.yul\":2343:2350   */\n      dup5\n        /* \"#utility.yul\":2339:2362   */\n      sub\n        /* \"#utility.yul\":2335:2367   */\n      slt\n        /* \"#utility.yul\":2332:2384   */\n      iszero\n      tag_371\n      jumpi\n        /* \"#utility.yul\":2380:2381   */\n      0x00\n        /* \"#utility.yul\":2377:2378   */\n      dup1\n        /* \"#utility.yul\":2370:2382   */\n      revert\n        /* \"#utility.yul\":2332:2384   */\n    tag_371:\n        /* \"#utility.yul\":2403:2432   */\n      tag_215\n        /* \"#utility.yul\":2422:2431   */\n      dup3\n        /* \"#utility.yul\":2403:2432   */\n      tag_350\n      jump\t// in\n        /* \"#utility.yul\":2853:3009   */\n    tag_351:\n        /* \"#utility.yul\":2919:2939   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":2979:2983   */\n      0xff\n        /* \"#utility.yul\":2968:2984   */\n      dup2\n      and\n        /* \"#utility.yul\":2958:2985   */\n      dup2\n      eq\n        /* \"#utility.yul\":2948:3003   */\n      tag_358\n      jumpi\n        /* \"#utility.yul\":2999:3000   */\n      0x00\n        /* \"#utility.yul\":2996:2997   */\n      dup1\n        /* \"#utility.yul\":2989:3001   */\n      revert\n        /* \"#utility.yul\":3014:3747   */\n    tag_121:\n        /* \"#utility.yul\":3116:3122   */\n      0x00\n        /* \"#utility.yul\":3124:3130   */\n      dup1\n        /* \"#utility.yul\":3132:3138   */\n      0x00\n        /* \"#utility.yul\":3140:3146   */\n      dup1\n        /* \"#utility.yul\":3148:3154   */\n      0x00\n        /* \"#utility.yul\":3156:3162   */\n      dup1\n        /* \"#utility.yul\":3209:3212   */\n      0xc0\n        /* \"#utility.yul\":3197:3206   */\n      dup8\n        /* \"#utility.yul\":3188:3195   */\n      dup10\n        /* \"#utility.yul\":3184:3207   */\n      sub\n        /* \"#utility.yul\":3180:3213   */\n      slt\n        /* \"#utility.yul\":3177:3230   */\n      iszero\n      tag_378\n      jumpi\n        /* \"#utility.yul\":3226:3227   */\n      0x00\n        /* \"#utility.yul\":3223:3224   */\n      dup1\n        /* \"#utility.yul\":3216:3228   */\n      revert\n        /* \"#utility.yul\":3177:3230   */\n    tag_378:\n        /* \"#utility.yul\":3249:3278   */\n      tag_379\n        /* \"#utility.yul\":3268:3277   */\n      dup8\n        /* \"#utility.yul\":3249:3278   */\n      tag_350\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":3239:3278   */\n      swap6\n      pop\n        /* \"#utility.yul\":3347:3349   */\n      0x20\n        /* \"#utility.yul\":3332:3350   */\n      dup8\n      add\n        /* \"#utility.yul\":3319:3351   */\n      calldataload\n      swap5\n      pop\n        /* \"#utility.yul\":3448:3450   */\n      0x40\n        /* \"#utility.yul\":3433:3451   */\n      dup8\n      add\n        /* \"#utility.yul\":3420:3452   */\n      calldataload\n      swap4\n      pop\n        /* \"#utility.yul\":3497:3533   */\n      tag_380\n        /* \"#utility.yul\":3529:3531   */\n      0x60\n        /* \"#utility.yul\":3514:3532   */\n      dup9\n      add\n        /* \"#utility.yul\":3497:3533   */\n      tag_351\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":3014:3747   */\n      swap6\n      swap9\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n        /* \"#utility.yul\":3606:3609   */\n      0x80\n        /* \"#utility.yul\":3591:3610   */\n      dup2\n      add\n        /* \"#utility.yul\":3578:3611   */\n      calldataload\n      swap5\n        /* \"#utility.yul\":3710:3713   */\n      0xa0\n        /* \"#utility.yul\":3695:3714   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":3682:3715   */\n      calldataload\n      swap4\n      pop\n        /* \"#utility.yul\":3014:3747   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3752:4560   */\n    tag_125:\n        /* \"#utility.yul\":3863:3869   */\n      0x00\n        /* \"#utility.yul\":3871:3877   */\n      dup1\n        /* \"#utility.yul\":3879:3885   */\n      0x00\n        /* \"#utility.yul\":3887:3893   */\n      dup1\n        /* \"#utility.yul\":3895:3901   */\n      0x00\n        /* \"#utility.yul\":3903:3909   */\n      dup1\n        /* \"#utility.yul\":3911:3917   */\n      0x00\n        /* \"#utility.yul\":3964:3967   */\n      0xe0\n        /* \"#utility.yul\":3952:3961   */\n      dup9\n        /* \"#utility.yul\":3943:3950   */\n      dup11\n        /* \"#utility.yul\":3939:3962   */\n      sub\n        /* \"#utility.yul\":3935:3968   */\n      slt\n        /* \"#utility.yul\":3932:3985   */\n      iszero\n      tag_382\n      jumpi\n        /* \"#utility.yul\":3981:3982   */\n      0x00\n        /* \"#utility.yul\":3978:3979   */\n      dup1\n        /* \"#utility.yul\":3971:3983   */\n      revert\n        /* \"#utility.yul\":3932:3985   */\n    tag_382:\n        /* \"#utility.yul\":4004:4033   */\n      tag_383\n        /* \"#utility.yul\":4023:4032   */\n      dup9\n        /* \"#utility.yul\":4004:4033   */\n      tag_350\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":3994:4033   */\n      swap7\n      pop\n        /* \"#utility.yul\":4052:4090   */\n      tag_384\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4075:4084   */\n      dup10\n        /* \"#utility.yul\":4071:4089   */\n      add\n        /* \"#utility.yul\":4052:4090   */\n      tag_350\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":4042:4090   */\n      swap6\n      pop\n        /* \"#utility.yul\":4159:4161   */\n      0x40\n        /* \"#utility.yul\":4144:4162   */\n      dup9\n      add\n        /* \"#utility.yul\":4131:4163   */\n      calldataload\n      swap5\n      pop\n        /* \"#utility.yul\":4260:4262   */\n      0x60\n        /* \"#utility.yul\":4245:4263   */\n      dup9\n      add\n        /* \"#utility.yul\":4232:4264   */\n      calldataload\n      swap4\n      pop\n        /* \"#utility.yul\":4309:4346   */\n      tag_385\n        /* \"#utility.yul\":4341:4344   */\n      0x80\n        /* \"#utility.yul\":4326:4345   */\n      dup10\n      add\n        /* \"#utility.yul\":4309:4346   */\n      tag_351\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":3752:4560   */\n      swap7\n      swap10\n      swap6\n      swap9\n      pop\n      swap4\n      swap7\n      swap3\n      swap6\n        /* \"#utility.yul\":4299:4346   */\n      swap5\n        /* \"#utility.yul\":4419:4422   */\n      0xa0\n        /* \"#utility.yul\":4404:4423   */\n      dup5\n      add\n        /* \"#utility.yul\":4391:4424   */\n      calldataload\n      swap5\n      pop\n        /* \"#utility.yul\":4523:4526   */\n      0xc0\n        /* \"#utility.yul\":4508:4527   */\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":4495:4528   */\n      calldataload\n      swap3\n        /* \"#utility.yul\":3752:4560   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4565:4825   */\n    tag_129:\n        /* \"#utility.yul\":4633:4639   */\n      0x00\n        /* \"#utility.yul\":4641:4647   */\n      dup1\n        /* \"#utility.yul\":4694:4696   */\n      0x40\n        /* \"#utility.yul\":4682:4691   */\n      dup4\n        /* \"#utility.yul\":4673:4680   */\n      dup6\n        /* \"#utility.yul\":4669:4692   */\n      sub\n        /* \"#utility.yul\":4665:4697   */\n      slt\n        /* \"#utility.yul\":4662:4714   */\n      iszero\n      tag_387\n      jumpi\n        /* \"#utility.yul\":4710:4711   */\n      0x00\n        /* \"#utility.yul\":4707:4708   */\n      dup1\n        /* \"#utility.yul\":4700:4712   */\n      revert\n        /* \"#utility.yul\":4662:4714   */\n    tag_387:\n        /* \"#utility.yul\":4733:4762   */\n      tag_388\n        /* \"#utility.yul\":4752:4761   */\n      dup4\n        /* \"#utility.yul\":4733:4762   */\n      tag_350\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":4723:4762   */\n      swap2\n      pop\n        /* \"#utility.yul\":4781:4819   */\n      tag_389\n        /* \"#utility.yul\":4815:4817   */\n      0x20\n        /* \"#utility.yul\":4804:4813   */\n      dup5\n        /* \"#utility.yul\":4800:4818   */\n      add\n        /* \"#utility.yul\":4781:4819   */\n      tag_350\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":4771:4819   */\n      swap1\n      pop\n        /* \"#utility.yul\":4565:4825   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4830:5180   */\n    tag_137:\n        /* \"#utility.yul\":4897:4903   */\n      0x00\n        /* \"#utility.yul\":4905:4911   */\n      dup1\n        /* \"#utility.yul\":4958:4960   */\n      0x40\n        /* \"#utility.yul\":4946:4955   */\n      dup4\n        /* \"#utility.yul\":4937:4944   */\n      dup6\n        /* \"#utility.yul\":4933:4956   */\n      sub\n        /* \"#utility.yul\":4929:4961   */\n      slt\n        /* \"#utility.yul\":4926:4978   */\n      iszero\n      tag_391\n      jumpi\n        /* \"#utility.yul\":4974:4975   */\n      0x00\n        /* \"#utility.yul\":4971:4972   */\n      dup1\n        /* \"#utility.yul\":4964:4976   */\n      revert\n        /* \"#utility.yul\":4926:4978   */\n    tag_391:\n        /* \"#utility.yul\":4997:5026   */\n      tag_392\n        /* \"#utility.yul\":5016:5025   */\n      dup4\n        /* \"#utility.yul\":4997:5026   */\n      tag_350\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":4987:5026   */\n      swap2\n      pop\n        /* \"#utility.yul\":5076:5078   */\n      0x20\n        /* \"#utility.yul\":5065:5074   */\n      dup4\n        /* \"#utility.yul\":5061:5079   */\n      add\n        /* \"#utility.yul\":5048:5080   */\n      calldataload\n        /* \"#utility.yul\":5120:5130   */\n      0xffffffff\n        /* \"#utility.yul\":5113:5118   */\n      dup2\n        /* \"#utility.yul\":5109:5131   */\n      and\n        /* \"#utility.yul\":5102:5107   */\n      dup2\n        /* \"#utility.yul\":5099:5132   */\n      eq\n        /* \"#utility.yul\":5089:5150   */\n      tag_393\n      jumpi\n        /* \"#utility.yul\":5146:5147   */\n      0x00\n        /* \"#utility.yul\":5143:5144   */\n      dup1\n        /* \"#utility.yul\":5136:5148   */\n      revert\n        /* \"#utility.yul\":5089:5150   */\n    tag_393:\n        /* \"#utility.yul\":5169:5174   */\n      dup1\n        /* \"#utility.yul\":5159:5174   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4830:5180   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7684:7811   */\n    tag_352:\n        /* \"#utility.yul\":7745:7755   */\n      0x4e487b71\n        /* \"#utility.yul\":7740:7743   */\n      0xe0\n        /* \"#utility.yul\":7736:7756   */\n      shl\n        /* \"#utility.yul\":7733:7734   */\n      0x00\n        /* \"#utility.yul\":7726:7757   */\n      mstore\n        /* \"#utility.yul\":7776:7780   */\n      0x11\n        /* \"#utility.yul\":7773:7774   */\n      0x04\n        /* \"#utility.yul\":7766:7781   */\n      mstore\n        /* \"#utility.yul\":7800:7804   */\n      0x24\n        /* \"#utility.yul\":7797:7798   */\n      0x00\n        /* \"#utility.yul\":7790:7805   */\n      revert\n        /* \"#utility.yul\":7816:7986   */\n    tag_194:\n        /* \"#utility.yul\":7913:7923   */\n      0xffffffff\n        /* \"#utility.yul\":7906:7924   */\n      dup3\n      dup2\n      and\n        /* \"#utility.yul\":7886:7904   */\n      dup3\n      dup3\n      and\n        /* \"#utility.yul\":7882:7925   */\n      sub\n      swap1\n        /* \"#utility.yul\":7937:7957   */\n      dup2\n      gt\n        /* \"#utility.yul\":7934:7980   */\n      iszero\n      tag_144\n      jumpi\n        /* \"#utility.yul\":7960:7978   */\n      tag_144\n      tag_352\n      jump\t// in\n        /* \"#utility.yul\":7991:8118   */\n    tag_353:\n        /* \"#utility.yul\":8052:8062   */\n      0x4e487b71\n        /* \"#utility.yul\":8047:8050   */\n      0xe0\n        /* \"#utility.yul\":8043:8063   */\n      shl\n        /* \"#utility.yul\":8040:8041   */\n      0x00\n        /* \"#utility.yul\":8033:8064   */\n      mstore\n        /* \"#utility.yul\":8083:8087   */\n      0x12\n        /* \"#utility.yul\":8080:8081   */\n      0x04\n        /* \"#utility.yul\":8073:8088   */\n      mstore\n        /* \"#utility.yul\":8107:8111   */\n      0x24\n        /* \"#utility.yul\":8104:8105   */\n      0x00\n        /* \"#utility.yul\":8097:8112   */\n      revert\n        /* \"#utility.yul\":8123:8301   */\n    tag_203:\n        /* \"#utility.yul\":8162:8163   */\n      0x00\n        /* \"#utility.yul\":8196:8206   */\n      0xffffffff\n        /* \"#utility.yul\":8193:8194   */\n      dup4\n        /* \"#utility.yul\":8189:8207   */\n      and\n        /* \"#utility.yul\":8226:8229   */\n      dup1\n        /* \"#utility.yul\":8216:8253   */\n      tag_408\n      jumpi\n        /* \"#utility.yul\":8233:8251   */\n      tag_408\n      tag_353\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":8291:8294   */\n      dup1\n        /* \"#utility.yul\":8278:8288   */\n      0xffffffff\n        /* \"#utility.yul\":8275:8276   */\n      dup5\n        /* \"#utility.yul\":8271:8289   */\n      and\n        /* \"#utility.yul\":8267:8295   */\n      div\n        /* \"#utility.yul\":8262:8295   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":8123:8301   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10356:10491   */\n    tag_234:\n        /* \"#utility.yul\":10395:10398   */\n      0x00\n        /* \"#utility.yul\":10416:10433   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":10413:10456   */\n      tag_416\n      jumpi\n        /* \"#utility.yul\":10436:10454   */\n      tag_416\n      tag_352\n      jump\t// in\n    tag_416:\n      pop\n        /* \"#utility.yul\":10483:10484   */\n      0x01\n        /* \"#utility.yul\":10472:10485   */\n      add\n      swap1\n        /* \"#utility.yul\":10356:10491   */\n      jump\t// out\n        /* \"#utility.yul\":13703:13921   */\n    tag_277:\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"#utility.yul\":13809:13843   */\n      dup3\n      dup2\n      and\n        /* \"#utility.yul\":13773:13807   */\n      dup3\n      dup3\n      and\n        /* \"#utility.yul\":13769:13844   */\n      sub\n      swap1\n        /* \"#utility.yul\":13856:13892   */\n      dup2\n      gt\n        /* \"#utility.yul\":13853:13915   */\n      iszero\n      tag_144\n      jumpi\n        /* \"#utility.yul\":13895:13913   */\n      tag_144\n      tag_352\n      jump\t// in\n        /* \"#utility.yul\":14780:14905   */\n    tag_291:\n        /* \"#utility.yul\":14845:14854   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":14866:14876   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":14863:14899   */\n      iszero\n      tag_144\n      jumpi\n        /* \"#utility.yul\":14879:14897   */\n      tag_144\n      tag_352\n      jump\t// in\n        /* \"#utility.yul\":15266:15434   */\n    tag_298:\n        /* \"#utility.yul\":15339:15348   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":15370:15379   */\n      dup2\n      iszero\n        /* \"#utility.yul\":15387:15402   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":15381:15403   */\n      dup5\n      eq\n        /* \"#utility.yul\":15367:15404   */\n      or\n        /* \"#utility.yul\":15357:15428   */\n      tag_144\n      jumpi\n        /* \"#utility.yul\":15408:15426   */\n      tag_144\n      tag_352\n      jump\t// in\n        /* \"#utility.yul\":15439:15559   */\n    tag_300:\n        /* \"#utility.yul\":15479:15480   */\n      0x00\n        /* \"#utility.yul\":15505:15506   */\n      dup3\n        /* \"#utility.yul\":15495:15530   */\n      tag_439\n      jumpi\n        /* \"#utility.yul\":15510:15528   */\n      tag_439\n      tag_353\n      jump\t// in\n    tag_439:\n      pop\n        /* \"#utility.yul\":15544:15553   */\n      div\n      swap1\n        /* \"#utility.yul\":15439:15559   */\n      jump\t// out\n        /* \"#utility.yul\":15966:16181   */\n    tag_309:\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"#utility.yul\":16034:16068   */\n      dup2\n      dup2\n      and\n        /* \"#utility.yul\":16070:16104   */\n      dup4\n      dup3\n      and\n        /* \"#utility.yul\":16030:16105   */\n      add\n      swap1\n        /* \"#utility.yul\":16117:16152   */\n      dup2\n      gt\n        /* \"#utility.yul\":16114:16175   */\n      iszero\n      tag_144\n      jumpi\n        /* \"#utility.yul\":16155:16173   */\n      tag_144\n      tag_352\n      jump\t// in\n        /* \"#utility.yul\":16186:16353   */\n    tag_344:\n        /* \"#utility.yul\":16281:16291   */\n      0xffffffff\n        /* \"#utility.yul\":16254:16272   */\n      dup2\n      dup2\n      and\n        /* \"#utility.yul\":16274:16292   */\n      dup4\n      dup3\n      and\n        /* \"#utility.yul\":16250:16293   */\n      add\n      swap1\n        /* \"#utility.yul\":16305:16324   */\n      dup2\n      gt\n        /* \"#utility.yul\":16302:16347   */\n      iszero\n      tag_144\n      jumpi\n        /* \"#utility.yul\":16327:16345   */\n      tag_144\n      tag_352\n      jump\t// in\n    stop\n    data_0ab5eae08d50cc345c58c2d7d67f9034a98d0a88dd540314c408c39a8dcec01d 556e693a3a6d696e743a207472616e7366657220616d6f756e74206f766572666c6f7773\n    data_136758788d48ec4d9744ba8c2136a9c9406d6c92cd4a81eff0de4942b636db13 556e693a3a7472616e7366657246726f6d3a207472616e7366657220616d6f756e742065786365656473207370656e64657220616c6c6f77616e6365\n    data_1ef2347f5dbb97e8eb7bc1442a128a1c6e65386b013257fe2b8ad95aaaa96ab8 556e693a3a6d696e743a20746f74616c537570706c7920657863656564732039362062697473\n    data_3230ba2cb739b33589720b8a5892642694535e935234939514431ff16907d24a 556e693a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_58da0b91010307ee6a63257c5283618928105e355857d8f79cf7e017ad7082f4 556e693a3a7065726d69743a20616d6f756e7420657863656564732039362062697473\n    data_5c6c891434a3c5951db59f5fe43d566b04bf54e07bc444b7f9f72601e608dc42 556e693a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f7773\n    data_66157ef8d926a3327823fecd4ce53edfcb6533c37c90dc98acfb91e4f2854725 556e693a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d62657220657863656564732033322062697473\n    data_8f9e8e1e6816d4a772d233c08b8292a576126f7dbd1d9b7cd30ef07f7c3d78d2 556e693a3a5f6d6f7665566f7465733a20766f746520616d6f756e7420756e646572666c6f7773\n    data_9bc67db7413f33b8f7a9995149809b7b3a4a83b5ba884084bea06cfb35986555 556e693a3a7472616e736665723a20616d6f756e7420657863656564732039362062697473\n    data_bcb6733e7ac2aee3c3602ee664d4b3cb251e429df5c7e9148d412d0b60f07b16 556e693a3a6d696e743a20616d6f756e7420657863656564732039362062697473\n    data_cb3e128da7f3f16c83a901cce3ab145c66bad45a0cd648091fecc9964ebf42fe 556e693a3a617070726f76653a20616d6f756e7420657863656564732039362062697473\n    data_f838ee8b15c3d07740bb9b304b8146ec63bb435a7703825b5e6424ee2072674a 556e693a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e74206f766572666c6f7773\n\n    auxdata: 0xa2646970667358221220b4b84d2b003d0602ebacd65cb25e2c213780afbfab33bc022976f467f1db628364736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_448": {
									"entryPoint": null,
									"id": 448,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 393,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256_fromMemory": {
									"entryPoint": 420,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_709d77ba4b86f1914120b68d9c9230eddba9a66e2dbda0bfb5bc324846702760__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1465:1",
										"nodeType": "YulBlock",
										"src": "0:1465:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "74:117:1",
													"nodeType": "YulBlock",
													"src": "74:117:1",
													"statements": [
														{
															"nativeSrc": "84:22:1",
															"nodeType": "YulAssignment",
															"src": "84:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "99:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "93:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:1"
																},
																"nativeSrc": "93:13:1",
																"nodeType": "YulFunctionCall",
																"src": "93:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "84:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "169:16:1",
																"nodeType": "YulBlock",
																"src": "169:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "178:1:1",
																					"nodeType": "YulLiteral",
																					"src": "178:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "181:1:1",
																					"nodeType": "YulLiteral",
																					"src": "181:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "171:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:1"
																			},
																			"nativeSrc": "171:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:1"
																		},
																		"nativeSrc": "171:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "128:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "139:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "154:3:1",
																										"nodeType": "YulLiteral",
																										"src": "154:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "159:1:1",
																										"nodeType": "YulLiteral",
																										"src": "159:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "150:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:1"
																								},
																								"nativeSrc": "150:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "163:1:1",
																								"nodeType": "YulLiteral",
																								"src": "163:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "146:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:1"
																						},
																						"nativeSrc": "146:19:1",
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "135:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:1"
																				},
																				"nativeSrc": "135:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "125:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:1"
																		},
																		"nativeSrc": "125:42:1",
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "118:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:1"
																},
																"nativeSrc": "118:50:1",
																"nodeType": "YulFunctionCall",
																"src": "118:50:1"
															},
															"nativeSrc": "115:70:1",
															"nodeType": "YulIf",
															"src": "115:70:1"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nativeSrc": "14:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "53:6:1",
														"nodeType": "YulTypedName",
														"src": "53:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "64:5:1",
														"nodeType": "YulTypedName",
														"src": "64:5:1",
														"type": ""
													}
												],
												"src": "14:177:1"
											},
											{
												"body": {
													"nativeSrc": "311:239:1",
													"nodeType": "YulBlock",
													"src": "311:239:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "357:16:1",
																"nodeType": "YulBlock",
																"src": "357:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "366:1:1",
																					"nodeType": "YulLiteral",
																					"src": "366:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "369:1:1",
																					"nodeType": "YulLiteral",
																					"src": "369:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "359:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "359:6:1"
																			},
																			"nativeSrc": "359:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "359:12:1"
																		},
																		"nativeSrc": "359:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "359:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "332:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "332:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "341:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "341:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "328:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "328:3:1"
																		},
																		"nativeSrc": "328:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "328:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "353:2:1",
																		"nodeType": "YulLiteral",
																		"src": "353:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "324:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "324:3:1"
																},
																"nativeSrc": "324:32:1",
																"nodeType": "YulFunctionCall",
																"src": "324:32:1"
															},
															"nativeSrc": "321:52:1",
															"nodeType": "YulIf",
															"src": "321:52:1"
														},
														{
															"nativeSrc": "382:50:1",
															"nodeType": "YulAssignment",
															"src": "382:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "422:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "422:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "392:29:1",
																	"nodeType": "YulIdentifier",
																	"src": "392:29:1"
																},
																"nativeSrc": "392:40:1",
																"nodeType": "YulFunctionCall",
																"src": "392:40:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "382:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "382:6:1"
																}
															]
														},
														{
															"nativeSrc": "441:59:1",
															"nodeType": "YulAssignment",
															"src": "441:59:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "485:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "485:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "496:2:1",
																				"nodeType": "YulLiteral",
																				"src": "496:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "481:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "481:3:1"
																		},
																		"nativeSrc": "481:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "481:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "451:29:1",
																	"nodeType": "YulIdentifier",
																	"src": "451:29:1"
																},
																"nativeSrc": "451:49:1",
																"nodeType": "YulFunctionCall",
																"src": "451:49:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "441:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "441:6:1"
																}
															]
														},
														{
															"nativeSrc": "509:35:1",
															"nodeType": "YulAssignment",
															"src": "509:35:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "529:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "529:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "540:2:1",
																				"nodeType": "YulLiteral",
																				"src": "540:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "525:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "525:3:1"
																		},
																		"nativeSrc": "525:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "525:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "519:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "519:5:1"
																},
																"nativeSrc": "519:25:1",
																"nodeType": "YulFunctionCall",
																"src": "519:25:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "509:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "509:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256_fromMemory",
												"nativeSrc": "196:354:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "261:9:1",
														"nodeType": "YulTypedName",
														"src": "261:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "272:7:1",
														"nodeType": "YulTypedName",
														"src": "272:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "284:6:1",
														"nodeType": "YulTypedName",
														"src": "284:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "292:6:1",
														"nodeType": "YulTypedName",
														"src": "292:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "300:6:1",
														"nodeType": "YulTypedName",
														"src": "300:6:1",
														"type": ""
													}
												],
												"src": "196:354:1"
											},
											{
												"body": {
													"nativeSrc": "729:247:1",
													"nodeType": "YulBlock",
													"src": "729:247:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "746:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "746:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "757:2:1",
																		"nodeType": "YulLiteral",
																		"src": "757:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "739:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "739:6:1"
																},
																"nativeSrc": "739:21:1",
																"nodeType": "YulFunctionCall",
																"src": "739:21:1"
															},
															"nativeSrc": "739:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "739:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "780:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "780:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "791:2:1",
																				"nodeType": "YulLiteral",
																				"src": "791:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "776:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "776:3:1"
																		},
																		"nativeSrc": "776:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "776:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "796:2:1",
																		"nodeType": "YulLiteral",
																		"src": "796:2:1",
																		"type": "",
																		"value": "57"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "769:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "769:6:1"
																},
																"nativeSrc": "769:30:1",
																"nodeType": "YulFunctionCall",
																"src": "769:30:1"
															},
															"nativeSrc": "769:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "769:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "819:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "819:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "830:2:1",
																				"nodeType": "YulLiteral",
																				"src": "830:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "815:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "815:3:1"
																		},
																		"nativeSrc": "815:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "815:18:1"
																	},
																	{
																		"hexValue": "556e693a3a636f6e7374727563746f723a206d696e74696e672063616e206f6e",
																		"kind": "string",
																		"nativeSrc": "835:34:1",
																		"nodeType": "YulLiteral",
																		"src": "835:34:1",
																		"type": "",
																		"value": "Uni::constructor: minting can on"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "808:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "808:6:1"
																},
																"nativeSrc": "808:62:1",
																"nodeType": "YulFunctionCall",
																"src": "808:62:1"
															},
															"nativeSrc": "808:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "808:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "890:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "890:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "901:2:1",
																				"nodeType": "YulLiteral",
																				"src": "901:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "886:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "886:3:1"
																		},
																		"nativeSrc": "886:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "886:18:1"
																	},
																	{
																		"hexValue": "6c7920626567696e206166746572206465706c6f796d656e74",
																		"kind": "string",
																		"nativeSrc": "906:27:1",
																		"nodeType": "YulLiteral",
																		"src": "906:27:1",
																		"type": "",
																		"value": "ly begin after deployment"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "879:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "879:6:1"
																},
																"nativeSrc": "879:55:1",
																"nodeType": "YulFunctionCall",
																"src": "879:55:1"
															},
															"nativeSrc": "879:55:1",
															"nodeType": "YulExpressionStatement",
															"src": "879:55:1"
														},
														{
															"nativeSrc": "943:27:1",
															"nodeType": "YulAssignment",
															"src": "943:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "955:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "955:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "966:3:1",
																		"nodeType": "YulLiteral",
																		"src": "966:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "951:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "951:3:1"
																},
																"nativeSrc": "951:19:1",
																"nodeType": "YulFunctionCall",
																"src": "951:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "943:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "943:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_709d77ba4b86f1914120b68d9c9230eddba9a66e2dbda0bfb5bc324846702760__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "555:421:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "706:9:1",
														"nodeType": "YulTypedName",
														"src": "706:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "720:4:1",
														"nodeType": "YulTypedName",
														"src": "720:4:1",
														"type": ""
													}
												],
												"src": "555:421:1"
											},
											{
												"body": {
													"nativeSrc": "1082:76:1",
													"nodeType": "YulBlock",
													"src": "1082:76:1",
													"statements": [
														{
															"nativeSrc": "1092:26:1",
															"nodeType": "YulAssignment",
															"src": "1092:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1104:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1104:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1115:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1115:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1100:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1100:3:1"
																},
																"nativeSrc": "1100:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1100:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1092:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1092:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1134:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1134:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1145:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1145:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:1"
																},
																"nativeSrc": "1127:25:1",
																"nodeType": "YulFunctionCall",
																"src": "1127:25:1"
															},
															"nativeSrc": "1127:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "1127:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "981:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1051:9:1",
														"nodeType": "YulTypedName",
														"src": "1051:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1062:6:1",
														"nodeType": "YulTypedName",
														"src": "1062:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1073:4:1",
														"nodeType": "YulTypedName",
														"src": "1073:4:1",
														"type": ""
													}
												],
												"src": "981:177:1"
											},
											{
												"body": {
													"nativeSrc": "1292:171:1",
													"nodeType": "YulBlock",
													"src": "1292:171:1",
													"statements": [
														{
															"nativeSrc": "1302:26:1",
															"nodeType": "YulAssignment",
															"src": "1302:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1314:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1314:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1325:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1325:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1310:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1310:3:1"
																},
																"nativeSrc": "1310:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1310:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1302:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1302:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1344:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1344:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1359:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1359:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1375:3:1",
																								"nodeType": "YulLiteral",
																								"src": "1375:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1380:1:1",
																								"nodeType": "YulLiteral",
																								"src": "1380:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1371:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1371:3:1"
																						},
																						"nativeSrc": "1371:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1371:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1384:1:1",
																						"nodeType": "YulLiteral",
																						"src": "1384:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1367:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1367:3:1"
																				},
																				"nativeSrc": "1367:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1367:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1355:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1355:3:1"
																		},
																		"nativeSrc": "1355:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1355:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1337:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1337:6:1"
																},
																"nativeSrc": "1337:51:1",
																"nodeType": "YulFunctionCall",
																"src": "1337:51:1"
															},
															"nativeSrc": "1337:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "1337:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1408:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1408:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1419:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1419:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1404:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1404:3:1"
																		},
																		"nativeSrc": "1404:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1404:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "1428:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1428:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1444:3:1",
																								"nodeType": "YulLiteral",
																								"src": "1444:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1449:1:1",
																								"nodeType": "YulLiteral",
																								"src": "1449:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1440:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1440:3:1"
																						},
																						"nativeSrc": "1440:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1440:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1453:1:1",
																						"nodeType": "YulLiteral",
																						"src": "1453:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1436:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1436:3:1"
																				},
																				"nativeSrc": "1436:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1436:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1424:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1424:3:1"
																		},
																		"nativeSrc": "1424:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1424:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1397:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1397:6:1"
																},
																"nativeSrc": "1397:60:1",
																"nodeType": "YulFunctionCall",
																"src": "1397:60:1"
															},
															"nativeSrc": "1397:60:1",
															"nodeType": "YulExpressionStatement",
															"src": "1397:60:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "1163:300:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1253:9:1",
														"nodeType": "YulTypedName",
														"src": "1253:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1264:6:1",
														"nodeType": "YulTypedName",
														"src": "1264:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1272:6:1",
														"nodeType": "YulTypedName",
														"src": "1272:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1283:4:1",
														"nodeType": "YulTypedName",
														"src": "1283:4:1",
														"type": ""
													}
												],
												"src": "1163:300:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_stringliteral_709d77ba4b86f1914120b68d9c9230eddba9a66e2dbda0bfb5bc324846702760__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 57)\n        mstore(add(headStart, 64), \"Uni::constructor: minting can on\")\n        mstore(add(headStart, 96), \"ly begin after deployment\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526b033b2e3c9fd0803ce80000005f5534801561001e575f80fd5b5060405161249e38038061249e83398101604081905261003d916101a4565b428110156100b75760405162461bcd60e51b815260206004820152603960248201527f556e693a3a636f6e7374727563746f723a206d696e74696e672063616e206f6e60448201527f6c7920626567696e206166746572206465706c6f796d656e7400000000000000606482015260840160405180910390fd5b5f80546001600160a01b03851680835260046020908152604080852080546001600160601b0319166001600160601b0390951694909417909355835492519283529092917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3600180546001600160a01b0319166001600160a01b038416908117909155604080515f815260208101929092527f3b0007eb941cf645526cbb3a4fdaecda9d28ce4843167d9263b536a1f1edc0f6910160405180910390a1600255506101dd9050565b80516001600160a01b038116811461019f575f80fd5b919050565b5f805f606084860312156101b6575f80fd5b6101bf84610189565b92506101cd60208501610189565b9150604084015190509250925092565b6122b4806101ea5f395ff3fe608060405234801561000f575f80fd5b50600436106101a1575f3560e01c80636fcfff45116100f3578063b4b5ea5711610093578063dd62ed3e1161006e578063dd62ed3e1461044f578063e7a324dc14610490578063f1127ed8146104b7578063fca3b5aa1461051d575f80fd5b8063b4b5ea5714610416578063c3cda52014610429578063d505accf1461043c575f80fd5b8063782d6fe1116100ce578063782d6fe1146103975780637ecebe00146103c257806395d89b41146103e1578063a9059cbb14610403575f80fd5b80636fcfff451461033957806370a082311461035e57806376c71ca11461038f575f80fd5b806330adf81f1161015e57806340c10f191161013957806340c10f19146102c9578063587cde1e146102de5780635c11d62f146103065780635c19a95c14610326575f80fd5b806330adf81f1461027f57806330b36cef146102a6578063313ce567146102af575f80fd5b806306fdde03146101a557806307546172146101e1578063095ea7b31461020c57806318160ddd1461022f57806320606b701461024557806323b872dd1461026c575b5f80fd5b6101cb604051806040016040528060078152602001660556e69737761760cc1b81525081565b6040516101d89190611d6a565b60405180910390f35b6001546101f4906001600160a01b031681565b6040516001600160a01b0390911681526020016101d8565b61021f61021a366004611dba565b610530565b60405190151581526020016101d8565b6102375f5481565b6040519081526020016101d8565b6102377f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86681565b61021f61027a366004611de2565b6105d6565b6102377f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b61023760025481565b6102b7601281565b60405160ff90911681526020016101d8565b6102dc6102d7366004611dba565b610701565b005b6101f46102ec366004611e1c565b60056020525f90815260409020546001600160a01b031681565b6103116301e1338081565b60405163ffffffff90911681526020016101d8565b6102dc610334366004611e1c565b6109f8565b610311610347366004611e1c565b60076020525f908152604090205463ffffffff1681565b61023761036c366004611e1c565b6001600160a01b03165f908152600460205260409020546001600160601b031690565b6102b7600281565b6103aa6103a5366004611dba565b610a05565b6040516001600160601b0390911681526020016101d8565b6102376103d0366004611e1c565b60086020525f908152604090205481565b6101cb60405180604001604052806003815260200162554e4960e81b81525081565b61021f610411366004611dba565b610c81565b6103aa610424366004611e1c565b610cbc565b6102dc610437366004611e45565b610d36565b6102dc61044a366004611e99565b611019565b61023761045d366004611eff565b6001600160a01b039182165f9081526003602090815260408083209390941682529190915220546001600160601b031690565b6102377fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf81565b6104f96104c5366004611f30565b600660209081525f928352604080842090915290825290205463ffffffff811690600160201b90046001600160601b031682565b6040805163ffffffff90931683526001600160601b039091166020830152016101d8565b6102dc61052b366004611e1c565b6113e8565b5f806105548360405180606001604052806024815260200161222c602491396114d1565b335f8181526003602090815260408083206001600160a01b038a168085529083529281902080546001600160601b0319166001600160601b038716908117909155905190815293945090927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a360019150505b92915050565b6001600160a01b0383165f9081526003602090815260408083203380855290835281842054825160608101909352602480845291936001600160601b0390911692859261062d928892919061222c908301396114d1565b9050866001600160a01b0316836001600160a01b0316146106e9575f61066c83836040518060600160405280603c81526020016120ac603c91396114ff565b6001600160a01b038981165f818152600360209081526040808320948a168084529482529182902080546001600160601b0319166001600160601b0387169081179091559151918252939450919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505b6106f4878783611548565b5060019695505050505050565b6001546001600160a01b0316331461076c5760405162461bcd60e51b815260206004820152602360248201527f556e693a3a6d696e743a206f6e6c7920746865206d696e7465722063616e206d6044820152621a5b9d60ea1b60648201526084015b60405180910390fd5b6002544210156107c95760405162461bcd60e51b815260206004820152602260248201527f556e693a3a6d696e743a206d696e74696e67206e6f7420616c6c6f7765642079604482015261195d60f21b6064820152608401610763565b6001600160a01b0382166108365760405162461bcd60e51b815260206004820152602e60248201527f556e693a3a6d696e743a2063616e6e6f74207472616e7366657220746f20746860448201526d65207a65726f206164647265737360901b6064820152608401610763565b610844426301e13380611790565b6002819055505f61086d8260405180606001604052806021815260200161220b602191396114d1565b90506108886108815f54600260ff166117ee565b606461186c565b816001600160601b031611156108e05760405162461bcd60e51b815260206004820152601c60248201527f556e693a3a6d696e743a206578636565646564206d696e7420636170000000006044820152606401610763565b6109156108f75f54836001600160601b0316611790565b6040518060600160405280602681526020016120e8602691396114d1565b6001600160601b039081165f9081556001600160a01b0385168152600460209081526040918290205482516060810190935260248084526109669491909116928592909190612088908301396118ad565b6001600160a01b0384165f81815260046020908152604080832080546001600160601b0319166001600160601b03968716179055519385168452919290917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36001600160a01b038084165f908152600560205260408120546109f39216836118f9565b505050565b610a023382611a9a565b50565b5f438210610a645760405162461bcd60e51b815260206004820152602660248201527f556e693a3a6765745072696f72566f7465733a206e6f742079657420646574656044820152651c9b5a5b995960d21b6064820152608401610763565b6001600160a01b0383165f9081526007602052604081205463ffffffff1690819003610a93575f9150506105d0565b6001600160a01b0384165f9081526006602052604081208491610ab7600185611f81565b63ffffffff908116825260208201929092526040015f20541611610b27576001600160a01b0384165f90815260066020526040812090610af8600184611f81565b63ffffffff16815260208101919091526040015f2054600160201b90046001600160601b031691506105d09050565b6001600160a01b0384165f90815260066020908152604080832083805290915290205463ffffffff16831015610b60575f9150506105d0565b5f80610b6d600184611f81565b90505b8163ffffffff168163ffffffff161115610c3d575f6002610b918484611f81565b610b9b9190611fb1565b610ba59083611f81565b6001600160a01b0388165f90815260066020908152604080832063ffffffff858116855290835292819020815180830190925254928316808252600160201b9093046001600160601b031691810191909152919250879003610c11576020015194506105d09350505050565b805163ffffffff16871115610c2857819350610c36565b610c33600183611f81565b92505b5050610b70565b506001600160a01b0385165f90815260066020908152604080832063ffffffff909416835292905220546001600160601b03600160201b9091041691505092915050565b5f80610ca5836040518060600160405280602581526020016121e6602591396114d1565b9050610cb2338583611548565b5060019392505050565b6001600160a01b0381165f9081526007602052604081205463ffffffff1680610ce5575f610d2f565b6001600160a01b0383165f90815260066020526040812090610d08600184611f81565b63ffffffff16815260208101919091526040015f2054600160201b90046001600160601b03165b9392505050565b60408051808201825260078152660556e69737761760cc1b60209182015281517f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866818301527f99c45e8ee5dde061ced9c812089094fbd28a020e7e37f2851198887e5ca6498581840152466060820152306080808301919091528351808303909101815260a0820184528051908301207fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60c08301526001600160a01b038a1660e083015261010082018990526101208083018990528451808403909101815261014083019094528351939092019290922061190160f01b6101608401526101628301829052610182830181905290915f906101a20160408051601f1981840301815282825280516020918201205f80855291840180845281905260ff8a169284019290925260608301889052608083018790529092509060019060a0016020604051602081039080840390855afa158015610eb4573d5f803e3d5ffd5b5050604051601f1901519150506001600160a01b038116610f255760405162461bcd60e51b815260206004820152602560248201527f556e693a3a64656c656761746542795369673a20696e76616c6964207369676e604482015264617475726560d81b6064820152608401610763565b6001600160a01b0381165f908152600860205260408120805491610f4883611fd8565b919050558914610fa45760405162461bcd60e51b815260206004820152602160248201527f556e693a3a64656c656761746542795369673a20696e76616c6964206e6f6e636044820152606560f81b6064820152608401610763565b874211156110025760405162461bcd60e51b815260206004820152602560248201527f556e693a3a64656c656761746542795369673a207369676e61747572652065786044820152641c1a5c995960da1b6064820152608401610763565b61100c818b611a9a565b505050505b505050505050565b5f61103c86604051806060016040528060238152602001612143602391396114d1565b60408051808201825260078152660556e69737761760cc1b60209182015281517f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866818301527f99c45e8ee5dde061ced9c812089094fbd28a020e7e37f2851198887e5ca6498581840152466060820152306080808301919091528351808303909101815260a090910183528051908201206001600160a01b038c165f90815260089092529181208054939450919290917f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9918c918c918c918661111e83611fd8565b909155506040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810188905260e0016040516020818303038152906040528051906020012090505f828260405160200161119c92919061190160f01b81526002810192909252602282015260420190565b60408051601f1981840301815282825280516020918201205f80855291840180845281905260ff8b169284019290925260608301899052608083018890529092509060019060a0016020604051602081039080840390855afa158015611204573d5f803e3d5ffd5b5050604051601f1901519150506001600160a01b0381166112675760405162461bcd60e51b815260206004820152601e60248201527f556e693a3a7065726d69743a20696e76616c6964207369676e617475726500006044820152606401610763565b8b6001600160a01b0316816001600160a01b0316146112c85760405162461bcd60e51b815260206004820152601960248201527f556e693a3a7065726d69743a20756e617574686f72697a6564000000000000006044820152606401610763565b884211156113185760405162461bcd60e51b815260206004820152601e60248201527f556e693a3a7065726d69743a207369676e6174757265206578706972656400006044820152606401610763565b8460035f8e6001600160a01b03166001600160a01b031681526020019081526020015f205f8d6001600160a01b03166001600160a01b031681526020019081526020015f205f6101000a8154816001600160601b0302191690836001600160601b031602179055508a6001600160a01b03168c6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925876040516113d291906001600160601b0391909116815260200190565b60405180910390a3505050505050505050505050565b6001546001600160a01b031633146114685760405162461bcd60e51b815260206004820152603d60248201527f556e693a3a7365744d696e7465723a206f6e6c7920746865206d696e7465722060448201527f63616e206368616e676520746865206d696e74657220616464726573730000006064820152608401610763565b600154604080516001600160a01b03928316815291831660208301527f3b0007eb941cf645526cbb3a4fdaecda9d28ce4843167d9263b536a1f1edc0f6910160405180910390a1600180546001600160a01b0319166001600160a01b0392909216919091179055565b5f81600160601b84106114f75760405162461bcd60e51b81526004016107639190611d6a565b509192915050565b5f836001600160601b0316836001600160601b0316111582906115355760405162461bcd60e51b81526004016107639190611d6a565b506115408385611ff0565b949350505050565b6001600160a01b0383166115c45760405162461bcd60e51b815260206004820152603b60248201527f556e693a3a5f7472616e73666572546f6b656e733a2063616e6e6f742074726160448201527f6e736665722066726f6d20746865207a65726f206164647265737300000000006064820152608401610763565b6001600160a01b0382166116405760405162461bcd60e51b815260206004820152603960248201527f556e693a3a5f7472616e73666572546f6b656e733a2063616e6e6f742074726160448201527f6e7366657220746f20746865207a65726f2061646472657373000000000000006064820152608401610763565b6001600160a01b0383165f9081526004602090815260409182902054825160608101909352603580845261168a936001600160601b03909216928592919061210e908301396114ff565b6001600160a01b038481165f90815260046020908152604080832080546001600160601b0319166001600160601b0396871617905592861682529082902054825160608101909352602f8084526116f19491909116928592909190612250908301396118ad565b6001600160a01b038381165f8181526004602090815260409182902080546001600160601b0319166001600160601b03968716179055905193851684529092918616917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36001600160a01b038084165f908152600560205260408082205485841683529120546109f3929182169116836118f9565b5f8061179c838561200f565b905083811015610d2f5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610763565b5f825f036117fd57505f6105d0565b5f6118088385612022565b9050826118158583612039565b14610d2f5760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b6064820152608401610763565b5f610d2f83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611b23565b5f806118b9848661204c565b9050846001600160601b0316816001600160601b0316101583906118f05760405162461bcd60e51b81526004016107639190611d6a565b50949350505050565b816001600160a01b0316836001600160a01b03161415801561192357505f816001600160601b0316115b156109f3576001600160a01b038316156119e3576001600160a01b0383165f9081526007602052604081205463ffffffff169081611961575f6119ab565b6001600160a01b0385165f90815260066020526040812090611984600185611f81565b63ffffffff16815260208101919091526040015f2054600160201b90046001600160601b03165b90505f6119d182856040518060600160405280602781526020016121bf602791396114ff565b90506119df86848484611b58565b5050505b6001600160a01b038216156109f3576001600160a01b0382165f9081526007602052604081205463ffffffff169081611a1c575f611a66565b6001600160a01b0384165f90815260066020526040812090611a3f600185611f81565b63ffffffff16815260208101919091526040015f2054600160201b90046001600160601b03165b90505f611a8c8285604051806060016040528060268152602001612166602691396118ad565b905061101185848484611b58565b6001600160a01b038083165f81815260056020818152604080842080546004845282862054949093528787166001600160a01b031984168117909155905191909516946001600160601b039092169391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a4611b1d8284836118f9565b50505050565b5f8183611b435760405162461bcd60e51b81526004016107639190611d6a565b505f611b4f8486612039565b95945050505050565b5f611b7b4360405180606001604052806033815260200161218c60339139611d48565b90505f8463ffffffff16118015611bd257506001600160a01b0385165f90815260066020526040812063ffffffff831691611bb7600188611f81565b63ffffffff908116825260208201929092526040015f205416145b15611c44576001600160a01b0385165f9081526006602052604081208391611bfb600188611f81565b63ffffffff16815260208101919091526040015f2080546001600160601b0392909216600160201b026fffffffffffffffffffffffff0000000019909216919091179055611cf3565b60408051808201825263ffffffff80841682526001600160601b0380861660208085019182526001600160a01b038b165f908152600682528681208b8616825290915294909420925183549451909116600160201b026fffffffffffffffffffffffffffffffff19909416911617919091179055611cc384600161206b565b6001600160a01b0386165f908152600760205260409020805463ffffffff191663ffffffff929092169190911790555b604080516001600160601b038086168252841660208201526001600160a01b038716917fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724910160405180910390a25050505050565b5f81600160201b84106114f75760405162461bcd60e51b815260040161076391905b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b0381168114611db5575f80fd5b919050565b5f8060408385031215611dcb575f80fd5b611dd483611d9f565b946020939093013593505050565b5f805f60608486031215611df4575f80fd5b611dfd84611d9f565b9250611e0b60208501611d9f565b929592945050506040919091013590565b5f60208284031215611e2c575f80fd5b610d2f82611d9f565b803560ff81168114611db5575f80fd5b5f805f805f8060c08789031215611e5a575f80fd5b611e6387611d9f565b95506020870135945060408701359350611e7f60608801611e35565b9598949750929560808101359460a0909101359350915050565b5f805f805f805f60e0888a031215611eaf575f80fd5b611eb888611d9f565b9650611ec660208901611d9f565b95506040880135945060608801359350611ee260808901611e35565b9699959850939692959460a0840135945060c09093013592915050565b5f8060408385031215611f10575f80fd5b611f1983611d9f565b9150611f2760208401611d9f565b90509250929050565b5f8060408385031215611f41575f80fd5b611f4a83611d9f565b9150602083013563ffffffff81168114611f62575f80fd5b809150509250929050565b634e487b7160e01b5f52601160045260245ffd5b63ffffffff82811682821603908111156105d0576105d0611f6d565b634e487b7160e01b5f52601260045260245ffd5b5f63ffffffff831680611fc657611fc6611f9d565b8063ffffffff84160491505092915050565b5f60018201611fe957611fe9611f6d565b5060010190565b6001600160601b0382811682821603908111156105d0576105d0611f6d565b808201808211156105d0576105d0611f6d565b80820281158282048414176105d0576105d0611f6d565b5f8261204757612047611f9d565b500490565b6001600160601b0381811683821601908111156105d0576105d0611f6d565b63ffffffff81811683821601908111156105d0576105d0611f6d56fe556e693a3a6d696e743a207472616e7366657220616d6f756e74206f766572666c6f7773556e693a3a7472616e7366657246726f6d3a207472616e7366657220616d6f756e742065786365656473207370656e64657220616c6c6f77616e6365556e693a3a6d696e743a20746f74616c537570706c7920657863656564732039362062697473556e693a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e7420657863656564732062616c616e6365556e693a3a7065726d69743a20616d6f756e7420657863656564732039362062697473556e693a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f7773556e693a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d62657220657863656564732033322062697473556e693a3a5f6d6f7665566f7465733a20766f746520616d6f756e7420756e646572666c6f7773556e693a3a7472616e736665723a20616d6f756e7420657863656564732039362062697473556e693a3a6d696e743a20616d6f756e7420657863656564732039362062697473556e693a3a617070726f76653a20616d6f756e7420657863656564732039362062697473556e693a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e74206f766572666c6f7773a2646970667358221220b4b84d2b003d0602ebacd65cb25e2c213780afbfab33bc022976f467f1db628364736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH12 0x33B2E3C9FD0803CE8000000 PUSH0 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x249E CODESIZE SUB DUP1 PUSH2 0x249E DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x3D SWAP2 PUSH2 0x1A4 JUMP JUMPDEST TIMESTAMP DUP2 LT ISZERO PUSH2 0xB7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E693A3A636F6E7374727563746F723A206D696E74696E672063616E206F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C7920626567696E206166746572206465706C6F796D656E7400000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP4 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE DUP4 SLOAD SWAP3 MLOAD SWAP3 DUP4 MSTORE SWAP1 SWAP3 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x3B0007EB941CF645526CBB3A4FDAECDA9D28CE4843167D9263B536A1F1EDC0F6 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x2 SSTORE POP PUSH2 0x1DD SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x19F JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1B6 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1BF DUP5 PUSH2 0x189 JUMP JUMPDEST SWAP3 POP PUSH2 0x1CD PUSH1 0x20 DUP6 ADD PUSH2 0x189 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x22B4 DUP1 PUSH2 0x1EA PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A1 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FCFFF45 GT PUSH2 0xF3 JUMPI DUP1 PUSH4 0xB4B5EA57 GT PUSH2 0x93 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x44F JUMPI DUP1 PUSH4 0xE7A324DC EQ PUSH2 0x490 JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x4B7 JUMPI DUP1 PUSH4 0xFCA3B5AA EQ PUSH2 0x51D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB4B5EA57 EQ PUSH2 0x416 JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x429 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x43C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x782D6FE1 GT PUSH2 0xCE JUMPI DUP1 PUSH4 0x782D6FE1 EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x3C2 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3E1 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x403 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x339 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x35E JUMPI DUP1 PUSH4 0x76C71CA1 EQ PUSH2 0x38F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x30ADF81F GT PUSH2 0x15E JUMPI DUP1 PUSH4 0x40C10F19 GT PUSH2 0x139 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0x5C11D62F EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x326 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x30B36CEF EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2AF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x7546172 EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x20606B70 EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x26C JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1CB PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0x556E697377617 PUSH1 0xCC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x1D6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x1F4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D8 JUMP JUMPDEST PUSH2 0x21F PUSH2 0x21A CALLDATASIZE PUSH1 0x4 PUSH2 0x1DBA JUMP JUMPDEST PUSH2 0x530 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D8 JUMP JUMPDEST PUSH2 0x237 PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D8 JUMP JUMPDEST PUSH2 0x237 PUSH32 0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866 DUP2 JUMP JUMPDEST PUSH2 0x21F PUSH2 0x27A CALLDATASIZE PUSH1 0x4 PUSH2 0x1DE2 JUMP JUMPDEST PUSH2 0x5D6 JUMP JUMPDEST PUSH2 0x237 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 JUMP JUMPDEST PUSH2 0x237 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2B7 PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D8 JUMP JUMPDEST PUSH2 0x2DC PUSH2 0x2D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DBA JUMP JUMPDEST PUSH2 0x701 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F4 PUSH2 0x2EC CALLDATASIZE PUSH1 0x4 PUSH2 0x1E1C JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x311 PUSH4 0x1E13380 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D8 JUMP JUMPDEST PUSH2 0x2DC PUSH2 0x334 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E1C JUMP JUMPDEST PUSH2 0x9F8 JUMP JUMPDEST PUSH2 0x311 PUSH2 0x347 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E1C JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x36C CALLDATASIZE PUSH1 0x4 PUSH2 0x1E1C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x2B7 PUSH1 0x2 DUP2 JUMP JUMPDEST PUSH2 0x3AA PUSH2 0x3A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DBA JUMP JUMPDEST PUSH2 0xA05 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D8 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x3D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E1C JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1CB PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x554E49 PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x21F PUSH2 0x411 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DBA JUMP JUMPDEST PUSH2 0xC81 JUMP JUMPDEST PUSH2 0x3AA PUSH2 0x424 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E1C JUMP JUMPDEST PUSH2 0xCBC JUMP JUMPDEST PUSH2 0x2DC PUSH2 0x437 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E45 JUMP JUMPDEST PUSH2 0xD36 JUMP JUMPDEST PUSH2 0x2DC PUSH2 0x44A CALLDATASIZE PUSH1 0x4 PUSH2 0x1E99 JUMP JUMPDEST PUSH2 0x1019 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x45D CALLDATASIZE PUSH1 0x4 PUSH2 0x1EFF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x237 PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF DUP2 JUMP JUMPDEST PUSH2 0x4F9 PUSH2 0x4C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F30 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF DUP2 AND SWAP1 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x1D8 JUMP JUMPDEST PUSH2 0x2DC PUSH2 0x52B CALLDATASIZE PUSH1 0x4 PUSH2 0x1E1C JUMP JUMPDEST PUSH2 0x13E8 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x554 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x222C PUSH1 0x24 SWAP2 CODECOPY PUSH2 0x14D1 JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP8 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP4 SWAP5 POP SWAP1 SWAP3 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD DUP3 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP4 MSTORE PUSH1 0x24 DUP1 DUP5 MSTORE SWAP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP2 AND SWAP3 DUP6 SWAP3 PUSH2 0x62D SWAP3 DUP9 SWAP3 SWAP2 SWAP1 PUSH2 0x222C SWAP1 DUP4 ADD CODECOPY PUSH2 0x14D1 JUMP JUMPDEST SWAP1 POP DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x6E9 JUMPI PUSH0 PUSH2 0x66C DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3C DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x20AC PUSH1 0x3C SWAP2 CODECOPY PUSH2 0x14FF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP11 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP8 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE SWAP4 SWAP5 POP SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMPDEST PUSH2 0x6F4 DUP8 DUP8 DUP4 PUSH2 0x1548 JUMP JUMPDEST POP PUSH1 0x1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x76C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E693A3A6D696E743A206F6E6C7920746865206D696E7465722063616E206D PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1A5B9D PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD TIMESTAMP LT ISZERO PUSH2 0x7C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E693A3A6D696E743A206D696E74696E67206E6F7420616C6C6F7765642079 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x195D PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x763 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x836 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E693A3A6D696E743A2063616E6E6F74207472616E7366657220746F207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x65207A65726F2061646472657373 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x763 JUMP JUMPDEST PUSH2 0x844 TIMESTAMP PUSH4 0x1E13380 PUSH2 0x1790 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH0 PUSH2 0x86D DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x220B PUSH1 0x21 SWAP2 CODECOPY PUSH2 0x14D1 JUMP JUMPDEST SWAP1 POP PUSH2 0x888 PUSH2 0x881 PUSH0 SLOAD PUSH1 0x2 PUSH1 0xFF AND PUSH2 0x17EE JUMP JUMPDEST PUSH1 0x64 PUSH2 0x186C JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND GT ISZERO PUSH2 0x8E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E693A3A6D696E743A206578636565646564206D696E742063617000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x763 JUMP JUMPDEST PUSH2 0x915 PUSH2 0x8F7 PUSH0 SLOAD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH2 0x1790 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x20E8 PUSH1 0x26 SWAP2 CODECOPY PUSH2 0x14D1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 DUP2 AND PUSH0 SWAP1 DUP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP4 MSTORE PUSH1 0x24 DUP1 DUP5 MSTORE PUSH2 0x966 SWAP5 SWAP2 SWAP1 SWAP2 AND SWAP3 DUP6 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x2088 SWAP1 DUP4 ADD CODECOPY PUSH2 0x18AD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP7 DUP8 AND OR SWAP1 SSTORE MLOAD SWAP4 DUP6 AND DUP5 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x9F3 SWAP3 AND DUP4 PUSH2 0x18F9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xA02 CALLER DUP3 PUSH2 0x1A9A JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 NUMBER DUP3 LT PUSH2 0xA64 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E693A3A6765745072696F72566F7465733A206E6F74207965742064657465 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C9B5A5B9959 PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x763 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP2 SWAP1 SUB PUSH2 0xA93 JUMPI PUSH0 SWAP2 POP POP PUSH2 0x5D0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP5 SWAP2 PUSH2 0xAB7 PUSH1 0x1 DUP6 PUSH2 0x1F81 JUMP JUMPDEST PUSH4 0xFFFFFFFF SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 SLOAD AND GT PUSH2 0xB27 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0xAF8 PUSH1 0x1 DUP5 PUSH2 0x1F81 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP2 POP PUSH2 0x5D0 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 DUP1 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP4 LT ISZERO PUSH2 0xB60 JUMPI PUSH0 SWAP2 POP POP PUSH2 0x5D0 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xB6D PUSH1 0x1 DUP5 PUSH2 0x1F81 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP2 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0xC3D JUMPI PUSH0 PUSH1 0x2 PUSH2 0xB91 DUP5 DUP5 PUSH2 0x1F81 JUMP JUMPDEST PUSH2 0xB9B SWAP2 SWAP1 PUSH2 0x1FB1 JUMP JUMPDEST PUSH2 0xBA5 SWAP1 DUP4 PUSH2 0x1F81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF DUP6 DUP2 AND DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE SLOAD SWAP3 DUP4 AND DUP1 DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 SHL SWAP1 SWAP4 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP3 POP DUP8 SWAP1 SUB PUSH2 0xC11 JUMPI PUSH1 0x20 ADD MLOAD SWAP5 POP PUSH2 0x5D0 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH4 0xFFFFFFFF AND DUP8 GT ISZERO PUSH2 0xC28 JUMPI DUP2 SWAP4 POP PUSH2 0xC36 JUMP JUMPDEST PUSH2 0xC33 PUSH1 0x1 DUP4 PUSH2 0x1F81 JUMP JUMPDEST SWAP3 POP JUMPDEST POP POP PUSH2 0xB70 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0x1 PUSH1 0x20 SHL SWAP1 SWAP2 DIV AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xCA5 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21E6 PUSH1 0x25 SWAP2 CODECOPY PUSH2 0x14D1 JUMP JUMPDEST SWAP1 POP PUSH2 0xCB2 CALLER DUP6 DUP4 PUSH2 0x1548 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP1 PUSH2 0xCE5 JUMPI PUSH0 PUSH2 0xD2F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0xD08 PUSH1 0x1 DUP5 PUSH2 0x1F81 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x7 DUP2 MSTORE PUSH7 0x556E697377617 PUSH1 0xCC SHL PUSH1 0x20 SWAP2 DUP3 ADD MSTORE DUP2 MLOAD PUSH32 0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866 DUP2 DUP4 ADD MSTORE PUSH32 0x99C45E8EE5DDE061CED9C812089094FBD28A020E7E37F2851198887E5CA64985 DUP2 DUP5 ADD MSTORE CHAINID PUSH1 0x60 DUP3 ADD MSTORE ADDRESS PUSH1 0x80 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA0 DUP3 ADD DUP5 MSTORE DUP1 MLOAD SWAP1 DUP4 ADD KECCAK256 PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 DUP3 ADD DUP10 SWAP1 MSTORE PUSH2 0x120 DUP1 DUP4 ADD DUP10 SWAP1 MSTORE DUP5 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH2 0x140 DUP4 ADD SWAP1 SWAP5 MSTORE DUP4 MLOAD SWAP4 SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH2 0x160 DUP5 ADD MSTORE PUSH2 0x162 DUP4 ADD DUP3 SWAP1 MSTORE PUSH2 0x182 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP2 PUSH0 SWAP1 PUSH2 0x1A2 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH0 DUP1 DUP6 MSTORE SWAP2 DUP5 ADD DUP1 DUP5 MSTORE DUP2 SWAP1 MSTORE PUSH1 0xFF DUP11 AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP4 ADD DUP9 SWAP1 MSTORE PUSH1 0x80 DUP4 ADD DUP8 SWAP1 MSTORE SWAP1 SWAP3 POP SWAP1 PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEB4 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xF25 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E693A3A64656C656761746542795369673A20696E76616C6964207369676E PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6174757265 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x763 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0xF48 DUP4 PUSH2 0x1FD8 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE DUP10 EQ PUSH2 0xFA4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E693A3A64656C656761746542795369673A20696E76616C6964206E6F6E63 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x763 JUMP JUMPDEST DUP8 TIMESTAMP GT ISZERO PUSH2 0x1002 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E693A3A64656C656761746542795369673A207369676E6174757265206578 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x1C1A5C9959 PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x763 JUMP JUMPDEST PUSH2 0x100C DUP2 DUP12 PUSH2 0x1A9A JUMP JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x103C DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2143 PUSH1 0x23 SWAP2 CODECOPY PUSH2 0x14D1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x7 DUP2 MSTORE PUSH7 0x556E697377617 PUSH1 0xCC SHL PUSH1 0x20 SWAP2 DUP3 ADD MSTORE DUP2 MLOAD PUSH32 0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866 DUP2 DUP4 ADD MSTORE PUSH32 0x99C45E8EE5DDE061CED9C812089094FBD28A020E7E37F2851198887E5CA64985 DUP2 DUP5 ADD MSTORE CHAINID PUSH1 0x60 DUP3 ADD MSTORE ADDRESS PUSH1 0x80 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA0 SWAP1 SWAP2 ADD DUP4 MSTORE DUP1 MLOAD SWAP1 DUP3 ADD KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 SWAP1 SWAP3 MSTORE SWAP2 DUP2 KECCAK256 DUP1 SLOAD SWAP4 SWAP5 POP SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 SWAP2 DUP13 SWAP2 DUP13 SWAP2 DUP13 SWAP2 DUP7 PUSH2 0x111E DUP4 PUSH2 0x1FD8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP1 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0xE0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x119C SWAP3 SWAP2 SWAP1 PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH0 DUP1 DUP6 MSTORE SWAP2 DUP5 ADD DUP1 DUP5 MSTORE DUP2 SWAP1 MSTORE PUSH1 0xFF DUP12 AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP4 ADD DUP10 SWAP1 MSTORE PUSH1 0x80 DUP4 ADD DUP9 SWAP1 MSTORE SWAP1 SWAP3 POP SWAP1 PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1204 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1267 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E693A3A7065726D69743A20696E76616C6964207369676E61747572650000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x763 JUMP JUMPDEST DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x12C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E693A3A7065726D69743A20756E617574686F72697A656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x763 JUMP JUMPDEST DUP9 TIMESTAMP GT ISZERO PUSH2 0x1318 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E693A3A7065726D69743A207369676E617475726520657870697265640000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x763 JUMP JUMPDEST DUP5 PUSH1 0x3 PUSH0 DUP15 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP14 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP8 PUSH1 0x40 MLOAD PUSH2 0x13D2 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1468 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E693A3A7365744D696E7465723A206F6E6C7920746865206D696E74657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x63616E206368616E676520746865206D696E7465722061646472657373000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x763 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0x3B0007EB941CF645526CBB3A4FDAECDA9D28CE4843167D9263B536A1F1EDC0F6 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 PUSH1 0x60 SHL DUP5 LT PUSH2 0x14F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP2 SWAP1 PUSH2 0x1D6A JUMP JUMPDEST POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND GT ISZERO DUP3 SWAP1 PUSH2 0x1535 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP2 SWAP1 PUSH2 0x1D6A JUMP JUMPDEST POP PUSH2 0x1540 DUP4 DUP6 PUSH2 0x1FF0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x15C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E693A3A5F7472616E73666572546F6B656E733A2063616E6E6F7420747261 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E736665722066726F6D20746865207A65726F20616464726573730000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x763 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1640 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E693A3A5F7472616E73666572546F6B656E733A2063616E6E6F7420747261 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E7366657220746F20746865207A65726F206164647265737300000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x763 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP4 MSTORE PUSH1 0x35 DUP1 DUP5 MSTORE PUSH2 0x168A SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP3 AND SWAP3 DUP6 SWAP3 SWAP2 SWAP1 PUSH2 0x210E SWAP1 DUP4 ADD CODECOPY PUSH2 0x14FF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP7 DUP8 AND OR SWAP1 SSTORE SWAP3 DUP7 AND DUP3 MSTORE SWAP1 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP4 MSTORE PUSH1 0x2F DUP1 DUP5 MSTORE PUSH2 0x16F1 SWAP5 SWAP2 SWAP1 SWAP2 AND SWAP3 DUP6 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x2250 SWAP1 DUP4 ADD CODECOPY PUSH2 0x18AD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP7 DUP8 AND OR SWAP1 SSTORE SWAP1 MLOAD SWAP4 DUP6 AND DUP5 MSTORE SWAP1 SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD DUP6 DUP5 AND DUP4 MSTORE SWAP2 KECCAK256 SLOAD PUSH2 0x9F3 SWAP3 SWAP2 DUP3 AND SWAP2 AND DUP4 PUSH2 0x18F9 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x179C DUP4 DUP6 PUSH2 0x200F JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xD2F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x763 JUMP JUMPDEST PUSH0 DUP3 PUSH0 SUB PUSH2 0x17FD JUMPI POP PUSH0 PUSH2 0x5D0 JUMP JUMPDEST PUSH0 PUSH2 0x1808 DUP4 DUP6 PUSH2 0x2022 JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0x1815 DUP6 DUP4 PUSH2 0x2039 JUMP JUMPDEST EQ PUSH2 0xD2F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x77 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x763 JUMP JUMPDEST PUSH0 PUSH2 0xD2F DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x1B23 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x18B9 DUP5 DUP7 PUSH2 0x204C JUMP JUMPDEST SWAP1 POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND LT ISZERO DUP4 SWAP1 PUSH2 0x18F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP2 SWAP1 PUSH2 0x1D6A JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x1923 JUMPI POP PUSH0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND GT JUMPDEST ISZERO PUSH2 0x9F3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x19E3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH2 0x1961 JUMPI PUSH0 PUSH2 0x19AB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x1984 PUSH1 0x1 DUP6 PUSH2 0x1F81 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND JUMPDEST SWAP1 POP PUSH0 PUSH2 0x19D1 DUP3 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21BF PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x14FF JUMP JUMPDEST SWAP1 POP PUSH2 0x19DF DUP7 DUP5 DUP5 DUP5 PUSH2 0x1B58 JUMP JUMPDEST POP POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x9F3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH2 0x1A1C JUMPI PUSH0 PUSH2 0x1A66 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x1A3F PUSH1 0x1 DUP6 PUSH2 0x1F81 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1A8C DUP3 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2166 PUSH1 0x26 SWAP2 CODECOPY PUSH2 0x18AD JUMP JUMPDEST SWAP1 POP PUSH2 0x1011 DUP6 DUP5 DUP5 DUP5 PUSH2 0x1B58 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x4 DUP5 MSTORE DUP3 DUP7 KECCAK256 SLOAD SWAP5 SWAP1 SWAP4 MSTORE DUP8 DUP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP5 AND DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP6 AND SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP3 AND SWAP4 SWAP2 SWAP3 DUP6 SWAP3 SWAP2 PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F SWAP2 SWAP1 LOG4 PUSH2 0x1B1D DUP3 DUP5 DUP4 PUSH2 0x18F9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x1B43 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP2 SWAP1 PUSH2 0x1D6A JUMP JUMPDEST POP PUSH0 PUSH2 0x1B4F DUP5 DUP7 PUSH2 0x2039 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B7B NUMBER PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x33 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x218C PUSH1 0x33 SWAP2 CODECOPY PUSH2 0x1D48 JUMP JUMPDEST SWAP1 POP PUSH0 DUP5 PUSH4 0xFFFFFFFF AND GT DUP1 ISZERO PUSH2 0x1BD2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH4 0xFFFFFFFF DUP4 AND SWAP2 PUSH2 0x1BB7 PUSH1 0x1 DUP9 PUSH2 0x1F81 JUMP JUMPDEST PUSH4 0xFFFFFFFF SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 SLOAD AND EQ JUMPDEST ISZERO PUSH2 0x1C44 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 SWAP2 PUSH2 0x1BFB PUSH1 0x1 DUP9 PUSH2 0x1F81 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x20 SHL MUL PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFF00000000 NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x1CF3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH4 0xFFFFFFFF DUP1 DUP5 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP1 DUP7 AND PUSH1 0x20 DUP1 DUP6 ADD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 DUP3 MSTORE DUP7 DUP2 KECCAK256 DUP12 DUP7 AND DUP3 MSTORE SWAP1 SWAP2 MSTORE SWAP5 SWAP1 SWAP5 KECCAK256 SWAP3 MLOAD DUP4 SLOAD SWAP5 MLOAD SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0x20 SHL MUL PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 SWAP5 AND SWAP2 AND OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x1CC3 DUP5 PUSH1 0x1 PUSH2 0x206B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH4 0xFFFFFFFF NOT AND PUSH4 0xFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP1 DUP7 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP2 PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 PUSH1 0x20 SHL DUP5 LT PUSH2 0x14F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP2 SWAP1 JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1DB5 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DCB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1DD4 DUP4 PUSH2 0x1D9F JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1DF4 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1DFD DUP5 PUSH2 0x1D9F JUMP JUMPDEST SWAP3 POP PUSH2 0x1E0B PUSH1 0x20 DUP6 ADD PUSH2 0x1D9F JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E2C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD2F DUP3 PUSH2 0x1D9F JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1DB5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1E5A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1E63 DUP8 PUSH2 0x1D9F JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH2 0x1E7F PUSH1 0x60 DUP9 ADD PUSH2 0x1E35 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP3 SWAP6 PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP5 PUSH1 0xA0 SWAP1 SWAP2 ADD CALLDATALOAD SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1EAF JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1EB8 DUP9 PUSH2 0x1D9F JUMP JUMPDEST SWAP7 POP PUSH2 0x1EC6 PUSH1 0x20 DUP10 ADD PUSH2 0x1D9F JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH2 0x1EE2 PUSH1 0x80 DUP10 ADD PUSH2 0x1E35 JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F10 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1F19 DUP4 PUSH2 0x1D9F JUMP JUMPDEST SWAP2 POP PUSH2 0x1F27 PUSH1 0x20 DUP5 ADD PUSH2 0x1D9F JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F41 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1F4A DUP4 PUSH2 0x1D9F JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1F62 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP3 DUP2 AND DUP3 DUP3 AND SUB SWAP1 DUP2 GT ISZERO PUSH2 0x5D0 JUMPI PUSH2 0x5D0 PUSH2 0x1F6D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH4 0xFFFFFFFF DUP4 AND DUP1 PUSH2 0x1FC6 JUMPI PUSH2 0x1FC6 PUSH2 0x1F9D JUMP JUMPDEST DUP1 PUSH4 0xFFFFFFFF DUP5 AND DIV SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x1FE9 JUMPI PUSH2 0x1FE9 PUSH2 0x1F6D JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP3 DUP2 AND DUP3 DUP3 AND SUB SWAP1 DUP2 GT ISZERO PUSH2 0x5D0 JUMPI PUSH2 0x5D0 PUSH2 0x1F6D JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x5D0 JUMPI PUSH2 0x5D0 PUSH2 0x1F6D JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x5D0 JUMPI PUSH2 0x5D0 PUSH2 0x1F6D JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x2047 JUMPI PUSH2 0x2047 PUSH2 0x1F9D JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP2 GT ISZERO PUSH2 0x5D0 JUMPI PUSH2 0x5D0 PUSH2 0x1F6D JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP2 GT ISZERO PUSH2 0x5D0 JUMPI PUSH2 0x5D0 PUSH2 0x1F6D JUMP INVALID SSTORE PUSH15 0x693A3A6D696E743A207472616E7366 PUSH6 0x7220616D6F75 PUSH15 0x74206F766572666C6F7773556E693A GASPRICE PUSH21 0x72616E7366657246726F6D3A207472616E73666572 KECCAK256 PUSH2 0x6D6F PUSH22 0x6E742065786365656473207370656E64657220616C6C PUSH16 0x77616E6365556E693A3A6D696E743A20 PUSH21 0x6F74616C537570706C792065786365656473203936 KECCAK256 PUSH3 0x697473 SSTORE PUSH15 0x693A3A5F7472616E73666572546F6B PUSH6 0x6E733A207472 PUSH2 0x6E73 PUSH7 0x657220616D6F75 PUSH15 0x7420657863656564732062616C616E PUSH4 0x65556E69 GASPRICE GASPRICE PUSH17 0x65726D69743A20616D6F756E7420657863 PUSH6 0x656473203936 KECCAK256 PUSH3 0x697473 SSTORE PUSH15 0x693A3A5F6D6F7665566F7465733A20 PUSH23 0x6F746520616D6F756E74206F766572666C6F7773556E69 GASPRICE GASPRICE PUSH0 PUSH24 0x72697465436865636B706F696E743A20626C6F636B206E75 PUSH14 0x6265722065786365656473203332 KECCAK256 PUSH3 0x697473 SSTORE PUSH15 0x693A3A5F6D6F7665566F7465733A20 PUSH23 0x6F746520616D6F756E7420756E646572666C6F7773556E PUSH10 0x3A3A7472616E73666572 GASPRICE KECCAK256 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732039362062697473556E693A GASPRICE PUSH14 0x696E743A20616D6F756E74206578 PUSH4 0x65656473 KECCAK256 CODECOPY CALLDATASIZE KECCAK256 PUSH3 0x697473 SSTORE PUSH15 0x693A3A617070726F76653A20616D6F PUSH22 0x6E7420657863656564732039362062697473556E693A GASPRICE PUSH0 PUSH21 0x72616E73666572546F6B656E733A207472616E7366 PUSH6 0x7220616D6F75 PUSH15 0x74206F766572666C6F7773A2646970 PUSH7 0x7358221220B4B8 0x4D 0x2B STOP RETURNDATASIZE MOD MUL 0xEB 0xAC 0xD6 TLOAD 0xB2 MCOPY 0x2C 0x21 CALLDATACOPY DUP1 0xAF 0xBF 0xAB CALLER 0xBC MUL 0x29 PUSH23 0xF467F1DB628364736F6C634300081A0033000000000000 ",
							"sourceMap": "6732:18719:0:-:0;;;7119:16;7090:45;;10276:506;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10444:15;10420:20;:39;;10399:143;;;;-1:-1:-1;;;10399:143:0;;757:2:1;10399:143:0;;;739:21:1;796:2;776:18;;;769:30;835:34;815:18;;;808:62;906:27;886:18;;;879:55;951:19;;10399:143:0;;;;;;;;10580:11;;;-1:-1:-1;;;;;10553:17:0;;;;;:8;:17;;;;;;;;:39;;-1:-1:-1;;;;;;10553:39:0;-1:-1:-1;;;;;10553:39:0;;;;;;;;;;10637:11;;10607:42;;1127:25:1;;;10553:17:0;;10580:11;10607:42;;1100:18:1;10607:42:0;;;;;;;10659:6;:16;;-1:-1:-1;;;;;;10659:16:0;-1:-1:-1;;;;;10659:16:0;;;;;;;;10690:33;;;-1:-1:-1;1337:51:1;;1419:2;1404:18;;1397:60;;;;10690:33:0;;1310:18:1;10690:33:0;;;;;;;10733:19;:42;-1:-1:-1;6732:18719:0;;-1:-1:-1;6732:18719:0;14:177:1;93:13;;-1:-1:-1;;;;;135:31:1;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:354::-;284:6;292;300;353:2;341:9;332:7;328:23;324:32;321:52;;;369:1;366;359:12;321:52;392:40;422:9;392:40;:::i;:::-;382:50;;451:49;496:2;485:9;481:18;451:49;:::i;:::-;441:59;;540:2;529:9;525:18;519:25;509:35;;196:354;;;;;:::o;1163:300::-;6732:18719:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DELEGATION_TYPEHASH_341": {
									"entryPoint": null,
									"id": 341,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DOMAIN_TYPEHASH_335": {
									"entryPoint": null,
									"id": 335,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@PERMIT_TYPEHASH_347": {
									"entryPoint": null,
									"id": 347,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_delegate_1187": {
									"entryPoint": 6810,
									"id": 1187,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_moveDelegates_1366": {
									"entryPoint": 6393,
									"id": 1366,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferTokens_1257": {
									"entryPoint": 5448,
									"id": 1257,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_writeCheckpoint_1439": {
									"entryPoint": 7000,
									"id": 1439,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@add96_1514": {
									"entryPoint": 6317,
									"id": 1514,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@add_29": {
									"entryPoint": 6032,
									"id": 29,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_598": {
									"entryPoint": null,
									"id": 598,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_637": {
									"entryPoint": 1328,
									"id": 637,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_776": {
									"entryPoint": null,
									"id": 776,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@checkpoints_324": {
									"entryPoint": null,
									"id": 324,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_273": {
									"entryPoint": null,
									"id": 273,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@delegateBySig_987": {
									"entryPoint": 3382,
									"id": 987,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@delegate_884": {
									"entryPoint": 2552,
									"id": 884,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@delegates_310": {
									"entryPoint": null,
									"id": 310,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@div_191": {
									"entryPoint": 6252,
									"id": 191,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@div_219": {
									"entryPoint": 6947,
									"id": 219,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getChainId_1549": {
									"entryPoint": null,
									"id": 1549,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getCurrentVotes_1016": {
									"entryPoint": 3260,
									"id": 1016,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getPriorVotes_1149": {
									"entryPoint": 2565,
									"id": 1149,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@minimumTimeBetweenMints_289": {
									"entryPoint": null,
									"id": 289,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mintCap_293": {
									"entryPoint": null,
									"id": 293,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mint_581": {
									"entryPoint": 1793,
									"id": 581,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@minter_280": {
									"entryPoint": null,
									"id": 280,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mintingAllowedAfter_283": {
									"entryPoint": null,
									"id": 283,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mul_137": {
									"entryPoint": 6126,
									"id": 137,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_265": {
									"entryPoint": null,
									"id": 265,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@nonces_352": {
									"entryPoint": null,
									"id": 352,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@numCheckpoints_329": {
									"entryPoint": null,
									"id": 329,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@permit_763": {
									"entryPoint": 4121,
									"id": 763,
									"parameterSlots": 7,
									"returnSlots": 0
								},
								"@safe32_1463": {
									"entryPoint": 7496,
									"id": 1463,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@safe96_1487": {
									"entryPoint": 5329,
									"id": 1487,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@setMinter_472": {
									"entryPoint": 5096,
									"id": 472,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@sub96_1537": {
									"entryPoint": 5375,
									"id": 1537,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@symbol_269": {
									"entryPoint": null,
									"id": 269,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_277": {
									"entryPoint": null,
									"id": 277,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferFrom_871": {
									"entryPoint": 1494,
									"id": 871,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_803": {
									"entryPoint": 3201,
									"id": 803,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 7583,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7708,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7935,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7650,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32": {
									"entryPoint": 7833,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7610,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32": {
									"entryPoint": 7749,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_decode_tuple_t_addresst_uint32": {
									"entryPoint": 7984,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_uint8": {
									"entryPoint": 7733,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7530,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_287e5345cbd1fcc69d3d1d2165b5d321c6a9eb5b34f1162e798e9d80f3fdf12b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_41ba3897512438c3b52e550ef92ff91255600d9202c2b92b8893f625252dfabf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_49a8c5a37f9a1453393e39114b211b704ebc96555b0cd38f42c3478bd0b9f9d2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5f24bdbd67fb75785b275770fb658b786eb2736feb96698cf0894896fdf28c73__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7b0ec4a3f6bfba673b135595084a79859c9e4ba0d9455df08bfb3bece6df3142__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8cdff6d324f122ca5cad9ec8d91ca56840c45dd7fc048a003b94957b6f733086__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c455438be199e7ac7b6d21fdc7332bbd68229582d8b1be9266bdb0f4844638c0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc6a5c1b47b7f8bc902cdb48ac9758787b1a8119a1909e02b5432deee2d32a62__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d0c976c03aaa94802283adf77ef1ce74ec8a066553c069fcfec5a68a1eb9411a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d126ba952f4f7443590dacc43a358ae6ad956133386dc92be4e1185a27d416b3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_de7e0a100b60a11ede47141c5b3cbe581ee85f280a75b7fbf40a7340eb978ea6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dfc249d887a80709dc035102a1322af6511c742bde4b1331b9d41e48d95becdb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e94c1ed3488f38be72a83cd591a1465ccfe1e93939cfd7e4bf71c4eb9af19f1a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f1c0fd1d78a537bfd8cc59c08393a4da90fc7d3eff469a9fd5787d9f1738b823__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint32_t_uint96__to_t_uint32_t_uint96__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint96__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint96_t_uint96__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8207,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint32": {
									"entryPoint": 8299,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint96": {
									"entryPoint": 8268,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8249,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint32": {
									"entryPoint": 8113,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8226,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint32": {
									"entryPoint": 8065,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint96": {
									"entryPoint": 8176,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 8152,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8045,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 8093,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:16672:1",
										"nodeType": "YulBlock",
										"src": "0:16672:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:297:1",
													"nodeType": "YulBlock",
													"src": "135:297:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "152:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "152:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "163:2:1",
																		"nodeType": "YulLiteral",
																		"src": "163:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "145:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "145:6:1"
																},
																"nativeSrc": "145:21:1",
																"nodeType": "YulFunctionCall",
																"src": "145:21:1"
															},
															"nativeSrc": "145:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "145:21:1"
														},
														{
															"nativeSrc": "175:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "175:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "195:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "195:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "189:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "189:5:1"
																},
																"nativeSrc": "189:13:1",
																"nodeType": "YulFunctionCall",
																"src": "189:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "179:6:1",
																	"nodeType": "YulTypedName",
																	"src": "179:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "222:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "222:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "233:2:1",
																				"nodeType": "YulLiteral",
																				"src": "233:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "218:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "218:3:1"
																		},
																		"nativeSrc": "218:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "218:18:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "238:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "238:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "211:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:1"
																},
																"nativeSrc": "211:34:1",
																"nodeType": "YulFunctionCall",
																"src": "211:34:1"
															},
															"nativeSrc": "211:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "211:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "264:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "264:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "275:2:1",
																				"nodeType": "YulLiteral",
																				"src": "275:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "260:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "260:3:1"
																		},
																		"nativeSrc": "260:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "260:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "284:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "284:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "292:2:1",
																				"nodeType": "YulLiteral",
																				"src": "292:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "280:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "280:3:1"
																		},
																		"nativeSrc": "280:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "280:15:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "297:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "297:6:1"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "254:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "254:5:1"
																},
																"nativeSrc": "254:50:1",
																"nodeType": "YulFunctionCall",
																"src": "254:50:1"
															},
															"nativeSrc": "254:50:1",
															"nodeType": "YulExpressionStatement",
															"src": "254:50:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "328:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "328:9:1"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "339:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "339:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "324:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "324:3:1"
																				},
																				"nativeSrc": "324:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "324:22:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "348:2:1",
																				"nodeType": "YulLiteral",
																				"src": "348:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "320:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "320:3:1"
																		},
																		"nativeSrc": "320:31:1",
																		"nodeType": "YulFunctionCall",
																		"src": "320:31:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "353:1:1",
																		"nodeType": "YulLiteral",
																		"src": "353:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "313:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "313:6:1"
																},
																"nativeSrc": "313:42:1",
																"nodeType": "YulFunctionCall",
																"src": "313:42:1"
															},
															"nativeSrc": "313:42:1",
															"nodeType": "YulExpressionStatement",
															"src": "313:42:1"
														},
														{
															"nativeSrc": "364:62:1",
															"nodeType": "YulAssignment",
															"src": "364:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "380:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "380:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "399:6:1",
																								"nodeType": "YulIdentifier",
																								"src": "399:6:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "407:2:1",
																								"nodeType": "YulLiteral",
																								"src": "407:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "395:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "395:3:1"
																						},
																						"nativeSrc": "395:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "395:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "416:2:1",
																								"nodeType": "YulLiteral",
																								"src": "416:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "412:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "412:3:1"
																						},
																						"nativeSrc": "412:7:1",
																						"nodeType": "YulFunctionCall",
																						"src": "412:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "391:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "391:3:1"
																				},
																				"nativeSrc": "391:29:1",
																				"nodeType": "YulFunctionCall",
																				"src": "391:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "376:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "376:3:1"
																		},
																		"nativeSrc": "376:45:1",
																		"nodeType": "YulFunctionCall",
																		"src": "376:45:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "423:2:1",
																		"nodeType": "YulLiteral",
																		"src": "423:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "372:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "372:3:1"
																},
																"nativeSrc": "372:54:1",
																"nodeType": "YulFunctionCall",
																"src": "372:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "364:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "364:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:418:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:1",
														"nodeType": "YulTypedName",
														"src": "104:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:1",
														"nodeType": "YulTypedName",
														"src": "115:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:1",
														"nodeType": "YulTypedName",
														"src": "126:4:1",
														"type": ""
													}
												],
												"src": "14:418:1"
											},
											{
												"body": {
													"nativeSrc": "538:102:1",
													"nodeType": "YulBlock",
													"src": "538:102:1",
													"statements": [
														{
															"nativeSrc": "548:26:1",
															"nodeType": "YulAssignment",
															"src": "548:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "560:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "560:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "571:2:1",
																		"nodeType": "YulLiteral",
																		"src": "571:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "556:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "556:3:1"
																},
																"nativeSrc": "556:18:1",
																"nodeType": "YulFunctionCall",
																"src": "556:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "548:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "548:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "590:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "590:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "605:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "605:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "621:3:1",
																								"nodeType": "YulLiteral",
																								"src": "621:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "626:1:1",
																								"nodeType": "YulLiteral",
																								"src": "626:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "617:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "617:3:1"
																						},
																						"nativeSrc": "617:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "617:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "630:1:1",
																						"nodeType": "YulLiteral",
																						"src": "630:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "613:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "613:3:1"
																				},
																				"nativeSrc": "613:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "613:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "601:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "601:3:1"
																		},
																		"nativeSrc": "601:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "601:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "583:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "583:6:1"
																},
																"nativeSrc": "583:51:1",
																"nodeType": "YulFunctionCall",
																"src": "583:51:1"
															},
															"nativeSrc": "583:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "583:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "437:203:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "507:9:1",
														"nodeType": "YulTypedName",
														"src": "507:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "518:6:1",
														"nodeType": "YulTypedName",
														"src": "518:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "529:4:1",
														"nodeType": "YulTypedName",
														"src": "529:4:1",
														"type": ""
													}
												],
												"src": "437:203:1"
											},
											{
												"body": {
													"nativeSrc": "694:124:1",
													"nodeType": "YulBlock",
													"src": "694:124:1",
													"statements": [
														{
															"nativeSrc": "704:29:1",
															"nodeType": "YulAssignment",
															"src": "704:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "726:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "726:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "713:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "713:12:1"
																},
																"nativeSrc": "713:20:1",
																"nodeType": "YulFunctionCall",
																"src": "713:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "704:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "704:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "796:16:1",
																"nodeType": "YulBlock",
																"src": "796:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "805:1:1",
																					"nodeType": "YulLiteral",
																					"src": "805:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "808:1:1",
																					"nodeType": "YulLiteral",
																					"src": "808:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "798:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "798:6:1"
																			},
																			"nativeSrc": "798:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "798:12:1"
																		},
																		"nativeSrc": "798:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "798:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "755:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "755:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "766:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "766:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "781:3:1",
																										"nodeType": "YulLiteral",
																										"src": "781:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "786:1:1",
																										"nodeType": "YulLiteral",
																										"src": "786:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "777:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "777:3:1"
																								},
																								"nativeSrc": "777:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "777:11:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "790:1:1",
																								"nodeType": "YulLiteral",
																								"src": "790:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "773:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "773:3:1"
																						},
																						"nativeSrc": "773:19:1",
																						"nodeType": "YulFunctionCall",
																						"src": "773:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "762:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "762:3:1"
																				},
																				"nativeSrc": "762:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "762:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "752:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "752:2:1"
																		},
																		"nativeSrc": "752:42:1",
																		"nodeType": "YulFunctionCall",
																		"src": "752:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "745:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:1"
																},
																"nativeSrc": "745:50:1",
																"nodeType": "YulFunctionCall",
																"src": "745:50:1"
															},
															"nativeSrc": "742:70:1",
															"nodeType": "YulIf",
															"src": "742:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "645:173:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "673:6:1",
														"nodeType": "YulTypedName",
														"src": "673:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "684:5:1",
														"nodeType": "YulTypedName",
														"src": "684:5:1",
														"type": ""
													}
												],
												"src": "645:173:1"
											},
											{
												"body": {
													"nativeSrc": "910:213:1",
													"nodeType": "YulBlock",
													"src": "910:213:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "956:16:1",
																"nodeType": "YulBlock",
																"src": "956:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "965:1:1",
																					"nodeType": "YulLiteral",
																					"src": "965:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "968:1:1",
																					"nodeType": "YulLiteral",
																					"src": "968:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "958:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "958:6:1"
																			},
																			"nativeSrc": "958:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "958:12:1"
																		},
																		"nativeSrc": "958:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "958:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "931:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "931:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "940:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "940:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "927:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "927:3:1"
																		},
																		"nativeSrc": "927:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "927:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "952:2:1",
																		"nodeType": "YulLiteral",
																		"src": "952:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "923:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "923:3:1"
																},
																"nativeSrc": "923:32:1",
																"nodeType": "YulFunctionCall",
																"src": "923:32:1"
															},
															"nativeSrc": "920:52:1",
															"nodeType": "YulIf",
															"src": "920:52:1"
														},
														{
															"nativeSrc": "981:39:1",
															"nodeType": "YulAssignment",
															"src": "981:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1010:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1010:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "991:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "991:18:1"
																},
																"nativeSrc": "991:29:1",
																"nodeType": "YulFunctionCall",
																"src": "991:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "981:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "981:6:1"
																}
															]
														},
														{
															"nativeSrc": "1029:14:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1029:14:1",
															"value": {
																"kind": "number",
																"nativeSrc": "1042:1:1",
																"nodeType": "YulLiteral",
																"src": "1042:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1033:5:1",
																	"nodeType": "YulTypedName",
																	"src": "1033:5:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1052:41:1",
															"nodeType": "YulAssignment",
															"src": "1052:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1078:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1078:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1089:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1089:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1074:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1074:3:1"
																		},
																		"nativeSrc": "1074:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1074:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1061:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1061:12:1"
																},
																"nativeSrc": "1061:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1061:32:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1052:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1052:5:1"
																}
															]
														},
														{
															"nativeSrc": "1102:15:1",
															"nodeType": "YulAssignment",
															"src": "1102:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "1112:5:1",
																"nodeType": "YulIdentifier",
																"src": "1112:5:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1102:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1102:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "823:300:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "868:9:1",
														"nodeType": "YulTypedName",
														"src": "868:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "879:7:1",
														"nodeType": "YulTypedName",
														"src": "879:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "891:6:1",
														"nodeType": "YulTypedName",
														"src": "891:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "899:6:1",
														"nodeType": "YulTypedName",
														"src": "899:6:1",
														"type": ""
													}
												],
												"src": "823:300:1"
											},
											{
												"body": {
													"nativeSrc": "1223:92:1",
													"nodeType": "YulBlock",
													"src": "1223:92:1",
													"statements": [
														{
															"nativeSrc": "1233:26:1",
															"nodeType": "YulAssignment",
															"src": "1233:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1245:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1245:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1256:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1256:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1241:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1241:3:1"
																},
																"nativeSrc": "1241:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1241:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1233:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1233:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1275:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1275:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1300:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1300:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1293:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "1293:6:1"
																				},
																				"nativeSrc": "1293:14:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1293:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1286:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1286:6:1"
																		},
																		"nativeSrc": "1286:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1286:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1268:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1268:6:1"
																},
																"nativeSrc": "1268:41:1",
																"nodeType": "YulFunctionCall",
																"src": "1268:41:1"
															},
															"nativeSrc": "1268:41:1",
															"nodeType": "YulExpressionStatement",
															"src": "1268:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1128:187:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1192:9:1",
														"nodeType": "YulTypedName",
														"src": "1192:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1203:6:1",
														"nodeType": "YulTypedName",
														"src": "1203:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1214:4:1",
														"nodeType": "YulTypedName",
														"src": "1214:4:1",
														"type": ""
													}
												],
												"src": "1128:187:1"
											},
											{
												"body": {
													"nativeSrc": "1421:76:1",
													"nodeType": "YulBlock",
													"src": "1421:76:1",
													"statements": [
														{
															"nativeSrc": "1431:26:1",
															"nodeType": "YulAssignment",
															"src": "1431:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1443:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1443:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1454:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1454:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1439:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1439:3:1"
																},
																"nativeSrc": "1439:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1439:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1431:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1431:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1473:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1473:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1484:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1484:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1466:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1466:6:1"
																},
																"nativeSrc": "1466:25:1",
																"nodeType": "YulFunctionCall",
																"src": "1466:25:1"
															},
															"nativeSrc": "1466:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "1466:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1320:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1390:9:1",
														"nodeType": "YulTypedName",
														"src": "1390:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1401:6:1",
														"nodeType": "YulTypedName",
														"src": "1401:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1412:4:1",
														"nodeType": "YulTypedName",
														"src": "1412:4:1",
														"type": ""
													}
												],
												"src": "1320:177:1"
											},
											{
												"body": {
													"nativeSrc": "1603:76:1",
													"nodeType": "YulBlock",
													"src": "1603:76:1",
													"statements": [
														{
															"nativeSrc": "1613:26:1",
															"nodeType": "YulAssignment",
															"src": "1613:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1625:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1625:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1636:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1636:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1621:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1621:3:1"
																},
																"nativeSrc": "1621:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1621:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1613:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1613:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1655:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1655:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1666:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1666:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1648:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1648:6:1"
																},
																"nativeSrc": "1648:25:1",
																"nodeType": "YulFunctionCall",
																"src": "1648:25:1"
															},
															"nativeSrc": "1648:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "1648:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "1502:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1572:9:1",
														"nodeType": "YulTypedName",
														"src": "1572:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1583:6:1",
														"nodeType": "YulTypedName",
														"src": "1583:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1594:4:1",
														"nodeType": "YulTypedName",
														"src": "1594:4:1",
														"type": ""
													}
												],
												"src": "1502:177:1"
											},
											{
												"body": {
													"nativeSrc": "1788:270:1",
													"nodeType": "YulBlock",
													"src": "1788:270:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1834:16:1",
																"nodeType": "YulBlock",
																"src": "1834:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1843:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1843:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1846:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1846:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1836:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1836:6:1"
																			},
																			"nativeSrc": "1836:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1836:12:1"
																		},
																		"nativeSrc": "1836:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1836:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1809:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1809:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1818:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1818:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1805:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1805:3:1"
																		},
																		"nativeSrc": "1805:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1805:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1830:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1830:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1801:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1801:3:1"
																},
																"nativeSrc": "1801:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1801:32:1"
															},
															"nativeSrc": "1798:52:1",
															"nodeType": "YulIf",
															"src": "1798:52:1"
														},
														{
															"nativeSrc": "1859:39:1",
															"nodeType": "YulAssignment",
															"src": "1859:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1888:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1888:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1869:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1869:18:1"
																},
																"nativeSrc": "1869:29:1",
																"nodeType": "YulFunctionCall",
																"src": "1869:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1859:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:1"
																}
															]
														},
														{
															"nativeSrc": "1907:48:1",
															"nodeType": "YulAssignment",
															"src": "1907:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1940:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1940:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1951:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1951:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1936:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1936:3:1"
																		},
																		"nativeSrc": "1936:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1936:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1917:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1917:18:1"
																},
																"nativeSrc": "1917:38:1",
																"nodeType": "YulFunctionCall",
																"src": "1917:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1907:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1907:6:1"
																}
															]
														},
														{
															"nativeSrc": "1964:14:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1964:14:1",
															"value": {
																"kind": "number",
																"nativeSrc": "1977:1:1",
																"nodeType": "YulLiteral",
																"src": "1977:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1968:5:1",
																	"nodeType": "YulTypedName",
																	"src": "1968:5:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1987:41:1",
															"nodeType": "YulAssignment",
															"src": "1987:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2013:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2013:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2024:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2024:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2009:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2009:3:1"
																		},
																		"nativeSrc": "2009:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2009:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1996:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1996:12:1"
																},
																"nativeSrc": "1996:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1996:32:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1987:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1987:5:1"
																}
															]
														},
														{
															"nativeSrc": "2037:15:1",
															"nodeType": "YulAssignment",
															"src": "2037:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "2047:5:1",
																"nodeType": "YulIdentifier",
																"src": "2047:5:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2037:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2037:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1684:374:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1738:9:1",
														"nodeType": "YulTypedName",
														"src": "1738:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1749:7:1",
														"nodeType": "YulTypedName",
														"src": "1749:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1761:6:1",
														"nodeType": "YulTypedName",
														"src": "1761:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1769:6:1",
														"nodeType": "YulTypedName",
														"src": "1769:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1777:6:1",
														"nodeType": "YulTypedName",
														"src": "1777:6:1",
														"type": ""
													}
												],
												"src": "1684:374:1"
											},
											{
												"body": {
													"nativeSrc": "2160:87:1",
													"nodeType": "YulBlock",
													"src": "2160:87:1",
													"statements": [
														{
															"nativeSrc": "2170:26:1",
															"nodeType": "YulAssignment",
															"src": "2170:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2182:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2182:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2193:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2193:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2178:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2178:3:1"
																},
																"nativeSrc": "2178:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2178:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2170:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2170:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2212:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2212:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2227:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2227:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2235:4:1",
																				"nodeType": "YulLiteral",
																				"src": "2235:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2223:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2223:3:1"
																		},
																		"nativeSrc": "2223:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2223:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2205:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2205:6:1"
																},
																"nativeSrc": "2205:36:1",
																"nodeType": "YulFunctionCall",
																"src": "2205:36:1"
															},
															"nativeSrc": "2205:36:1",
															"nodeType": "YulExpressionStatement",
															"src": "2205:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "2063:184:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2129:9:1",
														"nodeType": "YulTypedName",
														"src": "2129:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2140:6:1",
														"nodeType": "YulTypedName",
														"src": "2140:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2151:4:1",
														"nodeType": "YulTypedName",
														"src": "2151:4:1",
														"type": ""
													}
												],
												"src": "2063:184:1"
											},
											{
												"body": {
													"nativeSrc": "2322:116:1",
													"nodeType": "YulBlock",
													"src": "2322:116:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2368:16:1",
																"nodeType": "YulBlock",
																"src": "2368:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2377:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2377:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2380:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2380:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2370:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2370:6:1"
																			},
																			"nativeSrc": "2370:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2370:12:1"
																		},
																		"nativeSrc": "2370:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2370:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2343:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2343:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2352:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2352:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2339:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2339:3:1"
																		},
																		"nativeSrc": "2339:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2339:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2364:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2364:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2335:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2335:3:1"
																},
																"nativeSrc": "2335:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2335:32:1"
															},
															"nativeSrc": "2332:52:1",
															"nodeType": "YulIf",
															"src": "2332:52:1"
														},
														{
															"nativeSrc": "2393:39:1",
															"nodeType": "YulAssignment",
															"src": "2393:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2422:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2422:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2403:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2403:18:1"
																},
																"nativeSrc": "2403:29:1",
																"nodeType": "YulFunctionCall",
																"src": "2403:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2393:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2393:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2252:186:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2288:9:1",
														"nodeType": "YulTypedName",
														"src": "2288:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2299:7:1",
														"nodeType": "YulTypedName",
														"src": "2299:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2311:6:1",
														"nodeType": "YulTypedName",
														"src": "2311:6:1",
														"type": ""
													}
												],
												"src": "2252:186:1"
											},
											{
												"body": {
													"nativeSrc": "2542:93:1",
													"nodeType": "YulBlock",
													"src": "2542:93:1",
													"statements": [
														{
															"nativeSrc": "2552:26:1",
															"nodeType": "YulAssignment",
															"src": "2552:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2564:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2564:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2575:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2575:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2560:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2560:3:1"
																},
																"nativeSrc": "2560:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2560:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2552:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2552:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2594:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2594:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2609:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2609:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2617:10:1",
																				"nodeType": "YulLiteral",
																				"src": "2617:10:1",
																				"type": "",
																				"value": "0xffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2605:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2605:3:1"
																		},
																		"nativeSrc": "2605:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2605:23:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2587:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2587:6:1"
																},
																"nativeSrc": "2587:42:1",
																"nodeType": "YulFunctionCall",
																"src": "2587:42:1"
															},
															"nativeSrc": "2587:42:1",
															"nodeType": "YulExpressionStatement",
															"src": "2587:42:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed",
												"nativeSrc": "2443:192:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2511:9:1",
														"nodeType": "YulTypedName",
														"src": "2511:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2522:6:1",
														"nodeType": "YulTypedName",
														"src": "2522:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2533:4:1",
														"nodeType": "YulTypedName",
														"src": "2533:4:1",
														"type": ""
													}
												],
												"src": "2443:192:1"
											},
											{
												"body": {
													"nativeSrc": "2739:109:1",
													"nodeType": "YulBlock",
													"src": "2739:109:1",
													"statements": [
														{
															"nativeSrc": "2749:26:1",
															"nodeType": "YulAssignment",
															"src": "2749:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2761:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2761:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2772:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2772:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2757:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2757:3:1"
																},
																"nativeSrc": "2757:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2757:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2749:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2749:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2791:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2791:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2806:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2806:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2814:26:1",
																				"nodeType": "YulLiteral",
																				"src": "2814:26:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2802:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2802:3:1"
																		},
																		"nativeSrc": "2802:39:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2802:39:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2784:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2784:6:1"
																},
																"nativeSrc": "2784:58:1",
																"nodeType": "YulFunctionCall",
																"src": "2784:58:1"
															},
															"nativeSrc": "2784:58:1",
															"nodeType": "YulExpressionStatement",
															"src": "2784:58:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed",
												"nativeSrc": "2640:208:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2708:9:1",
														"nodeType": "YulTypedName",
														"src": "2708:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2719:6:1",
														"nodeType": "YulTypedName",
														"src": "2719:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2730:4:1",
														"nodeType": "YulTypedName",
														"src": "2730:4:1",
														"type": ""
													}
												],
												"src": "2640:208:1"
											},
											{
												"body": {
													"nativeSrc": "2900:109:1",
													"nodeType": "YulBlock",
													"src": "2900:109:1",
													"statements": [
														{
															"nativeSrc": "2910:29:1",
															"nodeType": "YulAssignment",
															"src": "2910:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2932:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2932:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2919:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2919:12:1"
																},
																"nativeSrc": "2919:20:1",
																"nodeType": "YulFunctionCall",
																"src": "2919:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2910:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2910:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2987:16:1",
																"nodeType": "YulBlock",
																"src": "2987:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2996:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2996:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2999:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2999:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2989:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2989:6:1"
																			},
																			"nativeSrc": "2989:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2989:12:1"
																		},
																		"nativeSrc": "2989:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2989:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2961:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2961:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2972:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "2972:5:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2979:4:1",
																						"nodeType": "YulLiteral",
																						"src": "2979:4:1",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "2968:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2968:3:1"
																				},
																				"nativeSrc": "2968:16:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2968:16:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2958:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "2958:2:1"
																		},
																		"nativeSrc": "2958:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2958:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2951:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2951:6:1"
																},
																"nativeSrc": "2951:35:1",
																"nodeType": "YulFunctionCall",
																"src": "2951:35:1"
															},
															"nativeSrc": "2948:55:1",
															"nodeType": "YulIf",
															"src": "2948:55:1"
														}
													]
												},
												"name": "abi_decode_uint8",
												"nativeSrc": "2853:156:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2879:6:1",
														"nodeType": "YulTypedName",
														"src": "2879:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2890:5:1",
														"nodeType": "YulTypedName",
														"src": "2890:5:1",
														"type": ""
													}
												],
												"src": "2853:156:1"
											},
											{
												"body": {
													"nativeSrc": "3167:580:1",
													"nodeType": "YulBlock",
													"src": "3167:580:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3214:16:1",
																"nodeType": "YulBlock",
																"src": "3214:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3223:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3223:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3226:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3226:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3216:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3216:6:1"
																			},
																			"nativeSrc": "3216:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3216:12:1"
																		},
																		"nativeSrc": "3216:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3216:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3188:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3188:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3197:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3197:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3184:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3184:3:1"
																		},
																		"nativeSrc": "3184:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3184:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3209:3:1",
																		"nodeType": "YulLiteral",
																		"src": "3209:3:1",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3180:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3180:3:1"
																},
																"nativeSrc": "3180:33:1",
																"nodeType": "YulFunctionCall",
																"src": "3180:33:1"
															},
															"nativeSrc": "3177:53:1",
															"nodeType": "YulIf",
															"src": "3177:53:1"
														},
														{
															"nativeSrc": "3239:39:1",
															"nodeType": "YulAssignment",
															"src": "3239:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3268:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3268:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3249:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "3249:18:1"
																},
																"nativeSrc": "3249:29:1",
																"nodeType": "YulFunctionCall",
																"src": "3249:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3239:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3239:6:1"
																}
															]
														},
														{
															"nativeSrc": "3287:14:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3287:14:1",
															"value": {
																"kind": "number",
																"nativeSrc": "3300:1:1",
																"nodeType": "YulLiteral",
																"src": "3300:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3291:5:1",
																	"nodeType": "YulTypedName",
																	"src": "3291:5:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3310:41:1",
															"nodeType": "YulAssignment",
															"src": "3310:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3336:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3336:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3347:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3347:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3332:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3332:3:1"
																		},
																		"nativeSrc": "3332:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3332:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3319:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "3319:12:1"
																},
																"nativeSrc": "3319:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3319:32:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3310:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "3310:5:1"
																}
															]
														},
														{
															"nativeSrc": "3360:15:1",
															"nodeType": "YulAssignment",
															"src": "3360:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "3370:5:1",
																"nodeType": "YulIdentifier",
																"src": "3370:5:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3360:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3360:6:1"
																}
															]
														},
														{
															"nativeSrc": "3384:16:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3384:16:1",
															"value": {
																"kind": "number",
																"nativeSrc": "3399:1:1",
																"nodeType": "YulLiteral",
																"src": "3399:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "3388:7:1",
																	"nodeType": "YulTypedName",
																	"src": "3388:7:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3409:43:1",
															"nodeType": "YulAssignment",
															"src": "3409:43:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3437:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3437:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3448:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3448:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3433:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3433:3:1"
																		},
																		"nativeSrc": "3433:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3433:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3420:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "3420:12:1"
																},
																"nativeSrc": "3420:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3420:32:1"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "3409:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "3409:7:1"
																}
															]
														},
														{
															"nativeSrc": "3461:17:1",
															"nodeType": "YulAssignment",
															"src": "3461:17:1",
															"value": {
																"name": "value_1",
																"nativeSrc": "3471:7:1",
																"nodeType": "YulIdentifier",
																"src": "3471:7:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "3461:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3461:6:1"
																}
															]
														},
														{
															"nativeSrc": "3487:46:1",
															"nodeType": "YulAssignment",
															"src": "3487:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3518:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3518:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3529:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3529:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3514:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3514:3:1"
																		},
																		"nativeSrc": "3514:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3514:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint8",
																	"nativeSrc": "3497:16:1",
																	"nodeType": "YulIdentifier",
																	"src": "3497:16:1"
																},
																"nativeSrc": "3497:36:1",
																"nodeType": "YulFunctionCall",
																"src": "3497:36:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "3487:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3487:6:1"
																}
															]
														},
														{
															"nativeSrc": "3542:16:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3542:16:1",
															"value": {
																"kind": "number",
																"nativeSrc": "3557:1:1",
																"nodeType": "YulLiteral",
																"src": "3557:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "3546:7:1",
																	"nodeType": "YulTypedName",
																	"src": "3546:7:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3567:44:1",
															"nodeType": "YulAssignment",
															"src": "3567:44:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3595:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3595:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3606:3:1",
																				"nodeType": "YulLiteral",
																				"src": "3606:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3591:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3591:3:1"
																		},
																		"nativeSrc": "3591:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3591:19:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3578:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "3578:12:1"
																},
																"nativeSrc": "3578:33:1",
																"nodeType": "YulFunctionCall",
																"src": "3578:33:1"
															},
															"variableNames": [
																{
																	"name": "value_2",
																	"nativeSrc": "3567:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "3567:7:1"
																}
															]
														},
														{
															"nativeSrc": "3620:17:1",
															"nodeType": "YulAssignment",
															"src": "3620:17:1",
															"value": {
																"name": "value_2",
																"nativeSrc": "3630:7:1",
																"nodeType": "YulIdentifier",
																"src": "3630:7:1"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "3620:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3620:6:1"
																}
															]
														},
														{
															"nativeSrc": "3646:16:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3646:16:1",
															"value": {
																"kind": "number",
																"nativeSrc": "3661:1:1",
																"nodeType": "YulLiteral",
																"src": "3661:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_3",
																	"nativeSrc": "3650:7:1",
																	"nodeType": "YulTypedName",
																	"src": "3650:7:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3671:44:1",
															"nodeType": "YulAssignment",
															"src": "3671:44:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3699:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3699:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3710:3:1",
																				"nodeType": "YulLiteral",
																				"src": "3710:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3695:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3695:3:1"
																		},
																		"nativeSrc": "3695:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3695:19:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3682:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "3682:12:1"
																},
																"nativeSrc": "3682:33:1",
																"nodeType": "YulFunctionCall",
																"src": "3682:33:1"
															},
															"variableNames": [
																{
																	"name": "value_3",
																	"nativeSrc": "3671:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "3671:7:1"
																}
															]
														},
														{
															"nativeSrc": "3724:17:1",
															"nodeType": "YulAssignment",
															"src": "3724:17:1",
															"value": {
																"name": "value_3",
																"nativeSrc": "3734:7:1",
																"nodeType": "YulIdentifier",
																"src": "3734:7:1"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nativeSrc": "3724:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3724:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32",
												"nativeSrc": "3014:733:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3093:9:1",
														"nodeType": "YulTypedName",
														"src": "3093:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3104:7:1",
														"nodeType": "YulTypedName",
														"src": "3104:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3116:6:1",
														"nodeType": "YulTypedName",
														"src": "3116:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3124:6:1",
														"nodeType": "YulTypedName",
														"src": "3124:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3132:6:1",
														"nodeType": "YulTypedName",
														"src": "3132:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3140:6:1",
														"nodeType": "YulTypedName",
														"src": "3140:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "3148:6:1",
														"nodeType": "YulTypedName",
														"src": "3148:6:1",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "3156:6:1",
														"nodeType": "YulTypedName",
														"src": "3156:6:1",
														"type": ""
													}
												],
												"src": "3014:733:1"
											},
											{
												"body": {
													"nativeSrc": "3922:638:1",
													"nodeType": "YulBlock",
													"src": "3922:638:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3969:16:1",
																"nodeType": "YulBlock",
																"src": "3969:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3978:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3978:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3981:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3981:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3971:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3971:6:1"
																			},
																			"nativeSrc": "3971:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3971:12:1"
																		},
																		"nativeSrc": "3971:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3971:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3943:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3943:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3952:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3952:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3939:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3939:3:1"
																		},
																		"nativeSrc": "3939:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3939:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3964:3:1",
																		"nodeType": "YulLiteral",
																		"src": "3964:3:1",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3935:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3935:3:1"
																},
																"nativeSrc": "3935:33:1",
																"nodeType": "YulFunctionCall",
																"src": "3935:33:1"
															},
															"nativeSrc": "3932:53:1",
															"nodeType": "YulIf",
															"src": "3932:53:1"
														},
														{
															"nativeSrc": "3994:39:1",
															"nodeType": "YulAssignment",
															"src": "3994:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4023:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4023:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4004:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "4004:18:1"
																},
																"nativeSrc": "4004:29:1",
																"nodeType": "YulFunctionCall",
																"src": "4004:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3994:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3994:6:1"
																}
															]
														},
														{
															"nativeSrc": "4042:48:1",
															"nodeType": "YulAssignment",
															"src": "4042:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4075:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4075:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4086:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4086:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4071:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4071:3:1"
																		},
																		"nativeSrc": "4071:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4071:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4052:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "4052:18:1"
																},
																"nativeSrc": "4052:38:1",
																"nodeType": "YulFunctionCall",
																"src": "4052:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4042:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4042:6:1"
																}
															]
														},
														{
															"nativeSrc": "4099:14:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4099:14:1",
															"value": {
																"kind": "number",
																"nativeSrc": "4112:1:1",
																"nodeType": "YulLiteral",
																"src": "4112:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "4103:5:1",
																	"nodeType": "YulTypedName",
																	"src": "4103:5:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4122:41:1",
															"nodeType": "YulAssignment",
															"src": "4122:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4148:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4148:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4159:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4159:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4144:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4144:3:1"
																		},
																		"nativeSrc": "4144:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4131:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "4131:12:1"
																},
																"nativeSrc": "4131:32:1",
																"nodeType": "YulFunctionCall",
																"src": "4131:32:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4122:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "4122:5:1"
																}
															]
														},
														{
															"nativeSrc": "4172:15:1",
															"nodeType": "YulAssignment",
															"src": "4172:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "4182:5:1",
																"nodeType": "YulIdentifier",
																"src": "4182:5:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "4172:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4172:6:1"
																}
															]
														},
														{
															"nativeSrc": "4196:16:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4196:16:1",
															"value": {
																"kind": "number",
																"nativeSrc": "4211:1:1",
																"nodeType": "YulLiteral",
																"src": "4211:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "4200:7:1",
																	"nodeType": "YulTypedName",
																	"src": "4200:7:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4221:43:1",
															"nodeType": "YulAssignment",
															"src": "4221:43:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4249:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4249:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4260:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4260:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4245:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4245:3:1"
																		},
																		"nativeSrc": "4245:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4245:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4232:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "4232:12:1"
																},
																"nativeSrc": "4232:32:1",
																"nodeType": "YulFunctionCall",
																"src": "4232:32:1"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "4221:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "4221:7:1"
																}
															]
														},
														{
															"nativeSrc": "4273:17:1",
															"nodeType": "YulAssignment",
															"src": "4273:17:1",
															"value": {
																"name": "value_1",
																"nativeSrc": "4283:7:1",
																"nodeType": "YulIdentifier",
																"src": "4283:7:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "4273:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4273:6:1"
																}
															]
														},
														{
															"nativeSrc": "4299:47:1",
															"nodeType": "YulAssignment",
															"src": "4299:47:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4330:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4330:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4341:3:1",
																				"nodeType": "YulLiteral",
																				"src": "4341:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4326:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4326:3:1"
																		},
																		"nativeSrc": "4326:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4326:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint8",
																	"nativeSrc": "4309:16:1",
																	"nodeType": "YulIdentifier",
																	"src": "4309:16:1"
																},
																"nativeSrc": "4309:37:1",
																"nodeType": "YulFunctionCall",
																"src": "4309:37:1"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "4299:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4299:6:1"
																}
															]
														},
														{
															"nativeSrc": "4355:16:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4355:16:1",
															"value": {
																"kind": "number",
																"nativeSrc": "4370:1:1",
																"nodeType": "YulLiteral",
																"src": "4370:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "4359:7:1",
																	"nodeType": "YulTypedName",
																	"src": "4359:7:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4380:44:1",
															"nodeType": "YulAssignment",
															"src": "4380:44:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4408:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4408:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4419:3:1",
																				"nodeType": "YulLiteral",
																				"src": "4419:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4404:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4404:3:1"
																		},
																		"nativeSrc": "4404:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4404:19:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4391:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "4391:12:1"
																},
																"nativeSrc": "4391:33:1",
																"nodeType": "YulFunctionCall",
																"src": "4391:33:1"
															},
															"variableNames": [
																{
																	"name": "value_2",
																	"nativeSrc": "4380:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "4380:7:1"
																}
															]
														},
														{
															"nativeSrc": "4433:17:1",
															"nodeType": "YulAssignment",
															"src": "4433:17:1",
															"value": {
																"name": "value_2",
																"nativeSrc": "4443:7:1",
																"nodeType": "YulIdentifier",
																"src": "4443:7:1"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nativeSrc": "4433:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4433:6:1"
																}
															]
														},
														{
															"nativeSrc": "4459:16:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4459:16:1",
															"value": {
																"kind": "number",
																"nativeSrc": "4474:1:1",
																"nodeType": "YulLiteral",
																"src": "4474:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_3",
																	"nativeSrc": "4463:7:1",
																	"nodeType": "YulTypedName",
																	"src": "4463:7:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4484:44:1",
															"nodeType": "YulAssignment",
															"src": "4484:44:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4512:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4512:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4523:3:1",
																				"nodeType": "YulLiteral",
																				"src": "4523:3:1",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4508:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4508:3:1"
																		},
																		"nativeSrc": "4508:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4508:19:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4495:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "4495:12:1"
																},
																"nativeSrc": "4495:33:1",
																"nodeType": "YulFunctionCall",
																"src": "4495:33:1"
															},
															"variableNames": [
																{
																	"name": "value_3",
																	"nativeSrc": "4484:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "4484:7:1"
																}
															]
														},
														{
															"nativeSrc": "4537:17:1",
															"nodeType": "YulAssignment",
															"src": "4537:17:1",
															"value": {
																"name": "value_3",
																"nativeSrc": "4547:7:1",
																"nodeType": "YulIdentifier",
																"src": "4547:7:1"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nativeSrc": "4537:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4537:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32",
												"nativeSrc": "3752:808:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3840:9:1",
														"nodeType": "YulTypedName",
														"src": "3840:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3851:7:1",
														"nodeType": "YulTypedName",
														"src": "3851:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3863:6:1",
														"nodeType": "YulTypedName",
														"src": "3863:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3871:6:1",
														"nodeType": "YulTypedName",
														"src": "3871:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3879:6:1",
														"nodeType": "YulTypedName",
														"src": "3879:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3887:6:1",
														"nodeType": "YulTypedName",
														"src": "3887:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "3895:6:1",
														"nodeType": "YulTypedName",
														"src": "3895:6:1",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "3903:6:1",
														"nodeType": "YulTypedName",
														"src": "3903:6:1",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "3911:6:1",
														"nodeType": "YulTypedName",
														"src": "3911:6:1",
														"type": ""
													}
												],
												"src": "3752:808:1"
											},
											{
												"body": {
													"nativeSrc": "4652:173:1",
													"nodeType": "YulBlock",
													"src": "4652:173:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "4698:16:1",
																"nodeType": "YulBlock",
																"src": "4698:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4707:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4707:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4710:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4710:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4700:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4700:6:1"
																			},
																			"nativeSrc": "4700:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4700:12:1"
																		},
																		"nativeSrc": "4700:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4700:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4673:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4673:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4682:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4682:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4669:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4669:3:1"
																		},
																		"nativeSrc": "4669:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4669:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4694:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4694:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4665:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4665:3:1"
																},
																"nativeSrc": "4665:32:1",
																"nodeType": "YulFunctionCall",
																"src": "4665:32:1"
															},
															"nativeSrc": "4662:52:1",
															"nodeType": "YulIf",
															"src": "4662:52:1"
														},
														{
															"nativeSrc": "4723:39:1",
															"nodeType": "YulAssignment",
															"src": "4723:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4752:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4752:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4733:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "4733:18:1"
																},
																"nativeSrc": "4733:29:1",
																"nodeType": "YulFunctionCall",
																"src": "4733:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4723:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4723:6:1"
																}
															]
														},
														{
															"nativeSrc": "4771:48:1",
															"nodeType": "YulAssignment",
															"src": "4771:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4804:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4804:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4815:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4815:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4800:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4800:3:1"
																		},
																		"nativeSrc": "4800:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4800:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4781:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "4781:18:1"
																},
																"nativeSrc": "4781:38:1",
																"nodeType": "YulFunctionCall",
																"src": "4781:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4771:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4771:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "4565:260:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4610:9:1",
														"nodeType": "YulTypedName",
														"src": "4610:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4621:7:1",
														"nodeType": "YulTypedName",
														"src": "4621:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4633:6:1",
														"nodeType": "YulTypedName",
														"src": "4633:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4641:6:1",
														"nodeType": "YulTypedName",
														"src": "4641:6:1",
														"type": ""
													}
												],
												"src": "4565:260:1"
											},
											{
												"body": {
													"nativeSrc": "4916:264:1",
													"nodeType": "YulBlock",
													"src": "4916:264:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "4962:16:1",
																"nodeType": "YulBlock",
																"src": "4962:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4971:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4971:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4974:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4974:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4964:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4964:6:1"
																			},
																			"nativeSrc": "4964:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4964:12:1"
																		},
																		"nativeSrc": "4964:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4964:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4937:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4937:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4946:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4946:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4933:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4933:3:1"
																		},
																		"nativeSrc": "4933:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4933:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4958:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4958:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4929:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4929:3:1"
																},
																"nativeSrc": "4929:32:1",
																"nodeType": "YulFunctionCall",
																"src": "4929:32:1"
															},
															"nativeSrc": "4926:52:1",
															"nodeType": "YulIf",
															"src": "4926:52:1"
														},
														{
															"nativeSrc": "4987:39:1",
															"nodeType": "YulAssignment",
															"src": "4987:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5016:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5016:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4997:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "4997:18:1"
																},
																"nativeSrc": "4997:29:1",
																"nodeType": "YulFunctionCall",
																"src": "4997:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4987:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4987:6:1"
																}
															]
														},
														{
															"nativeSrc": "5035:45:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5035:45:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5065:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5065:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5076:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5076:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5061:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5061:3:1"
																		},
																		"nativeSrc": "5061:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5061:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5048:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "5048:12:1"
																},
																"nativeSrc": "5048:32:1",
																"nodeType": "YulFunctionCall",
																"src": "5048:32:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "5039:5:1",
																	"nodeType": "YulTypedName",
																	"src": "5039:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5134:16:1",
																"nodeType": "YulBlock",
																"src": "5134:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5143:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5143:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5146:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5146:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5136:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5136:6:1"
																			},
																			"nativeSrc": "5136:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5136:12:1"
																		},
																		"nativeSrc": "5136:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5136:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5102:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "5102:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5113:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "5113:5:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5120:10:1",
																						"nodeType": "YulLiteral",
																						"src": "5120:10:1",
																						"type": "",
																						"value": "0xffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "5109:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5109:3:1"
																				},
																				"nativeSrc": "5109:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5109:22:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5099:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "5099:2:1"
																		},
																		"nativeSrc": "5099:33:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5099:33:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5092:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5092:6:1"
																},
																"nativeSrc": "5092:41:1",
																"nodeType": "YulFunctionCall",
																"src": "5092:41:1"
															},
															"nativeSrc": "5089:61:1",
															"nodeType": "YulIf",
															"src": "5089:61:1"
														},
														{
															"nativeSrc": "5159:15:1",
															"nodeType": "YulAssignment",
															"src": "5159:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "5169:5:1",
																"nodeType": "YulIdentifier",
																"src": "5169:5:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "5159:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5159:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint32",
												"nativeSrc": "4830:350:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4874:9:1",
														"nodeType": "YulTypedName",
														"src": "4874:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4885:7:1",
														"nodeType": "YulTypedName",
														"src": "4885:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4897:6:1",
														"nodeType": "YulTypedName",
														"src": "4897:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4905:6:1",
														"nodeType": "YulTypedName",
														"src": "4905:6:1",
														"type": ""
													}
												],
												"src": "4830:350:1"
											},
											{
												"body": {
													"nativeSrc": "5310:169:1",
													"nodeType": "YulBlock",
													"src": "5310:169:1",
													"statements": [
														{
															"nativeSrc": "5320:26:1",
															"nodeType": "YulAssignment",
															"src": "5320:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5332:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5332:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5343:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5343:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5328:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5328:3:1"
																},
																"nativeSrc": "5328:18:1",
																"nodeType": "YulFunctionCall",
																"src": "5328:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5320:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5320:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5362:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5362:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5377:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5377:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5385:10:1",
																				"nodeType": "YulLiteral",
																				"src": "5385:10:1",
																				"type": "",
																				"value": "0xffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5373:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5373:3:1"
																		},
																		"nativeSrc": "5373:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5373:23:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5355:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5355:6:1"
																},
																"nativeSrc": "5355:42:1",
																"nodeType": "YulFunctionCall",
																"src": "5355:42:1"
															},
															"nativeSrc": "5355:42:1",
															"nodeType": "YulExpressionStatement",
															"src": "5355:42:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5417:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5417:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5428:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5428:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5413:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5413:3:1"
																		},
																		"nativeSrc": "5413:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5413:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "5437:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5437:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5445:26:1",
																				"nodeType": "YulLiteral",
																				"src": "5445:26:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5433:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5433:3:1"
																		},
																		"nativeSrc": "5433:39:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5433:39:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5406:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5406:6:1"
																},
																"nativeSrc": "5406:67:1",
																"nodeType": "YulFunctionCall",
																"src": "5406:67:1"
															},
															"nativeSrc": "5406:67:1",
															"nodeType": "YulExpressionStatement",
															"src": "5406:67:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint32_t_uint96__to_t_uint32_t_uint96__fromStack_reversed",
												"nativeSrc": "5185:294:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5271:9:1",
														"nodeType": "YulTypedName",
														"src": "5271:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5282:6:1",
														"nodeType": "YulTypedName",
														"src": "5282:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5290:6:1",
														"nodeType": "YulTypedName",
														"src": "5290:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5301:4:1",
														"nodeType": "YulTypedName",
														"src": "5301:4:1",
														"type": ""
													}
												],
												"src": "5185:294:1"
											},
											{
												"body": {
													"nativeSrc": "5584:109:1",
													"nodeType": "YulBlock",
													"src": "5584:109:1",
													"statements": [
														{
															"nativeSrc": "5594:26:1",
															"nodeType": "YulAssignment",
															"src": "5594:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5606:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5606:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5617:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5617:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5602:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5602:3:1"
																},
																"nativeSrc": "5602:18:1",
																"nodeType": "YulFunctionCall",
																"src": "5602:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5594:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5594:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5636:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5636:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5651:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5651:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5659:26:1",
																				"nodeType": "YulLiteral",
																				"src": "5659:26:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5647:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5647:3:1"
																		},
																		"nativeSrc": "5647:39:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5647:39:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5629:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5629:6:1"
																},
																"nativeSrc": "5629:58:1",
																"nodeType": "YulFunctionCall",
																"src": "5629:58:1"
															},
															"nativeSrc": "5629:58:1",
															"nodeType": "YulExpressionStatement",
															"src": "5629:58:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint96__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5484:209:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5553:9:1",
														"nodeType": "YulTypedName",
														"src": "5553:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5564:6:1",
														"nodeType": "YulTypedName",
														"src": "5564:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5575:4:1",
														"nodeType": "YulTypedName",
														"src": "5575:4:1",
														"type": ""
													}
												],
												"src": "5484:209:1"
											},
											{
												"body": {
													"nativeSrc": "5872:225:1",
													"nodeType": "YulBlock",
													"src": "5872:225:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5889:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5889:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5900:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5900:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5882:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5882:6:1"
																},
																"nativeSrc": "5882:21:1",
																"nodeType": "YulFunctionCall",
																"src": "5882:21:1"
															},
															"nativeSrc": "5882:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "5882:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5923:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5923:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5934:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5934:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5919:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5919:3:1"
																		},
																		"nativeSrc": "5919:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5919:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5939:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5939:2:1",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5912:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5912:6:1"
																},
																"nativeSrc": "5912:30:1",
																"nodeType": "YulFunctionCall",
																"src": "5912:30:1"
															},
															"nativeSrc": "5912:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "5912:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5962:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5962:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5973:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5973:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5958:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5958:3:1"
																		},
																		"nativeSrc": "5958:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5958:18:1"
																	},
																	{
																		"hexValue": "556e693a3a6d696e743a206f6e6c7920746865206d696e7465722063616e206d",
																		"kind": "string",
																		"nativeSrc": "5978:34:1",
																		"nodeType": "YulLiteral",
																		"src": "5978:34:1",
																		"type": "",
																		"value": "Uni::mint: only the minter can m"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5951:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5951:6:1"
																},
																"nativeSrc": "5951:62:1",
																"nodeType": "YulFunctionCall",
																"src": "5951:62:1"
															},
															"nativeSrc": "5951:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "5951:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6033:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6033:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6044:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6044:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6029:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6029:3:1"
																		},
																		"nativeSrc": "6029:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6029:18:1"
																	},
																	{
																		"hexValue": "696e74",
																		"kind": "string",
																		"nativeSrc": "6049:5:1",
																		"nodeType": "YulLiteral",
																		"src": "6049:5:1",
																		"type": "",
																		"value": "int"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6022:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6022:6:1"
																},
																"nativeSrc": "6022:33:1",
																"nodeType": "YulFunctionCall",
																"src": "6022:33:1"
															},
															"nativeSrc": "6022:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "6022:33:1"
														},
														{
															"nativeSrc": "6064:27:1",
															"nodeType": "YulAssignment",
															"src": "6064:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6076:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6076:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6087:3:1",
																		"nodeType": "YulLiteral",
																		"src": "6087:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6072:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6072:3:1"
																},
																"nativeSrc": "6072:19:1",
																"nodeType": "YulFunctionCall",
																"src": "6072:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6064:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6064:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc6a5c1b47b7f8bc902cdb48ac9758787b1a8119a1909e02b5432deee2d32a62__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5698:399:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5849:9:1",
														"nodeType": "YulTypedName",
														"src": "5849:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5863:4:1",
														"nodeType": "YulTypedName",
														"src": "5863:4:1",
														"type": ""
													}
												],
												"src": "5698:399:1"
											},
											{
												"body": {
													"nativeSrc": "6276:224:1",
													"nodeType": "YulBlock",
													"src": "6276:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6293:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6293:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6304:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6304:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6286:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6286:6:1"
																},
																"nativeSrc": "6286:21:1",
																"nodeType": "YulFunctionCall",
																"src": "6286:21:1"
															},
															"nativeSrc": "6286:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "6286:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6327:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6327:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6338:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6338:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6323:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6323:3:1"
																		},
																		"nativeSrc": "6323:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6323:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6343:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6343:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6316:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6316:6:1"
																},
																"nativeSrc": "6316:30:1",
																"nodeType": "YulFunctionCall",
																"src": "6316:30:1"
															},
															"nativeSrc": "6316:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "6316:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6366:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6366:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6377:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6377:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6362:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6362:3:1"
																		},
																		"nativeSrc": "6362:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6362:18:1"
																	},
																	{
																		"hexValue": "556e693a3a6d696e743a206d696e74696e67206e6f7420616c6c6f7765642079",
																		"kind": "string",
																		"nativeSrc": "6382:34:1",
																		"nodeType": "YulLiteral",
																		"src": "6382:34:1",
																		"type": "",
																		"value": "Uni::mint: minting not allowed y"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6355:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6355:6:1"
																},
																"nativeSrc": "6355:62:1",
																"nodeType": "YulFunctionCall",
																"src": "6355:62:1"
															},
															"nativeSrc": "6355:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "6355:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6437:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6437:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6448:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6448:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6433:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6433:3:1"
																		},
																		"nativeSrc": "6433:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6433:18:1"
																	},
																	{
																		"hexValue": "6574",
																		"kind": "string",
																		"nativeSrc": "6453:4:1",
																		"nodeType": "YulLiteral",
																		"src": "6453:4:1",
																		"type": "",
																		"value": "et"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6426:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6426:6:1"
																},
																"nativeSrc": "6426:32:1",
																"nodeType": "YulFunctionCall",
																"src": "6426:32:1"
															},
															"nativeSrc": "6426:32:1",
															"nodeType": "YulExpressionStatement",
															"src": "6426:32:1"
														},
														{
															"nativeSrc": "6467:27:1",
															"nodeType": "YulAssignment",
															"src": "6467:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6479:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6479:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6490:3:1",
																		"nodeType": "YulLiteral",
																		"src": "6490:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6475:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6475:3:1"
																},
																"nativeSrc": "6475:19:1",
																"nodeType": "YulFunctionCall",
																"src": "6475:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6467:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6467:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7b0ec4a3f6bfba673b135595084a79859c9e4ba0d9455df08bfb3bece6df3142__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6102:398:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6253:9:1",
														"nodeType": "YulTypedName",
														"src": "6253:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6267:4:1",
														"nodeType": "YulTypedName",
														"src": "6267:4:1",
														"type": ""
													}
												],
												"src": "6102:398:1"
											},
											{
												"body": {
													"nativeSrc": "6679:236:1",
													"nodeType": "YulBlock",
													"src": "6679:236:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6696:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6696:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6707:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6707:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6689:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6689:6:1"
																},
																"nativeSrc": "6689:21:1",
																"nodeType": "YulFunctionCall",
																"src": "6689:21:1"
															},
															"nativeSrc": "6689:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "6689:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6730:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6730:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6741:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6741:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6726:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6726:3:1"
																		},
																		"nativeSrc": "6726:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6726:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6746:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6746:2:1",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6719:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6719:6:1"
																},
																"nativeSrc": "6719:30:1",
																"nodeType": "YulFunctionCall",
																"src": "6719:30:1"
															},
															"nativeSrc": "6719:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "6719:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6769:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6769:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6780:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6780:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6765:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6765:3:1"
																		},
																		"nativeSrc": "6765:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6765:18:1"
																	},
																	{
																		"hexValue": "556e693a3a6d696e743a2063616e6e6f74207472616e7366657220746f207468",
																		"kind": "string",
																		"nativeSrc": "6785:34:1",
																		"nodeType": "YulLiteral",
																		"src": "6785:34:1",
																		"type": "",
																		"value": "Uni::mint: cannot transfer to th"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6758:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6758:6:1"
																},
																"nativeSrc": "6758:62:1",
																"nodeType": "YulFunctionCall",
																"src": "6758:62:1"
															},
															"nativeSrc": "6758:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "6758:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6840:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6840:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6851:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6851:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6836:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6836:3:1"
																		},
																		"nativeSrc": "6836:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6836:18:1"
																	},
																	{
																		"hexValue": "65207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "6856:16:1",
																		"nodeType": "YulLiteral",
																		"src": "6856:16:1",
																		"type": "",
																		"value": "e zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6829:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6829:6:1"
																},
																"nativeSrc": "6829:44:1",
																"nodeType": "YulFunctionCall",
																"src": "6829:44:1"
															},
															"nativeSrc": "6829:44:1",
															"nodeType": "YulExpressionStatement",
															"src": "6829:44:1"
														},
														{
															"nativeSrc": "6882:27:1",
															"nodeType": "YulAssignment",
															"src": "6882:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6894:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6894:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6905:3:1",
																		"nodeType": "YulLiteral",
																		"src": "6905:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6890:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6890:3:1"
																},
																"nativeSrc": "6890:19:1",
																"nodeType": "YulFunctionCall",
																"src": "6890:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6882:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6882:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5f24bdbd67fb75785b275770fb658b786eb2736feb96698cf0894896fdf28c73__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6505:410:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6656:9:1",
														"nodeType": "YulTypedName",
														"src": "6656:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6670:4:1",
														"nodeType": "YulTypedName",
														"src": "6670:4:1",
														"type": ""
													}
												],
												"src": "6505:410:1"
											},
											{
												"body": {
													"nativeSrc": "7094:178:1",
													"nodeType": "YulBlock",
													"src": "7094:178:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7111:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7111:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7122:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7122:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7104:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7104:6:1"
																},
																"nativeSrc": "7104:21:1",
																"nodeType": "YulFunctionCall",
																"src": "7104:21:1"
															},
															"nativeSrc": "7104:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "7104:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7145:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7145:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7156:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7156:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7141:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7141:3:1"
																		},
																		"nativeSrc": "7141:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7141:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7161:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7161:2:1",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7134:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7134:6:1"
																},
																"nativeSrc": "7134:30:1",
																"nodeType": "YulFunctionCall",
																"src": "7134:30:1"
															},
															"nativeSrc": "7134:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "7134:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7184:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7184:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7195:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7195:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7180:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7180:3:1"
																		},
																		"nativeSrc": "7180:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7180:18:1"
																	},
																	{
																		"hexValue": "556e693a3a6d696e743a206578636565646564206d696e7420636170",
																		"kind": "string",
																		"nativeSrc": "7200:30:1",
																		"nodeType": "YulLiteral",
																		"src": "7200:30:1",
																		"type": "",
																		"value": "Uni::mint: exceeded mint cap"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7173:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7173:6:1"
																},
																"nativeSrc": "7173:58:1",
																"nodeType": "YulFunctionCall",
																"src": "7173:58:1"
															},
															"nativeSrc": "7173:58:1",
															"nodeType": "YulExpressionStatement",
															"src": "7173:58:1"
														},
														{
															"nativeSrc": "7240:26:1",
															"nodeType": "YulAssignment",
															"src": "7240:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7252:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7252:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7263:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7263:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7248:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7248:3:1"
																},
																"nativeSrc": "7248:18:1",
																"nodeType": "YulFunctionCall",
																"src": "7248:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7240:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7240:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c455438be199e7ac7b6d21fdc7332bbd68229582d8b1be9266bdb0f4844638c0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6920:352:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7071:9:1",
														"nodeType": "YulTypedName",
														"src": "7071:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7085:4:1",
														"nodeType": "YulTypedName",
														"src": "7085:4:1",
														"type": ""
													}
												],
												"src": "6920:352:1"
											},
											{
												"body": {
													"nativeSrc": "7451:228:1",
													"nodeType": "YulBlock",
													"src": "7451:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7468:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7468:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7479:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7479:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7461:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7461:6:1"
																},
																"nativeSrc": "7461:21:1",
																"nodeType": "YulFunctionCall",
																"src": "7461:21:1"
															},
															"nativeSrc": "7461:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "7461:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7502:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7502:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7513:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7513:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7498:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7498:3:1"
																		},
																		"nativeSrc": "7498:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7498:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7518:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7518:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7491:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7491:6:1"
																},
																"nativeSrc": "7491:30:1",
																"nodeType": "YulFunctionCall",
																"src": "7491:30:1"
															},
															"nativeSrc": "7491:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "7491:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7541:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7541:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7552:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7552:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7537:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7537:3:1"
																		},
																		"nativeSrc": "7537:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7537:18:1"
																	},
																	{
																		"hexValue": "556e693a3a6765745072696f72566f7465733a206e6f74207965742064657465",
																		"kind": "string",
																		"nativeSrc": "7557:34:1",
																		"nodeType": "YulLiteral",
																		"src": "7557:34:1",
																		"type": "",
																		"value": "Uni::getPriorVotes: not yet dete"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7530:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7530:6:1"
																},
																"nativeSrc": "7530:62:1",
																"nodeType": "YulFunctionCall",
																"src": "7530:62:1"
															},
															"nativeSrc": "7530:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "7530:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7612:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7612:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7623:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7623:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7608:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7608:3:1"
																		},
																		"nativeSrc": "7608:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7608:18:1"
																	},
																	{
																		"hexValue": "726d696e6564",
																		"kind": "string",
																		"nativeSrc": "7628:8:1",
																		"nodeType": "YulLiteral",
																		"src": "7628:8:1",
																		"type": "",
																		"value": "rmined"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7601:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7601:6:1"
																},
																"nativeSrc": "7601:36:1",
																"nodeType": "YulFunctionCall",
																"src": "7601:36:1"
															},
															"nativeSrc": "7601:36:1",
															"nodeType": "YulExpressionStatement",
															"src": "7601:36:1"
														},
														{
															"nativeSrc": "7646:27:1",
															"nodeType": "YulAssignment",
															"src": "7646:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7658:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7658:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7669:3:1",
																		"nodeType": "YulLiteral",
																		"src": "7669:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7654:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7654:3:1"
																},
																"nativeSrc": "7654:19:1",
																"nodeType": "YulFunctionCall",
																"src": "7654:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7646:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7646:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_49a8c5a37f9a1453393e39114b211b704ebc96555b0cd38f42c3478bd0b9f9d2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7277:402:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7428:9:1",
														"nodeType": "YulTypedName",
														"src": "7428:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7442:4:1",
														"nodeType": "YulTypedName",
														"src": "7442:4:1",
														"type": ""
													}
												],
												"src": "7277:402:1"
											},
											{
												"body": {
													"nativeSrc": "7716:95:1",
													"nodeType": "YulBlock",
													"src": "7716:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7733:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7733:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7740:3:1",
																				"nodeType": "YulLiteral",
																				"src": "7740:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7745:10:1",
																				"nodeType": "YulLiteral",
																				"src": "7745:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7736:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7736:3:1"
																		},
																		"nativeSrc": "7736:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7736:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7726:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7726:6:1"
																},
																"nativeSrc": "7726:31:1",
																"nodeType": "YulFunctionCall",
																"src": "7726:31:1"
															},
															"nativeSrc": "7726:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "7726:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7773:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7773:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7776:4:1",
																		"nodeType": "YulLiteral",
																		"src": "7776:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7766:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7766:6:1"
																},
																"nativeSrc": "7766:15:1",
																"nodeType": "YulFunctionCall",
																"src": "7766:15:1"
															},
															"nativeSrc": "7766:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "7766:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7797:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7797:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7800:4:1",
																		"nodeType": "YulLiteral",
																		"src": "7800:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7790:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7790:6:1"
																},
																"nativeSrc": "7790:15:1",
																"nodeType": "YulFunctionCall",
																"src": "7790:15:1"
															},
															"nativeSrc": "7790:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "7790:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7684:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "7684:127:1"
											},
											{
												"body": {
													"nativeSrc": "7864:122:1",
													"nodeType": "YulBlock",
													"src": "7864:122:1",
													"statements": [
														{
															"nativeSrc": "7874:51:1",
															"nodeType": "YulAssignment",
															"src": "7874:51:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "7890:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "7890:1:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7893:10:1",
																				"nodeType": "YulLiteral",
																				"src": "7893:10:1",
																				"type": "",
																				"value": "0xffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7886:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7886:3:1"
																		},
																		"nativeSrc": "7886:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7886:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nativeSrc": "7910:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "7910:1:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7913:10:1",
																				"nodeType": "YulLiteral",
																				"src": "7913:10:1",
																				"type": "",
																				"value": "0xffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7906:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7906:3:1"
																		},
																		"nativeSrc": "7906:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7906:18:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "7882:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7882:3:1"
																},
																"nativeSrc": "7882:43:1",
																"nodeType": "YulFunctionCall",
																"src": "7882:43:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "7874:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7874:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7958:22:1",
																"nodeType": "YulBlock",
																"src": "7958:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7960:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "7960:16:1"
																			},
																			"nativeSrc": "7960:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7960:18:1"
																		},
																		"nativeSrc": "7960:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "7960:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "7940:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "7940:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7946:10:1",
																		"nodeType": "YulLiteral",
																		"src": "7946:10:1",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7937:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "7937:2:1"
																},
																"nativeSrc": "7937:20:1",
																"nodeType": "YulFunctionCall",
																"src": "7937:20:1"
															},
															"nativeSrc": "7934:46:1",
															"nodeType": "YulIf",
															"src": "7934:46:1"
														}
													]
												},
												"name": "checked_sub_t_uint32",
												"nativeSrc": "7816:170:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7846:1:1",
														"nodeType": "YulTypedName",
														"src": "7846:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7849:1:1",
														"nodeType": "YulTypedName",
														"src": "7849:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "7855:4:1",
														"nodeType": "YulTypedName",
														"src": "7855:4:1",
														"type": ""
													}
												],
												"src": "7816:170:1"
											},
											{
												"body": {
													"nativeSrc": "8023:95:1",
													"nodeType": "YulBlock",
													"src": "8023:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8040:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8040:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8047:3:1",
																				"nodeType": "YulLiteral",
																				"src": "8047:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8052:10:1",
																				"nodeType": "YulLiteral",
																				"src": "8052:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "8043:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8043:3:1"
																		},
																		"nativeSrc": "8043:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8043:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8033:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8033:6:1"
																},
																"nativeSrc": "8033:31:1",
																"nodeType": "YulFunctionCall",
																"src": "8033:31:1"
															},
															"nativeSrc": "8033:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "8033:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8080:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8080:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8083:4:1",
																		"nodeType": "YulLiteral",
																		"src": "8083:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8073:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8073:6:1"
																},
																"nativeSrc": "8073:15:1",
																"nodeType": "YulFunctionCall",
																"src": "8073:15:1"
															},
															"nativeSrc": "8073:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "8073:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8104:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8104:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8107:4:1",
																		"nodeType": "YulLiteral",
																		"src": "8107:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8097:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8097:6:1"
																},
																"nativeSrc": "8097:15:1",
																"nodeType": "YulFunctionCall",
																"src": "8097:15:1"
															},
															"nativeSrc": "8097:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "8097:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "7991:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "7991:127:1"
											},
											{
												"body": {
													"nativeSrc": "8168:133:1",
													"nodeType": "YulBlock",
													"src": "8168:133:1",
													"statements": [
														{
															"nativeSrc": "8178:29:1",
															"nodeType": "YulVariableDeclaration",
															"src": "8178:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8193:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8193:1:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8196:10:1",
																		"nodeType": "YulLiteral",
																		"src": "8196:10:1",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8189:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8189:3:1"
																},
																"nativeSrc": "8189:18:1",
																"nodeType": "YulFunctionCall",
																"src": "8189:18:1"
															},
															"variables": [
																{
																	"name": "y_1",
																	"nativeSrc": "8182:3:1",
																	"nodeType": "YulTypedName",
																	"src": "8182:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8231:22:1",
																"nodeType": "YulBlock",
																"src": "8231:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "8233:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "8233:16:1"
																			},
																			"nativeSrc": "8233:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8233:18:1"
																		},
																		"nativeSrc": "8233:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "8233:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y_1",
																		"nativeSrc": "8226:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8226:3:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8219:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8219:6:1"
																},
																"nativeSrc": "8219:11:1",
																"nodeType": "YulFunctionCall",
																"src": "8219:11:1"
															},
															"nativeSrc": "8216:37:1",
															"nodeType": "YulIf",
															"src": "8216:37:1"
														},
														{
															"nativeSrc": "8262:33:1",
															"nodeType": "YulAssignment",
															"src": "8262:33:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "8275:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "8275:1:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8278:10:1",
																				"nodeType": "YulLiteral",
																				"src": "8278:10:1",
																				"type": "",
																				"value": "0xffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8271:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8271:3:1"
																		},
																		"nativeSrc": "8271:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8271:18:1"
																	},
																	{
																		"name": "y_1",
																		"nativeSrc": "8291:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8291:3:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "8267:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8267:3:1"
																},
																"nativeSrc": "8267:28:1",
																"nodeType": "YulFunctionCall",
																"src": "8267:28:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "8262:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "8262:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint32",
												"nativeSrc": "8123:178:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8153:1:1",
														"nodeType": "YulTypedName",
														"src": "8153:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8156:1:1",
														"nodeType": "YulTypedName",
														"src": "8156:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "8162:1:1",
														"nodeType": "YulTypedName",
														"src": "8162:1:1",
														"type": ""
													}
												],
												"src": "8123:178:1"
											},
											{
												"body": {
													"nativeSrc": "8491:232:1",
													"nodeType": "YulBlock",
													"src": "8491:232:1",
													"statements": [
														{
															"nativeSrc": "8501:27:1",
															"nodeType": "YulAssignment",
															"src": "8501:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8513:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "8513:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8524:3:1",
																		"nodeType": "YulLiteral",
																		"src": "8524:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8509:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8509:3:1"
																},
																"nativeSrc": "8509:19:1",
																"nodeType": "YulFunctionCall",
																"src": "8509:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8501:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8501:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8544:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "8544:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "8555:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8555:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8537:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8537:6:1"
																},
																"nativeSrc": "8537:25:1",
																"nodeType": "YulFunctionCall",
																"src": "8537:25:1"
															},
															"nativeSrc": "8537:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "8537:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8582:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8582:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8593:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8593:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8578:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8578:3:1"
																		},
																		"nativeSrc": "8578:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8578:18:1"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "8598:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8598:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8571:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8571:6:1"
																},
																"nativeSrc": "8571:34:1",
																"nodeType": "YulFunctionCall",
																"src": "8571:34:1"
															},
															"nativeSrc": "8571:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "8571:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8625:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8625:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8636:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8636:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8621:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8621:3:1"
																		},
																		"nativeSrc": "8621:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8621:18:1"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "8641:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8641:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8614:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8614:6:1"
																},
																"nativeSrc": "8614:34:1",
																"nodeType": "YulFunctionCall",
																"src": "8614:34:1"
															},
															"nativeSrc": "8614:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "8614:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8668:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8668:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8679:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8679:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8664:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8664:3:1"
																		},
																		"nativeSrc": "8664:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8664:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nativeSrc": "8688:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "8688:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8704:3:1",
																								"nodeType": "YulLiteral",
																								"src": "8704:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8709:1:1",
																								"nodeType": "YulLiteral",
																								"src": "8709:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "8700:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "8700:3:1"
																						},
																						"nativeSrc": "8700:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "8700:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8713:1:1",
																						"nodeType": "YulLiteral",
																						"src": "8713:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "8696:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "8696:3:1"
																				},
																				"nativeSrc": "8696:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8696:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8684:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8684:3:1"
																		},
																		"nativeSrc": "8684:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8684:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8657:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8657:6:1"
																},
																"nativeSrc": "8657:60:1",
																"nodeType": "YulFunctionCall",
																"src": "8657:60:1"
															},
															"nativeSrc": "8657:60:1",
															"nodeType": "YulExpressionStatement",
															"src": "8657:60:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "8306:417:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8436:9:1",
														"nodeType": "YulTypedName",
														"src": "8436:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "8447:6:1",
														"nodeType": "YulTypedName",
														"src": "8447:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8455:6:1",
														"nodeType": "YulTypedName",
														"src": "8455:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8463:6:1",
														"nodeType": "YulTypedName",
														"src": "8463:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8471:6:1",
														"nodeType": "YulTypedName",
														"src": "8471:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8482:4:1",
														"nodeType": "YulTypedName",
														"src": "8482:4:1",
														"type": ""
													}
												],
												"src": "8306:417:1"
											},
											{
												"body": {
													"nativeSrc": "8913:232:1",
													"nodeType": "YulBlock",
													"src": "8913:232:1",
													"statements": [
														{
															"nativeSrc": "8923:27:1",
															"nodeType": "YulAssignment",
															"src": "8923:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8935:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "8935:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8946:3:1",
																		"nodeType": "YulLiteral",
																		"src": "8946:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8931:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8931:3:1"
																},
																"nativeSrc": "8931:19:1",
																"nodeType": "YulFunctionCall",
																"src": "8931:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8923:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8923:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8966:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "8966:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "8977:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8977:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8959:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8959:6:1"
																},
																"nativeSrc": "8959:25:1",
																"nodeType": "YulFunctionCall",
																"src": "8959:25:1"
															},
															"nativeSrc": "8959:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "8959:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9004:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9004:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9015:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9015:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9000:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9000:3:1"
																		},
																		"nativeSrc": "9000:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9000:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "9024:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "9024:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "9040:3:1",
																								"nodeType": "YulLiteral",
																								"src": "9040:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "9045:1:1",
																								"nodeType": "YulLiteral",
																								"src": "9045:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "9036:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "9036:3:1"
																						},
																						"nativeSrc": "9036:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "9036:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9049:1:1",
																						"nodeType": "YulLiteral",
																						"src": "9049:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "9032:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "9032:3:1"
																				},
																				"nativeSrc": "9032:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "9032:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9020:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9020:3:1"
																		},
																		"nativeSrc": "9020:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9020:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8993:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8993:6:1"
																},
																"nativeSrc": "8993:60:1",
																"nodeType": "YulFunctionCall",
																"src": "8993:60:1"
															},
															"nativeSrc": "8993:60:1",
															"nodeType": "YulExpressionStatement",
															"src": "8993:60:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9073:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9073:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9084:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9084:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9069:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9069:3:1"
																		},
																		"nativeSrc": "9069:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9069:18:1"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "9089:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9089:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9062:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9062:6:1"
																},
																"nativeSrc": "9062:34:1",
																"nodeType": "YulFunctionCall",
																"src": "9062:34:1"
															},
															"nativeSrc": "9062:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "9062:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9116:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9116:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9127:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9127:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9112:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9112:3:1"
																		},
																		"nativeSrc": "9112:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9112:18:1"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "9132:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9132:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9105:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9105:6:1"
																},
																"nativeSrc": "9105:34:1",
																"nodeType": "YulFunctionCall",
																"src": "9105:34:1"
															},
															"nativeSrc": "9105:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "9105:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "8728:417:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8858:9:1",
														"nodeType": "YulTypedName",
														"src": "8858:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "8869:6:1",
														"nodeType": "YulTypedName",
														"src": "8869:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8877:6:1",
														"nodeType": "YulTypedName",
														"src": "8877:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8885:6:1",
														"nodeType": "YulTypedName",
														"src": "8885:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8893:6:1",
														"nodeType": "YulTypedName",
														"src": "8893:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8904:4:1",
														"nodeType": "YulTypedName",
														"src": "8904:4:1",
														"type": ""
													}
												],
												"src": "8728:417:1"
											},
											{
												"body": {
													"nativeSrc": "9398:144:1",
													"nodeType": "YulBlock",
													"src": "9398:144:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9415:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "9415:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9424:3:1",
																				"nodeType": "YulLiteral",
																				"src": "9424:3:1",
																				"type": "",
																				"value": "240"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9429:4:1",
																				"nodeType": "YulLiteral",
																				"src": "9429:4:1",
																				"type": "",
																				"value": "6401"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "9420:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9420:3:1"
																		},
																		"nativeSrc": "9420:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9420:14:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9408:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9408:6:1"
																},
																"nativeSrc": "9408:27:1",
																"nodeType": "YulFunctionCall",
																"src": "9408:27:1"
															},
															"nativeSrc": "9408:27:1",
															"nodeType": "YulExpressionStatement",
															"src": "9408:27:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "9455:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "9455:3:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9460:1:1",
																				"nodeType": "YulLiteral",
																				"src": "9460:1:1",
																				"type": "",
																				"value": "2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9451:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9451:3:1"
																		},
																		"nativeSrc": "9451:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9451:11:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "9464:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9464:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9444:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9444:6:1"
																},
																"nativeSrc": "9444:27:1",
																"nodeType": "YulFunctionCall",
																"src": "9444:27:1"
															},
															"nativeSrc": "9444:27:1",
															"nodeType": "YulExpressionStatement",
															"src": "9444:27:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "9491:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "9491:3:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9496:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9496:2:1",
																				"type": "",
																				"value": "34"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9487:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9487:3:1"
																		},
																		"nativeSrc": "9487:12:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9487:12:1"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "9501:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9501:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9480:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9480:6:1"
																},
																"nativeSrc": "9480:28:1",
																"nodeType": "YulFunctionCall",
																"src": "9480:28:1"
															},
															"nativeSrc": "9480:28:1",
															"nodeType": "YulExpressionStatement",
															"src": "9480:28:1"
														},
														{
															"nativeSrc": "9517:19:1",
															"nodeType": "YulAssignment",
															"src": "9517:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9528:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "9528:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9533:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9533:2:1",
																		"type": "",
																		"value": "66"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9524:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9524:3:1"
																},
																"nativeSrc": "9524:12:1",
																"nodeType": "YulFunctionCall",
																"src": "9524:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9517:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9517:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "9150:392:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9366:3:1",
														"nodeType": "YulTypedName",
														"src": "9366:3:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9371:6:1",
														"nodeType": "YulTypedName",
														"src": "9371:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9379:6:1",
														"nodeType": "YulTypedName",
														"src": "9379:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9390:3:1",
														"nodeType": "YulTypedName",
														"src": "9390:3:1",
														"type": ""
													}
												],
												"src": "9150:392:1"
											},
											{
												"body": {
													"nativeSrc": "9728:217:1",
													"nodeType": "YulBlock",
													"src": "9728:217:1",
													"statements": [
														{
															"nativeSrc": "9738:27:1",
															"nodeType": "YulAssignment",
															"src": "9738:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9750:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9750:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9761:3:1",
																		"nodeType": "YulLiteral",
																		"src": "9761:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9746:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9746:3:1"
																},
																"nativeSrc": "9746:19:1",
																"nodeType": "YulFunctionCall",
																"src": "9746:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9738:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9738:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9781:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9781:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "9792:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9792:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9774:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9774:6:1"
																},
																"nativeSrc": "9774:25:1",
																"nodeType": "YulFunctionCall",
																"src": "9774:25:1"
															},
															"nativeSrc": "9774:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "9774:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9819:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9819:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9830:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9830:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9815:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9815:3:1"
																		},
																		"nativeSrc": "9815:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9815:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "9839:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "9839:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9847:4:1",
																				"nodeType": "YulLiteral",
																				"src": "9847:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9835:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9835:3:1"
																		},
																		"nativeSrc": "9835:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9835:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9808:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9808:6:1"
																},
																"nativeSrc": "9808:45:1",
																"nodeType": "YulFunctionCall",
																"src": "9808:45:1"
															},
															"nativeSrc": "9808:45:1",
															"nodeType": "YulExpressionStatement",
															"src": "9808:45:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9873:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9873:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9884:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9884:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9869:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9869:3:1"
																		},
																		"nativeSrc": "9869:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9869:18:1"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "9889:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9889:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9862:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9862:6:1"
																},
																"nativeSrc": "9862:34:1",
																"nodeType": "YulFunctionCall",
																"src": "9862:34:1"
															},
															"nativeSrc": "9862:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "9862:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9916:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9916:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9927:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9927:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9912:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9912:3:1"
																		},
																		"nativeSrc": "9912:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9912:18:1"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "9932:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9932:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9905:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9905:6:1"
																},
																"nativeSrc": "9905:34:1",
																"nodeType": "YulFunctionCall",
																"src": "9905:34:1"
															},
															"nativeSrc": "9905:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "9905:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
												"nativeSrc": "9547:398:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9673:9:1",
														"nodeType": "YulTypedName",
														"src": "9673:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9684:6:1",
														"nodeType": "YulTypedName",
														"src": "9684:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9692:6:1",
														"nodeType": "YulTypedName",
														"src": "9692:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9700:6:1",
														"nodeType": "YulTypedName",
														"src": "9700:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9708:6:1",
														"nodeType": "YulTypedName",
														"src": "9708:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9719:4:1",
														"nodeType": "YulTypedName",
														"src": "9719:4:1",
														"type": ""
													}
												],
												"src": "9547:398:1"
											},
											{
												"body": {
													"nativeSrc": "10124:227:1",
													"nodeType": "YulBlock",
													"src": "10124:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10141:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "10141:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10152:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10152:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10134:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10134:6:1"
																},
																"nativeSrc": "10134:21:1",
																"nodeType": "YulFunctionCall",
																"src": "10134:21:1"
															},
															"nativeSrc": "10134:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "10134:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10175:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10175:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10186:2:1",
																				"nodeType": "YulLiteral",
																				"src": "10186:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10171:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10171:3:1"
																		},
																		"nativeSrc": "10171:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10171:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10191:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10191:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10164:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10164:6:1"
																},
																"nativeSrc": "10164:30:1",
																"nodeType": "YulFunctionCall",
																"src": "10164:30:1"
															},
															"nativeSrc": "10164:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "10164:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10214:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10214:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10225:2:1",
																				"nodeType": "YulLiteral",
																				"src": "10225:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10210:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10210:3:1"
																		},
																		"nativeSrc": "10210:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10210:18:1"
																	},
																	{
																		"hexValue": "556e693a3a64656c656761746542795369673a20696e76616c6964207369676e",
																		"kind": "string",
																		"nativeSrc": "10230:34:1",
																		"nodeType": "YulLiteral",
																		"src": "10230:34:1",
																		"type": "",
																		"value": "Uni::delegateBySig: invalid sign"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10203:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10203:6:1"
																},
																"nativeSrc": "10203:62:1",
																"nodeType": "YulFunctionCall",
																"src": "10203:62:1"
															},
															"nativeSrc": "10203:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "10203:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10285:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10285:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10296:2:1",
																				"nodeType": "YulLiteral",
																				"src": "10296:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10281:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10281:3:1"
																		},
																		"nativeSrc": "10281:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10281:18:1"
																	},
																	{
																		"hexValue": "6174757265",
																		"kind": "string",
																		"nativeSrc": "10301:7:1",
																		"nodeType": "YulLiteral",
																		"src": "10301:7:1",
																		"type": "",
																		"value": "ature"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10274:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10274:6:1"
																},
																"nativeSrc": "10274:35:1",
																"nodeType": "YulFunctionCall",
																"src": "10274:35:1"
															},
															"nativeSrc": "10274:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "10274:35:1"
														},
														{
															"nativeSrc": "10318:27:1",
															"nodeType": "YulAssignment",
															"src": "10318:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10330:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "10330:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10341:3:1",
																		"nodeType": "YulLiteral",
																		"src": "10341:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10326:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10326:3:1"
																},
																"nativeSrc": "10326:19:1",
																"nodeType": "YulFunctionCall",
																"src": "10326:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10318:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "10318:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_41ba3897512438c3b52e550ef92ff91255600d9202c2b92b8893f625252dfabf__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9950:401:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10101:9:1",
														"nodeType": "YulTypedName",
														"src": "10101:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10115:4:1",
														"nodeType": "YulTypedName",
														"src": "10115:4:1",
														"type": ""
													}
												],
												"src": "9950:401:1"
											},
											{
												"body": {
													"nativeSrc": "10403:88:1",
													"nodeType": "YulBlock",
													"src": "10403:88:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "10434:22:1",
																"nodeType": "YulBlock",
																"src": "10434:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10436:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "10436:16:1"
																			},
																			"nativeSrc": "10436:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "10436:18:1"
																		},
																		"nativeSrc": "10436:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "10436:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10419:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "10419:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "10430:1:1",
																				"nodeType": "YulLiteral",
																				"src": "10430:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "10426:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10426:3:1"
																		},
																		"nativeSrc": "10426:6:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10426:6:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "10416:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "10416:2:1"
																},
																"nativeSrc": "10416:17:1",
																"nodeType": "YulFunctionCall",
																"src": "10416:17:1"
															},
															"nativeSrc": "10413:43:1",
															"nodeType": "YulIf",
															"src": "10413:43:1"
														},
														{
															"nativeSrc": "10465:20:1",
															"nodeType": "YulAssignment",
															"src": "10465:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10476:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "10476:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10483:1:1",
																		"nodeType": "YulLiteral",
																		"src": "10483:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10472:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10472:3:1"
																},
																"nativeSrc": "10472:13:1",
																"nodeType": "YulFunctionCall",
																"src": "10472:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "10465:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10465:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "10356:135:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10385:5:1",
														"nodeType": "YulTypedName",
														"src": "10385:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "10395:3:1",
														"nodeType": "YulTypedName",
														"src": "10395:3:1",
														"type": ""
													}
												],
												"src": "10356:135:1"
											},
											{
												"body": {
													"nativeSrc": "10670:223:1",
													"nodeType": "YulBlock",
													"src": "10670:223:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10687:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "10687:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10698:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10698:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10680:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10680:6:1"
																},
																"nativeSrc": "10680:21:1",
																"nodeType": "YulFunctionCall",
																"src": "10680:21:1"
															},
															"nativeSrc": "10680:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "10680:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10721:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10721:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10732:2:1",
																				"nodeType": "YulLiteral",
																				"src": "10732:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10717:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10717:3:1"
																		},
																		"nativeSrc": "10717:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10717:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10737:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10737:2:1",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10710:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10710:6:1"
																},
																"nativeSrc": "10710:30:1",
																"nodeType": "YulFunctionCall",
																"src": "10710:30:1"
															},
															"nativeSrc": "10710:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "10710:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10760:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10760:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10771:2:1",
																				"nodeType": "YulLiteral",
																				"src": "10771:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10756:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10756:3:1"
																		},
																		"nativeSrc": "10756:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10756:18:1"
																	},
																	{
																		"hexValue": "556e693a3a64656c656761746542795369673a20696e76616c6964206e6f6e63",
																		"kind": "string",
																		"nativeSrc": "10776:34:1",
																		"nodeType": "YulLiteral",
																		"src": "10776:34:1",
																		"type": "",
																		"value": "Uni::delegateBySig: invalid nonc"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10749:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10749:6:1"
																},
																"nativeSrc": "10749:62:1",
																"nodeType": "YulFunctionCall",
																"src": "10749:62:1"
															},
															"nativeSrc": "10749:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "10749:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10831:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10831:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10842:2:1",
																				"nodeType": "YulLiteral",
																				"src": "10842:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10827:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10827:3:1"
																		},
																		"nativeSrc": "10827:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10827:18:1"
																	},
																	{
																		"hexValue": "65",
																		"kind": "string",
																		"nativeSrc": "10847:3:1",
																		"nodeType": "YulLiteral",
																		"src": "10847:3:1",
																		"type": "",
																		"value": "e"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10820:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10820:6:1"
																},
																"nativeSrc": "10820:31:1",
																"nodeType": "YulFunctionCall",
																"src": "10820:31:1"
															},
															"nativeSrc": "10820:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "10820:31:1"
														},
														{
															"nativeSrc": "10860:27:1",
															"nodeType": "YulAssignment",
															"src": "10860:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10872:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "10872:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10883:3:1",
																		"nodeType": "YulLiteral",
																		"src": "10883:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10868:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10868:3:1"
																},
																"nativeSrc": "10868:19:1",
																"nodeType": "YulFunctionCall",
																"src": "10868:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10860:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "10860:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d126ba952f4f7443590dacc43a358ae6ad956133386dc92be4e1185a27d416b3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10496:397:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10647:9:1",
														"nodeType": "YulTypedName",
														"src": "10647:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10661:4:1",
														"nodeType": "YulTypedName",
														"src": "10661:4:1",
														"type": ""
													}
												],
												"src": "10496:397:1"
											},
											{
												"body": {
													"nativeSrc": "11072:227:1",
													"nodeType": "YulBlock",
													"src": "11072:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11089:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "11089:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11100:2:1",
																		"nodeType": "YulLiteral",
																		"src": "11100:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11082:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11082:6:1"
																},
																"nativeSrc": "11082:21:1",
																"nodeType": "YulFunctionCall",
																"src": "11082:21:1"
															},
															"nativeSrc": "11082:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "11082:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11123:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11123:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11134:2:1",
																				"nodeType": "YulLiteral",
																				"src": "11134:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11119:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11119:3:1"
																		},
																		"nativeSrc": "11119:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11119:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11139:2:1",
																		"nodeType": "YulLiteral",
																		"src": "11139:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11112:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11112:6:1"
																},
																"nativeSrc": "11112:30:1",
																"nodeType": "YulFunctionCall",
																"src": "11112:30:1"
															},
															"nativeSrc": "11112:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "11112:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11162:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11162:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11173:2:1",
																				"nodeType": "YulLiteral",
																				"src": "11173:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11158:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11158:3:1"
																		},
																		"nativeSrc": "11158:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11158:18:1"
																	},
																	{
																		"hexValue": "556e693a3a64656c656761746542795369673a207369676e6174757265206578",
																		"kind": "string",
																		"nativeSrc": "11178:34:1",
																		"nodeType": "YulLiteral",
																		"src": "11178:34:1",
																		"type": "",
																		"value": "Uni::delegateBySig: signature ex"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11151:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11151:6:1"
																},
																"nativeSrc": "11151:62:1",
																"nodeType": "YulFunctionCall",
																"src": "11151:62:1"
															},
															"nativeSrc": "11151:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "11151:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11233:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11233:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11244:2:1",
																				"nodeType": "YulLiteral",
																				"src": "11244:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11229:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11229:3:1"
																		},
																		"nativeSrc": "11229:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11229:18:1"
																	},
																	{
																		"hexValue": "7069726564",
																		"kind": "string",
																		"nativeSrc": "11249:7:1",
																		"nodeType": "YulLiteral",
																		"src": "11249:7:1",
																		"type": "",
																		"value": "pired"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11222:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11222:6:1"
																},
																"nativeSrc": "11222:35:1",
																"nodeType": "YulFunctionCall",
																"src": "11222:35:1"
															},
															"nativeSrc": "11222:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "11222:35:1"
														},
														{
															"nativeSrc": "11266:27:1",
															"nodeType": "YulAssignment",
															"src": "11266:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11278:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "11278:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11289:3:1",
																		"nodeType": "YulLiteral",
																		"src": "11289:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11274:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11274:3:1"
																},
																"nativeSrc": "11274:19:1",
																"nodeType": "YulFunctionCall",
																"src": "11274:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11266:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "11266:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_287e5345cbd1fcc69d3d1d2165b5d321c6a9eb5b34f1162e798e9d80f3fdf12b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10898:401:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11049:9:1",
														"nodeType": "YulTypedName",
														"src": "11049:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11063:4:1",
														"nodeType": "YulTypedName",
														"src": "11063:4:1",
														"type": ""
													}
												],
												"src": "10898:401:1"
											},
											{
												"body": {
													"nativeSrc": "11545:346:1",
													"nodeType": "YulBlock",
													"src": "11545:346:1",
													"statements": [
														{
															"nativeSrc": "11555:27:1",
															"nodeType": "YulAssignment",
															"src": "11555:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11567:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "11567:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11578:3:1",
																		"nodeType": "YulLiteral",
																		"src": "11578:3:1",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11563:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11563:3:1"
																},
																"nativeSrc": "11563:19:1",
																"nodeType": "YulFunctionCall",
																"src": "11563:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11555:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "11555:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11598:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "11598:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "11609:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "11609:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11591:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11591:6:1"
																},
																"nativeSrc": "11591:25:1",
																"nodeType": "YulFunctionCall",
																"src": "11591:25:1"
															},
															"nativeSrc": "11591:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "11591:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11636:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11636:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11647:2:1",
																				"nodeType": "YulLiteral",
																				"src": "11647:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11632:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11632:3:1"
																		},
																		"nativeSrc": "11632:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11632:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "11656:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "11656:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "11672:3:1",
																								"nodeType": "YulLiteral",
																								"src": "11672:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "11677:1:1",
																								"nodeType": "YulLiteral",
																								"src": "11677:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "11668:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "11668:3:1"
																						},
																						"nativeSrc": "11668:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "11668:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11681:1:1",
																						"nodeType": "YulLiteral",
																						"src": "11681:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "11664:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "11664:3:1"
																				},
																				"nativeSrc": "11664:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "11664:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11652:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11652:3:1"
																		},
																		"nativeSrc": "11652:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11652:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11625:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11625:6:1"
																},
																"nativeSrc": "11625:60:1",
																"nodeType": "YulFunctionCall",
																"src": "11625:60:1"
															},
															"nativeSrc": "11625:60:1",
															"nodeType": "YulExpressionStatement",
															"src": "11625:60:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11705:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11705:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11716:2:1",
																				"nodeType": "YulLiteral",
																				"src": "11716:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11701:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11701:3:1"
																		},
																		"nativeSrc": "11701:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11701:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "11725:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "11725:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "11741:3:1",
																								"nodeType": "YulLiteral",
																								"src": "11741:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "11746:1:1",
																								"nodeType": "YulLiteral",
																								"src": "11746:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "11737:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "11737:3:1"
																						},
																						"nativeSrc": "11737:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "11737:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11750:1:1",
																						"nodeType": "YulLiteral",
																						"src": "11750:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "11733:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "11733:3:1"
																				},
																				"nativeSrc": "11733:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "11733:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11721:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11721:3:1"
																		},
																		"nativeSrc": "11721:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11721:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11694:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11694:6:1"
																},
																"nativeSrc": "11694:60:1",
																"nodeType": "YulFunctionCall",
																"src": "11694:60:1"
															},
															"nativeSrc": "11694:60:1",
															"nodeType": "YulExpressionStatement",
															"src": "11694:60:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11774:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11774:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11785:2:1",
																				"nodeType": "YulLiteral",
																				"src": "11785:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11770:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11770:3:1"
																		},
																		"nativeSrc": "11770:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11770:18:1"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "11790:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "11790:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11763:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11763:6:1"
																},
																"nativeSrc": "11763:34:1",
																"nodeType": "YulFunctionCall",
																"src": "11763:34:1"
															},
															"nativeSrc": "11763:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "11763:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11817:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11817:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11828:3:1",
																				"nodeType": "YulLiteral",
																				"src": "11828:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11813:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11813:3:1"
																		},
																		"nativeSrc": "11813:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11813:19:1"
																	},
																	{
																		"name": "value4",
																		"nativeSrc": "11834:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "11834:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11806:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11806:6:1"
																},
																"nativeSrc": "11806:35:1",
																"nodeType": "YulFunctionCall",
																"src": "11806:35:1"
															},
															"nativeSrc": "11806:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "11806:35:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11861:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11861:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11872:3:1",
																				"nodeType": "YulLiteral",
																				"src": "11872:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11857:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11857:3:1"
																		},
																		"nativeSrc": "11857:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11857:19:1"
																	},
																	{
																		"name": "value5",
																		"nativeSrc": "11878:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "11878:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11850:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11850:6:1"
																},
																"nativeSrc": "11850:35:1",
																"nodeType": "YulFunctionCall",
																"src": "11850:35:1"
															},
															"nativeSrc": "11850:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "11850:35:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "11304:587:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11474:9:1",
														"nodeType": "YulTypedName",
														"src": "11474:9:1",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "11485:6:1",
														"nodeType": "YulTypedName",
														"src": "11485:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "11493:6:1",
														"nodeType": "YulTypedName",
														"src": "11493:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "11501:6:1",
														"nodeType": "YulTypedName",
														"src": "11501:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11509:6:1",
														"nodeType": "YulTypedName",
														"src": "11509:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11517:6:1",
														"nodeType": "YulTypedName",
														"src": "11517:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11525:6:1",
														"nodeType": "YulTypedName",
														"src": "11525:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11536:4:1",
														"nodeType": "YulTypedName",
														"src": "11536:4:1",
														"type": ""
													}
												],
												"src": "11304:587:1"
											},
											{
												"body": {
													"nativeSrc": "12070:180:1",
													"nodeType": "YulBlock",
													"src": "12070:180:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12087:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "12087:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12098:2:1",
																		"nodeType": "YulLiteral",
																		"src": "12098:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12080:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12080:6:1"
																},
																"nativeSrc": "12080:21:1",
																"nodeType": "YulFunctionCall",
																"src": "12080:21:1"
															},
															"nativeSrc": "12080:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "12080:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12121:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12121:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12132:2:1",
																				"nodeType": "YulLiteral",
																				"src": "12132:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12117:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12117:3:1"
																		},
																		"nativeSrc": "12117:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12117:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12137:2:1",
																		"nodeType": "YulLiteral",
																		"src": "12137:2:1",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12110:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12110:6:1"
																},
																"nativeSrc": "12110:30:1",
																"nodeType": "YulFunctionCall",
																"src": "12110:30:1"
															},
															"nativeSrc": "12110:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "12110:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12160:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12160:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12171:2:1",
																				"nodeType": "YulLiteral",
																				"src": "12171:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12156:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12156:3:1"
																		},
																		"nativeSrc": "12156:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12156:18:1"
																	},
																	{
																		"hexValue": "556e693a3a7065726d69743a20696e76616c6964207369676e6174757265",
																		"kind": "string",
																		"nativeSrc": "12176:32:1",
																		"nodeType": "YulLiteral",
																		"src": "12176:32:1",
																		"type": "",
																		"value": "Uni::permit: invalid signature"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12149:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12149:6:1"
																},
																"nativeSrc": "12149:60:1",
																"nodeType": "YulFunctionCall",
																"src": "12149:60:1"
															},
															"nativeSrc": "12149:60:1",
															"nodeType": "YulExpressionStatement",
															"src": "12149:60:1"
														},
														{
															"nativeSrc": "12218:26:1",
															"nodeType": "YulAssignment",
															"src": "12218:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12230:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "12230:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12241:2:1",
																		"nodeType": "YulLiteral",
																		"src": "12241:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12226:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12226:3:1"
																},
																"nativeSrc": "12226:18:1",
																"nodeType": "YulFunctionCall",
																"src": "12226:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12218:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "12218:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e94c1ed3488f38be72a83cd591a1465ccfe1e93939cfd7e4bf71c4eb9af19f1a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11896:354:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12047:9:1",
														"nodeType": "YulTypedName",
														"src": "12047:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12061:4:1",
														"nodeType": "YulTypedName",
														"src": "12061:4:1",
														"type": ""
													}
												],
												"src": "11896:354:1"
											},
											{
												"body": {
													"nativeSrc": "12429:175:1",
													"nodeType": "YulBlock",
													"src": "12429:175:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12446:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "12446:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12457:2:1",
																		"nodeType": "YulLiteral",
																		"src": "12457:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12439:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12439:6:1"
																},
																"nativeSrc": "12439:21:1",
																"nodeType": "YulFunctionCall",
																"src": "12439:21:1"
															},
															"nativeSrc": "12439:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "12439:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12480:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12480:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12491:2:1",
																				"nodeType": "YulLiteral",
																				"src": "12491:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12476:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12476:3:1"
																		},
																		"nativeSrc": "12476:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12476:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12496:2:1",
																		"nodeType": "YulLiteral",
																		"src": "12496:2:1",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12469:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12469:6:1"
																},
																"nativeSrc": "12469:30:1",
																"nodeType": "YulFunctionCall",
																"src": "12469:30:1"
															},
															"nativeSrc": "12469:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "12469:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12519:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12519:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12530:2:1",
																				"nodeType": "YulLiteral",
																				"src": "12530:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12515:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12515:3:1"
																		},
																		"nativeSrc": "12515:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12515:18:1"
																	},
																	{
																		"hexValue": "556e693a3a7065726d69743a20756e617574686f72697a6564",
																		"kind": "string",
																		"nativeSrc": "12535:27:1",
																		"nodeType": "YulLiteral",
																		"src": "12535:27:1",
																		"type": "",
																		"value": "Uni::permit: unauthorized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12508:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12508:6:1"
																},
																"nativeSrc": "12508:55:1",
																"nodeType": "YulFunctionCall",
																"src": "12508:55:1"
															},
															"nativeSrc": "12508:55:1",
															"nodeType": "YulExpressionStatement",
															"src": "12508:55:1"
														},
														{
															"nativeSrc": "12572:26:1",
															"nodeType": "YulAssignment",
															"src": "12572:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12584:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "12584:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12595:2:1",
																		"nodeType": "YulLiteral",
																		"src": "12595:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12580:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12580:3:1"
																},
																"nativeSrc": "12580:18:1",
																"nodeType": "YulFunctionCall",
																"src": "12580:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12572:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "12572:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f1c0fd1d78a537bfd8cc59c08393a4da90fc7d3eff469a9fd5787d9f1738b823__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12255:349:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12406:9:1",
														"nodeType": "YulTypedName",
														"src": "12406:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12420:4:1",
														"nodeType": "YulTypedName",
														"src": "12420:4:1",
														"type": ""
													}
												],
												"src": "12255:349:1"
											},
											{
												"body": {
													"nativeSrc": "12783:180:1",
													"nodeType": "YulBlock",
													"src": "12783:180:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12800:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "12800:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12811:2:1",
																		"nodeType": "YulLiteral",
																		"src": "12811:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12793:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12793:6:1"
																},
																"nativeSrc": "12793:21:1",
																"nodeType": "YulFunctionCall",
																"src": "12793:21:1"
															},
															"nativeSrc": "12793:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "12793:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12834:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12834:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12845:2:1",
																				"nodeType": "YulLiteral",
																				"src": "12845:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12830:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12830:3:1"
																		},
																		"nativeSrc": "12830:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12830:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12850:2:1",
																		"nodeType": "YulLiteral",
																		"src": "12850:2:1",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12823:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12823:6:1"
																},
																"nativeSrc": "12823:30:1",
																"nodeType": "YulFunctionCall",
																"src": "12823:30:1"
															},
															"nativeSrc": "12823:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "12823:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12873:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12873:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12884:2:1",
																				"nodeType": "YulLiteral",
																				"src": "12884:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12869:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12869:3:1"
																		},
																		"nativeSrc": "12869:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12869:18:1"
																	},
																	{
																		"hexValue": "556e693a3a7065726d69743a207369676e61747572652065787069726564",
																		"kind": "string",
																		"nativeSrc": "12889:32:1",
																		"nodeType": "YulLiteral",
																		"src": "12889:32:1",
																		"type": "",
																		"value": "Uni::permit: signature expired"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12862:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12862:6:1"
																},
																"nativeSrc": "12862:60:1",
																"nodeType": "YulFunctionCall",
																"src": "12862:60:1"
															},
															"nativeSrc": "12862:60:1",
															"nodeType": "YulExpressionStatement",
															"src": "12862:60:1"
														},
														{
															"nativeSrc": "12931:26:1",
															"nodeType": "YulAssignment",
															"src": "12931:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12943:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "12943:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12954:2:1",
																		"nodeType": "YulLiteral",
																		"src": "12954:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12939:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12939:3:1"
																},
																"nativeSrc": "12939:18:1",
																"nodeType": "YulFunctionCall",
																"src": "12939:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12931:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "12931:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dfc249d887a80709dc035102a1322af6511c742bde4b1331b9d41e48d95becdb__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12609:354:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12760:9:1",
														"nodeType": "YulTypedName",
														"src": "12760:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12774:4:1",
														"nodeType": "YulTypedName",
														"src": "12774:4:1",
														"type": ""
													}
												],
												"src": "12609:354:1"
											},
											{
												"body": {
													"nativeSrc": "13142:251:1",
													"nodeType": "YulBlock",
													"src": "13142:251:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13159:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "13159:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13170:2:1",
																		"nodeType": "YulLiteral",
																		"src": "13170:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13152:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "13152:6:1"
																},
																"nativeSrc": "13152:21:1",
																"nodeType": "YulFunctionCall",
																"src": "13152:21:1"
															},
															"nativeSrc": "13152:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "13152:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13193:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13193:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13204:2:1",
																				"nodeType": "YulLiteral",
																				"src": "13204:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13189:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13189:3:1"
																		},
																		"nativeSrc": "13189:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13189:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13209:2:1",
																		"nodeType": "YulLiteral",
																		"src": "13209:2:1",
																		"type": "",
																		"value": "61"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13182:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "13182:6:1"
																},
																"nativeSrc": "13182:30:1",
																"nodeType": "YulFunctionCall",
																"src": "13182:30:1"
															},
															"nativeSrc": "13182:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "13182:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13232:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13232:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13243:2:1",
																				"nodeType": "YulLiteral",
																				"src": "13243:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13228:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13228:3:1"
																		},
																		"nativeSrc": "13228:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13228:18:1"
																	},
																	{
																		"hexValue": "556e693a3a7365744d696e7465723a206f6e6c7920746865206d696e74657220",
																		"kind": "string",
																		"nativeSrc": "13248:34:1",
																		"nodeType": "YulLiteral",
																		"src": "13248:34:1",
																		"type": "",
																		"value": "Uni::setMinter: only the minter "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13221:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "13221:6:1"
																},
																"nativeSrc": "13221:62:1",
																"nodeType": "YulFunctionCall",
																"src": "13221:62:1"
															},
															"nativeSrc": "13221:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "13221:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13303:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13303:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13314:2:1",
																				"nodeType": "YulLiteral",
																				"src": "13314:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13299:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13299:3:1"
																		},
																		"nativeSrc": "13299:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13299:18:1"
																	},
																	{
																		"hexValue": "63616e206368616e676520746865206d696e7465722061646472657373",
																		"kind": "string",
																		"nativeSrc": "13319:31:1",
																		"nodeType": "YulLiteral",
																		"src": "13319:31:1",
																		"type": "",
																		"value": "can change the minter address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13292:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "13292:6:1"
																},
																"nativeSrc": "13292:59:1",
																"nodeType": "YulFunctionCall",
																"src": "13292:59:1"
															},
															"nativeSrc": "13292:59:1",
															"nodeType": "YulExpressionStatement",
															"src": "13292:59:1"
														},
														{
															"nativeSrc": "13360:27:1",
															"nodeType": "YulAssignment",
															"src": "13360:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13372:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "13372:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13383:3:1",
																		"nodeType": "YulLiteral",
																		"src": "13383:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13368:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13368:3:1"
																},
																"nativeSrc": "13368:19:1",
																"nodeType": "YulFunctionCall",
																"src": "13368:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13360:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "13360:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d0c976c03aaa94802283adf77ef1ce74ec8a066553c069fcfec5a68a1eb9411a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12968:425:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13119:9:1",
														"nodeType": "YulTypedName",
														"src": "13119:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13133:4:1",
														"nodeType": "YulTypedName",
														"src": "13133:4:1",
														"type": ""
													}
												],
												"src": "12968:425:1"
											},
											{
												"body": {
													"nativeSrc": "13527:171:1",
													"nodeType": "YulBlock",
													"src": "13527:171:1",
													"statements": [
														{
															"nativeSrc": "13537:26:1",
															"nodeType": "YulAssignment",
															"src": "13537:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13549:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "13549:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13560:2:1",
																		"nodeType": "YulLiteral",
																		"src": "13560:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13545:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13545:3:1"
																},
																"nativeSrc": "13545:18:1",
																"nodeType": "YulFunctionCall",
																"src": "13545:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13537:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "13537:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13579:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "13579:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "13594:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "13594:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "13610:3:1",
																								"nodeType": "YulLiteral",
																								"src": "13610:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "13615:1:1",
																								"nodeType": "YulLiteral",
																								"src": "13615:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "13606:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "13606:3:1"
																						},
																						"nativeSrc": "13606:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "13606:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13619:1:1",
																						"nodeType": "YulLiteral",
																						"src": "13619:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "13602:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "13602:3:1"
																				},
																				"nativeSrc": "13602:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "13602:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "13590:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13590:3:1"
																		},
																		"nativeSrc": "13590:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13590:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13572:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "13572:6:1"
																},
																"nativeSrc": "13572:51:1",
																"nodeType": "YulFunctionCall",
																"src": "13572:51:1"
															},
															"nativeSrc": "13572:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "13572:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13643:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13643:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13654:2:1",
																				"nodeType": "YulLiteral",
																				"src": "13654:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13639:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13639:3:1"
																		},
																		"nativeSrc": "13639:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13639:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "13663:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "13663:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "13679:3:1",
																								"nodeType": "YulLiteral",
																								"src": "13679:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "13684:1:1",
																								"nodeType": "YulLiteral",
																								"src": "13684:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "13675:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "13675:3:1"
																						},
																						"nativeSrc": "13675:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "13675:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13688:1:1",
																						"nodeType": "YulLiteral",
																						"src": "13688:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "13671:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "13671:3:1"
																				},
																				"nativeSrc": "13671:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "13671:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "13659:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13659:3:1"
																		},
																		"nativeSrc": "13659:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13659:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13632:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "13632:6:1"
																},
																"nativeSrc": "13632:60:1",
																"nodeType": "YulFunctionCall",
																"src": "13632:60:1"
															},
															"nativeSrc": "13632:60:1",
															"nodeType": "YulExpressionStatement",
															"src": "13632:60:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "13398:300:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13488:9:1",
														"nodeType": "YulTypedName",
														"src": "13488:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13499:6:1",
														"nodeType": "YulTypedName",
														"src": "13499:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13507:6:1",
														"nodeType": "YulTypedName",
														"src": "13507:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13518:4:1",
														"nodeType": "YulTypedName",
														"src": "13518:4:1",
														"type": ""
													}
												],
												"src": "13398:300:1"
											},
											{
												"body": {
													"nativeSrc": "13751:170:1",
													"nodeType": "YulBlock",
													"src": "13751:170:1",
													"statements": [
														{
															"nativeSrc": "13761:83:1",
															"nodeType": "YulAssignment",
															"src": "13761:83:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "13777:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "13777:1:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13780:26:1",
																				"nodeType": "YulLiteral",
																				"src": "13780:26:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "13773:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13773:3:1"
																		},
																		"nativeSrc": "13773:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13773:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nativeSrc": "13813:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "13813:1:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13816:26:1",
																				"nodeType": "YulLiteral",
																				"src": "13816:26:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "13809:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13809:3:1"
																		},
																		"nativeSrc": "13809:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13809:34:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "13769:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13769:3:1"
																},
																"nativeSrc": "13769:75:1",
																"nodeType": "YulFunctionCall",
																"src": "13769:75:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "13761:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "13761:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13893:22:1",
																"nodeType": "YulBlock",
																"src": "13893:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13895:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "13895:16:1"
																			},
																			"nativeSrc": "13895:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "13895:18:1"
																		},
																		"nativeSrc": "13895:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "13895:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "13859:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "13859:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13865:26:1",
																		"nodeType": "YulLiteral",
																		"src": "13865:26:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13856:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "13856:2:1"
																},
																"nativeSrc": "13856:36:1",
																"nodeType": "YulFunctionCall",
																"src": "13856:36:1"
															},
															"nativeSrc": "13853:62:1",
															"nodeType": "YulIf",
															"src": "13853:62:1"
														}
													]
												},
												"name": "checked_sub_t_uint96",
												"nativeSrc": "13703:218:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13733:1:1",
														"nodeType": "YulTypedName",
														"src": "13733:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13736:1:1",
														"nodeType": "YulTypedName",
														"src": "13736:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "13742:4:1",
														"nodeType": "YulTypedName",
														"src": "13742:4:1",
														"type": ""
													}
												],
												"src": "13703:218:1"
											},
											{
												"body": {
													"nativeSrc": "14100:249:1",
													"nodeType": "YulBlock",
													"src": "14100:249:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14117:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "14117:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14128:2:1",
																		"nodeType": "YulLiteral",
																		"src": "14128:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14110:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "14110:6:1"
																},
																"nativeSrc": "14110:21:1",
																"nodeType": "YulFunctionCall",
																"src": "14110:21:1"
															},
															"nativeSrc": "14110:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "14110:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14151:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "14151:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14162:2:1",
																				"nodeType": "YulLiteral",
																				"src": "14162:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14147:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "14147:3:1"
																		},
																		"nativeSrc": "14147:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "14147:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14167:2:1",
																		"nodeType": "YulLiteral",
																		"src": "14167:2:1",
																		"type": "",
																		"value": "59"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14140:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "14140:6:1"
																},
																"nativeSrc": "14140:30:1",
																"nodeType": "YulFunctionCall",
																"src": "14140:30:1"
															},
															"nativeSrc": "14140:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "14140:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14190:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "14190:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14201:2:1",
																				"nodeType": "YulLiteral",
																				"src": "14201:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14186:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "14186:3:1"
																		},
																		"nativeSrc": "14186:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "14186:18:1"
																	},
																	{
																		"hexValue": "556e693a3a5f7472616e73666572546f6b656e733a2063616e6e6f7420747261",
																		"kind": "string",
																		"nativeSrc": "14206:34:1",
																		"nodeType": "YulLiteral",
																		"src": "14206:34:1",
																		"type": "",
																		"value": "Uni::_transferTokens: cannot tra"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14179:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "14179:6:1"
																},
																"nativeSrc": "14179:62:1",
																"nodeType": "YulFunctionCall",
																"src": "14179:62:1"
															},
															"nativeSrc": "14179:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "14179:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14261:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "14261:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14272:2:1",
																				"nodeType": "YulLiteral",
																				"src": "14272:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14257:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "14257:3:1"
																		},
																		"nativeSrc": "14257:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "14257:18:1"
																	},
																	{
																		"hexValue": "6e736665722066726f6d20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "14277:29:1",
																		"nodeType": "YulLiteral",
																		"src": "14277:29:1",
																		"type": "",
																		"value": "nsfer from the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14250:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "14250:6:1"
																},
																"nativeSrc": "14250:57:1",
																"nodeType": "YulFunctionCall",
																"src": "14250:57:1"
															},
															"nativeSrc": "14250:57:1",
															"nodeType": "YulExpressionStatement",
															"src": "14250:57:1"
														},
														{
															"nativeSrc": "14316:27:1",
															"nodeType": "YulAssignment",
															"src": "14316:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14328:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "14328:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14339:3:1",
																		"nodeType": "YulLiteral",
																		"src": "14339:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14324:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "14324:3:1"
																},
																"nativeSrc": "14324:19:1",
																"nodeType": "YulFunctionCall",
																"src": "14324:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14316:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "14316:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_de7e0a100b60a11ede47141c5b3cbe581ee85f280a75b7fbf40a7340eb978ea6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13926:423:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14077:9:1",
														"nodeType": "YulTypedName",
														"src": "14077:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14091:4:1",
														"nodeType": "YulTypedName",
														"src": "14091:4:1",
														"type": ""
													}
												],
												"src": "13926:423:1"
											},
											{
												"body": {
													"nativeSrc": "14528:247:1",
													"nodeType": "YulBlock",
													"src": "14528:247:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14545:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "14545:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14556:2:1",
																		"nodeType": "YulLiteral",
																		"src": "14556:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14538:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "14538:6:1"
																},
																"nativeSrc": "14538:21:1",
																"nodeType": "YulFunctionCall",
																"src": "14538:21:1"
															},
															"nativeSrc": "14538:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "14538:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14579:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "14579:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14590:2:1",
																				"nodeType": "YulLiteral",
																				"src": "14590:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14575:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "14575:3:1"
																		},
																		"nativeSrc": "14575:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "14575:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14595:2:1",
																		"nodeType": "YulLiteral",
																		"src": "14595:2:1",
																		"type": "",
																		"value": "57"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14568:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "14568:6:1"
																},
																"nativeSrc": "14568:30:1",
																"nodeType": "YulFunctionCall",
																"src": "14568:30:1"
															},
															"nativeSrc": "14568:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "14568:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14618:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "14618:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14629:2:1",
																				"nodeType": "YulLiteral",
																				"src": "14629:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14614:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "14614:3:1"
																		},
																		"nativeSrc": "14614:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "14614:18:1"
																	},
																	{
																		"hexValue": "556e693a3a5f7472616e73666572546f6b656e733a2063616e6e6f7420747261",
																		"kind": "string",
																		"nativeSrc": "14634:34:1",
																		"nodeType": "YulLiteral",
																		"src": "14634:34:1",
																		"type": "",
																		"value": "Uni::_transferTokens: cannot tra"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14607:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "14607:6:1"
																},
																"nativeSrc": "14607:62:1",
																"nodeType": "YulFunctionCall",
																"src": "14607:62:1"
															},
															"nativeSrc": "14607:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "14607:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14689:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "14689:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14700:2:1",
																				"nodeType": "YulLiteral",
																				"src": "14700:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14685:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "14685:3:1"
																		},
																		"nativeSrc": "14685:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "14685:18:1"
																	},
																	{
																		"hexValue": "6e7366657220746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "14705:27:1",
																		"nodeType": "YulLiteral",
																		"src": "14705:27:1",
																		"type": "",
																		"value": "nsfer to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14678:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "14678:6:1"
																},
																"nativeSrc": "14678:55:1",
																"nodeType": "YulFunctionCall",
																"src": "14678:55:1"
															},
															"nativeSrc": "14678:55:1",
															"nodeType": "YulExpressionStatement",
															"src": "14678:55:1"
														},
														{
															"nativeSrc": "14742:27:1",
															"nodeType": "YulAssignment",
															"src": "14742:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14754:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "14754:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14765:3:1",
																		"nodeType": "YulLiteral",
																		"src": "14765:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14750:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "14750:3:1"
																},
																"nativeSrc": "14750:19:1",
																"nodeType": "YulFunctionCall",
																"src": "14750:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14742:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "14742:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8cdff6d324f122ca5cad9ec8d91ca56840c45dd7fc048a003b94957b6f733086__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14354:421:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14505:9:1",
														"nodeType": "YulTypedName",
														"src": "14505:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14519:4:1",
														"nodeType": "YulTypedName",
														"src": "14519:4:1",
														"type": ""
													}
												],
												"src": "14354:421:1"
											},
											{
												"body": {
													"nativeSrc": "14828:77:1",
													"nodeType": "YulBlock",
													"src": "14828:77:1",
													"statements": [
														{
															"nativeSrc": "14838:16:1",
															"nodeType": "YulAssignment",
															"src": "14838:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14849:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "14849:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14852:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "14852:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14845:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "14845:3:1"
																},
																"nativeSrc": "14845:9:1",
																"nodeType": "YulFunctionCall",
																"src": "14845:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "14838:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "14838:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14877:22:1",
																"nodeType": "YulBlock",
																"src": "14877:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14879:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "14879:16:1"
																			},
																			"nativeSrc": "14879:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "14879:18:1"
																		},
																		"nativeSrc": "14879:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "14879:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14869:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "14869:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "14872:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "14872:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14866:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "14866:2:1"
																},
																"nativeSrc": "14866:10:1",
																"nodeType": "YulFunctionCall",
																"src": "14866:10:1"
															},
															"nativeSrc": "14863:36:1",
															"nodeType": "YulIf",
															"src": "14863:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "14780:125:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14811:1:1",
														"nodeType": "YulTypedName",
														"src": "14811:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14814:1:1",
														"nodeType": "YulTypedName",
														"src": "14814:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "14820:3:1",
														"nodeType": "YulTypedName",
														"src": "14820:3:1",
														"type": ""
													}
												],
												"src": "14780:125:1"
											},
											{
												"body": {
													"nativeSrc": "15084:177:1",
													"nodeType": "YulBlock",
													"src": "15084:177:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15101:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "15101:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15112:2:1",
																		"nodeType": "YulLiteral",
																		"src": "15112:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15094:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "15094:6:1"
																},
																"nativeSrc": "15094:21:1",
																"nodeType": "YulFunctionCall",
																"src": "15094:21:1"
															},
															"nativeSrc": "15094:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "15094:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15135:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "15135:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15146:2:1",
																				"nodeType": "YulLiteral",
																				"src": "15146:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15131:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "15131:3:1"
																		},
																		"nativeSrc": "15131:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "15131:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15151:2:1",
																		"nodeType": "YulLiteral",
																		"src": "15151:2:1",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15124:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "15124:6:1"
																},
																"nativeSrc": "15124:30:1",
																"nodeType": "YulFunctionCall",
																"src": "15124:30:1"
															},
															"nativeSrc": "15124:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "15124:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15174:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "15174:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15185:2:1",
																				"nodeType": "YulLiteral",
																				"src": "15185:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15170:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "15170:3:1"
																		},
																		"nativeSrc": "15170:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "15170:18:1"
																	},
																	{
																		"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
																		"kind": "string",
																		"nativeSrc": "15190:29:1",
																		"nodeType": "YulLiteral",
																		"src": "15190:29:1",
																		"type": "",
																		"value": "SafeMath: addition overflow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15163:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "15163:6:1"
																},
																"nativeSrc": "15163:57:1",
																"nodeType": "YulFunctionCall",
																"src": "15163:57:1"
															},
															"nativeSrc": "15163:57:1",
															"nodeType": "YulExpressionStatement",
															"src": "15163:57:1"
														},
														{
															"nativeSrc": "15229:26:1",
															"nodeType": "YulAssignment",
															"src": "15229:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15241:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "15241:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15252:2:1",
																		"nodeType": "YulLiteral",
																		"src": "15252:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15237:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "15237:3:1"
																},
																"nativeSrc": "15237:18:1",
																"nodeType": "YulFunctionCall",
																"src": "15237:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15229:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "15229:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14910:351:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15061:9:1",
														"nodeType": "YulTypedName",
														"src": "15061:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15075:4:1",
														"nodeType": "YulTypedName",
														"src": "15075:4:1",
														"type": ""
													}
												],
												"src": "14910:351:1"
											},
											{
												"body": {
													"nativeSrc": "15318:116:1",
													"nodeType": "YulBlock",
													"src": "15318:116:1",
													"statements": [
														{
															"nativeSrc": "15328:20:1",
															"nodeType": "YulAssignment",
															"src": "15328:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15343:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "15343:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "15346:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "15346:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "15339:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "15339:3:1"
																},
																"nativeSrc": "15339:9:1",
																"nodeType": "YulFunctionCall",
																"src": "15339:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "15328:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "15328:7:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15406:22:1",
																"nodeType": "YulBlock",
																"src": "15406:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "15408:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "15408:16:1"
																			},
																			"nativeSrc": "15408:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "15408:18:1"
																		},
																		"nativeSrc": "15408:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "15408:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "15377:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "15377:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "15370:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "15370:6:1"
																				},
																				"nativeSrc": "15370:9:1",
																				"nodeType": "YulFunctionCall",
																				"src": "15370:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "15384:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "15384:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "15391:7:1",
																								"nodeType": "YulIdentifier",
																								"src": "15391:7:1"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "15400:1:1",
																								"nodeType": "YulIdentifier",
																								"src": "15400:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "15387:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "15387:3:1"
																						},
																						"nativeSrc": "15387:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "15387:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "15381:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "15381:2:1"
																				},
																				"nativeSrc": "15381:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "15381:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "15367:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "15367:2:1"
																		},
																		"nativeSrc": "15367:37:1",
																		"nodeType": "YulFunctionCall",
																		"src": "15367:37:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "15360:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "15360:6:1"
																},
																"nativeSrc": "15360:45:1",
																"nodeType": "YulFunctionCall",
																"src": "15360:45:1"
															},
															"nativeSrc": "15357:71:1",
															"nodeType": "YulIf",
															"src": "15357:71:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "15266:168:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "15297:1:1",
														"nodeType": "YulTypedName",
														"src": "15297:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "15300:1:1",
														"nodeType": "YulTypedName",
														"src": "15300:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "15306:7:1",
														"nodeType": "YulTypedName",
														"src": "15306:7:1",
														"type": ""
													}
												],
												"src": "15266:168:1"
											},
											{
												"body": {
													"nativeSrc": "15485:74:1",
													"nodeType": "YulBlock",
													"src": "15485:74:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "15508:22:1",
																"nodeType": "YulBlock",
																"src": "15508:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "15510:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "15510:16:1"
																			},
																			"nativeSrc": "15510:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "15510:18:1"
																		},
																		"nativeSrc": "15510:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "15510:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15505:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "15505:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "15498:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "15498:6:1"
																},
																"nativeSrc": "15498:9:1",
																"nodeType": "YulFunctionCall",
																"src": "15498:9:1"
															},
															"nativeSrc": "15495:35:1",
															"nodeType": "YulIf",
															"src": "15495:35:1"
														},
														{
															"nativeSrc": "15539:14:1",
															"nodeType": "YulAssignment",
															"src": "15539:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15548:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "15548:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "15551:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "15551:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "15544:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "15544:3:1"
																},
																"nativeSrc": "15544:9:1",
																"nodeType": "YulFunctionCall",
																"src": "15544:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "15539:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "15539:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "15439:120:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "15470:1:1",
														"nodeType": "YulTypedName",
														"src": "15470:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "15473:1:1",
														"nodeType": "YulTypedName",
														"src": "15473:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "15479:1:1",
														"nodeType": "YulTypedName",
														"src": "15479:1:1",
														"type": ""
													}
												],
												"src": "15439:120:1"
											},
											{
												"body": {
													"nativeSrc": "15738:223:1",
													"nodeType": "YulBlock",
													"src": "15738:223:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15755:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "15755:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15766:2:1",
																		"nodeType": "YulLiteral",
																		"src": "15766:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15748:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "15748:6:1"
																},
																"nativeSrc": "15748:21:1",
																"nodeType": "YulFunctionCall",
																"src": "15748:21:1"
															},
															"nativeSrc": "15748:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "15748:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15789:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "15789:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15800:2:1",
																				"nodeType": "YulLiteral",
																				"src": "15800:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15785:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "15785:3:1"
																		},
																		"nativeSrc": "15785:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "15785:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15805:2:1",
																		"nodeType": "YulLiteral",
																		"src": "15805:2:1",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15778:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "15778:6:1"
																},
																"nativeSrc": "15778:30:1",
																"nodeType": "YulFunctionCall",
																"src": "15778:30:1"
															},
															"nativeSrc": "15778:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "15778:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15828:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "15828:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15839:2:1",
																				"nodeType": "YulLiteral",
																				"src": "15839:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15824:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "15824:3:1"
																		},
																		"nativeSrc": "15824:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "15824:18:1"
																	},
																	{
																		"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f",
																		"kind": "string",
																		"nativeSrc": "15844:34:1",
																		"nodeType": "YulLiteral",
																		"src": "15844:34:1",
																		"type": "",
																		"value": "SafeMath: multiplication overflo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15817:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "15817:6:1"
																},
																"nativeSrc": "15817:62:1",
																"nodeType": "YulFunctionCall",
																"src": "15817:62:1"
															},
															"nativeSrc": "15817:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "15817:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15899:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "15899:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15910:2:1",
																				"nodeType": "YulLiteral",
																				"src": "15910:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15895:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "15895:3:1"
																		},
																		"nativeSrc": "15895:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "15895:18:1"
																	},
																	{
																		"hexValue": "77",
																		"kind": "string",
																		"nativeSrc": "15915:3:1",
																		"nodeType": "YulLiteral",
																		"src": "15915:3:1",
																		"type": "",
																		"value": "w"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15888:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "15888:6:1"
																},
																"nativeSrc": "15888:31:1",
																"nodeType": "YulFunctionCall",
																"src": "15888:31:1"
															},
															"nativeSrc": "15888:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "15888:31:1"
														},
														{
															"nativeSrc": "15928:27:1",
															"nodeType": "YulAssignment",
															"src": "15928:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15940:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "15940:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15951:3:1",
																		"nodeType": "YulLiteral",
																		"src": "15951:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15936:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "15936:3:1"
																},
																"nativeSrc": "15936:19:1",
																"nodeType": "YulFunctionCall",
																"src": "15936:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15928:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "15928:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15564:397:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15715:9:1",
														"nodeType": "YulTypedName",
														"src": "15715:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15729:4:1",
														"nodeType": "YulTypedName",
														"src": "15729:4:1",
														"type": ""
													}
												],
												"src": "15564:397:1"
											},
											{
												"body": {
													"nativeSrc": "16013:168:1",
													"nodeType": "YulBlock",
													"src": "16013:168:1",
													"statements": [
														{
															"nativeSrc": "16023:82:1",
															"nodeType": "YulAssignment",
															"src": "16023:82:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "16038:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "16038:1:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16041:26:1",
																				"nodeType": "YulLiteral",
																				"src": "16041:26:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "16034:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "16034:3:1"
																		},
																		"nativeSrc": "16034:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "16034:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nativeSrc": "16074:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "16074:1:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16077:26:1",
																				"nodeType": "YulLiteral",
																				"src": "16077:26:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "16070:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "16070:3:1"
																		},
																		"nativeSrc": "16070:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "16070:34:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16030:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "16030:3:1"
																},
																"nativeSrc": "16030:75:1",
																"nodeType": "YulFunctionCall",
																"src": "16030:75:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "16023:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "16023:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16153:22:1",
																"nodeType": "YulBlock",
																"src": "16153:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "16155:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "16155:16:1"
																			},
																			"nativeSrc": "16155:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "16155:18:1"
																		},
																		"nativeSrc": "16155:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "16155:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "sum",
																		"nativeSrc": "16120:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "16120:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16125:26:1",
																		"nodeType": "YulLiteral",
																		"src": "16125:26:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16117:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "16117:2:1"
																},
																"nativeSrc": "16117:35:1",
																"nodeType": "YulFunctionCall",
																"src": "16117:35:1"
															},
															"nativeSrc": "16114:61:1",
															"nodeType": "YulIf",
															"src": "16114:61:1"
														}
													]
												},
												"name": "checked_add_t_uint96",
												"nativeSrc": "15966:215:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "15996:1:1",
														"nodeType": "YulTypedName",
														"src": "15996:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "15999:1:1",
														"nodeType": "YulTypedName",
														"src": "15999:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "16005:3:1",
														"nodeType": "YulTypedName",
														"src": "16005:3:1",
														"type": ""
													}
												],
												"src": "15966:215:1"
											},
											{
												"body": {
													"nativeSrc": "16233:120:1",
													"nodeType": "YulBlock",
													"src": "16233:120:1",
													"statements": [
														{
															"nativeSrc": "16243:50:1",
															"nodeType": "YulAssignment",
															"src": "16243:50:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "16258:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "16258:1:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16261:10:1",
																				"nodeType": "YulLiteral",
																				"src": "16261:10:1",
																				"type": "",
																				"value": "0xffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "16254:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "16254:3:1"
																		},
																		"nativeSrc": "16254:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "16254:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nativeSrc": "16278:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "16278:1:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16281:10:1",
																				"nodeType": "YulLiteral",
																				"src": "16281:10:1",
																				"type": "",
																				"value": "0xffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "16274:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "16274:3:1"
																		},
																		"nativeSrc": "16274:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "16274:18:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16250:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "16250:3:1"
																},
																"nativeSrc": "16250:43:1",
																"nodeType": "YulFunctionCall",
																"src": "16250:43:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "16243:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "16243:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16325:22:1",
																"nodeType": "YulBlock",
																"src": "16325:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "16327:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "16327:16:1"
																			},
																			"nativeSrc": "16327:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "16327:18:1"
																		},
																		"nativeSrc": "16327:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "16327:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "sum",
																		"nativeSrc": "16308:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "16308:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16313:10:1",
																		"nodeType": "YulLiteral",
																		"src": "16313:10:1",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16305:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "16305:2:1"
																},
																"nativeSrc": "16305:19:1",
																"nodeType": "YulFunctionCall",
																"src": "16305:19:1"
															},
															"nativeSrc": "16302:45:1",
															"nodeType": "YulIf",
															"src": "16302:45:1"
														}
													]
												},
												"name": "checked_add_t_uint32",
												"nativeSrc": "16186:167:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "16216:1:1",
														"nodeType": "YulTypedName",
														"src": "16216:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "16219:1:1",
														"nodeType": "YulTypedName",
														"src": "16219:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "16225:3:1",
														"nodeType": "YulTypedName",
														"src": "16225:3:1",
														"type": ""
													}
												],
												"src": "16186:167:1"
											},
											{
												"body": {
													"nativeSrc": "16485:185:1",
													"nodeType": "YulBlock",
													"src": "16485:185:1",
													"statements": [
														{
															"nativeSrc": "16495:26:1",
															"nodeType": "YulAssignment",
															"src": "16495:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16507:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "16507:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16518:2:1",
																		"nodeType": "YulLiteral",
																		"src": "16518:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16503:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "16503:3:1"
																},
																"nativeSrc": "16503:18:1",
																"nodeType": "YulFunctionCall",
																"src": "16503:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16495:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "16495:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16537:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "16537:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "16552:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "16552:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16560:26:1",
																				"nodeType": "YulLiteral",
																				"src": "16560:26:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "16548:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "16548:3:1"
																		},
																		"nativeSrc": "16548:39:1",
																		"nodeType": "YulFunctionCall",
																		"src": "16548:39:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16530:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16530:6:1"
																},
																"nativeSrc": "16530:58:1",
																"nodeType": "YulFunctionCall",
																"src": "16530:58:1"
															},
															"nativeSrc": "16530:58:1",
															"nodeType": "YulExpressionStatement",
															"src": "16530:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16608:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "16608:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16619:2:1",
																				"nodeType": "YulLiteral",
																				"src": "16619:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16604:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "16604:3:1"
																		},
																		"nativeSrc": "16604:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "16604:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "16628:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "16628:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16636:26:1",
																				"nodeType": "YulLiteral",
																				"src": "16636:26:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "16624:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "16624:3:1"
																		},
																		"nativeSrc": "16624:39:1",
																		"nodeType": "YulFunctionCall",
																		"src": "16624:39:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16597:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16597:6:1"
																},
																"nativeSrc": "16597:67:1",
																"nodeType": "YulFunctionCall",
																"src": "16597:67:1"
															},
															"nativeSrc": "16597:67:1",
															"nodeType": "YulExpressionStatement",
															"src": "16597:67:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint96_t_uint96__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "16358:312:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16446:9:1",
														"nodeType": "YulTypedName",
														"src": "16446:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16457:6:1",
														"nodeType": "YulTypedName",
														"src": "16457:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16465:6:1",
														"nodeType": "YulTypedName",
														"src": "16465:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16476:4:1",
														"nodeType": "YulTypedName",
														"src": "16476:4:1",
														"type": ""
													}
												],
												"src": "16358:312:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff))\n    }\n    function abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffff))\n    }\n    function abi_decode_uint8(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 64))\n        value2 := value_1\n        value3 := abi_decode_uint8(add(headStart, 96))\n        let value_2 := 0\n        value_2 := calldataload(add(headStart, 128))\n        value4 := value_2\n        let value_3 := 0\n        value_3 := calldataload(add(headStart, 160))\n        value5 := value_3\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 96))\n        value3 := value_1\n        value4 := abi_decode_uint8(add(headStart, 128))\n        let value_2 := 0\n        value_2 := calldataload(add(headStart, 160))\n        value5 := value_2\n        let value_3 := 0\n        value_3 := calldataload(add(headStart, 192))\n        value6 := value_3\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, and(value, 0xffffffff))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_encode_tuple_t_uint32_t_uint96__to_t_uint32_t_uint96__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffff))\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint96__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_cc6a5c1b47b7f8bc902cdb48ac9758787b1a8119a1909e02b5432deee2d32a62__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"Uni::mint: only the minter can m\")\n        mstore(add(headStart, 96), \"int\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7b0ec4a3f6bfba673b135595084a79859c9e4ba0d9455df08bfb3bece6df3142__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Uni::mint: minting not allowed y\")\n        mstore(add(headStart, 96), \"et\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_5f24bdbd67fb75785b275770fb658b786eb2736feb96698cf0894896fdf28c73__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Uni::mint: cannot transfer to th\")\n        mstore(add(headStart, 96), \"e zero address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c455438be199e7ac7b6d21fdc7332bbd68229582d8b1be9266bdb0f4844638c0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Uni::mint: exceeded mint cap\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_49a8c5a37f9a1453393e39114b211b704ebc96555b0cd38f42c3478bd0b9f9d2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Uni::getPriorVotes: not yet dete\")\n        mstore(add(headStart, 96), \"rmined\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint32(x, y) -> diff\n    {\n        diff := sub(and(x, 0xffffffff), and(y, 0xffffffff))\n        if gt(diff, 0xffffffff) { panic_error_0x11() }\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint32(x, y) -> r\n    {\n        let y_1 := and(y, 0xffffffff)\n        if iszero(y_1) { panic_error_0x12() }\n        r := div(and(x, 0xffffffff), y_1)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, shl(240, 6401))\n        mstore(add(pos, 2), value0)\n        mstore(add(pos, 34), value1)\n        end := add(pos, 66)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_stringliteral_41ba3897512438c3b52e550ef92ff91255600d9202c2b92b8893f625252dfabf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"Uni::delegateBySig: invalid sign\")\n        mstore(add(headStart, 96), \"ature\")\n        tail := add(headStart, 128)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_d126ba952f4f7443590dacc43a358ae6ad956133386dc92be4e1185a27d416b3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Uni::delegateBySig: invalid nonc\")\n        mstore(add(headStart, 96), \"e\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_287e5345cbd1fcc69d3d1d2165b5d321c6a9eb5b34f1162e798e9d80f3fdf12b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"Uni::delegateBySig: signature ex\")\n        mstore(add(headStart, 96), \"pired\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_encode_tuple_t_stringliteral_e94c1ed3488f38be72a83cd591a1465ccfe1e93939cfd7e4bf71c4eb9af19f1a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Uni::permit: invalid signature\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f1c0fd1d78a537bfd8cc59c08393a4da90fc7d3eff469a9fd5787d9f1738b823__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Uni::permit: unauthorized\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_dfc249d887a80709dc035102a1322af6511c742bde4b1331b9d41e48d95becdb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Uni::permit: signature expired\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d0c976c03aaa94802283adf77ef1ce74ec8a066553c069fcfec5a68a1eb9411a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 61)\n        mstore(add(headStart, 64), \"Uni::setMinter: only the minter \")\n        mstore(add(headStart, 96), \"can change the minter address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function checked_sub_t_uint96(x, y) -> diff\n    {\n        diff := sub(and(x, 0xffffffffffffffffffffffff), and(y, 0xffffffffffffffffffffffff))\n        if gt(diff, 0xffffffffffffffffffffffff) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_de7e0a100b60a11ede47141c5b3cbe581ee85f280a75b7fbf40a7340eb978ea6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 59)\n        mstore(add(headStart, 64), \"Uni::_transferTokens: cannot tra\")\n        mstore(add(headStart, 96), \"nsfer from the zero address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8cdff6d324f122ca5cad9ec8d91ca56840c45dd7fc048a003b94957b6f733086__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 57)\n        mstore(add(headStart, 64), \"Uni::_transferTokens: cannot tra\")\n        mstore(add(headStart, 96), \"nsfer to the zero address\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"SafeMath: addition overflow\")\n        tail := add(headStart, 96)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"SafeMath: multiplication overflo\")\n        mstore(add(headStart, 96), \"w\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint96(x, y) -> sum\n    {\n        sum := add(and(x, 0xffffffffffffffffffffffff), and(y, 0xffffffffffffffffffffffff))\n        if gt(sum, 0xffffffffffffffffffffffff) { panic_error_0x11() }\n    }\n    function checked_add_t_uint32(x, y) -> sum\n    {\n        sum := add(and(x, 0xffffffff), and(y, 0xffffffff))\n        if gt(sum, 0xffffffff) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint96_t_uint96__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffff))\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffff))\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106101a1575f3560e01c80636fcfff45116100f3578063b4b5ea5711610093578063dd62ed3e1161006e578063dd62ed3e1461044f578063e7a324dc14610490578063f1127ed8146104b7578063fca3b5aa1461051d575f80fd5b8063b4b5ea5714610416578063c3cda52014610429578063d505accf1461043c575f80fd5b8063782d6fe1116100ce578063782d6fe1146103975780637ecebe00146103c257806395d89b41146103e1578063a9059cbb14610403575f80fd5b80636fcfff451461033957806370a082311461035e57806376c71ca11461038f575f80fd5b806330adf81f1161015e57806340c10f191161013957806340c10f19146102c9578063587cde1e146102de5780635c11d62f146103065780635c19a95c14610326575f80fd5b806330adf81f1461027f57806330b36cef146102a6578063313ce567146102af575f80fd5b806306fdde03146101a557806307546172146101e1578063095ea7b31461020c57806318160ddd1461022f57806320606b701461024557806323b872dd1461026c575b5f80fd5b6101cb604051806040016040528060078152602001660556e69737761760cc1b81525081565b6040516101d89190611d6a565b60405180910390f35b6001546101f4906001600160a01b031681565b6040516001600160a01b0390911681526020016101d8565b61021f61021a366004611dba565b610530565b60405190151581526020016101d8565b6102375f5481565b6040519081526020016101d8565b6102377f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86681565b61021f61027a366004611de2565b6105d6565b6102377f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b61023760025481565b6102b7601281565b60405160ff90911681526020016101d8565b6102dc6102d7366004611dba565b610701565b005b6101f46102ec366004611e1c565b60056020525f90815260409020546001600160a01b031681565b6103116301e1338081565b60405163ffffffff90911681526020016101d8565b6102dc610334366004611e1c565b6109f8565b610311610347366004611e1c565b60076020525f908152604090205463ffffffff1681565b61023761036c366004611e1c565b6001600160a01b03165f908152600460205260409020546001600160601b031690565b6102b7600281565b6103aa6103a5366004611dba565b610a05565b6040516001600160601b0390911681526020016101d8565b6102376103d0366004611e1c565b60086020525f908152604090205481565b6101cb60405180604001604052806003815260200162554e4960e81b81525081565b61021f610411366004611dba565b610c81565b6103aa610424366004611e1c565b610cbc565b6102dc610437366004611e45565b610d36565b6102dc61044a366004611e99565b611019565b61023761045d366004611eff565b6001600160a01b039182165f9081526003602090815260408083209390941682529190915220546001600160601b031690565b6102377fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf81565b6104f96104c5366004611f30565b600660209081525f928352604080842090915290825290205463ffffffff811690600160201b90046001600160601b031682565b6040805163ffffffff90931683526001600160601b039091166020830152016101d8565b6102dc61052b366004611e1c565b6113e8565b5f806105548360405180606001604052806024815260200161222c602491396114d1565b335f8181526003602090815260408083206001600160a01b038a168085529083529281902080546001600160601b0319166001600160601b038716908117909155905190815293945090927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a360019150505b92915050565b6001600160a01b0383165f9081526003602090815260408083203380855290835281842054825160608101909352602480845291936001600160601b0390911692859261062d928892919061222c908301396114d1565b9050866001600160a01b0316836001600160a01b0316146106e9575f61066c83836040518060600160405280603c81526020016120ac603c91396114ff565b6001600160a01b038981165f818152600360209081526040808320948a168084529482529182902080546001600160601b0319166001600160601b0387169081179091559151918252939450919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505b6106f4878783611548565b5060019695505050505050565b6001546001600160a01b0316331461076c5760405162461bcd60e51b815260206004820152602360248201527f556e693a3a6d696e743a206f6e6c7920746865206d696e7465722063616e206d6044820152621a5b9d60ea1b60648201526084015b60405180910390fd5b6002544210156107c95760405162461bcd60e51b815260206004820152602260248201527f556e693a3a6d696e743a206d696e74696e67206e6f7420616c6c6f7765642079604482015261195d60f21b6064820152608401610763565b6001600160a01b0382166108365760405162461bcd60e51b815260206004820152602e60248201527f556e693a3a6d696e743a2063616e6e6f74207472616e7366657220746f20746860448201526d65207a65726f206164647265737360901b6064820152608401610763565b610844426301e13380611790565b6002819055505f61086d8260405180606001604052806021815260200161220b602191396114d1565b90506108886108815f54600260ff166117ee565b606461186c565b816001600160601b031611156108e05760405162461bcd60e51b815260206004820152601c60248201527f556e693a3a6d696e743a206578636565646564206d696e7420636170000000006044820152606401610763565b6109156108f75f54836001600160601b0316611790565b6040518060600160405280602681526020016120e8602691396114d1565b6001600160601b039081165f9081556001600160a01b0385168152600460209081526040918290205482516060810190935260248084526109669491909116928592909190612088908301396118ad565b6001600160a01b0384165f81815260046020908152604080832080546001600160601b0319166001600160601b03968716179055519385168452919290917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36001600160a01b038084165f908152600560205260408120546109f39216836118f9565b505050565b610a023382611a9a565b50565b5f438210610a645760405162461bcd60e51b815260206004820152602660248201527f556e693a3a6765745072696f72566f7465733a206e6f742079657420646574656044820152651c9b5a5b995960d21b6064820152608401610763565b6001600160a01b0383165f9081526007602052604081205463ffffffff1690819003610a93575f9150506105d0565b6001600160a01b0384165f9081526006602052604081208491610ab7600185611f81565b63ffffffff908116825260208201929092526040015f20541611610b27576001600160a01b0384165f90815260066020526040812090610af8600184611f81565b63ffffffff16815260208101919091526040015f2054600160201b90046001600160601b031691506105d09050565b6001600160a01b0384165f90815260066020908152604080832083805290915290205463ffffffff16831015610b60575f9150506105d0565b5f80610b6d600184611f81565b90505b8163ffffffff168163ffffffff161115610c3d575f6002610b918484611f81565b610b9b9190611fb1565b610ba59083611f81565b6001600160a01b0388165f90815260066020908152604080832063ffffffff858116855290835292819020815180830190925254928316808252600160201b9093046001600160601b031691810191909152919250879003610c11576020015194506105d09350505050565b805163ffffffff16871115610c2857819350610c36565b610c33600183611f81565b92505b5050610b70565b506001600160a01b0385165f90815260066020908152604080832063ffffffff909416835292905220546001600160601b03600160201b9091041691505092915050565b5f80610ca5836040518060600160405280602581526020016121e6602591396114d1565b9050610cb2338583611548565b5060019392505050565b6001600160a01b0381165f9081526007602052604081205463ffffffff1680610ce5575f610d2f565b6001600160a01b0383165f90815260066020526040812090610d08600184611f81565b63ffffffff16815260208101919091526040015f2054600160201b90046001600160601b03165b9392505050565b60408051808201825260078152660556e69737761760cc1b60209182015281517f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866818301527f99c45e8ee5dde061ced9c812089094fbd28a020e7e37f2851198887e5ca6498581840152466060820152306080808301919091528351808303909101815260a0820184528051908301207fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60c08301526001600160a01b038a1660e083015261010082018990526101208083018990528451808403909101815261014083019094528351939092019290922061190160f01b6101608401526101628301829052610182830181905290915f906101a20160408051601f1981840301815282825280516020918201205f80855291840180845281905260ff8a169284019290925260608301889052608083018790529092509060019060a0016020604051602081039080840390855afa158015610eb4573d5f803e3d5ffd5b5050604051601f1901519150506001600160a01b038116610f255760405162461bcd60e51b815260206004820152602560248201527f556e693a3a64656c656761746542795369673a20696e76616c6964207369676e604482015264617475726560d81b6064820152608401610763565b6001600160a01b0381165f908152600860205260408120805491610f4883611fd8565b919050558914610fa45760405162461bcd60e51b815260206004820152602160248201527f556e693a3a64656c656761746542795369673a20696e76616c6964206e6f6e636044820152606560f81b6064820152608401610763565b874211156110025760405162461bcd60e51b815260206004820152602560248201527f556e693a3a64656c656761746542795369673a207369676e61747572652065786044820152641c1a5c995960da1b6064820152608401610763565b61100c818b611a9a565b505050505b505050505050565b5f61103c86604051806060016040528060238152602001612143602391396114d1565b60408051808201825260078152660556e69737761760cc1b60209182015281517f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866818301527f99c45e8ee5dde061ced9c812089094fbd28a020e7e37f2851198887e5ca6498581840152466060820152306080808301919091528351808303909101815260a090910183528051908201206001600160a01b038c165f90815260089092529181208054939450919290917f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9918c918c918c918661111e83611fd8565b909155506040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810188905260e0016040516020818303038152906040528051906020012090505f828260405160200161119c92919061190160f01b81526002810192909252602282015260420190565b60408051601f1981840301815282825280516020918201205f80855291840180845281905260ff8b169284019290925260608301899052608083018890529092509060019060a0016020604051602081039080840390855afa158015611204573d5f803e3d5ffd5b5050604051601f1901519150506001600160a01b0381166112675760405162461bcd60e51b815260206004820152601e60248201527f556e693a3a7065726d69743a20696e76616c6964207369676e617475726500006044820152606401610763565b8b6001600160a01b0316816001600160a01b0316146112c85760405162461bcd60e51b815260206004820152601960248201527f556e693a3a7065726d69743a20756e617574686f72697a6564000000000000006044820152606401610763565b884211156113185760405162461bcd60e51b815260206004820152601e60248201527f556e693a3a7065726d69743a207369676e6174757265206578706972656400006044820152606401610763565b8460035f8e6001600160a01b03166001600160a01b031681526020019081526020015f205f8d6001600160a01b03166001600160a01b031681526020019081526020015f205f6101000a8154816001600160601b0302191690836001600160601b031602179055508a6001600160a01b03168c6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925876040516113d291906001600160601b0391909116815260200190565b60405180910390a3505050505050505050505050565b6001546001600160a01b031633146114685760405162461bcd60e51b815260206004820152603d60248201527f556e693a3a7365744d696e7465723a206f6e6c7920746865206d696e7465722060448201527f63616e206368616e676520746865206d696e74657220616464726573730000006064820152608401610763565b600154604080516001600160a01b03928316815291831660208301527f3b0007eb941cf645526cbb3a4fdaecda9d28ce4843167d9263b536a1f1edc0f6910160405180910390a1600180546001600160a01b0319166001600160a01b0392909216919091179055565b5f81600160601b84106114f75760405162461bcd60e51b81526004016107639190611d6a565b509192915050565b5f836001600160601b0316836001600160601b0316111582906115355760405162461bcd60e51b81526004016107639190611d6a565b506115408385611ff0565b949350505050565b6001600160a01b0383166115c45760405162461bcd60e51b815260206004820152603b60248201527f556e693a3a5f7472616e73666572546f6b656e733a2063616e6e6f742074726160448201527f6e736665722066726f6d20746865207a65726f206164647265737300000000006064820152608401610763565b6001600160a01b0382166116405760405162461bcd60e51b815260206004820152603960248201527f556e693a3a5f7472616e73666572546f6b656e733a2063616e6e6f742074726160448201527f6e7366657220746f20746865207a65726f2061646472657373000000000000006064820152608401610763565b6001600160a01b0383165f9081526004602090815260409182902054825160608101909352603580845261168a936001600160601b03909216928592919061210e908301396114ff565b6001600160a01b038481165f90815260046020908152604080832080546001600160601b0319166001600160601b0396871617905592861682529082902054825160608101909352602f8084526116f19491909116928592909190612250908301396118ad565b6001600160a01b038381165f8181526004602090815260409182902080546001600160601b0319166001600160601b03968716179055905193851684529092918616917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36001600160a01b038084165f908152600560205260408082205485841683529120546109f3929182169116836118f9565b5f8061179c838561200f565b905083811015610d2f5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610763565b5f825f036117fd57505f6105d0565b5f6118088385612022565b9050826118158583612039565b14610d2f5760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b6064820152608401610763565b5f610d2f83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611b23565b5f806118b9848661204c565b9050846001600160601b0316816001600160601b0316101583906118f05760405162461bcd60e51b81526004016107639190611d6a565b50949350505050565b816001600160a01b0316836001600160a01b03161415801561192357505f816001600160601b0316115b156109f3576001600160a01b038316156119e3576001600160a01b0383165f9081526007602052604081205463ffffffff169081611961575f6119ab565b6001600160a01b0385165f90815260066020526040812090611984600185611f81565b63ffffffff16815260208101919091526040015f2054600160201b90046001600160601b03165b90505f6119d182856040518060600160405280602781526020016121bf602791396114ff565b90506119df86848484611b58565b5050505b6001600160a01b038216156109f3576001600160a01b0382165f9081526007602052604081205463ffffffff169081611a1c575f611a66565b6001600160a01b0384165f90815260066020526040812090611a3f600185611f81565b63ffffffff16815260208101919091526040015f2054600160201b90046001600160601b03165b90505f611a8c8285604051806060016040528060268152602001612166602691396118ad565b905061101185848484611b58565b6001600160a01b038083165f81815260056020818152604080842080546004845282862054949093528787166001600160a01b031984168117909155905191909516946001600160601b039092169391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a4611b1d8284836118f9565b50505050565b5f8183611b435760405162461bcd60e51b81526004016107639190611d6a565b505f611b4f8486612039565b95945050505050565b5f611b7b4360405180606001604052806033815260200161218c60339139611d48565b90505f8463ffffffff16118015611bd257506001600160a01b0385165f90815260066020526040812063ffffffff831691611bb7600188611f81565b63ffffffff908116825260208201929092526040015f205416145b15611c44576001600160a01b0385165f9081526006602052604081208391611bfb600188611f81565b63ffffffff16815260208101919091526040015f2080546001600160601b0392909216600160201b026fffffffffffffffffffffffff0000000019909216919091179055611cf3565b60408051808201825263ffffffff80841682526001600160601b0380861660208085019182526001600160a01b038b165f908152600682528681208b8616825290915294909420925183549451909116600160201b026fffffffffffffffffffffffffffffffff19909416911617919091179055611cc384600161206b565b6001600160a01b0386165f908152600760205260409020805463ffffffff191663ffffffff929092169190911790555b604080516001600160601b038086168252841660208201526001600160a01b038716917fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724910160405180910390a25050505050565b5f81600160201b84106114f75760405162461bcd60e51b815260040161076391905b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b0381168114611db5575f80fd5b919050565b5f8060408385031215611dcb575f80fd5b611dd483611d9f565b946020939093013593505050565b5f805f60608486031215611df4575f80fd5b611dfd84611d9f565b9250611e0b60208501611d9f565b929592945050506040919091013590565b5f60208284031215611e2c575f80fd5b610d2f82611d9f565b803560ff81168114611db5575f80fd5b5f805f805f8060c08789031215611e5a575f80fd5b611e6387611d9f565b95506020870135945060408701359350611e7f60608801611e35565b9598949750929560808101359460a0909101359350915050565b5f805f805f805f60e0888a031215611eaf575f80fd5b611eb888611d9f565b9650611ec660208901611d9f565b95506040880135945060608801359350611ee260808901611e35565b9699959850939692959460a0840135945060c09093013592915050565b5f8060408385031215611f10575f80fd5b611f1983611d9f565b9150611f2760208401611d9f565b90509250929050565b5f8060408385031215611f41575f80fd5b611f4a83611d9f565b9150602083013563ffffffff81168114611f62575f80fd5b809150509250929050565b634e487b7160e01b5f52601160045260245ffd5b63ffffffff82811682821603908111156105d0576105d0611f6d565b634e487b7160e01b5f52601260045260245ffd5b5f63ffffffff831680611fc657611fc6611f9d565b8063ffffffff84160491505092915050565b5f60018201611fe957611fe9611f6d565b5060010190565b6001600160601b0382811682821603908111156105d0576105d0611f6d565b808201808211156105d0576105d0611f6d565b80820281158282048414176105d0576105d0611f6d565b5f8261204757612047611f9d565b500490565b6001600160601b0381811683821601908111156105d0576105d0611f6d565b63ffffffff81811683821601908111156105d0576105d0611f6d56fe556e693a3a6d696e743a207472616e7366657220616d6f756e74206f766572666c6f7773556e693a3a7472616e7366657246726f6d3a207472616e7366657220616d6f756e742065786365656473207370656e64657220616c6c6f77616e6365556e693a3a6d696e743a20746f74616c537570706c7920657863656564732039362062697473556e693a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e7420657863656564732062616c616e6365556e693a3a7065726d69743a20616d6f756e7420657863656564732039362062697473556e693a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f7773556e693a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d62657220657863656564732033322062697473556e693a3a5f6d6f7665566f7465733a20766f746520616d6f756e7420756e646572666c6f7773556e693a3a7472616e736665723a20616d6f756e7420657863656564732039362062697473556e693a3a6d696e743a20616d6f756e7420657863656564732039362062697473556e693a3a617070726f76653a20616d6f756e7420657863656564732039362062697473556e693a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e74206f766572666c6f7773a2646970667358221220b4b84d2b003d0602ebacd65cb25e2c213780afbfab33bc022976f467f1db628364736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A1 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FCFFF45 GT PUSH2 0xF3 JUMPI DUP1 PUSH4 0xB4B5EA57 GT PUSH2 0x93 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x44F JUMPI DUP1 PUSH4 0xE7A324DC EQ PUSH2 0x490 JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x4B7 JUMPI DUP1 PUSH4 0xFCA3B5AA EQ PUSH2 0x51D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB4B5EA57 EQ PUSH2 0x416 JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x429 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x43C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x782D6FE1 GT PUSH2 0xCE JUMPI DUP1 PUSH4 0x782D6FE1 EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x3C2 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3E1 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x403 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x339 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x35E JUMPI DUP1 PUSH4 0x76C71CA1 EQ PUSH2 0x38F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x30ADF81F GT PUSH2 0x15E JUMPI DUP1 PUSH4 0x40C10F19 GT PUSH2 0x139 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0x5C11D62F EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x326 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x30B36CEF EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2AF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x7546172 EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x20606B70 EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x26C JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1CB PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0x556E697377617 PUSH1 0xCC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x1D6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x1F4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D8 JUMP JUMPDEST PUSH2 0x21F PUSH2 0x21A CALLDATASIZE PUSH1 0x4 PUSH2 0x1DBA JUMP JUMPDEST PUSH2 0x530 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D8 JUMP JUMPDEST PUSH2 0x237 PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D8 JUMP JUMPDEST PUSH2 0x237 PUSH32 0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866 DUP2 JUMP JUMPDEST PUSH2 0x21F PUSH2 0x27A CALLDATASIZE PUSH1 0x4 PUSH2 0x1DE2 JUMP JUMPDEST PUSH2 0x5D6 JUMP JUMPDEST PUSH2 0x237 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 JUMP JUMPDEST PUSH2 0x237 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2B7 PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D8 JUMP JUMPDEST PUSH2 0x2DC PUSH2 0x2D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DBA JUMP JUMPDEST PUSH2 0x701 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F4 PUSH2 0x2EC CALLDATASIZE PUSH1 0x4 PUSH2 0x1E1C JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x311 PUSH4 0x1E13380 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D8 JUMP JUMPDEST PUSH2 0x2DC PUSH2 0x334 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E1C JUMP JUMPDEST PUSH2 0x9F8 JUMP JUMPDEST PUSH2 0x311 PUSH2 0x347 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E1C JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x36C CALLDATASIZE PUSH1 0x4 PUSH2 0x1E1C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x2B7 PUSH1 0x2 DUP2 JUMP JUMPDEST PUSH2 0x3AA PUSH2 0x3A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DBA JUMP JUMPDEST PUSH2 0xA05 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D8 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x3D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E1C JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1CB PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x554E49 PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x21F PUSH2 0x411 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DBA JUMP JUMPDEST PUSH2 0xC81 JUMP JUMPDEST PUSH2 0x3AA PUSH2 0x424 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E1C JUMP JUMPDEST PUSH2 0xCBC JUMP JUMPDEST PUSH2 0x2DC PUSH2 0x437 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E45 JUMP JUMPDEST PUSH2 0xD36 JUMP JUMPDEST PUSH2 0x2DC PUSH2 0x44A CALLDATASIZE PUSH1 0x4 PUSH2 0x1E99 JUMP JUMPDEST PUSH2 0x1019 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x45D CALLDATASIZE PUSH1 0x4 PUSH2 0x1EFF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x237 PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF DUP2 JUMP JUMPDEST PUSH2 0x4F9 PUSH2 0x4C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F30 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF DUP2 AND SWAP1 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x1D8 JUMP JUMPDEST PUSH2 0x2DC PUSH2 0x52B CALLDATASIZE PUSH1 0x4 PUSH2 0x1E1C JUMP JUMPDEST PUSH2 0x13E8 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x554 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x222C PUSH1 0x24 SWAP2 CODECOPY PUSH2 0x14D1 JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP8 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP4 SWAP5 POP SWAP1 SWAP3 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD DUP3 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP4 MSTORE PUSH1 0x24 DUP1 DUP5 MSTORE SWAP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP2 AND SWAP3 DUP6 SWAP3 PUSH2 0x62D SWAP3 DUP9 SWAP3 SWAP2 SWAP1 PUSH2 0x222C SWAP1 DUP4 ADD CODECOPY PUSH2 0x14D1 JUMP JUMPDEST SWAP1 POP DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x6E9 JUMPI PUSH0 PUSH2 0x66C DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3C DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x20AC PUSH1 0x3C SWAP2 CODECOPY PUSH2 0x14FF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP11 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP8 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE SWAP4 SWAP5 POP SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMPDEST PUSH2 0x6F4 DUP8 DUP8 DUP4 PUSH2 0x1548 JUMP JUMPDEST POP PUSH1 0x1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x76C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E693A3A6D696E743A206F6E6C7920746865206D696E7465722063616E206D PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1A5B9D PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD TIMESTAMP LT ISZERO PUSH2 0x7C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E693A3A6D696E743A206D696E74696E67206E6F7420616C6C6F7765642079 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x195D PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x763 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x836 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E693A3A6D696E743A2063616E6E6F74207472616E7366657220746F207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x65207A65726F2061646472657373 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x763 JUMP JUMPDEST PUSH2 0x844 TIMESTAMP PUSH4 0x1E13380 PUSH2 0x1790 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH0 PUSH2 0x86D DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x220B PUSH1 0x21 SWAP2 CODECOPY PUSH2 0x14D1 JUMP JUMPDEST SWAP1 POP PUSH2 0x888 PUSH2 0x881 PUSH0 SLOAD PUSH1 0x2 PUSH1 0xFF AND PUSH2 0x17EE JUMP JUMPDEST PUSH1 0x64 PUSH2 0x186C JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND GT ISZERO PUSH2 0x8E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E693A3A6D696E743A206578636565646564206D696E742063617000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x763 JUMP JUMPDEST PUSH2 0x915 PUSH2 0x8F7 PUSH0 SLOAD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH2 0x1790 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x20E8 PUSH1 0x26 SWAP2 CODECOPY PUSH2 0x14D1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 DUP2 AND PUSH0 SWAP1 DUP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP4 MSTORE PUSH1 0x24 DUP1 DUP5 MSTORE PUSH2 0x966 SWAP5 SWAP2 SWAP1 SWAP2 AND SWAP3 DUP6 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x2088 SWAP1 DUP4 ADD CODECOPY PUSH2 0x18AD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP7 DUP8 AND OR SWAP1 SSTORE MLOAD SWAP4 DUP6 AND DUP5 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x9F3 SWAP3 AND DUP4 PUSH2 0x18F9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xA02 CALLER DUP3 PUSH2 0x1A9A JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 NUMBER DUP3 LT PUSH2 0xA64 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E693A3A6765745072696F72566F7465733A206E6F74207965742064657465 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C9B5A5B9959 PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x763 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP2 SWAP1 SUB PUSH2 0xA93 JUMPI PUSH0 SWAP2 POP POP PUSH2 0x5D0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP5 SWAP2 PUSH2 0xAB7 PUSH1 0x1 DUP6 PUSH2 0x1F81 JUMP JUMPDEST PUSH4 0xFFFFFFFF SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 SLOAD AND GT PUSH2 0xB27 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0xAF8 PUSH1 0x1 DUP5 PUSH2 0x1F81 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP2 POP PUSH2 0x5D0 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 DUP1 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP4 LT ISZERO PUSH2 0xB60 JUMPI PUSH0 SWAP2 POP POP PUSH2 0x5D0 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xB6D PUSH1 0x1 DUP5 PUSH2 0x1F81 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP2 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0xC3D JUMPI PUSH0 PUSH1 0x2 PUSH2 0xB91 DUP5 DUP5 PUSH2 0x1F81 JUMP JUMPDEST PUSH2 0xB9B SWAP2 SWAP1 PUSH2 0x1FB1 JUMP JUMPDEST PUSH2 0xBA5 SWAP1 DUP4 PUSH2 0x1F81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF DUP6 DUP2 AND DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE SLOAD SWAP3 DUP4 AND DUP1 DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 SHL SWAP1 SWAP4 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP3 POP DUP8 SWAP1 SUB PUSH2 0xC11 JUMPI PUSH1 0x20 ADD MLOAD SWAP5 POP PUSH2 0x5D0 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH4 0xFFFFFFFF AND DUP8 GT ISZERO PUSH2 0xC28 JUMPI DUP2 SWAP4 POP PUSH2 0xC36 JUMP JUMPDEST PUSH2 0xC33 PUSH1 0x1 DUP4 PUSH2 0x1F81 JUMP JUMPDEST SWAP3 POP JUMPDEST POP POP PUSH2 0xB70 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0x1 PUSH1 0x20 SHL SWAP1 SWAP2 DIV AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xCA5 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21E6 PUSH1 0x25 SWAP2 CODECOPY PUSH2 0x14D1 JUMP JUMPDEST SWAP1 POP PUSH2 0xCB2 CALLER DUP6 DUP4 PUSH2 0x1548 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP1 PUSH2 0xCE5 JUMPI PUSH0 PUSH2 0xD2F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0xD08 PUSH1 0x1 DUP5 PUSH2 0x1F81 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x7 DUP2 MSTORE PUSH7 0x556E697377617 PUSH1 0xCC SHL PUSH1 0x20 SWAP2 DUP3 ADD MSTORE DUP2 MLOAD PUSH32 0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866 DUP2 DUP4 ADD MSTORE PUSH32 0x99C45E8EE5DDE061CED9C812089094FBD28A020E7E37F2851198887E5CA64985 DUP2 DUP5 ADD MSTORE CHAINID PUSH1 0x60 DUP3 ADD MSTORE ADDRESS PUSH1 0x80 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA0 DUP3 ADD DUP5 MSTORE DUP1 MLOAD SWAP1 DUP4 ADD KECCAK256 PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 DUP3 ADD DUP10 SWAP1 MSTORE PUSH2 0x120 DUP1 DUP4 ADD DUP10 SWAP1 MSTORE DUP5 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH2 0x140 DUP4 ADD SWAP1 SWAP5 MSTORE DUP4 MLOAD SWAP4 SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH2 0x160 DUP5 ADD MSTORE PUSH2 0x162 DUP4 ADD DUP3 SWAP1 MSTORE PUSH2 0x182 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP2 PUSH0 SWAP1 PUSH2 0x1A2 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH0 DUP1 DUP6 MSTORE SWAP2 DUP5 ADD DUP1 DUP5 MSTORE DUP2 SWAP1 MSTORE PUSH1 0xFF DUP11 AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP4 ADD DUP9 SWAP1 MSTORE PUSH1 0x80 DUP4 ADD DUP8 SWAP1 MSTORE SWAP1 SWAP3 POP SWAP1 PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEB4 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xF25 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E693A3A64656C656761746542795369673A20696E76616C6964207369676E PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6174757265 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x763 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0xF48 DUP4 PUSH2 0x1FD8 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE DUP10 EQ PUSH2 0xFA4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E693A3A64656C656761746542795369673A20696E76616C6964206E6F6E63 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x763 JUMP JUMPDEST DUP8 TIMESTAMP GT ISZERO PUSH2 0x1002 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E693A3A64656C656761746542795369673A207369676E6174757265206578 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x1C1A5C9959 PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x763 JUMP JUMPDEST PUSH2 0x100C DUP2 DUP12 PUSH2 0x1A9A JUMP JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x103C DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2143 PUSH1 0x23 SWAP2 CODECOPY PUSH2 0x14D1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x7 DUP2 MSTORE PUSH7 0x556E697377617 PUSH1 0xCC SHL PUSH1 0x20 SWAP2 DUP3 ADD MSTORE DUP2 MLOAD PUSH32 0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866 DUP2 DUP4 ADD MSTORE PUSH32 0x99C45E8EE5DDE061CED9C812089094FBD28A020E7E37F2851198887E5CA64985 DUP2 DUP5 ADD MSTORE CHAINID PUSH1 0x60 DUP3 ADD MSTORE ADDRESS PUSH1 0x80 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA0 SWAP1 SWAP2 ADD DUP4 MSTORE DUP1 MLOAD SWAP1 DUP3 ADD KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 SWAP1 SWAP3 MSTORE SWAP2 DUP2 KECCAK256 DUP1 SLOAD SWAP4 SWAP5 POP SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 SWAP2 DUP13 SWAP2 DUP13 SWAP2 DUP13 SWAP2 DUP7 PUSH2 0x111E DUP4 PUSH2 0x1FD8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP1 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0xE0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x119C SWAP3 SWAP2 SWAP1 PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH0 DUP1 DUP6 MSTORE SWAP2 DUP5 ADD DUP1 DUP5 MSTORE DUP2 SWAP1 MSTORE PUSH1 0xFF DUP12 AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP4 ADD DUP10 SWAP1 MSTORE PUSH1 0x80 DUP4 ADD DUP9 SWAP1 MSTORE SWAP1 SWAP3 POP SWAP1 PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1204 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1267 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E693A3A7065726D69743A20696E76616C6964207369676E61747572650000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x763 JUMP JUMPDEST DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x12C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E693A3A7065726D69743A20756E617574686F72697A656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x763 JUMP JUMPDEST DUP9 TIMESTAMP GT ISZERO PUSH2 0x1318 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E693A3A7065726D69743A207369676E617475726520657870697265640000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x763 JUMP JUMPDEST DUP5 PUSH1 0x3 PUSH0 DUP15 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP14 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP8 PUSH1 0x40 MLOAD PUSH2 0x13D2 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1468 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E693A3A7365744D696E7465723A206F6E6C7920746865206D696E74657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x63616E206368616E676520746865206D696E7465722061646472657373000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x763 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0x3B0007EB941CF645526CBB3A4FDAECDA9D28CE4843167D9263B536A1F1EDC0F6 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 PUSH1 0x60 SHL DUP5 LT PUSH2 0x14F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP2 SWAP1 PUSH2 0x1D6A JUMP JUMPDEST POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND GT ISZERO DUP3 SWAP1 PUSH2 0x1535 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP2 SWAP1 PUSH2 0x1D6A JUMP JUMPDEST POP PUSH2 0x1540 DUP4 DUP6 PUSH2 0x1FF0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x15C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E693A3A5F7472616E73666572546F6B656E733A2063616E6E6F7420747261 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E736665722066726F6D20746865207A65726F20616464726573730000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x763 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1640 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E693A3A5F7472616E73666572546F6B656E733A2063616E6E6F7420747261 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E7366657220746F20746865207A65726F206164647265737300000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x763 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP4 MSTORE PUSH1 0x35 DUP1 DUP5 MSTORE PUSH2 0x168A SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP3 AND SWAP3 DUP6 SWAP3 SWAP2 SWAP1 PUSH2 0x210E SWAP1 DUP4 ADD CODECOPY PUSH2 0x14FF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP7 DUP8 AND OR SWAP1 SSTORE SWAP3 DUP7 AND DUP3 MSTORE SWAP1 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP4 MSTORE PUSH1 0x2F DUP1 DUP5 MSTORE PUSH2 0x16F1 SWAP5 SWAP2 SWAP1 SWAP2 AND SWAP3 DUP6 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x2250 SWAP1 DUP4 ADD CODECOPY PUSH2 0x18AD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP7 DUP8 AND OR SWAP1 SSTORE SWAP1 MLOAD SWAP4 DUP6 AND DUP5 MSTORE SWAP1 SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD DUP6 DUP5 AND DUP4 MSTORE SWAP2 KECCAK256 SLOAD PUSH2 0x9F3 SWAP3 SWAP2 DUP3 AND SWAP2 AND DUP4 PUSH2 0x18F9 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x179C DUP4 DUP6 PUSH2 0x200F JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xD2F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x763 JUMP JUMPDEST PUSH0 DUP3 PUSH0 SUB PUSH2 0x17FD JUMPI POP PUSH0 PUSH2 0x5D0 JUMP JUMPDEST PUSH0 PUSH2 0x1808 DUP4 DUP6 PUSH2 0x2022 JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0x1815 DUP6 DUP4 PUSH2 0x2039 JUMP JUMPDEST EQ PUSH2 0xD2F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x77 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x763 JUMP JUMPDEST PUSH0 PUSH2 0xD2F DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x1B23 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x18B9 DUP5 DUP7 PUSH2 0x204C JUMP JUMPDEST SWAP1 POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND LT ISZERO DUP4 SWAP1 PUSH2 0x18F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP2 SWAP1 PUSH2 0x1D6A JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x1923 JUMPI POP PUSH0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND GT JUMPDEST ISZERO PUSH2 0x9F3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x19E3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH2 0x1961 JUMPI PUSH0 PUSH2 0x19AB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x1984 PUSH1 0x1 DUP6 PUSH2 0x1F81 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND JUMPDEST SWAP1 POP PUSH0 PUSH2 0x19D1 DUP3 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21BF PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x14FF JUMP JUMPDEST SWAP1 POP PUSH2 0x19DF DUP7 DUP5 DUP5 DUP5 PUSH2 0x1B58 JUMP JUMPDEST POP POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x9F3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH2 0x1A1C JUMPI PUSH0 PUSH2 0x1A66 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x1A3F PUSH1 0x1 DUP6 PUSH2 0x1F81 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1A8C DUP3 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2166 PUSH1 0x26 SWAP2 CODECOPY PUSH2 0x18AD JUMP JUMPDEST SWAP1 POP PUSH2 0x1011 DUP6 DUP5 DUP5 DUP5 PUSH2 0x1B58 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x4 DUP5 MSTORE DUP3 DUP7 KECCAK256 SLOAD SWAP5 SWAP1 SWAP4 MSTORE DUP8 DUP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP5 AND DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP6 AND SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP3 AND SWAP4 SWAP2 SWAP3 DUP6 SWAP3 SWAP2 PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F SWAP2 SWAP1 LOG4 PUSH2 0x1B1D DUP3 DUP5 DUP4 PUSH2 0x18F9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x1B43 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP2 SWAP1 PUSH2 0x1D6A JUMP JUMPDEST POP PUSH0 PUSH2 0x1B4F DUP5 DUP7 PUSH2 0x2039 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B7B NUMBER PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x33 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x218C PUSH1 0x33 SWAP2 CODECOPY PUSH2 0x1D48 JUMP JUMPDEST SWAP1 POP PUSH0 DUP5 PUSH4 0xFFFFFFFF AND GT DUP1 ISZERO PUSH2 0x1BD2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH4 0xFFFFFFFF DUP4 AND SWAP2 PUSH2 0x1BB7 PUSH1 0x1 DUP9 PUSH2 0x1F81 JUMP JUMPDEST PUSH4 0xFFFFFFFF SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 SLOAD AND EQ JUMPDEST ISZERO PUSH2 0x1C44 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 SWAP2 PUSH2 0x1BFB PUSH1 0x1 DUP9 PUSH2 0x1F81 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x20 SHL MUL PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFF00000000 NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x1CF3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH4 0xFFFFFFFF DUP1 DUP5 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP1 DUP7 AND PUSH1 0x20 DUP1 DUP6 ADD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 DUP3 MSTORE DUP7 DUP2 KECCAK256 DUP12 DUP7 AND DUP3 MSTORE SWAP1 SWAP2 MSTORE SWAP5 SWAP1 SWAP5 KECCAK256 SWAP3 MLOAD DUP4 SLOAD SWAP5 MLOAD SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0x20 SHL MUL PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 SWAP5 AND SWAP2 AND OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x1CC3 DUP5 PUSH1 0x1 PUSH2 0x206B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH4 0xFFFFFFFF NOT AND PUSH4 0xFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP1 DUP7 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP2 PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 PUSH1 0x20 SHL DUP5 LT PUSH2 0x14F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP2 SWAP1 JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1DB5 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DCB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1DD4 DUP4 PUSH2 0x1D9F JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1DF4 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1DFD DUP5 PUSH2 0x1D9F JUMP JUMPDEST SWAP3 POP PUSH2 0x1E0B PUSH1 0x20 DUP6 ADD PUSH2 0x1D9F JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E2C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD2F DUP3 PUSH2 0x1D9F JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1DB5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1E5A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1E63 DUP8 PUSH2 0x1D9F JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH2 0x1E7F PUSH1 0x60 DUP9 ADD PUSH2 0x1E35 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP3 SWAP6 PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP5 PUSH1 0xA0 SWAP1 SWAP2 ADD CALLDATALOAD SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1EAF JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1EB8 DUP9 PUSH2 0x1D9F JUMP JUMPDEST SWAP7 POP PUSH2 0x1EC6 PUSH1 0x20 DUP10 ADD PUSH2 0x1D9F JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH2 0x1EE2 PUSH1 0x80 DUP10 ADD PUSH2 0x1E35 JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F10 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1F19 DUP4 PUSH2 0x1D9F JUMP JUMPDEST SWAP2 POP PUSH2 0x1F27 PUSH1 0x20 DUP5 ADD PUSH2 0x1D9F JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F41 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1F4A DUP4 PUSH2 0x1D9F JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1F62 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP3 DUP2 AND DUP3 DUP3 AND SUB SWAP1 DUP2 GT ISZERO PUSH2 0x5D0 JUMPI PUSH2 0x5D0 PUSH2 0x1F6D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH4 0xFFFFFFFF DUP4 AND DUP1 PUSH2 0x1FC6 JUMPI PUSH2 0x1FC6 PUSH2 0x1F9D JUMP JUMPDEST DUP1 PUSH4 0xFFFFFFFF DUP5 AND DIV SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x1FE9 JUMPI PUSH2 0x1FE9 PUSH2 0x1F6D JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP3 DUP2 AND DUP3 DUP3 AND SUB SWAP1 DUP2 GT ISZERO PUSH2 0x5D0 JUMPI PUSH2 0x5D0 PUSH2 0x1F6D JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x5D0 JUMPI PUSH2 0x5D0 PUSH2 0x1F6D JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x5D0 JUMPI PUSH2 0x5D0 PUSH2 0x1F6D JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x2047 JUMPI PUSH2 0x2047 PUSH2 0x1F9D JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP2 GT ISZERO PUSH2 0x5D0 JUMPI PUSH2 0x5D0 PUSH2 0x1F6D JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP2 GT ISZERO PUSH2 0x5D0 JUMPI PUSH2 0x5D0 PUSH2 0x1F6D JUMP INVALID SSTORE PUSH15 0x693A3A6D696E743A207472616E7366 PUSH6 0x7220616D6F75 PUSH15 0x74206F766572666C6F7773556E693A GASPRICE PUSH21 0x72616E7366657246726F6D3A207472616E73666572 KECCAK256 PUSH2 0x6D6F PUSH22 0x6E742065786365656473207370656E64657220616C6C PUSH16 0x77616E6365556E693A3A6D696E743A20 PUSH21 0x6F74616C537570706C792065786365656473203936 KECCAK256 PUSH3 0x697473 SSTORE PUSH15 0x693A3A5F7472616E73666572546F6B PUSH6 0x6E733A207472 PUSH2 0x6E73 PUSH7 0x657220616D6F75 PUSH15 0x7420657863656564732062616C616E PUSH4 0x65556E69 GASPRICE GASPRICE PUSH17 0x65726D69743A20616D6F756E7420657863 PUSH6 0x656473203936 KECCAK256 PUSH3 0x697473 SSTORE PUSH15 0x693A3A5F6D6F7665566F7465733A20 PUSH23 0x6F746520616D6F756E74206F766572666C6F7773556E69 GASPRICE GASPRICE PUSH0 PUSH24 0x72697465436865636B706F696E743A20626C6F636B206E75 PUSH14 0x6265722065786365656473203332 KECCAK256 PUSH3 0x697473 SSTORE PUSH15 0x693A3A5F6D6F7665566F7465733A20 PUSH23 0x6F746520616D6F756E7420756E646572666C6F7773556E PUSH10 0x3A3A7472616E73666572 GASPRICE KECCAK256 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732039362062697473556E693A GASPRICE PUSH14 0x696E743A20616D6F756E74206578 PUSH4 0x65656473 KECCAK256 CODECOPY CALLDATASIZE KECCAK256 PUSH3 0x697473 SSTORE PUSH15 0x693A3A617070726F76653A20616D6F PUSH22 0x6E7420657863656564732039362062697473556E693A GASPRICE PUSH0 PUSH21 0x72616E73666572546F6B656E733A207472616E7366 PUSH6 0x7220616D6F75 PUSH15 0x74206F766572666C6F7773A2646970 PUSH7 0x7358221220B4B8 0x4D 0x2B STOP RETURNDATASIZE MOD MUL 0xEB 0xAC 0xD6 TLOAD 0xB2 MCOPY 0x2C 0x21 CALLDATACOPY DUP1 0xAF 0xBF 0xAB CALLER 0xBC MUL 0x29 PUSH23 0xF467F1DB628364736F6C634300081A0033000000000000 ",
							"sourceMap": "6732:18719:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6800:39;;;;;;;;;;;;;;;-1:-1:-1;;;6800:39:0;;;;;;;;;;;;:::i;:::-;;;;;;;;7209:21;;;;;-1:-1:-1;;;;;7209:21:0;;;;;;-1:-1:-1;;;;;601:32:1;;;583:51;;571:2;556:18;7209:21:0;437:203:1;13513:336:0;;;;;;:::i;:::-;;:::i;:::-;;;1293:14:1;;1286:22;1268:41;;1256:2;1241:18;13513:336:0;1128:187:1;7090:45:0;;;;;;;;;1466:25:1;;;1454:2;1439:18;7090:45:0;1320:177:1;8401:152:0;;8451:102;8401:152;;16733:752;;;;;;:::i;:::-;;:::i;8856:167::-;;8906:117;8856:167;;7297:34;;;;;;6994:35;;7027:2;6994:35;;;;;2235:4:1;2223:17;;;2205:36;;2193:2;2178:18;6994:35:0;2063:184:1;11326:1258:0;;;;;;:::i;:::-;;:::i;:::-;;7870:44;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;7870:44:0;;;7381:61;;7430:12;7381:61;;;;;2617:10:1;2605:23;;;2587:42;;2575:2;2560:18;7381:61:0;2443:192:1;17627:100:0;;;;;;:::i;:::-;;:::i;8283:48::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;15797:109;;;;;;:::i;:::-;-1:-1:-1;;;;;15882:17:0;15856:7;15882:17;;;:8;:17;;;;;;-1:-1:-1;;;;;15882:17:0;;15797:109;7534:33;;7566:1;7534:33;;20058:1250;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2802:39:1;;;2784:58;;2772:2;2757:18;20058:1250:0;2640:208:1;9101:41:0;;;;;;:::i;:::-;;;;;;;;;;;;;;6897:37;;;;;;;;;;;;;;;-1:-1:-1;;;6897:37:0;;;;;16162:270;;;;;;:::i;:::-;;:::i;19405:231::-;;;;;;:::i;:::-;;:::i;18150:1061::-;;;;;;:::i;:::-;;:::i;14327:1274::-;;;;;;:::i;:::-;;:::i;12880:165::-;;;;;;:::i;:::-;-1:-1:-1;;;;;13010:19:0;;;12980:7;13010:19;;;:10;:19;;;;;;;;:28;;;;;;;;;;;;-1:-1:-1;;;;;13010:28:0;;12880:165;8644:125;;8698:71;8644:125;;8149:68;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;8149:68:0;;-1:-1:-1;;;;;8149:68:0;;;;;;;5385:10:1;5373:23;;;5355:42;;-1:-1:-1;;;;;5433:39:1;;;5428:2;5413:18;;5406:67;5328:18;8149:68:0;5185:294:1;10897:261:0;;;;;;:::i;:::-;;:::i;13513:336::-;13600:4;13620:13;13652:57;13659:9;13652:57;;;;;;;;;;;;;;;;;:6;:57::i;:::-;13739:10;13728:22;;;;:10;:22;;;;;;;;-1:-1:-1;;;;;13728:31:0;;;;;;;;;;;;:40;;-1:-1:-1;;;;;;13728:40:0;-1:-1:-1;;;;;13728:40:0;;;;;;;;13784:37;;2784:58:1;;;13728:40:0;;-1:-1:-1;13728:31:0;;13784:37;;2757:18:1;13784:37:0;;;;;;;13838:4;13831:11;;;13513:336;;;;;:::o;16733:752::-;-1:-1:-1;;;;;16928:15:0;;16848:4;16928:15;;;:10;:15;;;;;;;;16882:10;16928:24;;;;;;;;;;16978:91;;;;;;;;;;;;16882:10;;-1:-1:-1;;;;;16928:24:0;;;;16848:4;;16978:91;;16998:9;;16978:91;;;;;;;:6;:91::i;:::-;16962:107;;17095:3;-1:-1:-1;;;;;17084:14:0;:7;-1:-1:-1;;;;;17084:14:0;;17080:334;;17115:19;17137:157;17160:16;17194:6;17137:157;;;;;;;;;;;;;;;;;:5;:157::i;:::-;-1:-1:-1;;;;;17308:15:0;;;;;;;:10;:15;;;;;;;;:24;;;;;;;;;;;;;:39;;-1:-1:-1;;;;;;17308:39:0;-1:-1:-1;;;;;17308:39:0;;;;;;;;17367:36;;2784:58:1;;;17308:39:0;;-1:-1:-1;17308:24:0;;:15;;17367:36;;2757:18:1;17367:36:0;;;;;;;17101:313;17080:334;17424:33;17440:3;17445;17450:6;17424:15;:33::i;:::-;-1:-1:-1;17474:4:0;;16733:752;-1:-1:-1;;;;;;16733:752:0:o;11326:1258::-;11413:6;;-1:-1:-1;;;;;11413:6:0;11399:10;:20;11391:68;;;;-1:-1:-1;;;11391:68:0;;5900:2:1;11391:68:0;;;5882:21:1;5939:2;5919:18;;;5912:30;5978:34;5958:18;;;5951:62;-1:-1:-1;;;6029:18:1;;;6022:33;6072:19;;11391:68:0;;;;;;;;;11509:19;;11490:15;:38;;11469:119;;;;-1:-1:-1;;;11469:119:0;;6304:2:1;11469:119:0;;;6286:21:1;6343:2;6323:18;;;6316:30;6382:34;6362:18;;;6355:62;-1:-1:-1;;;6433:18:1;;;6426:32;6475:19;;11469:119:0;6102:398:1;11469:119:0;-1:-1:-1;;;;;11619:17:0;;11598:110;;;;-1:-1:-1;;;11598:110:0;;6707:2:1;11598:110:0;;;6689:21:1;6746:2;6726:18;;;6719:30;6785:34;6765:18;;;6758:62;-1:-1:-1;;;6836:18:1;;;6829:44;6890:19;;11598:110:0;6505:410:1;11598:110:0;11768:88;11794:15;7430:12;11768;:88::i;:::-;11746:19;:110;;;;11894:13;11910:54;11917:9;11910:54;;;;;;;;;;;;;;;;;:6;:54::i;:::-;11894:70;;12005:53;12018:34;12031:11;;7566:1;12018:34;;:12;:34::i;:::-;12054:3;12005:12;:53::i;:::-;11995:6;-1:-1:-1;;;;;11995:63:0;;;11974:138;;;;-1:-1:-1;;;11974:138:0;;7122:2:1;11974:138:0;;;7104:21:1;7161:2;7141:18;;;7134:30;7200;7180:18;;;7173:58;7248:18;;11974:138:0;6920:352:1;11974:138:0;12136:117;12156:33;12169:11;;12182:6;-1:-1:-1;;;;;12156:33:0;:12;:33::i;:::-;12136:117;;;;;;;;;;;;;;;;;:6;:117::i;:::-;-1:-1:-1;;;;;12122:131:0;;;:11;:131;;;-1:-1:-1;;;;;12347:13:0;;;;:8;:13;;;;;;;;;;12328:114;;;;;;;;;;;;;;12347:13;;;;;12374:6;;12328:114;;;;;;;;:5;:114::i;:::-;-1:-1:-1;;;;;12312:13:0;;;;;;:8;:13;;;;;;;;:130;;-1:-1:-1;;;;;;12312:130:0;-1:-1:-1;;;;;12312:130:0;;;;;;12457:33;2802:39:1;;;2784:58;;12312:13:0;;;;12457:33;;2757:18:1;12457:33:0;;;;;;;-1:-1:-1;;;;;12554:14:0;;;12550:1;12554:14;;;:9;:14;;;;;;12527:50;;12554:14;12570:6;12527:14;:50::i;:::-;11381:1203;11326:1258;;:::o;17627:100::-;17688:32;17698:10;17710:9;17688;:32::i;:::-;17627:100;:::o;20058:1250::-;20164:6;20221:12;20207:11;:26;20186:111;;;;-1:-1:-1;;;20186:111:0;;7479:2:1;20186:111:0;;;7461:21:1;7518:2;7498:18;;;7491:30;7557:34;7537:18;;;7530:62;-1:-1:-1;;;7608:18:1;;;7601:36;7654:19;;20186:111:0;7277:402:1;20186:111:0;-1:-1:-1;;;;;20330:23:0;;20308:19;20330:23;;;:14;:23;;;;;;;;;20367:17;;;20363:56;;20407:1;20400:8;;;;;20363:56;-1:-1:-1;;;;;20476:20:0;;;;;;:11;:20;;;;;20528:11;;20497:16;20512:1;20497:12;:16;:::i;:::-;20476:38;;;;;;;;;;;;;;;-1:-1:-1;20476:38:0;:48;;:63;20472:145;;-1:-1:-1;;;;;20562:20:0;;;;;;:11;:20;;;;;;20583:16;20598:1;20583:12;:16;:::i;:::-;20562:38;;;;;;;;;;;;;-1:-1:-1;20562:38:0;:44;-1:-1:-1;;;20562:44:0;;-1:-1:-1;;;;;20562:44:0;;-1:-1:-1;20555:51:0;;-1:-1:-1;20555:51:0;20472:145;-1:-1:-1;;;;;20675:20:0;;;;;;:11;:20;;;;;;;;:23;;;;;;;;:33;:23;:33;:47;-1:-1:-1;20671:86:0;;;20745:1;20738:8;;;;;20671:86;20767:12;;20808:16;20823:1;20808:12;:16;:::i;:::-;20793:31;;20834:418;20849:5;20841:13;;:5;:13;;;20834:418;;;20870:13;20912:1;20895:13;20903:5;20895;:13;:::i;:::-;20894:19;;;;:::i;:::-;20886:27;;:5;:27;:::i;:::-;-1:-1:-1;;;;;20977:20:0;;20954;20977;;;:11;:20;;;;;;;;:28;;;;;;;;;;;;;20954:51;;;;;;;;;;;;;;;-1:-1:-1;;;20954:51:0;;;-1:-1:-1;;;;;20954:51:0;;;;;;;;20977:28;;-1:-1:-1;21023:27:0;;;21019:223;;21077:8;;;;-1:-1:-1;21070:15:0;;-1:-1:-1;;;;21070:15:0;21019:223;21110:12;;:26;;;-1:-1:-1;21106:136:0;;;21164:6;21156:14;;21106:136;;;21217:10;21226:1;21217:6;:10;:::i;:::-;21209:18;;21106:136;20856:396;;20834:418;;;-1:-1:-1;;;;;;21268:20:0;;;;;;:11;:20;;;;;;;;:27;;;;;;;;;;:33;-1:-1:-1;;;;;;;;21268:33:0;;;;;-1:-1:-1;;20058:1250:0;;;;:::o;16162:270::-;16230:4;16246:13;16262:92;16282:9;16262:92;;;;;;;;;;;;;;;;;:6;:92::i;:::-;16246:108;;16364:40;16380:10;16392:3;16397:6;16364:15;:40::i;:::-;-1:-1:-1;16421:4:0;;16162:270;-1:-1:-1;;;16162:270:0:o;19405:231::-;-1:-1:-1;;;;;19510:23:0;;19470:6;19510:23;;;:14;:23;;;;;;;;19562:16;:67;;19628:1;19562:67;;;-1:-1:-1;;;;;19581:20:0;;;;;;:11;:20;;;;;;19602:16;19617:1;19602:12;:16;:::i;:::-;19581:38;;;;;;;;;;;;;-1:-1:-1;19581:38:0;:44;-1:-1:-1;;;19581:44:0;;-1:-1:-1;;;;;19581:44:0;19562:67;19543:86;19405:231;-1:-1:-1;;;19405:231:0:o;18150:1061::-;18451:4;;;;;;;;;;;-1:-1:-1;;;18451:4:0;;;;;18374:158;;8451:102;18374:158;;;8537:25:1;18435:22:0;8578:18:1;;;8571:34;25400:9:0;8621:18:1;;;8614:34;18513:4:0;8664:18:1;;;;8657:60;;;;18374:158:0;;;;;;;;;;8509:19:1;;;18374:158:0;;18351:191;;;;;;8698:71;18596:57;;;8959:25:1;-1:-1:-1;;;;;9020:32:1;;9000:18;;;8993:60;9069:18;;;9062:34;;;9112:18;;;;9105:34;;;18596:57:0;;;;;;;;;;8931:19:1;;;18596:57:0;;;18573:90;;;;;;;;;;-1:-1:-1;;;18713:57:0;;;9408:27:1;9451:11;;;9444:27;;;9487:12;;;9480:28;;;18351:191:0;;-1:-1:-1;;9524:12:1;;18713:57:0;;;-1:-1:-1;;18713:57:0;;;;;;;;;18690:90;;18713:57;18690:90;;;;18790:17;18810:26;;;;;;;;;9774:25:1;;;9847:4;9835:17;;9815:18;;;9808:45;;;;9869:18;;;9862:34;;;9912:18;;;9905:34;;;18690:90:0;;-1:-1:-1;18790:17:0;18810:26;;9746:19:1;;18810:26:0;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18810:26:0;;-1:-1:-1;;18810:26:0;;;-1:-1:-1;;;;;;;18867:23:0;;18846:107;;;;-1:-1:-1;;;18846:107:0;;10152:2:1;18846:107:0;;;10134:21:1;10191:2;10171:18;;;10164:30;10230:34;10210:18;;;10203:62;-1:-1:-1;;;10281:18:1;;;10274:35;10326:19;;18846:107:0;9950:401:1;18846:107:0;-1:-1:-1;;;;;18993:17:0;;;;;;:6;:17;;;;;:19;;;;;;:::i;:::-;;;;;18984:5;:28;18963:108;;;;-1:-1:-1;;;18963:108:0;;10698:2:1;18963:108:0;;;10680:21:1;10737:2;10717:18;;;10710:30;10776:34;10756:18;;;10749:62;-1:-1:-1;;;10827:18:1;;;10820:31;10868:19;;18963:108:0;10496:397:1;18963:108:0;19108:6;19089:15;:25;;19081:75;;;;-1:-1:-1;;;19081:75:0;;11100:2:1;19081:75:0;;;11082:21:1;11139:2;11119:18;;;11112:30;11178:34;11158:18;;;11151:62;-1:-1:-1;;;11229:18:1;;;11222:35;11274:19;;19081:75:0;10898:401:1;19081:75:0;19173:31;19183:9;19194;19173;:31::i;:::-;19166:38;;;;18150:1061;;;;;;;:::o;14327:1274::-;14524:13;14556:56;14563:9;14556:56;;;;;;;;;;;;;;;;;:6;:56::i;:::-;14759:4;;;;;;;;;;;-1:-1:-1;;;14759:4:0;;;;;14682:158;;8451:102;14682:158;;;8537:25:1;14743:22:0;8578:18:1;;;8571:34;25400:9:0;8621:18:1;;;8614:34;14821:4:0;8664:18:1;;;;8657:60;;;;14682:158:0;;;;;;;;;;8509:19:1;;;;14682:158:0;;14659:191;;;;;;-1:-1:-1;;;;;15040:13:0;;-1:-1:-1;15040:13:0;;;:6;:13;;;;;;:15;;14547:65;;-1:-1:-1;14659:191:0;;-1:-1:-1;;8906:117:0;;15040:13;;14988:7;;15013:9;;-1:-1:-1;15040:15:0;;;:::i;:::-;;;;-1:-1:-1;14904:191:0;;;;;;11591:25:1;;;;-1:-1:-1;;;;;11652:32:1;;;11632:18;;;11625:60;11721:32;;;;11701:18;;;11694:60;11770:18;;;11763:34;11813:19;;;11806:35;11857:19;;;11850:35;;;11563:19;;14904:191:0;;;;;;;;;;;;14881:224;;;;;;14860:245;;15115:14;15184:15;15201:10;15155:57;;;;;;;;-1:-1:-1;;;9408:27:1;;9460:1;9451:11;;9444:27;;;;9496:2;9487:12;;9480:28;9533:2;9524:12;;9150:392;15155:57:0;;;;-1:-1:-1;;15155:57:0;;;;;;;;;15132:90;;15155:57;15132:90;;;;15232:17;15252:26;;;;;;;;;9774:25:1;;;9847:4;9835:17;;9815:18;;;9808:45;;;;9869:18;;;9862:34;;;9912:18;;;9905:34;;;15132:90:0;;-1:-1:-1;15232:17:0;15252:26;;9746:19:1;;15252:26:0;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15252:26:0;;-1:-1:-1;;15252:26:0;;;-1:-1:-1;;;;;;;15296:23:0;;15288:66;;;;-1:-1:-1;;;15288:66:0;;12098:2:1;15288:66:0;;;12080:21:1;12137:2;12117:18;;;12110:30;12176:32;12156:18;;;12149:60;12226:18;;15288:66:0;11896:354:1;15288:66:0;15385:5;-1:-1:-1;;;;;15372:18:0;:9;-1:-1:-1;;;;;15372:18:0;;15364:56;;;;-1:-1:-1;;;15364:56:0;;12457:2:1;15364:56:0;;;12439:21:1;12496:2;12476:18;;;12469:30;12535:27;12515:18;;;12508:55;12580:18;;15364:56:0;12255:349:1;15364:56:0;15457:8;15438:15;:27;;15430:70;;;;-1:-1:-1;;;15430:70:0;;12811:2:1;15430:70:0;;;12793:21:1;12850:2;12830:18;;;12823:30;12889:32;12869:18;;;12862:60;12939:18;;15430:70:0;12609:354:1;15430:70:0;15540:6;15511:10;:17;15522:5;-1:-1:-1;;;;;15511:17:0;-1:-1:-1;;;;;15511:17:0;;;;;;;;;;;;:26;15529:7;-1:-1:-1;;;;;15511:26:0;-1:-1:-1;;;;;15511:26:0;;;;;;;;;;;;;:35;;;;;-1:-1:-1;;;;;15511:35:0;;;;;-1:-1:-1;;;;;15511:35:0;;;;;;15578:7;-1:-1:-1;;;;;15562:32:0;15571:5;-1:-1:-1;;;;;15562:32:0;;15587:6;15562:32;;;;;-1:-1:-1;;;;;2802:39:1;;;;2784:58;;2772:2;2757:18;;2640:208;15562:32:0;;;;;;;;14514:1087;;;;;14327:1274;;;;;;;:::o;10897:261::-;10987:6;;-1:-1:-1;;;;;10987:6:0;10973:10;:20;10952:128;;;;-1:-1:-1;;;10952:128:0;;13170:2:1;10952:128:0;;;13152:21:1;13209:2;13189:18;;;13182:30;13248:34;13228:18;;;13221:62;13319:31;13299:18;;;13292:59;13368:19;;10952:128:0;12968:425:1;10952:128:0;11109:6;;11095:30;;;-1:-1:-1;;;;;11109:6:0;;;13572:51:1;;13659:32;;;13654:2;13639:18;;13632:60;11095:30:0;;13545:18:1;11095:30:0;;;;;;;11135:6;:16;;-1:-1:-1;;;;;;11135:16:0;-1:-1:-1;;;;;11135:16:0;;;;;;;;;;10897:261::o;24663:189::-;24765:6;24806:12;-1:-1:-1;;;24795:9:0;;24787:32;;;;-1:-1:-1;;;24787:32:0;;;;;;;;:::i;:::-;-1:-1:-1;24843:1:0;;24663:189;-1:-1:-1;;24663:189:0:o;25078:192::-;25194:6;25225:1;-1:-1:-1;;;;;25220:6:0;:1;-1:-1:-1;;;;;25220:6:0;;;25228:12;25212:29;;;;;-1:-1:-1;;;25212:29:0;;;;;;;;:::i;:::-;-1:-1:-1;25258:5:0;25262:1;25258;:5;:::i;:::-;25251:12;25078:192;-1:-1:-1;;;;25078:192:0:o;21687:791::-;-1:-1:-1;;;;;21823:17:0;;21802:123;;;;-1:-1:-1;;;21802:123:0;;14128:2:1;21802:123:0;;;14110:21:1;14167:2;14147:18;;;14140:30;14206:34;14186:18;;;14179:62;14277:29;14257:18;;;14250:57;14324:19;;21802:123:0;13926:423:1;21802:123:0;-1:-1:-1;;;;;21956:17:0;;21935:121;;;;-1:-1:-1;;;21935:121:0;;14556:2:1;21935:121:0;;;14538:21:1;14595:2;14575:18;;;14568:30;14634:34;14614:18;;;14607:62;14705:27;14685:18;;;14678:55;14750:19;;21935:121:0;14354:421:1;21935:121:0;-1:-1:-1;;;;;22102:13:0;;;;;;:8;:13;;;;;;;;;;22083:131;;;;;;;;;;;;;;-1:-1:-1;;;;;22102:13:0;;;;22129:6;;22083:131;;;;;;;:5;:131::i;:::-;-1:-1:-1;;;;;22067:13:0;;;;;;;:8;:13;;;;;;;;:147;;-1:-1:-1;;;;;;22067:147:0;-1:-1:-1;;;;;22067:147:0;;;;;;22259:13;;;;;;;;;;22240:125;;;;;;;;;;;;;;22259:13;;;;;22286:6;;22240:125;;;;;;;;:5;:125::i;:::-;-1:-1:-1;;;;;22224:13:0;;;;;;;:8;:13;;;;;;;;;:141;;-1:-1:-1;;;;;;22224:141:0;-1:-1:-1;;;;;22224:141:0;;;;;;22380:26;;2802:39:1;;;2784:58;;22224:13:0;;22380:26;;;;;;2757:18:1;22380:26:0;;;;;;;-1:-1:-1;;;;;22432:14:0;;;;;;;:9;:14;;;;;;;22448;;;;;;;;22417:54;;22432:14;;;;22448;22464:6;22417:14;:54::i;1128:176::-;1186:7;;1217:5;1221:1;1217;:5;:::i;:::-;1205:17;;1245:1;1240;:6;;1232:46;;;;-1:-1:-1;;;1232:46:0;;15112:2:1;1232:46:0;;;15094:21:1;15151:2;15131:18;;;15124:30;15190:29;15170:18;;;15163:57;15237:18;;1232:46:0;14910:351:1;2885:459:0;2943:7;3184:1;3189;3184:6;3180:45;;-1:-1:-1;3213:1:0;3206:8;;3180:45;3235:9;3247:5;3251:1;3247;:5;:::i;:::-;3235:17;-1:-1:-1;3279:1:0;3270:5;3274:1;3235:17;3270:5;:::i;:::-;:10;3262:56;;;;-1:-1:-1;;;3262:56:0;;15766:2:1;3262:56:0;;;15748:21:1;15805:2;15785:18;;;15778:30;15844:34;15824:18;;;15817:62;-1:-1:-1;;;15895:18:1;;;15888:31;15936:19;;3262:56:0;15564:397:1;4526:130:0;4584:7;4610:39;4614:1;4617;4610:39;;;;;;;;;;;;;;;;;:3;:39::i;24858:214::-;24974:6;;25003:5;25007:1;25003;:5;:::i;:::-;24992:16;;25031:1;-1:-1:-1;;;;;25026:6:0;:1;-1:-1:-1;;;;;25026:6:0;;;25034:12;25018:29;;;;;-1:-1:-1;;;25018:29:0;;;;;;;;:::i;:::-;-1:-1:-1;25064:1:0;24858:214;-1:-1:-1;;;;24858:214:0:o;22484:1187::-;22618:6;-1:-1:-1;;;;;22608:16:0;:6;-1:-1:-1;;;;;22608:16:0;;;:30;;;;;22637:1;22628:6;-1:-1:-1;;;;;22628:10:0;;22608:30;22604:1061;;;-1:-1:-1;;;;;22658:20:0;;;22654:494;;-1:-1:-1;;;;;22717:22:0;;22698:16;22717:22;;;:14;:22;;;;;;;;;22776:13;:100;;22875:1;22776:100;;;-1:-1:-1;;;;;22812:19:0;;;;;;:11;:19;;;;;;22832:13;22844:1;22832:9;:13;:::i;:::-;22812:34;;;;;;;;;;;;;-1:-1:-1;22812:34:0;:40;-1:-1:-1;;;22812:40:0;;-1:-1:-1;;;;;22812:40:0;22776:100;22757:119;;22894:16;22913:145;22940:9;22971:6;22913:145;;;;;;;;;;;;;;;;;:5;:145::i;:::-;22894:164;;23076:57;23093:6;23101:9;23112;23123;23076:16;:57::i;:::-;22680:468;;;22654:494;-1:-1:-1;;;;;23166:20:0;;;23162:493;;-1:-1:-1;;;;;23225:22:0;;23206:16;23225:22;;;:14;:22;;;;;;;;;23284:13;:100;;23383:1;23284:100;;;-1:-1:-1;;;;;23320:19:0;;;;;;:11;:19;;;;;;23340:13;23352:1;23340:9;:13;:::i;:::-;23320:34;;;;;;;;;;;;;-1:-1:-1;23320:34:0;:40;-1:-1:-1;;;23320:40:0;;-1:-1:-1;;;;;23320:40:0;23284:100;23265:119;;23402:16;23421:144;23448:9;23479:6;23421:144;;;;;;;;;;;;;;;;;:5;:144::i;:::-;23402:163;;23583:57;23600:6;23608:9;23619;23630;23583:16;:57::i;21314:367::-;-1:-1:-1;;;;;21416:20:0;;;21390:23;21416:20;;;:9;:20;;;;;;;;;;21472:8;:19;;;;;;21501:20;;;;:32;;;-1:-1:-1;;;;;;21501:32:0;;;;;;;21549:54;;21416:20;;;;;-1:-1:-1;;;;;21472:19:0;;;;21501:32;;21416:20;;;21549:54;;21390:23;21549:54;21614:60;21629:15;21646:9;21657:16;21614:14;:60::i;:::-;21380:301;;21314:367;;:::o;5131:368::-;5247:7;5347:12;5340:5;5332:28;;;;-1:-1:-1;;;5332:28:0;;;;;;;;:::i;:::-;-1:-1:-1;5370:9:0;5382:5;5386:1;5382;:5;:::i;:::-;5370:17;5131:368;-1:-1:-1;;;;;5131:368:0:o;23677:785::-;23834:18;23855:109;23875:12;23855:109;;;;;;;;;;;;;;;;;:6;:109::i;:::-;23834:130;;24007:1;23992:12;:16;;;:97;;;;-1:-1:-1;;;;;;24024:22:0;;;;;;:11;:22;;;;;:65;;;;24047:16;24062:1;24047:12;:16;:::i;:::-;24024:40;;;;;;;;;;;;;;;-1:-1:-1;24024:40:0;:50;;:65;23992:97;23975:414;;;-1:-1:-1;;;;;24114:22:0;;;;;;:11;:22;;;;;24163:8;;24137:16;24152:1;24137:12;:16;:::i;:::-;24114:40;;;;;;;;;;;;;-1:-1:-1;24114:40:0;:57;;-1:-1:-1;;;;;24114:57:0;;;;-1:-1:-1;;;24114:57:0;-1:-1:-1;;24114:57:0;;;;;;;;;23975:414;;;24241:79;;;;;;;;;;;;;;-1:-1:-1;;;;;24241:79:0;;;;;;;;;;-1:-1:-1;;;;;24202:22:0;;-1:-1:-1;24202:22:0;;;:11;:22;;;;;:36;;;;;;;;;;;;:118;;;;;;;;;-1:-1:-1;;;24202:118:0;-1:-1:-1;;24202:118:0;;;;;;;;;;;;24362:16;24225:12;24202:118;24362:16;:::i;:::-;-1:-1:-1;;;;;24334:25:0;;;;;;:14;:25;;;;;:44;;-1:-1:-1;;24334:44:0;;;;;;;;;;;;23975:414;24404:51;;;-1:-1:-1;;;;;16548:39:1;;;16530:58;;16624:39;;16619:2;16604:18;;16597:67;-1:-1:-1;;;;;24404:51:0;;;;;16503:18:1;24404:51:0;;;;;;;23824:638;23677:785;;;;:::o;24468:189::-;24570:6;24611:12;-1:-1:-1;;;24600:9:0;;24592:32;;;;-1:-1:-1;;;24592:32:0;;;;;;;14:418:1;163:2;152:9;145:21;126:4;195:6;189:13;238:6;233:2;222:9;218:18;211:34;297:6;292:2;284:6;280:15;275:2;264:9;260:18;254:50;353:1;348:2;339:6;328:9;324:22;320:31;313:42;423:2;416;412:7;407:2;399:6;395:15;391:29;380:9;376:45;372:54;364:62;;;14:418;;;;:::o;645:173::-;713:20;;-1:-1:-1;;;;;762:31:1;;752:42;;742:70;;808:1;805;798:12;742:70;645:173;;;:::o;823:300::-;891:6;899;952:2;940:9;931:7;927:23;923:32;920:52;;;968:1;965;958:12;920:52;991:29;1010:9;991:29;:::i;:::-;981:39;1089:2;1074:18;;;;1061:32;;-1:-1:-1;;;823:300:1:o;1684:374::-;1761:6;1769;1777;1830:2;1818:9;1809:7;1805:23;1801:32;1798:52;;;1846:1;1843;1836:12;1798:52;1869:29;1888:9;1869:29;:::i;:::-;1859:39;;1917:38;1951:2;1940:9;1936:18;1917:38;:::i;:::-;1684:374;;1907:48;;-1:-1:-1;;;2024:2:1;2009:18;;;;1996:32;;1684:374::o;2252:186::-;2311:6;2364:2;2352:9;2343:7;2339:23;2335:32;2332:52;;;2380:1;2377;2370:12;2332:52;2403:29;2422:9;2403:29;:::i;2853:156::-;2919:20;;2979:4;2968:16;;2958:27;;2948:55;;2999:1;2996;2989:12;3014:733;3116:6;3124;3132;3140;3148;3156;3209:3;3197:9;3188:7;3184:23;3180:33;3177:53;;;3226:1;3223;3216:12;3177:53;3249:29;3268:9;3249:29;:::i;:::-;3239:39;-1:-1:-1;3347:2:1;3332:18;;3319:32;;-1:-1:-1;3448:2:1;3433:18;;3420:32;;-1:-1:-1;3497:36:1;3529:2;3514:18;;3497:36;:::i;:::-;3014:733;;;;-1:-1:-1;3014:733:1;;3606:3;3591:19;;3578:33;;3710:3;3695:19;;;3682:33;;-1:-1:-1;3014:733:1;-1:-1:-1;;3014:733:1:o;3752:808::-;3863:6;3871;3879;3887;3895;3903;3911;3964:3;3952:9;3943:7;3939:23;3935:33;3932:53;;;3981:1;3978;3971:12;3932:53;4004:29;4023:9;4004:29;:::i;:::-;3994:39;;4052:38;4086:2;4075:9;4071:18;4052:38;:::i;:::-;4042:48;-1:-1:-1;4159:2:1;4144:18;;4131:32;;-1:-1:-1;4260:2:1;4245:18;;4232:32;;-1:-1:-1;4309:37:1;4341:3;4326:19;;4309:37;:::i;:::-;3752:808;;;;-1:-1:-1;3752:808:1;;;;4299:47;4419:3;4404:19;;4391:33;;-1:-1:-1;4523:3:1;4508:19;;;4495:33;;3752:808;-1:-1:-1;;3752:808:1:o;4565:260::-;4633:6;4641;4694:2;4682:9;4673:7;4669:23;4665:32;4662:52;;;4710:1;4707;4700:12;4662:52;4733:29;4752:9;4733:29;:::i;:::-;4723:39;;4781:38;4815:2;4804:9;4800:18;4781:38;:::i;:::-;4771:48;;4565:260;;;;;:::o;4830:350::-;4897:6;4905;4958:2;4946:9;4937:7;4933:23;4929:32;4926:52;;;4974:1;4971;4964:12;4926:52;4997:29;5016:9;4997:29;:::i;:::-;4987:39;;5076:2;5065:9;5061:18;5048:32;5120:10;5113:5;5109:22;5102:5;5099:33;5089:61;;5146:1;5143;5136:12;5089:61;5169:5;5159:15;;;4830:350;;;;;:::o;7684:127::-;7745:10;7740:3;7736:20;7733:1;7726:31;7776:4;7773:1;7766:15;7800:4;7797:1;7790:15;7816:170;7913:10;7906:18;;;7886;;;7882:43;;7937:20;;7934:46;;;7960:18;;:::i;7991:127::-;8052:10;8047:3;8043:20;8040:1;8033:31;8083:4;8080:1;8073:15;8107:4;8104:1;8097:15;8123:178;8162:1;8196:10;8193:1;8189:18;8226:3;8216:37;;8233:18;;:::i;:::-;8291:3;8278:10;8275:1;8271:18;8267:28;8262:33;;;8123:178;;;;:::o;10356:135::-;10395:3;10416:17;;;10413:43;;10436:18;;:::i;:::-;-1:-1:-1;10483:1:1;10472:13;;10356:135::o;13703:218::-;-1:-1:-1;;;;;13809:34:1;;;13773;;;13769:75;;13856:36;;13853:62;;;13895:18;;:::i;14780:125::-;14845:9;;;14866:10;;;14863:36;;;14879:18;;:::i;15266:168::-;15339:9;;;15370;;15387:15;;;15381:22;;15367:37;15357:71;;15408:18;;:::i;15439:120::-;15479:1;15505;15495:35;;15510:18;;:::i;:::-;-1:-1:-1;15544:9:1;;15439:120::o;15966:215::-;-1:-1:-1;;;;;16034:34:1;;;16070;;;16030:75;;16117:35;;16114:61;;;16155:18;;:::i;16186:167::-;16281:10;16254:18;;;16274;;;16250:43;;16305:19;;16302:45;;;16327:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1776800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DELEGATION_TYPEHASH()": "260",
								"DOMAIN_TYPEHASH()": "306",
								"PERMIT_TYPEHASH()": "240",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2620",
								"checkpoints(address,uint32)": "2831",
								"decimals()": "293",
								"delegate(address)": "infinite",
								"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"delegates(address)": "2622",
								"getCurrentVotes(address)": "infinite",
								"getPriorVotes(address,uint256)": "infinite",
								"minimumTimeBetweenMints()": "292",
								"mint(address,uint256)": "infinite",
								"mintCap()": "293",
								"minter()": "2382",
								"mintingAllowedAfter()": "2362",
								"name()": "infinite",
								"nonces(address)": "2583",
								"numCheckpoints(address)": "2577",
								"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"setMinter(address)": "30280",
								"symbol()": "infinite",
								"totalSupply()": "2383",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_delegate(address,address)": "infinite",
								"_moveDelegates(address,address,uint96)": "infinite",
								"_transferTokens(address,address,uint96)": "infinite",
								"_writeCheckpoint(address,uint32,uint96,uint96)": "infinite",
								"add96(uint96,uint96,string memory)": "infinite",
								"getChainId()": "infinite",
								"safe32(uint256,string memory)": "infinite",
								"safe96(uint256,string memory)": "infinite",
								"sub96(uint96,uint96,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 6732,
									"end": 25451,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 6732,
									"end": 25451,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6732,
									"end": 25451,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7119,
									"end": 7135,
									"name": "PUSH",
									"source": 0,
									"value": "33B2E3C9FD0803CE8000000"
								},
								{
									"begin": 7090,
									"end": 7135,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7090,
									"end": 7135,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 10276,
									"end": 10782,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 10276,
									"end": 10782,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10276,
									"end": 10782,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 10276,
									"end": 10782,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 10276,
									"end": 10782,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 10276,
									"end": 10782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10276,
									"end": 10782,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10276,
									"end": 10782,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 10276,
									"end": 10782,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 10276,
									"end": 10782,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 10276,
									"end": 10782,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 10276,
									"end": 10782,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 10276,
									"end": 10782,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 10276,
									"end": 10782,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 10276,
									"end": 10782,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 10276,
									"end": 10782,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 10276,
									"end": 10782,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10276,
									"end": 10782,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 10276,
									"end": 10782,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 10276,
									"end": 10782,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 10276,
									"end": 10782,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10276,
									"end": 10782,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 10276,
									"end": 10782,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 10276,
									"end": 10782,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10276,
									"end": 10782,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10276,
									"end": 10782,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 10276,
									"end": 10782,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 10276,
									"end": 10782,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 10276,
									"end": 10782,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 10276,
									"end": 10782,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 10276,
									"end": 10782,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 10276,
									"end": 10782,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 10444,
									"end": 10459,
									"name": "TIMESTAMP",
									"source": 0
								},
								{
									"begin": 10420,
									"end": 10440,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10420,
									"end": 10459,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 10420,
									"end": 10459,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 10399,
									"end": 10542,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 10399,
									"end": 10542,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 10399,
									"end": 10542,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 10399,
									"end": 10542,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 10399,
									"end": 10542,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10399,
									"end": 10542,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 757,
									"end": 759,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 10399,
									"end": 10542,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 10399,
									"end": 10542,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 10399,
									"end": 10542,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 739,
									"end": 760,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 796,
									"end": 798,
									"name": "PUSH",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 776,
									"end": 794,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 776,
									"end": 794,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 776,
									"end": 794,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 769,
									"end": 799,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 835,
									"end": 869,
									"name": "PUSH",
									"source": 1,
									"value": "556E693A3A636F6E7374727563746F723A206D696E74696E672063616E206F6E"
								},
								{
									"begin": 815,
									"end": 833,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 815,
									"end": 833,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 815,
									"end": 833,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 808,
									"end": 870,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 906,
									"end": 933,
									"name": "PUSH",
									"source": 1,
									"value": "6C7920626567696E206166746572206465706C6F796D656E7400000000000000"
								},
								{
									"begin": 886,
									"end": 904,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 886,
									"end": 904,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 886,
									"end": 904,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 879,
									"end": 934,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 951,
									"end": 970,
									"name": "PUSH",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 951,
									"end": 970,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 10399,
									"end": 10542,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 10399,
									"end": 10542,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 10399,
									"end": 10542,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10399,
									"end": 10542,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 10399,
									"end": 10542,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 10399,
									"end": 10542,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10399,
									"end": 10542,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 10399,
									"end": 10542,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 10399,
									"end": 10542,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 10580,
									"end": 10591,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10580,
									"end": 10591,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10580,
									"end": 10591,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 10553,
									"end": 10570,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 10553,
									"end": 10570,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 10553,
									"end": 10570,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10553,
									"end": 10570,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 10553,
									"end": 10570,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 10553,
									"end": 10561,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 10553,
									"end": 10570,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 10553,
									"end": 10570,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10553,
									"end": 10570,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10553,
									"end": 10570,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 10553,
									"end": 10570,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 10553,
									"end": 10570,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10553,
									"end": 10570,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 10553,
									"end": 10570,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 10553,
									"end": 10592,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10553,
									"end": 10592,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "60"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 10553,
									"end": 10592,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "60"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 10553,
									"end": 10592,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10553,
									"end": 10592,
									"name": "SWAP6",
									"source": 0
								},
								{
									"begin": 10553,
									"end": 10592,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 10553,
									"end": 10592,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 10553,
									"end": 10592,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10553,
									"end": 10592,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 10553,
									"end": 10592,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 10553,
									"end": 10592,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10553,
									"end": 10592,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 10553,
									"end": 10592,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 10637,
									"end": 10648,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 10637,
									"end": 10648,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 10607,
									"end": 10649,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 10607,
									"end": 10649,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1127,
									"end": 1152,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1127,
									"end": 1152,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1127,
									"end": 1152,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 10553,
									"end": 10570,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10553,
									"end": 10570,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 10580,
									"end": 10591,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 10607,
									"end": 10649,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 10607,
									"end": 10649,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1100,
									"end": 1118,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 10607,
									"end": 10649,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 10607,
									"end": 10649,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 10607,
									"end": 10649,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10607,
									"end": 10649,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 10607,
									"end": 10649,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 10607,
									"end": 10649,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10607,
									"end": 10649,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 10659,
									"end": 10665,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 10659,
									"end": 10675,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10659,
									"end": 10675,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 10659,
									"end": 10675,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 10659,
									"end": 10675,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 10659,
									"end": 10675,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 10659,
									"end": 10675,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10659,
									"end": 10675,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10659,
									"end": 10675,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 10659,
									"end": 10675,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10659,
									"end": 10675,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 10659,
									"end": 10675,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 10690,
									"end": 10723,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 10690,
									"end": 10723,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10690,
									"end": 10723,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1337,
									"end": 1388,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1337,
									"end": 1388,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1419,
									"end": 1421,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1404,
									"end": 1422,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1404,
									"end": 1422,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1397,
									"end": 1457,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1397,
									"end": 1457,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1397,
									"end": 1457,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1397,
									"end": 1457,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 10690,
									"end": 10723,
									"name": "PUSH",
									"source": 0,
									"value": "3B0007EB941CF645526CBB3A4FDAECDA9D28CE4843167D9263B536A1F1EDC0F6"
								},
								{
									"begin": 10690,
									"end": 10723,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1310,
									"end": 1328,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 10690,
									"end": 10723,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 10690,
									"end": 10723,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 10690,
									"end": 10723,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10690,
									"end": 10723,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 10690,
									"end": 10723,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 10690,
									"end": 10723,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10690,
									"end": 10723,
									"name": "LOG1",
									"source": 0
								},
								{
									"begin": 10733,
									"end": 10752,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 10733,
									"end": 10775,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6732,
									"end": 25451,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 6732,
									"end": 25451,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6732,
									"end": 25451,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 196,
									"end": 550,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 550,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 284,
									"end": 290,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 298,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 300,
									"end": 306,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 353,
									"end": 355,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 341,
									"end": 350,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 332,
									"end": 339,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 328,
									"end": 351,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 324,
									"end": 356,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 321,
									"end": 373,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 321,
									"end": 373,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 321,
									"end": 373,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 369,
									"end": 370,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 366,
									"end": 367,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 359,
									"end": 371,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 321,
									"end": 373,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 321,
									"end": 373,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 392,
									"end": 432,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 422,
									"end": 431,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 392,
									"end": 432,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 392,
									"end": 432,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 392,
									"end": 432,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 392,
									"end": 432,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 382,
									"end": 432,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 382,
									"end": 432,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 451,
									"end": 500,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 496,
									"end": 498,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 485,
									"end": 494,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 481,
									"end": 499,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 451,
									"end": 500,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 451,
									"end": 500,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 451,
									"end": 500,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 451,
									"end": 500,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 441,
									"end": 500,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 441,
									"end": 500,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 540,
									"end": 542,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 529,
									"end": 538,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 525,
									"end": 543,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 519,
									"end": 544,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 509,
									"end": 544,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 509,
									"end": 544,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 196,
									"end": 550,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 196,
									"end": 550,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 196,
									"end": 550,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 196,
									"end": 550,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 196,
									"end": 550,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 196,
									"end": 550,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1163,
									"end": 1463,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1163,
									"end": 1463,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6732,
									"end": 25451,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6732,
									"end": 25451,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6732,
									"end": 25451,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6732,
									"end": 25451,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6732,
									"end": 25451,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 6732,
									"end": 25451,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6732,
									"end": 25451,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b4b84d2b003d0602ebacd65cb25e2c213780afbfab33bc022976f467f1db628364736f6c634300081a0033",
									".code": [
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH",
											"source": 0,
											"value": "6FCFFF45"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH",
											"source": 0,
											"value": "B4B5EA57"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH",
											"source": 0,
											"value": "E7A324DC"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH",
											"source": 0,
											"value": "F1127ED8"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH",
											"source": 0,
											"value": "FCA3B5AA"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH",
											"source": 0,
											"value": "B4B5EA57"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH",
											"source": 0,
											"value": "C3CDA520"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH",
											"source": 0,
											"value": "D505ACCF"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH",
											"source": 0,
											"value": "782D6FE1"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH",
											"source": 0,
											"value": "782D6FE1"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH",
											"source": 0,
											"value": "7ECEBE00"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH",
											"source": 0,
											"value": "6FCFFF45"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH",
											"source": 0,
											"value": "76C71CA1"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH",
											"source": 0,
											"value": "30ADF81F"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH",
											"source": 0,
											"value": "587CDE1E"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH",
											"source": 0,
											"value": "5C11D62F"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH",
											"source": 0,
											"value": "5C19A95C"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH",
											"source": 0,
											"value": "30ADF81F"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH",
											"source": 0,
											"value": "30B36CEF"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH",
											"source": 0,
											"value": "7546172"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH",
											"source": 0,
											"value": "20606B70"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 25451,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 6839,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6800,
											"end": 6839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 6839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 6800,
											"end": 6839,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6800,
											"end": 6839,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 6839,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 6839,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6800,
											"end": 6839,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 6839,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6800,
											"end": 6839,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 6839,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 6839,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 6800,
											"end": 6839,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 6839,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 6839,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6800,
											"end": 6839,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "556E697377617"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6800,
											"end": 6839,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 6839,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 6839,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 6839,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 6839,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 6839,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 6800,
											"end": 6839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 6839,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6800,
											"end": 6839,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 6839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 6800,
											"end": 6839,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 6839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 6839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 6800,
											"end": 6839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 6839,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 6800,
											"end": 6839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 6839,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6800,
											"end": 6839,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 6839,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 6839,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 6839,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 6839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 6839,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 7209,
											"end": 7230,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7209,
											"end": 7230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7209,
											"end": 7230,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7209,
											"end": 7230,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7209,
											"end": 7230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7209,
											"end": 7230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7209,
											"end": 7230,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7209,
											"end": 7230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7209,
											"end": 7230,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7209,
											"end": 7230,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7209,
											"end": 7230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7209,
											"end": 7230,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7209,
											"end": 7230,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 601,
											"end": 633,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 601,
											"end": 633,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 601,
											"end": 633,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 583,
											"end": 634,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 583,
											"end": 634,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 571,
											"end": 573,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 556,
											"end": 574,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7209,
											"end": 7230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 437,
											"end": 640,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13513,
											"end": 13849,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 13513,
											"end": 13849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13513,
											"end": 13849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 13513,
											"end": 13849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 13513,
											"end": 13849,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13513,
											"end": 13849,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13513,
											"end": 13849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 13513,
											"end": 13849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13513,
											"end": 13849,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 13513,
											"end": 13849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13513,
											"end": 13849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 13513,
											"end": 13849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13513,
											"end": 13849,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 13513,
											"end": 13849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13513,
											"end": 13849,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13513,
											"end": 13849,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1307,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1293,
											"end": 1307,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1286,
											"end": 1308,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1309,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1309,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1256,
											"end": 1258,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 1259,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13513,
											"end": 13849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1128,
											"end": 1315,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7090,
											"end": 7135,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 7090,
											"end": 7135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7090,
											"end": 7135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 7090,
											"end": 7135,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7090,
											"end": 7135,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7090,
											"end": 7135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7090,
											"end": 7135,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7090,
											"end": 7135,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 7090,
											"end": 7135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7090,
											"end": 7135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7090,
											"end": 7135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1466,
											"end": 1491,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1466,
											"end": 1491,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1466,
											"end": 1491,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1456,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1439,
											"end": 1457,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7090,
											"end": 7135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1320,
											"end": 1497,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8401,
											"end": 8553,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 8401,
											"end": 8553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8401,
											"end": 8553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 8451,
											"end": 8553,
											"name": "PUSH",
											"source": 0,
											"value": "8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866"
										},
										{
											"begin": 8401,
											"end": 8553,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8401,
											"end": 8553,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16733,
											"end": 17485,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 16733,
											"end": 17485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16733,
											"end": 17485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 16733,
											"end": 17485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 16733,
											"end": 17485,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 16733,
											"end": 17485,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16733,
											"end": 17485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 16733,
											"end": 17485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16733,
											"end": 17485,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 16733,
											"end": 17485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16733,
											"end": 17485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 16733,
											"end": 17485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8856,
											"end": 9023,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 8856,
											"end": 9023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8856,
											"end": 9023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 8906,
											"end": 9023,
											"name": "PUSH",
											"source": 0,
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 8856,
											"end": 9023,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8856,
											"end": 9023,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7331,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 7297,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 7297,
											"end": 7331,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7297,
											"end": 7331,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7331,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7331,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6994,
											"end": 7029,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 6994,
											"end": 7029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6994,
											"end": 7029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 7027,
											"end": 7029,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 6994,
											"end": 7029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6994,
											"end": 7029,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6994,
											"end": 7029,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 6994,
											"end": 7029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6994,
											"end": 7029,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6994,
											"end": 7029,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2239,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 2223,
											"end": 2240,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2223,
											"end": 2240,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2223,
											"end": 2240,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2205,
											"end": 2241,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2205,
											"end": 2241,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2193,
											"end": 2195,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2178,
											"end": 2196,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6994,
											"end": 7029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2063,
											"end": 2247,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11326,
											"end": 12584,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 11326,
											"end": 12584,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11326,
											"end": 12584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 11326,
											"end": 12584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 11326,
											"end": 12584,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 11326,
											"end": 12584,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11326,
											"end": 12584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 11326,
											"end": 12584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11326,
											"end": 12584,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 11326,
											"end": 12584,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11326,
											"end": 12584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 11326,
											"end": 12584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11326,
											"end": 12584,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 11326,
											"end": 12584,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11326,
											"end": 12584,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 7914,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 7870,
											"end": 7914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 7914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7870,
											"end": 7914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 7870,
											"end": 7914,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 7914,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7870,
											"end": 7914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 7870,
											"end": 7914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 7914,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 7870,
											"end": 7914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 7914,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 7870,
											"end": 7914,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7870,
											"end": 7914,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 7914,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7870,
											"end": 7914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 7914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 7914,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 7914,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7870,
											"end": 7914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 7914,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 7914,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7870,
											"end": 7914,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 7914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7870,
											"end": 7914,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7381,
											"end": 7442,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 7381,
											"end": 7442,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7381,
											"end": 7442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 7430,
											"end": 7442,
											"name": "PUSH",
											"source": 0,
											"value": "1E13380"
										},
										{
											"begin": 7381,
											"end": 7442,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7381,
											"end": 7442,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7381,
											"end": 7442,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 7381,
											"end": 7442,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7381,
											"end": 7442,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7381,
											"end": 7442,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2627,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2605,
											"end": 2628,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2605,
											"end": 2628,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2605,
											"end": 2628,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 2629,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 2629,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2575,
											"end": 2577,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2560,
											"end": 2578,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7381,
											"end": 7442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2443,
											"end": 2635,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17627,
											"end": 17727,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 17627,
											"end": 17727,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17627,
											"end": 17727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 17627,
											"end": 17727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 17627,
											"end": 17727,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17627,
											"end": 17727,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17627,
											"end": 17727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 17627,
											"end": 17727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17627,
											"end": 17727,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 17627,
											"end": 17727,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17627,
											"end": 17727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 17627,
											"end": 17727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8331,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 8283,
											"end": 8331,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 8283,
											"end": 8331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 8283,
											"end": 8331,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8331,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8283,
											"end": 8331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 8283,
											"end": 8331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8331,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 8283,
											"end": 8331,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8331,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 8283,
											"end": 8331,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8283,
											"end": 8331,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8331,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8283,
											"end": 8331,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8331,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8331,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8331,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8283,
											"end": 8331,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8331,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8331,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8331,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8283,
											"end": 8331,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8331,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8331,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 15906,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 15797,
											"end": 15906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 15906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 15797,
											"end": 15906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 15797,
											"end": 15906,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 15906,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15797,
											"end": 15906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 15797,
											"end": 15906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 15906,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 15797,
											"end": 15906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15882,
											"end": 15899,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15856,
											"end": 15863,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15882,
											"end": 15899,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15882,
											"end": 15899,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15882,
											"end": 15899,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15882,
											"end": 15890,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15882,
											"end": 15899,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15882,
											"end": 15899,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15882,
											"end": 15899,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15882,
											"end": 15899,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15882,
											"end": 15899,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15882,
											"end": 15899,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15882,
											"end": 15899,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15882,
											"end": 15899,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 15906,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7534,
											"end": 7567,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 7534,
											"end": 7567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7534,
											"end": 7567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 7566,
											"end": 7567,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7534,
											"end": 7567,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7534,
											"end": 7567,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20058,
											"end": 21308,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 20058,
											"end": 21308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20058,
											"end": 21308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 20058,
											"end": 21308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 20058,
											"end": 21308,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 20058,
											"end": 21308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20058,
											"end": 21308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 20058,
											"end": 21308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20058,
											"end": 21308,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 20058,
											"end": 21308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20058,
											"end": 21308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 20058,
											"end": 21308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20058,
											"end": 21308,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 20058,
											"end": 21308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20058,
											"end": 21308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20058,
											"end": 21308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2802,
											"end": 2841,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2841,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2841,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2784,
											"end": 2842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2784,
											"end": 2842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2772,
											"end": 2774,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2757,
											"end": 2775,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20058,
											"end": 21308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2640,
											"end": 2848,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9101,
											"end": 9142,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9101,
											"end": 9142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9101,
											"end": 9142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 9101,
											"end": 9142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 9101,
											"end": 9142,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9101,
											"end": 9142,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9101,
											"end": 9142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 9101,
											"end": 9142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9101,
											"end": 9142,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 9101,
											"end": 9142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9101,
											"end": 9142,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 9101,
											"end": 9142,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9101,
											"end": 9142,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9101,
											"end": 9142,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9101,
											"end": 9142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9101,
											"end": 9142,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9101,
											"end": 9142,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9101,
											"end": 9142,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9101,
											"end": 9142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9101,
											"end": 9142,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9101,
											"end": 9142,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9101,
											"end": 9142,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9101,
											"end": 9142,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6897,
											"end": 6934,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 6897,
											"end": 6934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6897,
											"end": 6934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 6897,
											"end": 6934,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6897,
											"end": 6934,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6897,
											"end": 6934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6897,
											"end": 6934,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6897,
											"end": 6934,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6897,
											"end": 6934,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6897,
											"end": 6934,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6897,
											"end": 6934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6897,
											"end": 6934,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6897,
											"end": 6934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6897,
											"end": 6934,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6897,
											"end": 6934,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6897,
											"end": 6934,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "554E49"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6897,
											"end": 6934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6897,
											"end": 6934,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6897,
											"end": 6934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6897,
											"end": 6934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6897,
											"end": 6934,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16162,
											"end": 16432,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 16162,
											"end": 16432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16162,
											"end": 16432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 16162,
											"end": 16432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 16162,
											"end": 16432,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 16162,
											"end": 16432,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16162,
											"end": 16432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 16162,
											"end": 16432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16162,
											"end": 16432,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 16162,
											"end": 16432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16162,
											"end": 16432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 16162,
											"end": 16432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19405,
											"end": 19636,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 19405,
											"end": 19636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19405,
											"end": 19636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 19405,
											"end": 19636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 19405,
											"end": 19636,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 19405,
											"end": 19636,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19405,
											"end": 19636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 19405,
											"end": 19636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19405,
											"end": 19636,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 19405,
											"end": 19636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19405,
											"end": 19636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 19405,
											"end": 19636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18150,
											"end": 19211,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 18150,
											"end": 19211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18150,
											"end": 19211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 18150,
											"end": 19211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 18150,
											"end": 19211,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 18150,
											"end": 19211,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18150,
											"end": 19211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 18150,
											"end": 19211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18150,
											"end": 19211,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 18150,
											"end": 19211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18150,
											"end": 19211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 18150,
											"end": 19211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14327,
											"end": 15601,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 14327,
											"end": 15601,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14327,
											"end": 15601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 14327,
											"end": 15601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 14327,
											"end": 15601,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14327,
											"end": 15601,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14327,
											"end": 15601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 14327,
											"end": 15601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14327,
											"end": 15601,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 14327,
											"end": 15601,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14327,
											"end": 15601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 14327,
											"end": 15601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12880,
											"end": 13045,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 12880,
											"end": 13045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12880,
											"end": 13045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 12880,
											"end": 13045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 12880,
											"end": 13045,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 12880,
											"end": 13045,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12880,
											"end": 13045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 12880,
											"end": 13045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12880,
											"end": 13045,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 12880,
											"end": 13045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13010,
											"end": 13029,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13010,
											"end": 13029,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13010,
											"end": 13029,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12980,
											"end": 12987,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13010,
											"end": 13029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13010,
											"end": 13029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13010,
											"end": 13029,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13010,
											"end": 13020,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13010,
											"end": 13029,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13010,
											"end": 13029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13010,
											"end": 13029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13010,
											"end": 13029,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13010,
											"end": 13029,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13010,
											"end": 13029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13010,
											"end": 13029,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13010,
											"end": 13029,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13010,
											"end": 13038,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 13010,
											"end": 13038,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13010,
											"end": 13038,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 13010,
											"end": 13038,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13010,
											"end": 13038,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13010,
											"end": 13038,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13010,
											"end": 13038,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13010,
											"end": 13038,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13010,
											"end": 13038,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13010,
											"end": 13038,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13010,
											"end": 13038,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13010,
											"end": 13038,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13010,
											"end": 13038,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13010,
											"end": 13038,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12880,
											"end": 13045,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8644,
											"end": 8769,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 8644,
											"end": 8769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8644,
											"end": 8769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 8698,
											"end": 8769,
											"name": "PUSH",
											"source": 0,
											"value": "E48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF"
										},
										{
											"begin": 8644,
											"end": 8769,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8644,
											"end": 8769,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 8217,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 8149,
											"end": 8217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 8217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 8149,
											"end": 8217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 8149,
											"end": 8217,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 8217,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8149,
											"end": 8217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 8149,
											"end": 8217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 8217,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 8149,
											"end": 8217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 8217,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 8149,
											"end": 8217,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8149,
											"end": 8217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 8217,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 8217,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 8217,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8149,
											"end": 8217,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 8217,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 8217,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 8217,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8149,
											"end": 8217,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 8217,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 8217,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 8217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 8217,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 8217,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 8217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 8217,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 8217,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 8217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 8217,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 8217,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 8217,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8149,
											"end": 8217,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 8217,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 8217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8149,
											"end": 8217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 8217,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8149,
											"end": 8217,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 8217,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 8217,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 8217,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 8149,
											"end": 8217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 8217,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8149,
											"end": 8217,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 8217,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5385,
											"end": 5395,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5373,
											"end": 5396,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5373,
											"end": 5396,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5373,
											"end": 5396,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5355,
											"end": 5397,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5355,
											"end": 5397,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5433,
											"end": 5472,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5433,
											"end": 5472,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5433,
											"end": 5472,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5428,
											"end": 5430,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5413,
											"end": 5431,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5413,
											"end": 5431,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5406,
											"end": 5473,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8149,
											"end": 8217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 5185,
											"end": 5479,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10897,
											"end": 11158,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 10897,
											"end": 11158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10897,
											"end": 11158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 10897,
											"end": 11158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 10897,
											"end": 11158,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10897,
											"end": 11158,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10897,
											"end": 11158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 10897,
											"end": 11158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10897,
											"end": 11158,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 10897,
											"end": 11158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10897,
											"end": 11158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 10897,
											"end": 11158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13513,
											"end": 13849,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 13513,
											"end": 13849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13600,
											"end": 13604,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13620,
											"end": 13633,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13652,
											"end": 13709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 13659,
											"end": 13668,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13652,
											"end": 13709,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13652,
											"end": 13709,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13652,
											"end": 13709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13652,
											"end": 13709,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13652,
											"end": 13709,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13652,
											"end": 13709,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13652,
											"end": 13709,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13652,
											"end": 13709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13652,
											"end": 13709,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 13652,
											"end": 13709,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13652,
											"end": 13709,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13652,
											"end": 13709,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13652,
											"end": 13709,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13652,
											"end": 13709,
											"name": "PUSH data",
											"source": 0,
											"value": "CB3E128DA7F3F16C83A901CCE3AB145C66BAD45A0CD648091FECC9964EBF42FE"
										},
										{
											"begin": 13652,
											"end": 13709,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 13652,
											"end": 13709,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13652,
											"end": 13709,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 13652,
											"end": 13658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 13652,
											"end": 13709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13652,
											"end": 13709,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 13652,
											"end": 13709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13739,
											"end": 13749,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13728,
											"end": 13750,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13728,
											"end": 13750,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13728,
											"end": 13750,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13728,
											"end": 13750,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13728,
											"end": 13738,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13728,
											"end": 13750,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13728,
											"end": 13750,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13728,
											"end": 13750,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13728,
											"end": 13750,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13728,
											"end": 13750,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13728,
											"end": 13750,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13728,
											"end": 13750,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13728,
											"end": 13750,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13728,
											"end": 13759,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 13728,
											"end": 13759,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13728,
											"end": 13759,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13728,
											"end": 13759,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13728,
											"end": 13759,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13728,
											"end": 13759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13728,
											"end": 13759,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13728,
											"end": 13759,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13728,
											"end": 13759,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13728,
											"end": 13759,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13728,
											"end": 13759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13728,
											"end": 13759,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13728,
											"end": 13768,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13728,
											"end": 13768,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13728,
											"end": 13768,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13728,
											"end": 13768,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 13728,
											"end": 13768,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13728,
											"end": 13768,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13728,
											"end": 13768,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13728,
											"end": 13768,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 13728,
											"end": 13768,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13728,
											"end": 13768,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13728,
											"end": 13768,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13784,
											"end": 13821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13784,
											"end": 13821,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2784,
											"end": 2842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2784,
											"end": 2842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2784,
											"end": 2842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13728,
											"end": 13768,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 13728,
											"end": 13768,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13728,
											"end": 13759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13728,
											"end": 13759,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13784,
											"end": 13821,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 13784,
											"end": 13821,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2775,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13784,
											"end": 13821,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13784,
											"end": 13821,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13784,
											"end": 13821,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13784,
											"end": 13821,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13784,
											"end": 13821,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13784,
											"end": 13821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13784,
											"end": 13821,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 13838,
											"end": 13842,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13831,
											"end": 13842,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13831,
											"end": 13842,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13831,
											"end": 13842,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13513,
											"end": 13849,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 13513,
											"end": 13849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13513,
											"end": 13849,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13513,
											"end": 13849,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13513,
											"end": 13849,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13513,
											"end": 13849,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13513,
											"end": 13849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16733,
											"end": 17485,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 16733,
											"end": 17485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16928,
											"end": 16943,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16928,
											"end": 16943,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16848,
											"end": 16852,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16928,
											"end": 16943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16928,
											"end": 16943,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16928,
											"end": 16943,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16928,
											"end": 16938,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 16928,
											"end": 16943,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16928,
											"end": 16943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16928,
											"end": 16943,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16928,
											"end": 16943,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16928,
											"end": 16943,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16928,
											"end": 16943,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16928,
											"end": 16943,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16928,
											"end": 16943,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16882,
											"end": 16892,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 16928,
											"end": 16952,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16928,
											"end": 16952,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16928,
											"end": 16952,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16928,
											"end": 16952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16928,
											"end": 16952,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16928,
											"end": 16952,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16928,
											"end": 16952,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16928,
											"end": 16952,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16928,
											"end": 16952,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16928,
											"end": 16952,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16978,
											"end": 17069,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16978,
											"end": 17069,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16978,
											"end": 17069,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 16978,
											"end": 17069,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16978,
											"end": 17069,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16978,
											"end": 17069,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16978,
											"end": 17069,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16978,
											"end": 17069,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16978,
											"end": 17069,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 16978,
											"end": 17069,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16978,
											"end": 17069,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16978,
											"end": 17069,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16882,
											"end": 16892,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16882,
											"end": 16892,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16928,
											"end": 16952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16928,
											"end": 16952,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16928,
											"end": 16952,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16928,
											"end": 16952,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16848,
											"end": 16852,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16848,
											"end": 16852,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16978,
											"end": 17069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 16978,
											"end": 17069,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16998,
											"end": 17007,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 16998,
											"end": 17007,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16978,
											"end": 17069,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16978,
											"end": 17069,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16978,
											"end": 17069,
											"name": "PUSH data",
											"source": 0,
											"value": "CB3E128DA7F3F16C83A901CCE3AB145C66BAD45A0CD648091FECC9964EBF42FE"
										},
										{
											"begin": 16978,
											"end": 17069,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16978,
											"end": 17069,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16978,
											"end": 17069,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16978,
											"end": 17069,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 16978,
											"end": 16984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 16978,
											"end": 17069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16978,
											"end": 17069,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 16978,
											"end": 17069,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16962,
											"end": 17069,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16962,
											"end": 17069,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17095,
											"end": 17098,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17084,
											"end": 17098,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17084,
											"end": 17091,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17084,
											"end": 17098,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17084,
											"end": 17098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17080,
											"end": 17414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 17080,
											"end": 17414,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17115,
											"end": 17134,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17137,
											"end": 17294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 17160,
											"end": 17176,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17194,
											"end": 17200,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17137,
											"end": 17294,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17137,
											"end": 17294,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17137,
											"end": 17294,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17137,
											"end": 17294,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 17137,
											"end": 17294,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17137,
											"end": 17294,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17137,
											"end": 17294,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17137,
											"end": 17294,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17137,
											"end": 17294,
											"name": "PUSH",
											"source": 0,
											"value": "3C"
										},
										{
											"begin": 17137,
											"end": 17294,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17137,
											"end": 17294,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17137,
											"end": 17294,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17137,
											"end": 17294,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17137,
											"end": 17294,
											"name": "PUSH data",
											"source": 0,
											"value": "136758788D48EC4D9744BA8C2136A9C9406D6C92CD4A81EFF0DE4942B636DB13"
										},
										{
											"begin": 17137,
											"end": 17294,
											"name": "PUSH",
											"source": 0,
											"value": "3C"
										},
										{
											"begin": 17137,
											"end": 17294,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17137,
											"end": 17294,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 17137,
											"end": 17142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 17137,
											"end": 17294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17137,
											"end": 17294,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 17137,
											"end": 17294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17308,
											"end": 17323,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17323,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17323,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17323,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17308,
											"end": 17323,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17323,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17323,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17318,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 17308,
											"end": 17323,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17308,
											"end": 17323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17323,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17323,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17323,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17308,
											"end": 17323,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17323,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17323,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17332,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17332,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17332,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17332,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17332,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17332,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17332,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17332,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17332,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17332,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17332,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17332,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17332,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17347,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17308,
											"end": 17347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17308,
											"end": 17347,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17347,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17347,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17367,
											"end": 17403,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17367,
											"end": 17403,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2784,
											"end": 2842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2784,
											"end": 2842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2784,
											"end": 2842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17308,
											"end": 17347,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17347,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17308,
											"end": 17332,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17332,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17308,
											"end": 17323,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17367,
											"end": 17403,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 17367,
											"end": 17403,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2775,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17367,
											"end": 17403,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17367,
											"end": 17403,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17367,
											"end": 17403,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17367,
											"end": 17403,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17367,
											"end": 17403,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17367,
											"end": 17403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17367,
											"end": 17403,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17414,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17080,
											"end": 17414,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 17080,
											"end": 17414,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17424,
											"end": 17457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 17440,
											"end": 17443,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 17445,
											"end": 17448,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 17450,
											"end": 17456,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17424,
											"end": 17439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 17424,
											"end": 17457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17424,
											"end": 17457,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 17424,
											"end": 17457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17474,
											"end": 17478,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17474,
											"end": 17478,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 16733,
											"end": 17485,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16733,
											"end": 17485,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11326,
											"end": 12584,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 11326,
											"end": 12584,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11413,
											"end": 11419,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11413,
											"end": 11419,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11413,
											"end": 11419,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11399,
											"end": 11409,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 11399,
											"end": 11419,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11391,
											"end": 11459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 11391,
											"end": 11459,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11391,
											"end": 11459,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11391,
											"end": 11459,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11391,
											"end": 11459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11391,
											"end": 11459,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5900,
											"end": 5902,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11391,
											"end": 11459,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11391,
											"end": 11459,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11391,
											"end": 11459,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5882,
											"end": 5903,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 5919,
											"end": 5937,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5919,
											"end": 5937,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5919,
											"end": 5937,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 5942,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5978,
											"end": 6012,
											"name": "PUSH",
											"source": 1,
											"value": "556E693A3A6D696E743A206F6E6C7920746865206D696E7465722063616E206D"
										},
										{
											"begin": 5958,
											"end": 5976,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5958,
											"end": 5976,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5958,
											"end": 5976,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5951,
											"end": 6013,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1A5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6029,
											"end": 6047,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6029,
											"end": 6047,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6029,
											"end": 6047,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6022,
											"end": 6055,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6072,
											"end": 6091,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 6072,
											"end": 6091,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11459,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 11391,
											"end": 11459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11391,
											"end": 11459,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11391,
											"end": 11459,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11391,
											"end": 11459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11391,
											"end": 11459,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11391,
											"end": 11459,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11391,
											"end": 11459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11391,
											"end": 11459,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11391,
											"end": 11459,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 11391,
											"end": 11459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11509,
											"end": 11528,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11509,
											"end": 11528,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11490,
											"end": 11505,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 11490,
											"end": 11528,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11490,
											"end": 11528,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11469,
											"end": 11588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 11469,
											"end": 11588,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11469,
											"end": 11588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11469,
											"end": 11588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11469,
											"end": 11588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11469,
											"end": 11588,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6304,
											"end": 6306,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11469,
											"end": 11588,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11469,
											"end": 11588,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11469,
											"end": 11588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6286,
											"end": 6307,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6343,
											"end": 6345,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 6323,
											"end": 6341,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6323,
											"end": 6341,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6323,
											"end": 6341,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6316,
											"end": 6346,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6382,
											"end": 6416,
											"name": "PUSH",
											"source": 1,
											"value": "556E693A3A6D696E743A206D696E74696E67206E6F7420616C6C6F7765642079"
										},
										{
											"begin": 6362,
											"end": 6380,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6362,
											"end": 6380,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6380,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6355,
											"end": 6417,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "195D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6433,
											"end": 6451,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6433,
											"end": 6451,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6433,
											"end": 6451,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6426,
											"end": 6458,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6475,
											"end": 6494,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 6475,
											"end": 6494,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11469,
											"end": 11588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 6102,
											"end": 6500,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11469,
											"end": 11588,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 11469,
											"end": 11588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11619,
											"end": 11636,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11619,
											"end": 11636,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11598,
											"end": 11708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 11598,
											"end": 11708,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11598,
											"end": 11708,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11598,
											"end": 11708,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11598,
											"end": 11708,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11598,
											"end": 11708,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6707,
											"end": 6709,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11598,
											"end": 11708,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11598,
											"end": 11708,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11598,
											"end": 11708,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6689,
											"end": 6710,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6746,
											"end": 6748,
											"name": "PUSH",
											"source": 1,
											"value": "2E"
										},
										{
											"begin": 6726,
											"end": 6744,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6726,
											"end": 6744,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6726,
											"end": 6744,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6719,
											"end": 6749,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6785,
											"end": 6819,
											"name": "PUSH",
											"source": 1,
											"value": "556E693A3A6D696E743A2063616E6E6F74207472616E7366657220746F207468"
										},
										{
											"begin": 6765,
											"end": 6783,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6765,
											"end": 6783,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6765,
											"end": 6783,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6758,
											"end": 6820,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "65207A65726F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "90"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6836,
											"end": 6854,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6836,
											"end": 6854,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6836,
											"end": 6854,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6829,
											"end": 6873,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6890,
											"end": 6909,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 6890,
											"end": 6909,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11598,
											"end": 11708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 6505,
											"end": 6915,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11598,
											"end": 11708,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 11598,
											"end": 11708,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11856,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 11794,
											"end": 11809,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 7442,
											"name": "PUSH",
											"source": 0,
											"value": "1E13380"
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 11768,
											"end": 11856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11856,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 11768,
											"end": 11856,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11746,
											"end": 11765,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11746,
											"end": 11856,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11746,
											"end": 11856,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11746,
											"end": 11856,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11746,
											"end": 11856,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11894,
											"end": 11907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11910,
											"end": 11964,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 11917,
											"end": 11926,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11910,
											"end": 11964,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11910,
											"end": 11964,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11910,
											"end": 11964,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11910,
											"end": 11964,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 11910,
											"end": 11964,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11910,
											"end": 11964,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11910,
											"end": 11964,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11910,
											"end": 11964,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11910,
											"end": 11964,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 11910,
											"end": 11964,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11910,
											"end": 11964,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11910,
											"end": 11964,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11910,
											"end": 11964,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11910,
											"end": 11964,
											"name": "PUSH data",
											"source": 0,
											"value": "BCB6733E7AC2AEE3C3602EE664D4B3CB251E429DF5C7E9148D412D0B60F07B16"
										},
										{
											"begin": 11910,
											"end": 11964,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 11910,
											"end": 11964,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11910,
											"end": 11964,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 11910,
											"end": 11916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 11910,
											"end": 11964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11910,
											"end": 11964,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 11910,
											"end": 11964,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11894,
											"end": 11964,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11894,
											"end": 11964,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12005,
											"end": 12058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 12018,
											"end": 12052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 12031,
											"end": 12042,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12031,
											"end": 12042,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7566,
											"end": 7567,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12018,
											"end": 12052,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 12018,
											"end": 12052,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12018,
											"end": 12030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 12018,
											"end": 12052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12018,
											"end": 12052,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 12018,
											"end": 12052,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12054,
											"end": 12057,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 12005,
											"end": 12017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 12005,
											"end": 12058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12005,
											"end": 12058,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 12005,
											"end": 12058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11995,
											"end": 12001,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11995,
											"end": 12058,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11995,
											"end": 12058,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 11995,
											"end": 12058,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11974,
											"end": 12112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 11974,
											"end": 12112,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11974,
											"end": 12112,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11974,
											"end": 12112,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11974,
											"end": 12112,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11974,
											"end": 12112,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7122,
											"end": 7124,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11974,
											"end": 12112,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11974,
											"end": 12112,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11974,
											"end": 12112,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7104,
											"end": 7125,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7163,
											"name": "PUSH",
											"source": 1,
											"value": "1C"
										},
										{
											"begin": 7141,
											"end": 7159,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7141,
											"end": 7159,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7141,
											"end": 7159,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7134,
											"end": 7164,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7200,
											"end": 7230,
											"name": "PUSH",
											"source": 1,
											"value": "556E693A3A6D696E743A206578636565646564206D696E742063617000000000"
										},
										{
											"begin": 7180,
											"end": 7198,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7180,
											"end": 7198,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7180,
											"end": 7198,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7173,
											"end": 7231,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7248,
											"end": 7266,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7248,
											"end": 7266,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11974,
											"end": 12112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 6920,
											"end": 7272,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11974,
											"end": 12112,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 11974,
											"end": 12112,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12136,
											"end": 12253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 12156,
											"end": 12189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 12169,
											"end": 12180,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12169,
											"end": 12180,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12182,
											"end": 12188,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12156,
											"end": 12189,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12156,
											"end": 12168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 12156,
											"end": 12189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12156,
											"end": 12189,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 12156,
											"end": 12189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12136,
											"end": 12253,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12136,
											"end": 12253,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12136,
											"end": 12253,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12136,
											"end": 12253,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12136,
											"end": 12253,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12136,
											"end": 12253,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12136,
											"end": 12253,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12136,
											"end": 12253,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12136,
											"end": 12253,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 12136,
											"end": 12253,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12136,
											"end": 12253,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12136,
											"end": 12253,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12136,
											"end": 12253,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12136,
											"end": 12253,
											"name": "PUSH data",
											"source": 0,
											"value": "1EF2347F5DBB97E8EB7BC1442A128A1C6E65386B013257FE2B8AD95AAAA96AB8"
										},
										{
											"begin": 12136,
											"end": 12253,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 12136,
											"end": 12253,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12136,
											"end": 12253,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 12136,
											"end": 12142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 12136,
											"end": 12253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12136,
											"end": 12253,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 12136,
											"end": 12253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12122,
											"end": 12253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12122,
											"end": 12253,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12122,
											"end": 12253,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12122,
											"end": 12133,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12122,
											"end": 12253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12122,
											"end": 12253,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12122,
											"end": 12253,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12347,
											"end": 12360,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12347,
											"end": 12360,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12347,
											"end": 12360,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12347,
											"end": 12360,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12347,
											"end": 12355,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12347,
											"end": 12360,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12347,
											"end": 12360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12347,
											"end": 12360,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12347,
											"end": 12360,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12347,
											"end": 12360,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12347,
											"end": 12360,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12347,
											"end": 12360,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12347,
											"end": 12360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12347,
											"end": 12360,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12347,
											"end": 12360,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12328,
											"end": 12442,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12328,
											"end": 12442,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12328,
											"end": 12442,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12328,
											"end": 12442,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12328,
											"end": 12442,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12328,
											"end": 12442,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12328,
											"end": 12442,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 12328,
											"end": 12442,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12328,
											"end": 12442,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 12328,
											"end": 12442,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12328,
											"end": 12442,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12328,
											"end": 12442,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12328,
											"end": 12442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 12328,
											"end": 12442,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 12347,
											"end": 12360,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12347,
											"end": 12360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12347,
											"end": 12360,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12347,
											"end": 12360,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12347,
											"end": 12360,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12374,
											"end": 12380,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12374,
											"end": 12380,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12328,
											"end": 12442,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12328,
											"end": 12442,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12328,
											"end": 12442,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12328,
											"end": 12442,
											"name": "PUSH data",
											"source": 0,
											"value": "AB5EAE08D50CC345C58C2D7D67F9034A98D0A88DD540314C408C39A8DCEC01D"
										},
										{
											"begin": 12328,
											"end": 12442,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12328,
											"end": 12442,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12328,
											"end": 12442,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12328,
											"end": 12442,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 12328,
											"end": 12333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 12328,
											"end": 12442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12328,
											"end": 12442,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 12328,
											"end": 12442,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12312,
											"end": 12325,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12312,
											"end": 12325,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12312,
											"end": 12325,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12312,
											"end": 12325,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12312,
											"end": 12325,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12312,
											"end": 12325,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12312,
											"end": 12320,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12312,
											"end": 12325,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12312,
											"end": 12325,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12312,
											"end": 12325,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12312,
											"end": 12325,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12312,
											"end": 12325,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12312,
											"end": 12325,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12312,
											"end": 12325,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12312,
											"end": 12325,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12312,
											"end": 12442,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12312,
											"end": 12442,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12312,
											"end": 12442,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12312,
											"end": 12442,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 12312,
											"end": 12442,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12312,
											"end": 12442,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12312,
											"end": 12442,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 12312,
											"end": 12442,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12312,
											"end": 12442,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12457,
											"end": 12490,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2802,
											"end": 2841,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2841,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2841,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2784,
											"end": 2842,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2784,
											"end": 2842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12312,
											"end": 12325,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12312,
											"end": 12325,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12312,
											"end": 12325,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12312,
											"end": 12325,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12457,
											"end": 12490,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 12457,
											"end": 12490,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2775,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12457,
											"end": 12490,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12457,
											"end": 12490,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12457,
											"end": 12490,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12457,
											"end": 12490,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12457,
											"end": 12490,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12457,
											"end": 12490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12457,
											"end": 12490,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12554,
											"end": 12568,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12554,
											"end": 12568,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12554,
											"end": 12568,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12550,
											"end": 12551,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12554,
											"end": 12568,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12554,
											"end": 12568,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12554,
											"end": 12568,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12554,
											"end": 12563,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 12554,
											"end": 12568,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12554,
											"end": 12568,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12554,
											"end": 12568,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12554,
											"end": 12568,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12554,
											"end": 12568,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12554,
											"end": 12568,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12527,
											"end": 12577,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 12527,
											"end": 12577,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12554,
											"end": 12568,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12570,
											"end": 12576,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12527,
											"end": 12541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 12527,
											"end": 12577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12527,
											"end": 12577,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 12527,
											"end": 12577,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11381,
											"end": 12584,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11326,
											"end": 12584,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11326,
											"end": 12584,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11326,
											"end": 12584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17627,
											"end": 17727,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 17627,
											"end": 17727,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17688,
											"end": 17720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 17698,
											"end": 17708,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 17710,
											"end": 17719,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17688,
											"end": 17697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 17688,
											"end": 17720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17688,
											"end": 17720,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 17688,
											"end": 17720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17627,
											"end": 17727,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17627,
											"end": 17727,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20058,
											"end": 21308,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 20058,
											"end": 21308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20164,
											"end": 20170,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20221,
											"end": 20233,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 20207,
											"end": 20218,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20207,
											"end": 20233,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 20186,
											"end": 20297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 20186,
											"end": 20297,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20186,
											"end": 20297,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20186,
											"end": 20297,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20186,
											"end": 20297,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20186,
											"end": 20297,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7479,
											"end": 7481,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20186,
											"end": 20297,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20186,
											"end": 20297,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20186,
											"end": 20297,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7461,
											"end": 7482,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7518,
											"end": 7520,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 7498,
											"end": 7516,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7498,
											"end": 7516,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7498,
											"end": 7516,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7491,
											"end": 7521,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7557,
											"end": 7591,
											"name": "PUSH",
											"source": 1,
											"value": "556E693A3A6765745072696F72566F7465733A206E6F74207965742064657465"
										},
										{
											"begin": 7537,
											"end": 7555,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7537,
											"end": 7555,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7537,
											"end": 7555,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7530,
											"end": 7592,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C9B5A5B9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7608,
											"end": 7626,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7608,
											"end": 7626,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7608,
											"end": 7626,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7601,
											"end": 7637,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7654,
											"end": 7673,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 7654,
											"end": 7673,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20186,
											"end": 20297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 7277,
											"end": 7679,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20186,
											"end": 20297,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 20186,
											"end": 20297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20330,
											"end": 20353,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20330,
											"end": 20353,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20308,
											"end": 20327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20330,
											"end": 20353,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20330,
											"end": 20353,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20330,
											"end": 20353,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20330,
											"end": 20344,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 20330,
											"end": 20353,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20330,
											"end": 20353,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20330,
											"end": 20353,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20330,
											"end": 20353,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20330,
											"end": 20353,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20330,
											"end": 20353,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20330,
											"end": 20353,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 20330,
											"end": 20353,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20330,
											"end": 20353,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20367,
											"end": 20384,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20367,
											"end": 20384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20367,
											"end": 20384,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20363,
											"end": 20419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 20363,
											"end": 20419,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20407,
											"end": 20408,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20400,
											"end": 20408,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20400,
											"end": 20408,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20400,
											"end": 20408,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20400,
											"end": 20408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 20400,
											"end": 20408,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20363,
											"end": 20419,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 20363,
											"end": 20419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20476,
											"end": 20496,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20476,
											"end": 20496,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20476,
											"end": 20496,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20476,
											"end": 20496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20476,
											"end": 20496,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20476,
											"end": 20496,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20476,
											"end": 20487,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 20476,
											"end": 20496,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20476,
											"end": 20496,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20476,
											"end": 20496,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20476,
											"end": 20496,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20476,
											"end": 20496,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20528,
											"end": 20539,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20528,
											"end": 20539,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20497,
											"end": 20513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 20512,
											"end": 20513,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20497,
											"end": 20509,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20497,
											"end": 20513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 20497,
											"end": 20513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20497,
											"end": 20513,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 20497,
											"end": 20513,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20476,
											"end": 20514,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 20476,
											"end": 20514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20476,
											"end": 20514,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20476,
											"end": 20514,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20476,
											"end": 20514,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20476,
											"end": 20514,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20476,
											"end": 20514,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20476,
											"end": 20514,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20476,
											"end": 20514,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20476,
											"end": 20514,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20476,
											"end": 20514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20476,
											"end": 20514,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20476,
											"end": 20514,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20476,
											"end": 20514,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20476,
											"end": 20514,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 20476,
											"end": 20514,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20476,
											"end": 20524,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20476,
											"end": 20524,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20476,
											"end": 20539,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 20472,
											"end": 20617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 20472,
											"end": 20617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20562,
											"end": 20582,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20562,
											"end": 20582,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20562,
											"end": 20582,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20562,
											"end": 20582,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20562,
											"end": 20582,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20562,
											"end": 20582,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20562,
											"end": 20573,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 20562,
											"end": 20582,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20562,
											"end": 20582,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20562,
											"end": 20582,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20562,
											"end": 20582,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20562,
											"end": 20582,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20562,
											"end": 20582,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20583,
											"end": 20599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 20598,
											"end": 20599,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20583,
											"end": 20595,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20583,
											"end": 20599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 20583,
											"end": 20599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20583,
											"end": 20599,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 20583,
											"end": 20599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20562,
											"end": 20600,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 20562,
											"end": 20600,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20562,
											"end": 20600,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20562,
											"end": 20600,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20562,
											"end": 20600,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20562,
											"end": 20600,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20562,
											"end": 20600,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20562,
											"end": 20600,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20562,
											"end": 20600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20562,
											"end": 20600,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20562,
											"end": 20600,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20562,
											"end": 20600,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20562,
											"end": 20600,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 20562,
											"end": 20600,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20562,
											"end": 20606,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20562,
											"end": 20606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20562,
											"end": 20606,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20562,
											"end": 20606,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20562,
											"end": 20606,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20555,
											"end": 20606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 20555,
											"end": 20606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20555,
											"end": 20606,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20472,
											"end": 20617,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 20472,
											"end": 20617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20675,
											"end": 20695,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20675,
											"end": 20695,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20675,
											"end": 20695,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20675,
											"end": 20695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20675,
											"end": 20695,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20675,
											"end": 20695,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20675,
											"end": 20686,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 20675,
											"end": 20695,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20675,
											"end": 20695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20675,
											"end": 20695,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20675,
											"end": 20695,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20675,
											"end": 20695,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20675,
											"end": 20695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20675,
											"end": 20695,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20675,
											"end": 20695,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20675,
											"end": 20698,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20675,
											"end": 20698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20675,
											"end": 20698,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20675,
											"end": 20698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20675,
											"end": 20698,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20675,
											"end": 20698,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20675,
											"end": 20698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20675,
											"end": 20698,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20675,
											"end": 20708,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20675,
											"end": 20698,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 20675,
											"end": 20708,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20675,
											"end": 20722,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 20671,
											"end": 20757,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20671,
											"end": 20757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 20671,
											"end": 20757,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20745,
											"end": 20746,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20738,
											"end": 20746,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20738,
											"end": 20746,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20738,
											"end": 20746,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20738,
											"end": 20746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 20738,
											"end": 20746,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20671,
											"end": 20757,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 20671,
											"end": 20757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20767,
											"end": 20779,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20767,
											"end": 20779,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20808,
											"end": 20824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 20823,
											"end": 20824,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20808,
											"end": 20820,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20808,
											"end": 20824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 20808,
											"end": 20824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20808,
											"end": 20824,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 20808,
											"end": 20824,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20793,
											"end": 20824,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20793,
											"end": 20824,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20834,
											"end": 21252,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 20834,
											"end": 21252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20849,
											"end": 20854,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20841,
											"end": 20854,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 20841,
											"end": 20854,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20841,
											"end": 20846,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20841,
											"end": 20854,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 20841,
											"end": 20854,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20841,
											"end": 20854,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 20834,
											"end": 21252,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20834,
											"end": 21252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 20834,
											"end": 21252,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20870,
											"end": 20883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20912,
											"end": 20913,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 20895,
											"end": 20908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 20903,
											"end": 20908,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20895,
											"end": 20900,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20895,
											"end": 20908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 20895,
											"end": 20908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20895,
											"end": 20908,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 20895,
											"end": 20908,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20894,
											"end": 20913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 20894,
											"end": 20913,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20894,
											"end": 20913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20894,
											"end": 20913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 20894,
											"end": 20913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20894,
											"end": 20913,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 20894,
											"end": 20913,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20886,
											"end": 20913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 20886,
											"end": 20913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20886,
											"end": 20891,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20886,
											"end": 20913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 20886,
											"end": 20913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20886,
											"end": 20913,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 20886,
											"end": 20913,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20977,
											"end": 20997,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 20977,
											"end": 20997,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20954,
											"end": 20974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20977,
											"end": 20997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20977,
											"end": 20997,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20977,
											"end": 20997,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20977,
											"end": 20988,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 20977,
											"end": 20997,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20977,
											"end": 20997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20977,
											"end": 20997,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20977,
											"end": 20997,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20977,
											"end": 20997,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20977,
											"end": 20997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20977,
											"end": 20997,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20977,
											"end": 20997,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20977,
											"end": 21005,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 20977,
											"end": 21005,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20977,
											"end": 21005,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20977,
											"end": 21005,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20977,
											"end": 21005,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20977,
											"end": 21005,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20977,
											"end": 21005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20977,
											"end": 21005,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20977,
											"end": 21005,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20977,
											"end": 21005,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20977,
											"end": 21005,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20977,
											"end": 21005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20977,
											"end": 21005,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20954,
											"end": 21005,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20954,
											"end": 21005,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20954,
											"end": 21005,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20954,
											"end": 21005,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20954,
											"end": 21005,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20954,
											"end": 21005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20954,
											"end": 21005,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20954,
											"end": 21005,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20954,
											"end": 21005,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20954,
											"end": 21005,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20954,
											"end": 21005,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20954,
											"end": 21005,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20954,
											"end": 21005,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20954,
											"end": 21005,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20954,
											"end": 21005,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20954,
											"end": 21005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20954,
											"end": 21005,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 20954,
											"end": 21005,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20954,
											"end": 21005,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20954,
											"end": 21005,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20954,
											"end": 21005,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20954,
											"end": 21005,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20954,
											"end": 21005,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20954,
											"end": 21005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20954,
											"end": 21005,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20954,
											"end": 21005,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20977,
											"end": 21005,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20977,
											"end": 21005,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21023,
											"end": 21050,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 21023,
											"end": 21050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21023,
											"end": 21050,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21019,
											"end": 21242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 21019,
											"end": 21242,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21077,
											"end": 21085,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21077,
											"end": 21085,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21077,
											"end": 21085,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21077,
											"end": 21085,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21070,
											"end": 21085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 21070,
											"end": 21085,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21070,
											"end": 21085,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21019,
											"end": 21242,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 21019,
											"end": 21242,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21110,
											"end": 21122,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21110,
											"end": 21122,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21110,
											"end": 21136,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 21110,
											"end": 21136,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21110,
											"end": 21136,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 21106,
											"end": 21242,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21106,
											"end": 21242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 21106,
											"end": 21242,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21164,
											"end": 21170,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21156,
											"end": 21170,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 21156,
											"end": 21170,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21106,
											"end": 21242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 21106,
											"end": 21242,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21106,
											"end": 21242,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 21106,
											"end": 21242,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21217,
											"end": 21227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 21226,
											"end": 21227,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21217,
											"end": 21223,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21217,
											"end": 21227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 21217,
											"end": 21227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21217,
											"end": 21227,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 21217,
											"end": 21227,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21209,
											"end": 21227,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21209,
											"end": 21227,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21106,
											"end": 21242,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 21106,
											"end": 21242,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 21252,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 21252,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20834,
											"end": 21252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 20834,
											"end": 21252,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20834,
											"end": 21252,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 20834,
											"end": 21252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21268,
											"end": 21288,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21268,
											"end": 21288,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21268,
											"end": 21288,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21268,
											"end": 21288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21268,
											"end": 21288,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21268,
											"end": 21288,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21268,
											"end": 21279,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 21268,
											"end": 21288,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21268,
											"end": 21288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21268,
											"end": 21288,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21268,
											"end": 21288,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21268,
											"end": 21288,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21268,
											"end": 21288,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21268,
											"end": 21288,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21268,
											"end": 21288,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21268,
											"end": 21295,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 21268,
											"end": 21295,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21268,
											"end": 21295,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 21268,
											"end": 21295,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21268,
											"end": 21295,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21268,
											"end": 21295,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21268,
											"end": 21295,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21268,
											"end": 21295,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21268,
											"end": 21295,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21268,
											"end": 21295,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21268,
											"end": 21301,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21268,
											"end": 21301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21268,
											"end": 21301,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21268,
											"end": 21301,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 21268,
											"end": 21301,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21268,
											"end": 21301,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20058,
											"end": 21308,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20058,
											"end": 21308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20058,
											"end": 21308,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20058,
											"end": 21308,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20058,
											"end": 21308,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16162,
											"end": 16432,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 16162,
											"end": 16432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16230,
											"end": 16234,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16246,
											"end": 16259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16262,
											"end": 16354,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 16282,
											"end": 16291,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16262,
											"end": 16354,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16262,
											"end": 16354,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16262,
											"end": 16354,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16262,
											"end": 16354,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 16262,
											"end": 16354,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16262,
											"end": 16354,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16262,
											"end": 16354,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16262,
											"end": 16354,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16262,
											"end": 16354,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 16262,
											"end": 16354,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16262,
											"end": 16354,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16262,
											"end": 16354,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16262,
											"end": 16354,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16262,
											"end": 16354,
											"name": "PUSH data",
											"source": 0,
											"value": "9BC67DB7413F33B8F7A9995149809B7B3A4A83B5BA884084BEA06CFB35986555"
										},
										{
											"begin": 16262,
											"end": 16354,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 16262,
											"end": 16354,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16262,
											"end": 16354,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 16262,
											"end": 16268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 16262,
											"end": 16354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16262,
											"end": 16354,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 16262,
											"end": 16354,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16246,
											"end": 16354,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16246,
											"end": 16354,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16364,
											"end": 16404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 16380,
											"end": 16390,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 16392,
											"end": 16395,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16397,
											"end": 16403,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16364,
											"end": 16379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 16364,
											"end": 16404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16364,
											"end": 16404,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 16364,
											"end": 16404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16421,
											"end": 16425,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16421,
											"end": 16425,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16162,
											"end": 16432,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16162,
											"end": 16432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19405,
											"end": 19636,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 19405,
											"end": 19636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19510,
											"end": 19533,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19510,
											"end": 19533,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19470,
											"end": 19476,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19510,
											"end": 19533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19510,
											"end": 19533,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19510,
											"end": 19533,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19510,
											"end": 19524,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 19510,
											"end": 19533,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19510,
											"end": 19533,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19510,
											"end": 19533,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19510,
											"end": 19533,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19510,
											"end": 19533,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19510,
											"end": 19533,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19510,
											"end": 19533,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 19510,
											"end": 19533,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19562,
											"end": 19578,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19562,
											"end": 19629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 19562,
											"end": 19629,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19628,
											"end": 19629,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19562,
											"end": 19629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 19562,
											"end": 19629,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19562,
											"end": 19629,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 19562,
											"end": 19629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19581,
											"end": 19601,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19581,
											"end": 19601,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19581,
											"end": 19601,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19581,
											"end": 19601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19581,
											"end": 19601,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19581,
											"end": 19601,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19581,
											"end": 19592,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 19581,
											"end": 19601,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19581,
											"end": 19601,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19581,
											"end": 19601,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19581,
											"end": 19601,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19581,
											"end": 19601,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19581,
											"end": 19601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19602,
											"end": 19618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 19617,
											"end": 19618,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19602,
											"end": 19614,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19602,
											"end": 19618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 19602,
											"end": 19618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19602,
											"end": 19618,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 19602,
											"end": 19618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19581,
											"end": 19619,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 19581,
											"end": 19619,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19581,
											"end": 19619,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19581,
											"end": 19619,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19581,
											"end": 19619,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19581,
											"end": 19619,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19581,
											"end": 19619,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19581,
											"end": 19619,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19581,
											"end": 19619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19581,
											"end": 19619,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19581,
											"end": 19619,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19581,
											"end": 19619,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19581,
											"end": 19619,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 19581,
											"end": 19619,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19581,
											"end": 19625,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19581,
											"end": 19625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19581,
											"end": 19625,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19581,
											"end": 19625,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19562,
											"end": 19629,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 19562,
											"end": 19629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19543,
											"end": 19629,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 19405,
											"end": 19636,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19405,
											"end": 19636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18150,
											"end": 19211,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 18150,
											"end": 19211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18451,
											"end": 18455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18451,
											"end": 18455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18451,
											"end": 18455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18451,
											"end": 18455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18451,
											"end": 18455,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18451,
											"end": 18455,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18451,
											"end": 18455,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18451,
											"end": 18455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18451,
											"end": 18455,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 18451,
											"end": 18455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18451,
											"end": 18455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "556E697377617"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18451,
											"end": 18455,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18451,
											"end": 18455,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18451,
											"end": 18455,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18451,
											"end": 18455,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18451,
											"end": 18455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18374,
											"end": 18532,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18374,
											"end": 18532,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8451,
											"end": 8553,
											"name": "PUSH",
											"source": 0,
											"value": "8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866"
										},
										{
											"begin": 18374,
											"end": 18532,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18374,
											"end": 18532,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18374,
											"end": 18532,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8537,
											"end": 8562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18435,
											"end": 18457,
											"name": "PUSH",
											"source": 0,
											"value": "99C45E8EE5DDE061CED9C812089094FBD28A020E7E37F2851198887E5CA64985"
										},
										{
											"begin": 8578,
											"end": 8596,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8578,
											"end": 8596,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8578,
											"end": 8596,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8571,
											"end": 8605,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25400,
											"end": 25409,
											"name": "CHAINID",
											"source": 0
										},
										{
											"begin": 8621,
											"end": 8639,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 8621,
											"end": 8639,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8621,
											"end": 8639,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8614,
											"end": 8648,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18513,
											"end": 18517,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 8664,
											"end": 8682,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 8664,
											"end": 8682,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8664,
											"end": 8682,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8664,
											"end": 8682,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8657,
											"end": 8717,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8657,
											"end": 8717,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8657,
											"end": 8717,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8657,
											"end": 8717,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18374,
											"end": 18532,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18374,
											"end": 18532,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18374,
											"end": 18532,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18374,
											"end": 18532,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18374,
											"end": 18532,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18374,
											"end": 18532,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18374,
											"end": 18532,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18374,
											"end": 18532,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18374,
											"end": 18532,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18374,
											"end": 18532,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8509,
											"end": 8528,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 8509,
											"end": 8528,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8509,
											"end": 8528,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18374,
											"end": 18532,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18374,
											"end": 18532,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18351,
											"end": 18542,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18351,
											"end": 18542,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18351,
											"end": 18542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18351,
											"end": 18542,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18351,
											"end": 18542,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18351,
											"end": 18542,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8698,
											"end": 8769,
											"name": "PUSH",
											"source": 0,
											"value": "E48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF"
										},
										{
											"begin": 18596,
											"end": 18653,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 18596,
											"end": 18653,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18596,
											"end": 18653,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8959,
											"end": 8984,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9020,
											"end": 9052,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 9020,
											"end": 9052,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9000,
											"end": 9018,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 9000,
											"end": 9018,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9000,
											"end": 9018,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8993,
											"end": 9053,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9069,
											"end": 9087,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 9069,
											"end": 9087,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9069,
											"end": 9087,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9062,
											"end": 9096,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 9062,
											"end": 9096,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9062,
											"end": 9096,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9112,
											"end": 9130,
											"name": "PUSH",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 9112,
											"end": 9130,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9112,
											"end": 9130,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9112,
											"end": 9130,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9105,
											"end": 9139,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 9105,
											"end": 9139,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9105,
											"end": 9139,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18596,
											"end": 18653,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18596,
											"end": 18653,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18596,
											"end": 18653,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18596,
											"end": 18653,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18596,
											"end": 18653,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18596,
											"end": 18653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18596,
											"end": 18653,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18596,
											"end": 18653,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18596,
											"end": 18653,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18596,
											"end": 18653,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 8950,
											"name": "PUSH",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 8931,
											"end": 8950,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8931,
											"end": 8950,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18596,
											"end": 18653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18596,
											"end": 18653,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 18596,
											"end": 18653,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18573,
											"end": 18663,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18573,
											"end": 18663,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18573,
											"end": 18663,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 18573,
											"end": 18663,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18573,
											"end": 18663,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18573,
											"end": 18663,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18573,
											"end": 18663,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18573,
											"end": 18663,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18573,
											"end": 18663,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18573,
											"end": 18663,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1901"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18713,
											"end": 18770,
											"name": "PUSH",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 18713,
											"end": 18770,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18713,
											"end": 18770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9408,
											"end": 9435,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9451,
											"end": 9462,
											"name": "PUSH",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 9451,
											"end": 9462,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9451,
											"end": 9462,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9444,
											"end": 9471,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9444,
											"end": 9471,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9444,
											"end": 9471,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9499,
											"name": "PUSH",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 9487,
											"end": 9499,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9480,
											"end": 9508,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9480,
											"end": 9508,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9480,
											"end": 9508,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18351,
											"end": 18542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18351,
											"end": 18542,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 9524,
											"end": 9536,
											"name": "PUSH",
											"source": 1,
											"value": "1A2"
										},
										{
											"begin": 9524,
											"end": 9536,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18713,
											"end": 18770,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18713,
											"end": 18770,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18713,
											"end": 18770,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 18713,
											"end": 18770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18713,
											"end": 18770,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18713,
											"end": 18770,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18713,
											"end": 18770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18713,
											"end": 18770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18713,
											"end": 18770,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18713,
											"end": 18770,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18713,
											"end": 18770,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18713,
											"end": 18770,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18690,
											"end": 18780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18690,
											"end": 18780,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18713,
											"end": 18770,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18690,
											"end": 18780,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18690,
											"end": 18780,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18690,
											"end": 18780,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18690,
											"end": 18780,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18790,
											"end": 18807,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18810,
											"end": 18836,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18810,
											"end": 18836,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18810,
											"end": 18836,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18810,
											"end": 18836,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18810,
											"end": 18836,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18810,
											"end": 18836,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18810,
											"end": 18836,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18810,
											"end": 18836,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18810,
											"end": 18836,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9774,
											"end": 9799,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9774,
											"end": 9799,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9774,
											"end": 9799,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9847,
											"end": 9851,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 9835,
											"end": 9852,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 9835,
											"end": 9852,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9815,
											"end": 9833,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9815,
											"end": 9833,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9815,
											"end": 9833,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9808,
											"end": 9853,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9808,
											"end": 9853,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9808,
											"end": 9853,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9808,
											"end": 9853,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9869,
											"end": 9887,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 9869,
											"end": 9887,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9869,
											"end": 9887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9862,
											"end": 9896,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 9862,
											"end": 9896,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9862,
											"end": 9896,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9912,
											"end": 9930,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 9912,
											"end": 9930,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9912,
											"end": 9930,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9905,
											"end": 9939,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9905,
											"end": 9939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9905,
											"end": 9939,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18690,
											"end": 18780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18690,
											"end": 18780,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18790,
											"end": 18807,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18810,
											"end": 18836,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18810,
											"end": 18836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9765,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 9746,
											"end": 9765,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18810,
											"end": 18836,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18810,
											"end": 18836,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18810,
											"end": 18836,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18810,
											"end": 18836,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18810,
											"end": 18836,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18810,
											"end": 18836,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18810,
											"end": 18836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18810,
											"end": 18836,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18810,
											"end": 18836,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18810,
											"end": 18836,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18810,
											"end": 18836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18810,
											"end": 18836,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18810,
											"end": 18836,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 18810,
											"end": 18836,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 18810,
											"end": 18836,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18810,
											"end": 18836,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18810,
											"end": 18836,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18810,
											"end": 18836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 18810,
											"end": 18836,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18810,
											"end": 18836,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 18810,
											"end": 18836,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18810,
											"end": 18836,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18810,
											"end": 18836,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 18810,
											"end": 18836,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 18810,
											"end": 18836,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18810,
											"end": 18836,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18810,
											"end": 18836,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 18810,
											"end": 18836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18810,
											"end": 18836,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18810,
											"end": 18836,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 18810,
											"end": 18836,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18810,
											"end": 18836,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18810,
											"end": 18836,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18867,
											"end": 18890,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18867,
											"end": 18890,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18846,
											"end": 18953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 18846,
											"end": 18953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18846,
											"end": 18953,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18846,
											"end": 18953,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18846,
											"end": 18953,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18846,
											"end": 18953,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10152,
											"end": 10154,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18846,
											"end": 18953,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18846,
											"end": 18953,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18846,
											"end": 18953,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10134,
											"end": 10155,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10191,
											"end": 10193,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 10171,
											"end": 10189,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10171,
											"end": 10189,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10171,
											"end": 10189,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10164,
											"end": 10194,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10230,
											"end": 10264,
											"name": "PUSH",
											"source": 1,
											"value": "556E693A3A64656C656761746542795369673A20696E76616C6964207369676E"
										},
										{
											"begin": 10210,
											"end": 10228,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10210,
											"end": 10228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10210,
											"end": 10228,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10265,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6174757265"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10281,
											"end": 10299,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10281,
											"end": 10299,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10281,
											"end": 10299,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10274,
											"end": 10309,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10326,
											"end": 10345,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 10326,
											"end": 10345,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18846,
											"end": 18953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 9950,
											"end": 10351,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18846,
											"end": 18953,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 18846,
											"end": 18953,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18993,
											"end": 19010,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18993,
											"end": 19010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18993,
											"end": 19010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18993,
											"end": 19010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18993,
											"end": 19010,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18993,
											"end": 19010,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18993,
											"end": 18999,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 18993,
											"end": 19010,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18993,
											"end": 19010,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18993,
											"end": 19010,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18993,
											"end": 19010,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18993,
											"end": 19010,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18993,
											"end": 19012,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18993,
											"end": 19012,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18993,
											"end": 19012,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18993,
											"end": 19012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 18993,
											"end": 19012,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18993,
											"end": 19012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 18993,
											"end": 19012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18993,
											"end": 19012,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 18993,
											"end": 19012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18993,
											"end": 19012,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18993,
											"end": 19012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18993,
											"end": 19012,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18993,
											"end": 19012,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 18984,
											"end": 18989,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 18984,
											"end": 19012,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18963,
											"end": 19071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 18963,
											"end": 19071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18963,
											"end": 19071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18963,
											"end": 19071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18963,
											"end": 19071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18963,
											"end": 19071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10698,
											"end": 10700,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18963,
											"end": 19071,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18963,
											"end": 19071,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18963,
											"end": 19071,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10680,
											"end": 10701,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10737,
											"end": 10739,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 10717,
											"end": 10735,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10717,
											"end": 10735,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10717,
											"end": 10735,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10710,
											"end": 10740,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10776,
											"end": 10810,
											"name": "PUSH",
											"source": 1,
											"value": "556E693A3A64656C656761746542795369673A20696E76616C6964206E6F6E63"
										},
										{
											"begin": 10756,
											"end": 10774,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10756,
											"end": 10774,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10756,
											"end": 10774,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10749,
											"end": 10811,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10827,
											"end": 10845,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10827,
											"end": 10845,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10827,
											"end": 10845,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10820,
											"end": 10851,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10868,
											"end": 10887,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 10868,
											"end": 10887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18963,
											"end": 19071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 10496,
											"end": 10893,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18963,
											"end": 19071,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 18963,
											"end": 19071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19108,
											"end": 19114,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 19089,
											"end": 19104,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 19089,
											"end": 19114,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 19089,
											"end": 19114,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19081,
											"end": 19156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 19081,
											"end": 19156,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19081,
											"end": 19156,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19081,
											"end": 19156,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19081,
											"end": 19156,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19081,
											"end": 19156,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11100,
											"end": 11102,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19081,
											"end": 19156,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19081,
											"end": 19156,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19081,
											"end": 19156,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11082,
											"end": 11103,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11139,
											"end": 11141,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 11119,
											"end": 11137,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11119,
											"end": 11137,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11119,
											"end": 11137,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11112,
											"end": 11142,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11178,
											"end": 11212,
											"name": "PUSH",
											"source": 1,
											"value": "556E693A3A64656C656761746542795369673A207369676E6174757265206578"
										},
										{
											"begin": 11158,
											"end": 11176,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 11158,
											"end": 11176,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11158,
											"end": 11176,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11151,
											"end": 11213,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C1A5C9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11229,
											"end": 11247,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 11229,
											"end": 11247,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11229,
											"end": 11247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11222,
											"end": 11257,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11274,
											"end": 11293,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 11274,
											"end": 11293,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19081,
											"end": 19156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 10898,
											"end": 11299,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19081,
											"end": 19156,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 19081,
											"end": 19156,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 19183,
											"end": 19192,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19194,
											"end": 19203,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 19173,
											"end": 19204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19204,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 19173,
											"end": 19204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19166,
											"end": 19204,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19166,
											"end": 19204,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19166,
											"end": 19204,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19166,
											"end": 19204,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18150,
											"end": 19211,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 18150,
											"end": 19211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18150,
											"end": 19211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18150,
											"end": 19211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18150,
											"end": 19211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18150,
											"end": 19211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18150,
											"end": 19211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18150,
											"end": 19211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18150,
											"end": 19211,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14327,
											"end": 15601,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 14327,
											"end": 15601,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14524,
											"end": 14537,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14556,
											"end": 14612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 14563,
											"end": 14572,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14556,
											"end": 14612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14556,
											"end": 14612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14556,
											"end": 14612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14556,
											"end": 14612,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 14556,
											"end": 14612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14556,
											"end": 14612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14556,
											"end": 14612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14556,
											"end": 14612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14556,
											"end": 14612,
											"name": "PUSH",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 14556,
											"end": 14612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14556,
											"end": 14612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14556,
											"end": 14612,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14556,
											"end": 14612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14556,
											"end": 14612,
											"name": "PUSH data",
											"source": 0,
											"value": "58DA0B91010307EE6A63257C5283618928105E355857D8F79CF7E017AD7082F4"
										},
										{
											"begin": 14556,
											"end": 14612,
											"name": "PUSH",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 14556,
											"end": 14612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14556,
											"end": 14612,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 14556,
											"end": 14562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 14556,
											"end": 14612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14556,
											"end": 14612,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 14556,
											"end": 14612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14759,
											"end": 14763,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14759,
											"end": 14763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14759,
											"end": 14763,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14759,
											"end": 14763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14759,
											"end": 14763,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14759,
											"end": 14763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14759,
											"end": 14763,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14759,
											"end": 14763,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14759,
											"end": 14763,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 14759,
											"end": 14763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14759,
											"end": 14763,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "556E697377617"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14759,
											"end": 14763,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14759,
											"end": 14763,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14759,
											"end": 14763,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14759,
											"end": 14763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14759,
											"end": 14763,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14682,
											"end": 14840,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14682,
											"end": 14840,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8451,
											"end": 8553,
											"name": "PUSH",
											"source": 0,
											"value": "8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866"
										},
										{
											"begin": 14682,
											"end": 14840,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14682,
											"end": 14840,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14682,
											"end": 14840,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8537,
											"end": 8562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14743,
											"end": 14765,
											"name": "PUSH",
											"source": 0,
											"value": "99C45E8EE5DDE061CED9C812089094FBD28A020E7E37F2851198887E5CA64985"
										},
										{
											"begin": 8578,
											"end": 8596,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8578,
											"end": 8596,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8578,
											"end": 8596,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8571,
											"end": 8605,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25400,
											"end": 25409,
											"name": "CHAINID",
											"source": 0
										},
										{
											"begin": 8621,
											"end": 8639,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 8621,
											"end": 8639,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8621,
											"end": 8639,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8614,
											"end": 8648,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14821,
											"end": 14825,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 8664,
											"end": 8682,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 8664,
											"end": 8682,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8664,
											"end": 8682,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8664,
											"end": 8682,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8657,
											"end": 8717,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8657,
											"end": 8717,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8657,
											"end": 8717,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8657,
											"end": 8717,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14682,
											"end": 14840,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14682,
											"end": 14840,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14682,
											"end": 14840,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14682,
											"end": 14840,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14682,
											"end": 14840,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14682,
											"end": 14840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14682,
											"end": 14840,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14682,
											"end": 14840,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14682,
											"end": 14840,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14682,
											"end": 14840,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8509,
											"end": 8528,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 8509,
											"end": 8528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8509,
											"end": 8528,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8509,
											"end": 8528,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14682,
											"end": 14840,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14682,
											"end": 14840,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14659,
											"end": 14850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14659,
											"end": 14850,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14659,
											"end": 14850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14659,
											"end": 14850,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14659,
											"end": 14850,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14659,
											"end": 14850,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15040,
											"end": 15053,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15053,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 15040,
											"end": 15053,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15053,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15053,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15046,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 15040,
											"end": 15053,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15053,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15053,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15053,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15053,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15053,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15055,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15055,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14547,
											"end": 14612,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14547,
											"end": 14612,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14659,
											"end": 14850,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14659,
											"end": 14850,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 8906,
											"end": 9023,
											"name": "PUSH",
											"source": 0,
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 8906,
											"end": 9023,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15053,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15053,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14988,
											"end": 14995,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 14988,
											"end": 14995,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15022,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15022,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 15040,
											"end": 15055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 15040,
											"end": 15055,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 15040,
											"end": 15055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15055,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 15040,
											"end": 15055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15055,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15055,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14904,
											"end": 15095,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14904,
											"end": 15095,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14904,
											"end": 15095,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14904,
											"end": 15095,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14904,
											"end": 15095,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14904,
											"end": 15095,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11591,
											"end": 11616,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 11591,
											"end": 11616,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11591,
											"end": 11616,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 11591,
											"end": 11616,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11652,
											"end": 11684,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11684,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11684,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11632,
											"end": 11650,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11632,
											"end": 11650,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 11632,
											"end": 11650,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11625,
											"end": 11685,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11721,
											"end": 11753,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11721,
											"end": 11753,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11721,
											"end": 11753,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11721,
											"end": 11753,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11701,
											"end": 11719,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11701,
											"end": 11719,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11701,
											"end": 11719,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11694,
											"end": 11754,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11770,
											"end": 11788,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 11770,
											"end": 11788,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11770,
											"end": 11788,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11763,
											"end": 11797,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11813,
											"end": 11832,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 11813,
											"end": 11832,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11813,
											"end": 11832,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11806,
											"end": 11841,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11857,
											"end": 11876,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 11857,
											"end": 11876,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11857,
											"end": 11876,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11850,
											"end": 11885,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 11850,
											"end": 11885,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11850,
											"end": 11885,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11563,
											"end": 11582,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 11563,
											"end": 11582,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14904,
											"end": 15095,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14904,
											"end": 15095,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14904,
											"end": 15095,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14904,
											"end": 15095,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14904,
											"end": 15095,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14904,
											"end": 15095,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14904,
											"end": 15095,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14904,
											"end": 15095,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14904,
											"end": 15095,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14904,
											"end": 15095,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14904,
											"end": 15095,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14904,
											"end": 15095,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14881,
											"end": 15105,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14881,
											"end": 15105,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14881,
											"end": 15105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14881,
											"end": 15105,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14881,
											"end": 15105,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14881,
											"end": 15105,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14860,
											"end": 15105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14860,
											"end": 15105,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15115,
											"end": 15129,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15184,
											"end": 15199,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15201,
											"end": 15211,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15155,
											"end": 15212,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15155,
											"end": 15212,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15155,
											"end": 15212,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15155,
											"end": 15212,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15155,
											"end": 15212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 15155,
											"end": 15212,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15155,
											"end": 15212,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15155,
											"end": 15212,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1901"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9408,
											"end": 9435,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9408,
											"end": 9435,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9460,
											"end": 9461,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 9451,
											"end": 9462,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9451,
											"end": 9462,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9444,
											"end": 9471,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9444,
											"end": 9471,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9444,
											"end": 9471,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9444,
											"end": 9471,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9496,
											"end": 9498,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 9487,
											"end": 9499,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9480,
											"end": 9508,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9533,
											"end": 9535,
											"name": "PUSH",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 9524,
											"end": 9536,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9524,
											"end": 9536,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9150,
											"end": 9542,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15155,
											"end": 15212,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 15155,
											"end": 15212,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15155,
											"end": 15212,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15155,
											"end": 15212,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15155,
											"end": 15212,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15155,
											"end": 15212,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15155,
											"end": 15212,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15155,
											"end": 15212,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15155,
											"end": 15212,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15155,
											"end": 15212,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15155,
											"end": 15212,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15155,
											"end": 15212,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15155,
											"end": 15212,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15155,
											"end": 15212,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15132,
											"end": 15222,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15132,
											"end": 15222,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15155,
											"end": 15212,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15132,
											"end": 15222,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15132,
											"end": 15222,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15132,
											"end": 15222,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15132,
											"end": 15222,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15232,
											"end": 15249,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15252,
											"end": 15278,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15252,
											"end": 15278,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15252,
											"end": 15278,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15252,
											"end": 15278,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15252,
											"end": 15278,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15252,
											"end": 15278,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15252,
											"end": 15278,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15252,
											"end": 15278,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15252,
											"end": 15278,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9774,
											"end": 9799,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9774,
											"end": 9799,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9774,
											"end": 9799,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9847,
											"end": 9851,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 9835,
											"end": 9852,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 9835,
											"end": 9852,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9815,
											"end": 9833,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9815,
											"end": 9833,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9815,
											"end": 9833,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9808,
											"end": 9853,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9808,
											"end": 9853,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9808,
											"end": 9853,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9808,
											"end": 9853,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9869,
											"end": 9887,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 9869,
											"end": 9887,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9869,
											"end": 9887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9862,
											"end": 9896,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 9862,
											"end": 9896,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9862,
											"end": 9896,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9912,
											"end": 9930,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 9912,
											"end": 9930,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9912,
											"end": 9930,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9905,
											"end": 9939,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 9905,
											"end": 9939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9905,
											"end": 9939,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15132,
											"end": 15222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15132,
											"end": 15222,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15232,
											"end": 15249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15252,
											"end": 15278,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15252,
											"end": 15278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9765,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 9746,
											"end": 9765,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15252,
											"end": 15278,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15252,
											"end": 15278,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15252,
											"end": 15278,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15252,
											"end": 15278,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15252,
											"end": 15278,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15252,
											"end": 15278,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15252,
											"end": 15278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15252,
											"end": 15278,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15252,
											"end": 15278,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15252,
											"end": 15278,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15252,
											"end": 15278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15252,
											"end": 15278,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15252,
											"end": 15278,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 15252,
											"end": 15278,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 15252,
											"end": 15278,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15252,
											"end": 15278,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15252,
											"end": 15278,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15252,
											"end": 15278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 15252,
											"end": 15278,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15252,
											"end": 15278,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 15252,
											"end": 15278,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15252,
											"end": 15278,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15252,
											"end": 15278,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 15252,
											"end": 15278,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 15252,
											"end": 15278,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15252,
											"end": 15278,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15252,
											"end": 15278,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 15252,
											"end": 15278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15252,
											"end": 15278,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15252,
											"end": 15278,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15252,
											"end": 15278,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15252,
											"end": 15278,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15252,
											"end": 15278,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15296,
											"end": 15319,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15296,
											"end": 15319,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15288,
											"end": 15354,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 15288,
											"end": 15354,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15288,
											"end": 15354,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15288,
											"end": 15354,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15288,
											"end": 15354,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15288,
											"end": 15354,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12098,
											"end": 12100,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15288,
											"end": 15354,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15288,
											"end": 15354,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15288,
											"end": 15354,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12080,
											"end": 12101,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12137,
											"end": 12139,
											"name": "PUSH",
											"source": 1,
											"value": "1E"
										},
										{
											"begin": 12117,
											"end": 12135,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12117,
											"end": 12135,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12117,
											"end": 12135,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12110,
											"end": 12140,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12176,
											"end": 12208,
											"name": "PUSH",
											"source": 1,
											"value": "556E693A3A7065726D69743A20696E76616C6964207369676E61747572650000"
										},
										{
											"begin": 12156,
											"end": 12174,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12156,
											"end": 12174,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12156,
											"end": 12174,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12149,
											"end": 12209,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12226,
											"end": 12244,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12226,
											"end": 12244,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15288,
											"end": 15354,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 11896,
											"end": 12250,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15288,
											"end": 15354,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 15288,
											"end": 15354,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15385,
											"end": 15390,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15372,
											"end": 15390,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15372,
											"end": 15381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15372,
											"end": 15390,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15372,
											"end": 15390,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15364,
											"end": 15420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 15364,
											"end": 15420,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15364,
											"end": 15420,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15364,
											"end": 15420,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15364,
											"end": 15420,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15364,
											"end": 15420,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12457,
											"end": 12459,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15364,
											"end": 15420,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15364,
											"end": 15420,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15364,
											"end": 15420,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12439,
											"end": 12460,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12496,
											"end": 12498,
											"name": "PUSH",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 12476,
											"end": 12494,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12476,
											"end": 12494,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12476,
											"end": 12494,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12469,
											"end": 12499,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12535,
											"end": 12562,
											"name": "PUSH",
											"source": 1,
											"value": "556E693A3A7065726D69743A20756E617574686F72697A656400000000000000"
										},
										{
											"begin": 12515,
											"end": 12533,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12515,
											"end": 12533,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12515,
											"end": 12533,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12508,
											"end": 12563,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12580,
											"end": 12598,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12580,
											"end": 12598,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15364,
											"end": 15420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 12255,
											"end": 12604,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15364,
											"end": 15420,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 15364,
											"end": 15420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15457,
											"end": 15465,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 15438,
											"end": 15453,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 15438,
											"end": 15465,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 15438,
											"end": 15465,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15430,
											"end": 15500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 15430,
											"end": 15500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15430,
											"end": 15500,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15430,
											"end": 15500,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15430,
											"end": 15500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15430,
											"end": 15500,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12811,
											"end": 12813,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15430,
											"end": 15500,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15430,
											"end": 15500,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15430,
											"end": 15500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12793,
											"end": 12814,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12850,
											"end": 12852,
											"name": "PUSH",
											"source": 1,
											"value": "1E"
										},
										{
											"begin": 12830,
											"end": 12848,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12830,
											"end": 12848,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12830,
											"end": 12848,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12823,
											"end": 12853,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12889,
											"end": 12921,
											"name": "PUSH",
											"source": 1,
											"value": "556E693A3A7065726D69743A207369676E617475726520657870697265640000"
										},
										{
											"begin": 12869,
											"end": 12887,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12869,
											"end": 12887,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12869,
											"end": 12887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12862,
											"end": 12922,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12939,
											"end": 12957,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12939,
											"end": 12957,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15430,
											"end": 15500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 12609,
											"end": 12963,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15430,
											"end": 15500,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 15430,
											"end": 15500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15540,
											"end": 15546,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15511,
											"end": 15521,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 15511,
											"end": 15528,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15522,
											"end": 15527,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15511,
											"end": 15528,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15511,
											"end": 15528,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15511,
											"end": 15528,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15511,
											"end": 15528,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15511,
											"end": 15528,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15511,
											"end": 15528,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15511,
											"end": 15528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15511,
											"end": 15528,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15511,
											"end": 15528,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15511,
											"end": 15528,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15511,
											"end": 15528,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15511,
											"end": 15528,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15511,
											"end": 15528,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15511,
											"end": 15537,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15529,
											"end": 15536,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15511,
											"end": 15537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15511,
											"end": 15537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15511,
											"end": 15537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15511,
											"end": 15537,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15511,
											"end": 15537,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15511,
											"end": 15537,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15511,
											"end": 15537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15511,
											"end": 15537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15511,
											"end": 15537,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15511,
											"end": 15537,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15511,
											"end": 15537,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15511,
											"end": 15537,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15511,
											"end": 15537,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15511,
											"end": 15537,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15511,
											"end": 15546,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 15511,
											"end": 15546,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 15511,
											"end": 15546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15511,
											"end": 15546,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15511,
											"end": 15546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15511,
											"end": 15546,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 15511,
											"end": 15546,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 15511,
											"end": 15546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15511,
											"end": 15546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15511,
											"end": 15546,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15511,
											"end": 15546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15511,
											"end": 15546,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 15511,
											"end": 15546,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 15511,
											"end": 15546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15511,
											"end": 15546,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 15511,
											"end": 15546,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15578,
											"end": 15585,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15562,
											"end": 15594,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15571,
											"end": 15576,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15562,
											"end": 15594,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15562,
											"end": 15594,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15587,
											"end": 15593,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 15562,
											"end": 15594,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15562,
											"end": 15594,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15562,
											"end": 15594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 15562,
											"end": 15594,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15562,
											"end": 15594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2802,
											"end": 2841,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2841,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2841,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2841,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2784,
											"end": 2842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2784,
											"end": 2842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2772,
											"end": 2774,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2757,
											"end": 2775,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2757,
											"end": 2775,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2640,
											"end": 2848,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15562,
											"end": 15594,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 15562,
											"end": 15594,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15562,
											"end": 15594,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15562,
											"end": 15594,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15562,
											"end": 15594,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15562,
											"end": 15594,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15562,
											"end": 15594,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15562,
											"end": 15594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15562,
											"end": 15594,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 14514,
											"end": 15601,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14514,
											"end": 15601,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14514,
											"end": 15601,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14514,
											"end": 15601,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14514,
											"end": 15601,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14327,
											"end": 15601,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14327,
											"end": 15601,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14327,
											"end": 15601,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14327,
											"end": 15601,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14327,
											"end": 15601,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14327,
											"end": 15601,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14327,
											"end": 15601,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14327,
											"end": 15601,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10897,
											"end": 11158,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 10897,
											"end": 11158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10987,
											"end": 10993,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10987,
											"end": 10993,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10987,
											"end": 10993,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10973,
											"end": 10983,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10973,
											"end": 10993,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10952,
											"end": 11080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 10952,
											"end": 11080,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10952,
											"end": 11080,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10952,
											"end": 11080,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10952,
											"end": 11080,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10952,
											"end": 11080,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13170,
											"end": 13172,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10952,
											"end": 11080,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10952,
											"end": 11080,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10952,
											"end": 11080,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13152,
											"end": 13173,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13209,
											"end": 13211,
											"name": "PUSH",
											"source": 1,
											"value": "3D"
										},
										{
											"begin": 13189,
											"end": 13207,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13189,
											"end": 13207,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13189,
											"end": 13207,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13182,
											"end": 13212,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13248,
											"end": 13282,
											"name": "PUSH",
											"source": 1,
											"value": "556E693A3A7365744D696E7465723A206F6E6C7920746865206D696E74657220"
										},
										{
											"begin": 13228,
											"end": 13246,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13228,
											"end": 13246,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13228,
											"end": 13246,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13221,
											"end": 13283,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13319,
											"end": 13350,
											"name": "PUSH",
											"source": 1,
											"value": "63616E206368616E676520746865206D696E7465722061646472657373000000"
										},
										{
											"begin": 13299,
											"end": 13317,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13299,
											"end": 13317,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13299,
											"end": 13317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13292,
											"end": 13351,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13368,
											"end": 13387,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 13368,
											"end": 13387,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10952,
											"end": 11080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 12968,
											"end": 13393,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10952,
											"end": 11080,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 10952,
											"end": 11080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11109,
											"end": 11115,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11109,
											"end": 11115,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11095,
											"end": 11125,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11095,
											"end": 11125,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11095,
											"end": 11125,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11109,
											"end": 11115,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11109,
											"end": 11115,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11109,
											"end": 11115,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13572,
											"end": 13623,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13572,
											"end": 13623,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13659,
											"end": 13691,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13659,
											"end": 13691,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13659,
											"end": 13691,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13654,
											"end": 13656,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13639,
											"end": 13657,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13639,
											"end": 13657,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13632,
											"end": 13692,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11095,
											"end": 11125,
											"name": "PUSH",
											"source": 0,
											"value": "3B0007EB941CF645526CBB3A4FDAECDA9D28CE4843167D9263B536A1F1EDC0F6"
										},
										{
											"begin": 11095,
											"end": 11125,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13545,
											"end": 13563,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11095,
											"end": 11125,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11095,
											"end": 11125,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11095,
											"end": 11125,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11095,
											"end": 11125,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11095,
											"end": 11125,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11095,
											"end": 11125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11095,
											"end": 11125,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 11135,
											"end": 11141,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11135,
											"end": 11151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11135,
											"end": 11151,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11135,
											"end": 11151,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11135,
											"end": 11151,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11135,
											"end": 11151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11135,
											"end": 11151,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11135,
											"end": 11151,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11135,
											"end": 11151,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11135,
											"end": 11151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11135,
											"end": 11151,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11135,
											"end": 11151,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 11135,
											"end": 11151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11135,
											"end": 11151,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10897,
											"end": 11158,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24663,
											"end": 24852,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 24663,
											"end": 24852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24765,
											"end": 24771,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24806,
											"end": 24818,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24795,
											"end": 24804,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24795,
											"end": 24804,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 24787,
											"end": 24819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 24787,
											"end": 24819,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24787,
											"end": 24819,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24787,
											"end": 24819,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24787,
											"end": 24819,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24787,
											"end": 24819,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24787,
											"end": 24819,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24787,
											"end": 24819,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24787,
											"end": 24819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 24787,
											"end": 24819,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24787,
											"end": 24819,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24787,
											"end": 24819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 24787,
											"end": 24819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24787,
											"end": 24819,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 24787,
											"end": 24819,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24843,
											"end": 24844,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24843,
											"end": 24844,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24663,
											"end": 24852,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24663,
											"end": 24852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25078,
											"end": 25270,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 25078,
											"end": 25270,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25194,
											"end": 25200,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25225,
											"end": 25226,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25220,
											"end": 25226,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25220,
											"end": 25221,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25220,
											"end": 25226,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25220,
											"end": 25226,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 25220,
											"end": 25226,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25228,
											"end": 25240,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25212,
											"end": 25241,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25212,
											"end": 25241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 25212,
											"end": 25241,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25212,
											"end": 25241,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25212,
											"end": 25241,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 25212,
											"end": 25241,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25212,
											"end": 25241,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25212,
											"end": 25241,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25212,
											"end": 25241,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25212,
											"end": 25241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 25212,
											"end": 25241,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25212,
											"end": 25241,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25212,
											"end": 25241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 25212,
											"end": 25241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25212,
											"end": 25241,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 25212,
											"end": 25241,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25258,
											"end": 25263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 25262,
											"end": 25263,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25258,
											"end": 25259,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25258,
											"end": 25263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 25258,
											"end": 25263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25258,
											"end": 25263,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 25258,
											"end": 25263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25251,
											"end": 25263,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 25078,
											"end": 25270,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25078,
											"end": 25270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21687,
											"end": 22478,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 21687,
											"end": 22478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21823,
											"end": 21840,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21823,
											"end": 21840,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21802,
											"end": 21925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 21802,
											"end": 21925,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21802,
											"end": 21925,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21802,
											"end": 21925,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21802,
											"end": 21925,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21802,
											"end": 21925,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14128,
											"end": 14130,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21802,
											"end": 21925,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21802,
											"end": 21925,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21802,
											"end": 21925,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14110,
											"end": 14131,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14167,
											"end": 14169,
											"name": "PUSH",
											"source": 1,
											"value": "3B"
										},
										{
											"begin": 14147,
											"end": 14165,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 14147,
											"end": 14165,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14147,
											"end": 14165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14140,
											"end": 14170,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14206,
											"end": 14240,
											"name": "PUSH",
											"source": 1,
											"value": "556E693A3A5F7472616E73666572546F6B656E733A2063616E6E6F7420747261"
										},
										{
											"begin": 14186,
											"end": 14204,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 14186,
											"end": 14204,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14186,
											"end": 14204,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14179,
											"end": 14241,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14277,
											"end": 14306,
											"name": "PUSH",
											"source": 1,
											"value": "6E736665722066726F6D20746865207A65726F20616464726573730000000000"
										},
										{
											"begin": 14257,
											"end": 14275,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 14257,
											"end": 14275,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14257,
											"end": 14275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14307,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14324,
											"end": 14343,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 14324,
											"end": 14343,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21802,
											"end": 21925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 13926,
											"end": 14349,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21802,
											"end": 21925,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 21802,
											"end": 21925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21956,
											"end": 21973,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21956,
											"end": 21973,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21935,
											"end": 22056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 21935,
											"end": 22056,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21935,
											"end": 22056,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21935,
											"end": 22056,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21935,
											"end": 22056,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21935,
											"end": 22056,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14556,
											"end": 14558,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21935,
											"end": 22056,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21935,
											"end": 22056,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21935,
											"end": 22056,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14538,
											"end": 14559,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14595,
											"end": 14597,
											"name": "PUSH",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 14575,
											"end": 14593,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 14575,
											"end": 14593,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14575,
											"end": 14593,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14568,
											"end": 14598,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14634,
											"end": 14668,
											"name": "PUSH",
											"source": 1,
											"value": "556E693A3A5F7472616E73666572546F6B656E733A2063616E6E6F7420747261"
										},
										{
											"begin": 14614,
											"end": 14632,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 14614,
											"end": 14632,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14614,
											"end": 14632,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14607,
											"end": 14669,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14705,
											"end": 14732,
											"name": "PUSH",
											"source": 1,
											"value": "6E7366657220746F20746865207A65726F206164647265737300000000000000"
										},
										{
											"begin": 14685,
											"end": 14703,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 14685,
											"end": 14703,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14685,
											"end": 14703,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14678,
											"end": 14733,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14750,
											"end": 14769,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 14750,
											"end": 14769,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21935,
											"end": 22056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 14354,
											"end": 14775,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21935,
											"end": 22056,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 21935,
											"end": 22056,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22102,
											"end": 22115,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22102,
											"end": 22115,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22102,
											"end": 22115,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22102,
											"end": 22115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22102,
											"end": 22115,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22102,
											"end": 22115,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22102,
											"end": 22110,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22102,
											"end": 22115,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22102,
											"end": 22115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22102,
											"end": 22115,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22102,
											"end": 22115,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22102,
											"end": 22115,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22102,
											"end": 22115,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22102,
											"end": 22115,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22102,
											"end": 22115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22102,
											"end": 22115,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22102,
											"end": 22115,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22083,
											"end": 22214,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22083,
											"end": 22214,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22083,
											"end": 22214,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 22083,
											"end": 22214,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22083,
											"end": 22214,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22083,
											"end": 22214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22083,
											"end": 22214,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 22083,
											"end": 22214,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22083,
											"end": 22214,
											"name": "PUSH",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 22083,
											"end": 22214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22083,
											"end": 22214,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22083,
											"end": 22214,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22083,
											"end": 22214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 22083,
											"end": 22214,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22102,
											"end": 22115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22102,
											"end": 22115,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 22102,
											"end": 22115,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22102,
											"end": 22115,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 22129,
											"end": 22135,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 22129,
											"end": 22135,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 22083,
											"end": 22214,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22083,
											"end": 22214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22083,
											"end": 22214,
											"name": "PUSH data",
											"source": 0,
											"value": "3230BA2CB739B33589720B8A5892642694535E935234939514431FF16907D24A"
										},
										{
											"begin": 22083,
											"end": 22214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22083,
											"end": 22214,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22083,
											"end": 22214,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22083,
											"end": 22214,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 22083,
											"end": 22088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 22083,
											"end": 22214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22083,
											"end": 22214,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 22083,
											"end": 22214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22067,
											"end": 22080,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22067,
											"end": 22080,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22067,
											"end": 22080,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22067,
											"end": 22080,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22067,
											"end": 22080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22067,
											"end": 22080,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22067,
											"end": 22080,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22067,
											"end": 22075,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22067,
											"end": 22080,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22067,
											"end": 22080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22067,
											"end": 22080,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22067,
											"end": 22080,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22067,
											"end": 22080,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22067,
											"end": 22080,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22067,
											"end": 22080,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22067,
											"end": 22080,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22067,
											"end": 22214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22067,
											"end": 22214,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 22067,
											"end": 22214,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22067,
											"end": 22214,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 22067,
											"end": 22214,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 22067,
											"end": 22214,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22067,
											"end": 22214,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 22067,
											"end": 22214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22067,
											"end": 22214,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 22259,
											"end": 22272,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 22259,
											"end": 22272,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 22259,
											"end": 22272,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22259,
											"end": 22272,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22259,
											"end": 22272,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22259,
											"end": 22272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22259,
											"end": 22272,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22259,
											"end": 22272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22259,
											"end": 22272,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22259,
											"end": 22272,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22240,
											"end": 22365,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22240,
											"end": 22365,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22240,
											"end": 22365,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 22240,
											"end": 22365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22240,
											"end": 22365,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22240,
											"end": 22365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22240,
											"end": 22365,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 22240,
											"end": 22365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22240,
											"end": 22365,
											"name": "PUSH",
											"source": 0,
											"value": "2F"
										},
										{
											"begin": 22240,
											"end": 22365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22240,
											"end": 22365,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22240,
											"end": 22365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22240,
											"end": 22365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 22240,
											"end": 22365,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 22259,
											"end": 22272,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22259,
											"end": 22272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22259,
											"end": 22272,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22259,
											"end": 22272,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22259,
											"end": 22272,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 22286,
											"end": 22292,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 22286,
											"end": 22292,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 22240,
											"end": 22365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22240,
											"end": 22365,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22240,
											"end": 22365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22240,
											"end": 22365,
											"name": "PUSH data",
											"source": 0,
											"value": "F838EE8B15C3D07740BB9B304B8146EC63BB435A7703825B5E6424EE2072674A"
										},
										{
											"begin": 22240,
											"end": 22365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22240,
											"end": 22365,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22240,
											"end": 22365,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22240,
											"end": 22365,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 22240,
											"end": 22245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 22240,
											"end": 22365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22240,
											"end": 22365,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 22240,
											"end": 22365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22224,
											"end": 22237,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22224,
											"end": 22237,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22224,
											"end": 22237,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22224,
											"end": 22237,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22224,
											"end": 22237,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22224,
											"end": 22237,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22224,
											"end": 22237,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22224,
											"end": 22232,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22224,
											"end": 22237,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22224,
											"end": 22237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22224,
											"end": 22237,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22224,
											"end": 22237,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22224,
											"end": 22237,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22224,
											"end": 22237,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22224,
											"end": 22237,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22224,
											"end": 22237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22224,
											"end": 22237,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22224,
											"end": 22365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22224,
											"end": 22365,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 22224,
											"end": 22365,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22224,
											"end": 22365,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 22224,
											"end": 22365,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 22224,
											"end": 22365,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22224,
											"end": 22365,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 22224,
											"end": 22365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22224,
											"end": 22365,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 22380,
											"end": 22406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22380,
											"end": 22406,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2802,
											"end": 2841,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2841,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2841,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2784,
											"end": 2842,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2784,
											"end": 2842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22224,
											"end": 22237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22224,
											"end": 22237,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 22380,
											"end": 22406,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22380,
											"end": 22406,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 22380,
											"end": 22406,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22380,
											"end": 22406,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22380,
											"end": 22406,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 22380,
											"end": 22406,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2775,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22380,
											"end": 22406,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22380,
											"end": 22406,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22380,
											"end": 22406,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22380,
											"end": 22406,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22380,
											"end": 22406,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22380,
											"end": 22406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22380,
											"end": 22406,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22432,
											"end": 22446,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22432,
											"end": 22446,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22432,
											"end": 22446,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22432,
											"end": 22446,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22432,
											"end": 22446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22432,
											"end": 22446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22432,
											"end": 22446,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22432,
											"end": 22441,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 22432,
											"end": 22446,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22432,
											"end": 22446,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22432,
											"end": 22446,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22432,
											"end": 22446,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22432,
											"end": 22446,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22432,
											"end": 22446,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22432,
											"end": 22446,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22448,
											"end": 22462,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 22448,
											"end": 22462,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22448,
											"end": 22462,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22448,
											"end": 22462,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22448,
											"end": 22462,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22448,
											"end": 22462,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22448,
											"end": 22462,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22448,
											"end": 22462,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22417,
											"end": 22471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 22417,
											"end": 22471,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 22432,
											"end": 22446,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22432,
											"end": 22446,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22432,
											"end": 22446,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22432,
											"end": 22446,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22448,
											"end": 22462,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22464,
											"end": 22470,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22417,
											"end": 22431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 22417,
											"end": 22471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1304,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1128,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1193,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1186,
											"end": 1193,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1217,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 1221,
											"end": 1222,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1217,
											"end": 1218,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1217,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 1217,
											"end": 1222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1217,
											"end": 1222,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 1217,
											"end": 1222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1205,
											"end": 1222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1205,
											"end": 1222,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1246,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1241,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1246,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1246,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1232,
											"end": 1278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 1232,
											"end": 1278,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1232,
											"end": 1278,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1232,
											"end": 1278,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1232,
											"end": 1278,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1232,
											"end": 1278,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15112,
											"end": 15114,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1232,
											"end": 1278,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1232,
											"end": 1278,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1232,
											"end": 1278,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15115,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15151,
											"end": 15153,
											"name": "PUSH",
											"source": 1,
											"value": "1B"
										},
										{
											"begin": 15131,
											"end": 15149,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 15131,
											"end": 15149,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15131,
											"end": 15149,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15124,
											"end": 15154,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15190,
											"end": 15219,
											"name": "PUSH",
											"source": 1,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 15170,
											"end": 15188,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 15170,
											"end": 15188,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15170,
											"end": 15188,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15163,
											"end": 15220,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15237,
											"end": 15255,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 15237,
											"end": 15255,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 14910,
											"end": 15261,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2885,
											"end": 3344,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 2885,
											"end": 3344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2943,
											"end": 2950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3184,
											"end": 3185,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3189,
											"end": 3190,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3184,
											"end": 3190,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 3225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 3180,
											"end": 3225,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3213,
											"end": 3214,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3206,
											"end": 3214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 3206,
											"end": 3214,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 3225,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 3180,
											"end": 3225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3235,
											"end": 3244,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3247,
											"end": 3252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 3251,
											"end": 3252,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3247,
											"end": 3248,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3247,
											"end": 3252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 3247,
											"end": 3252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3247,
											"end": 3252,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 3247,
											"end": 3252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3235,
											"end": 3252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3279,
											"end": 3280,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3270,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 3274,
											"end": 3275,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3235,
											"end": 3252,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3270,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 3270,
											"end": 3275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3270,
											"end": 3275,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 3270,
											"end": 3275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3270,
											"end": 3280,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 3262,
											"end": 3318,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3318,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3262,
											"end": 3318,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3262,
											"end": 3318,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3318,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15766,
											"end": 15768,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3262,
											"end": 3318,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3262,
											"end": 3318,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3318,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15748,
											"end": 15769,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15805,
											"end": 15807,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 15785,
											"end": 15803,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 15785,
											"end": 15803,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15785,
											"end": 15803,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15778,
											"end": 15808,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15844,
											"end": 15878,
											"name": "PUSH",
											"source": 1,
											"value": "536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F"
										},
										{
											"begin": 15824,
											"end": 15842,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 15824,
											"end": 15842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15824,
											"end": 15842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15817,
											"end": 15879,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15895,
											"end": 15913,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 15895,
											"end": 15913,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15895,
											"end": 15913,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15888,
											"end": 15919,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15936,
											"end": 15955,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 15936,
											"end": 15955,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3262,
											"end": 3318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 15564,
											"end": 15961,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4526,
											"end": 4656,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 4526,
											"end": 4656,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4584,
											"end": 4591,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4610,
											"end": 4649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 4614,
											"end": 4615,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4617,
											"end": 4618,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4610,
											"end": 4649,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4610,
											"end": 4649,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4610,
											"end": 4649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4610,
											"end": 4649,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4610,
											"end": 4649,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4610,
											"end": 4649,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4610,
											"end": 4649,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4610,
											"end": 4649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4610,
											"end": 4649,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 4610,
											"end": 4649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4610,
											"end": 4649,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4610,
											"end": 4649,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4610,
											"end": 4649,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4610,
											"end": 4649,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 4610,
											"end": 4649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4610,
											"end": 4649,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4610,
											"end": 4649,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4610,
											"end": 4613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 4610,
											"end": 4649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24858,
											"end": 25072,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 24858,
											"end": 25072,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24974,
											"end": 24980,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24974,
											"end": 24980,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25003,
											"end": 25008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 25007,
											"end": 25008,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 25003,
											"end": 25004,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 25003,
											"end": 25008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 25003,
											"end": 25008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25003,
											"end": 25008,
											"name": "tag",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 25003,
											"end": 25008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24992,
											"end": 25008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24992,
											"end": 25008,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25031,
											"end": 25032,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25026,
											"end": 25032,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25026,
											"end": 25027,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25026,
											"end": 25032,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25026,
											"end": 25032,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 25026,
											"end": 25032,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25034,
											"end": 25046,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25018,
											"end": 25047,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25018,
											"end": 25047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 25018,
											"end": 25047,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25018,
											"end": 25047,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25018,
											"end": 25047,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 25018,
											"end": 25047,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25018,
											"end": 25047,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25018,
											"end": 25047,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25018,
											"end": 25047,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25018,
											"end": 25047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 25018,
											"end": 25047,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25018,
											"end": 25047,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25018,
											"end": 25047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 25018,
											"end": 25047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25018,
											"end": 25047,
											"name": "tag",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 25018,
											"end": 25047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25064,
											"end": 25065,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 24858,
											"end": 25072,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24858,
											"end": 25072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22484,
											"end": 23671,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 22484,
											"end": 23671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22618,
											"end": 22624,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22608,
											"end": 22624,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22608,
											"end": 22614,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22608,
											"end": 22624,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22608,
											"end": 22624,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22608,
											"end": 22624,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22608,
											"end": 22638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22608,
											"end": 22638,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22608,
											"end": 22638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 22608,
											"end": 22638,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22608,
											"end": 22638,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22637,
											"end": 22638,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22628,
											"end": 22634,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22628,
											"end": 22638,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22628,
											"end": 22638,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22608,
											"end": 22638,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 22608,
											"end": 22638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22604,
											"end": 23665,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22604,
											"end": 23665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 22604,
											"end": 23665,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22658,
											"end": 22678,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22658,
											"end": 22678,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22658,
											"end": 22678,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22654,
											"end": 23148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 22654,
											"end": 23148,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22717,
											"end": 22739,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22717,
											"end": 22739,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22698,
											"end": 22714,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22717,
											"end": 22739,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22717,
											"end": 22739,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22717,
											"end": 22739,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22717,
											"end": 22731,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 22717,
											"end": 22739,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22717,
											"end": 22739,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22717,
											"end": 22739,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22717,
											"end": 22739,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22717,
											"end": 22739,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22717,
											"end": 22739,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22717,
											"end": 22739,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 22717,
											"end": 22739,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22717,
											"end": 22739,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22776,
											"end": 22789,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22776,
											"end": 22876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 22776,
											"end": 22876,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 22876,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22776,
											"end": 22876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 22776,
											"end": 22876,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22776,
											"end": 22876,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 22776,
											"end": 22876,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22812,
											"end": 22831,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 22812,
											"end": 22831,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22812,
											"end": 22831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22812,
											"end": 22831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22812,
											"end": 22831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22812,
											"end": 22831,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22812,
											"end": 22823,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 22812,
											"end": 22831,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22812,
											"end": 22831,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22812,
											"end": 22831,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22812,
											"end": 22831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22812,
											"end": 22831,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22812,
											"end": 22831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22832,
											"end": 22845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 22844,
											"end": 22845,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22832,
											"end": 22841,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 22832,
											"end": 22845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 22832,
											"end": 22845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22832,
											"end": 22845,
											"name": "tag",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 22832,
											"end": 22845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22812,
											"end": 22846,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 22812,
											"end": 22846,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22812,
											"end": 22846,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22812,
											"end": 22846,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22812,
											"end": 22846,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22812,
											"end": 22846,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22812,
											"end": 22846,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22812,
											"end": 22846,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22812,
											"end": 22846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22812,
											"end": 22846,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22812,
											"end": 22846,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22812,
											"end": 22846,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22812,
											"end": 22846,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 22812,
											"end": 22846,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22812,
											"end": 22852,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22812,
											"end": 22852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22812,
											"end": 22852,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22812,
											"end": 22852,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22776,
											"end": 22876,
											"name": "tag",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 22776,
											"end": 22876,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22757,
											"end": 22876,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22757,
											"end": 22876,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22894,
											"end": 22910,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22913,
											"end": 23058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 22940,
											"end": 22949,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22971,
											"end": 22977,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 22913,
											"end": 23058,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22913,
											"end": 23058,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22913,
											"end": 23058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22913,
											"end": 23058,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 22913,
											"end": 23058,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22913,
											"end": 23058,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22913,
											"end": 23058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22913,
											"end": 23058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22913,
											"end": 23058,
											"name": "PUSH",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 22913,
											"end": 23058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22913,
											"end": 23058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22913,
											"end": 23058,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22913,
											"end": 23058,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22913,
											"end": 23058,
											"name": "PUSH data",
											"source": 0,
											"value": "8F9E8E1E6816D4A772D233C08B8292A576126F7DBD1D9B7CD30EF07F7C3D78D2"
										},
										{
											"begin": 22913,
											"end": 23058,
											"name": "PUSH",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 22913,
											"end": 23058,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22913,
											"end": 23058,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 22913,
											"end": 22918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 22913,
											"end": 23058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22913,
											"end": 23058,
											"name": "tag",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 22913,
											"end": 23058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22894,
											"end": 23058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22894,
											"end": 23058,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23076,
											"end": 23133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 23093,
											"end": 23099,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 23101,
											"end": 23110,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23112,
											"end": 23121,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23123,
											"end": 23132,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23076,
											"end": 23092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 23076,
											"end": 23133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23076,
											"end": 23133,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 23076,
											"end": 23133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22680,
											"end": 23148,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22680,
											"end": 23148,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22680,
											"end": 23148,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22654,
											"end": 23148,
											"name": "tag",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 22654,
											"end": 23148,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23166,
											"end": 23186,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23166,
											"end": 23186,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23166,
											"end": 23186,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23162,
											"end": 23655,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 23162,
											"end": 23655,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23225,
											"end": 23247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23225,
											"end": 23247,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23206,
											"end": 23222,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23225,
											"end": 23247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23225,
											"end": 23247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23225,
											"end": 23247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23225,
											"end": 23239,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 23225,
											"end": 23247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23225,
											"end": 23247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23225,
											"end": 23247,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23225,
											"end": 23247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23225,
											"end": 23247,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23225,
											"end": 23247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23225,
											"end": 23247,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 23225,
											"end": 23247,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23225,
											"end": 23247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23284,
											"end": 23297,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23284,
											"end": 23384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 23284,
											"end": 23384,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23383,
											"end": 23384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23284,
											"end": 23384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 23284,
											"end": 23384,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23284,
											"end": 23384,
											"name": "tag",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 23284,
											"end": 23384,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23320,
											"end": 23339,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23320,
											"end": 23339,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23320,
											"end": 23339,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23320,
											"end": 23339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23320,
											"end": 23339,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23320,
											"end": 23339,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23320,
											"end": 23331,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 23320,
											"end": 23339,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23320,
											"end": 23339,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23320,
											"end": 23339,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23320,
											"end": 23339,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23320,
											"end": 23339,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23320,
											"end": 23339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23340,
											"end": 23353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 23352,
											"end": 23353,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23340,
											"end": 23349,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23340,
											"end": 23353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 23340,
											"end": 23353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23340,
											"end": 23353,
											"name": "tag",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 23340,
											"end": 23353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23320,
											"end": 23354,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 23320,
											"end": 23354,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23320,
											"end": 23354,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23320,
											"end": 23354,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23320,
											"end": 23354,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23320,
											"end": 23354,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23320,
											"end": 23354,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23320,
											"end": 23354,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23320,
											"end": 23354,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23320,
											"end": 23354,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23320,
											"end": 23354,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23320,
											"end": 23354,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23320,
											"end": 23354,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 23320,
											"end": 23354,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23320,
											"end": 23360,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 23320,
											"end": 23360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23320,
											"end": 23360,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23320,
											"end": 23360,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23284,
											"end": 23384,
											"name": "tag",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 23284,
											"end": 23384,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23265,
											"end": 23384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23265,
											"end": 23384,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23402,
											"end": 23418,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23421,
											"end": 23565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 23448,
											"end": 23457,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23479,
											"end": 23485,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23421,
											"end": 23565,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23421,
											"end": 23565,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23421,
											"end": 23565,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23421,
											"end": 23565,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 23421,
											"end": 23565,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23421,
											"end": 23565,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23421,
											"end": 23565,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23421,
											"end": 23565,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23421,
											"end": 23565,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 23421,
											"end": 23565,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23421,
											"end": 23565,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23421,
											"end": 23565,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23421,
											"end": 23565,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23421,
											"end": 23565,
											"name": "PUSH data",
											"source": 0,
											"value": "5C6C891434A3C5951DB59F5FE43D566B04BF54E07BC444B7F9F72601E608DC42"
										},
										{
											"begin": 23421,
											"end": 23565,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 23421,
											"end": 23565,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23421,
											"end": 23565,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 23421,
											"end": 23426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 23421,
											"end": 23565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23421,
											"end": 23565,
											"name": "tag",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 23421,
											"end": 23565,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23402,
											"end": 23565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23402,
											"end": 23565,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23583,
											"end": 23640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 23600,
											"end": 23606,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23608,
											"end": 23617,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23619,
											"end": 23628,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23630,
											"end": 23639,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23583,
											"end": 23599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 23583,
											"end": 23640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21314,
											"end": 21681,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 21314,
											"end": 21681,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21416,
											"end": 21436,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21416,
											"end": 21436,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21416,
											"end": 21436,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21390,
											"end": 21413,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21416,
											"end": 21436,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21416,
											"end": 21436,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21416,
											"end": 21436,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21416,
											"end": 21425,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 21416,
											"end": 21436,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21416,
											"end": 21436,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21416,
											"end": 21436,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21416,
											"end": 21436,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21416,
											"end": 21436,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21416,
											"end": 21436,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21416,
											"end": 21436,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21416,
											"end": 21436,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21416,
											"end": 21436,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21416,
											"end": 21436,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21472,
											"end": 21480,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21472,
											"end": 21491,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21472,
											"end": 21491,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21472,
											"end": 21491,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21472,
											"end": 21491,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 21472,
											"end": 21491,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21472,
											"end": 21491,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21501,
											"end": 21521,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 21501,
											"end": 21521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21501,
											"end": 21521,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 21501,
											"end": 21521,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21501,
											"end": 21533,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 21501,
											"end": 21533,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 21501,
											"end": 21533,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 21501,
											"end": 21533,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21501,
											"end": 21533,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21501,
											"end": 21533,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21501,
											"end": 21533,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 21501,
											"end": 21533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21501,
											"end": 21533,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21501,
											"end": 21533,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21549,
											"end": 21603,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21549,
											"end": 21603,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21416,
											"end": 21436,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21416,
											"end": 21436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21416,
											"end": 21436,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 21416,
											"end": 21436,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21416,
											"end": 21436,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21472,
											"end": 21491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21472,
											"end": 21491,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21472,
											"end": 21491,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21472,
											"end": 21491,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 21501,
											"end": 21533,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21501,
											"end": 21533,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21416,
											"end": 21436,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21416,
											"end": 21436,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21416,
											"end": 21436,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21549,
											"end": 21603,
											"name": "PUSH",
											"source": 0,
											"value": "3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F"
										},
										{
											"begin": 21549,
											"end": 21603,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21390,
											"end": 21413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21549,
											"end": 21603,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 21614,
											"end": 21674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 21629,
											"end": 21644,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21646,
											"end": 21655,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21657,
											"end": 21673,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21614,
											"end": 21628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 21614,
											"end": 21674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21614,
											"end": 21674,
											"name": "tag",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 21614,
											"end": 21674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21380,
											"end": 21681,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21380,
											"end": 21681,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21314,
											"end": 21681,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21314,
											"end": 21681,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21314,
											"end": 21681,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5131,
											"end": 5499,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 5131,
											"end": 5499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5247,
											"end": 5254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5347,
											"end": 5359,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5340,
											"end": 5345,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5332,
											"end": 5360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 5332,
											"end": 5360,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5332,
											"end": 5360,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5332,
											"end": 5360,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5332,
											"end": 5360,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5332,
											"end": 5360,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5332,
											"end": 5360,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5332,
											"end": 5360,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5332,
											"end": 5360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 5332,
											"end": 5360,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5332,
											"end": 5360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5332,
											"end": 5360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 5332,
											"end": 5360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5332,
											"end": 5360,
											"name": "tag",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 5332,
											"end": 5360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5370,
											"end": 5379,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5382,
											"end": 5387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 5386,
											"end": 5387,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5382,
											"end": 5383,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5382,
											"end": 5387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 5382,
											"end": 5387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5382,
											"end": 5387,
											"name": "tag",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 5382,
											"end": 5387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5387,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 5131,
											"end": 5499,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5131,
											"end": 5499,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23677,
											"end": 24462,
											"name": "tag",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 23677,
											"end": 24462,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23834,
											"end": 23852,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23855,
											"end": 23964,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 23875,
											"end": 23887,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 23855,
											"end": 23964,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23855,
											"end": 23964,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23855,
											"end": 23964,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23855,
											"end": 23964,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 23855,
											"end": 23964,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23855,
											"end": 23964,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23855,
											"end": 23964,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23855,
											"end": 23964,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23855,
											"end": 23964,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 23855,
											"end": 23964,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23855,
											"end": 23964,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23855,
											"end": 23964,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23855,
											"end": 23964,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23855,
											"end": 23964,
											"name": "PUSH data",
											"source": 0,
											"value": "66157EF8D926A3327823FECD4CE53EDFCB6533C37C90DC98ACFB91E4F2854725"
										},
										{
											"begin": 23855,
											"end": 23964,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 23855,
											"end": 23964,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23855,
											"end": 23964,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 23855,
											"end": 23861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 23855,
											"end": 23964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23855,
											"end": 23964,
											"name": "tag",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 23855,
											"end": 23964,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23834,
											"end": 23964,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23834,
											"end": 23964,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24007,
											"end": 24008,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23992,
											"end": 24004,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23992,
											"end": 24008,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 23992,
											"end": 24008,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23992,
											"end": 24008,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 23992,
											"end": 24089,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23992,
											"end": 24089,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23992,
											"end": 24089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 23992,
											"end": 24089,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24024,
											"end": 24046,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 24024,
											"end": 24046,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24024,
											"end": 24046,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24024,
											"end": 24046,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24024,
											"end": 24046,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24024,
											"end": 24046,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24024,
											"end": 24035,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 24024,
											"end": 24046,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24024,
											"end": 24046,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24024,
											"end": 24046,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24024,
											"end": 24046,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24024,
											"end": 24046,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24024,
											"end": 24089,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 24024,
											"end": 24089,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24024,
											"end": 24089,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24024,
											"end": 24089,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24047,
											"end": 24063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 24062,
											"end": 24063,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24047,
											"end": 24059,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 24047,
											"end": 24063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 24047,
											"end": 24063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24047,
											"end": 24063,
											"name": "tag",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 24047,
											"end": 24063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24024,
											"end": 24064,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 24024,
											"end": 24064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24024,
											"end": 24064,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24024,
											"end": 24064,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24024,
											"end": 24064,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24024,
											"end": 24064,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24024,
											"end": 24064,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24024,
											"end": 24064,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24024,
											"end": 24064,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24024,
											"end": 24064,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24024,
											"end": 24064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24024,
											"end": 24064,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24024,
											"end": 24064,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24024,
											"end": 24064,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24024,
											"end": 24064,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24024,
											"end": 24064,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24024,
											"end": 24074,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24024,
											"end": 24074,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24024,
											"end": 24089,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23992,
											"end": 24089,
											"name": "tag",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 23992,
											"end": 24089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23975,
											"end": 24389,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23975,
											"end": 24389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 23975,
											"end": 24389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24114,
											"end": 24136,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 24114,
											"end": 24136,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24114,
											"end": 24136,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24114,
											"end": 24136,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24114,
											"end": 24136,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24114,
											"end": 24136,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24114,
											"end": 24125,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 24114,
											"end": 24136,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24114,
											"end": 24136,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24114,
											"end": 24136,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24114,
											"end": 24136,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24114,
											"end": 24136,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24163,
											"end": 24171,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24163,
											"end": 24171,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24137,
											"end": 24153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 24152,
											"end": 24153,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24137,
											"end": 24149,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 24137,
											"end": 24153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 24137,
											"end": 24153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24137,
											"end": 24153,
											"name": "tag",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 24137,
											"end": 24153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24114,
											"end": 24154,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 24114,
											"end": 24154,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24114,
											"end": 24154,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24114,
											"end": 24154,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24114,
											"end": 24154,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24114,
											"end": 24154,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24114,
											"end": 24154,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24114,
											"end": 24154,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24114,
											"end": 24154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24114,
											"end": 24154,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24114,
											"end": 24154,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24114,
											"end": 24154,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24114,
											"end": 24154,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24114,
											"end": 24154,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24114,
											"end": 24171,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24114,
											"end": 24171,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24114,
											"end": 24171,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24114,
											"end": 24171,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24114,
											"end": 24171,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24114,
											"end": 24171,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24114,
											"end": 24171,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF00000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 24114,
											"end": 24171,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24114,
											"end": 24171,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24114,
											"end": 24171,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24114,
											"end": 24171,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24114,
											"end": 24171,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24114,
											"end": 24171,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24114,
											"end": 24171,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 24114,
											"end": 24171,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24114,
											"end": 24171,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 23975,
											"end": 24389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 23975,
											"end": 24389,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23975,
											"end": 24389,
											"name": "tag",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 23975,
											"end": 24389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24241,
											"end": 24320,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24241,
											"end": 24320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24241,
											"end": 24320,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24241,
											"end": 24320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24241,
											"end": 24320,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24241,
											"end": 24320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24241,
											"end": 24320,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24241,
											"end": 24320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24241,
											"end": 24320,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 24241,
											"end": 24320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24241,
											"end": 24320,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24241,
											"end": 24320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24241,
											"end": 24320,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24241,
											"end": 24320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24241,
											"end": 24320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24241,
											"end": 24320,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 24241,
											"end": 24320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24241,
											"end": 24320,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24241,
											"end": 24320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24241,
											"end": 24320,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 24241,
											"end": 24320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24241,
											"end": 24320,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24241,
											"end": 24320,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24241,
											"end": 24320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24202,
											"end": 24224,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 24202,
											"end": 24224,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24202,
											"end": 24224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24202,
											"end": 24224,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24202,
											"end": 24224,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24202,
											"end": 24213,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 24202,
											"end": 24224,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24202,
											"end": 24224,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24202,
											"end": 24224,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 24202,
											"end": 24224,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24202,
											"end": 24224,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24202,
											"end": 24238,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 24202,
											"end": 24238,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 24202,
											"end": 24238,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24202,
											"end": 24238,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24202,
											"end": 24238,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24202,
											"end": 24238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24202,
											"end": 24238,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24202,
											"end": 24238,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24202,
											"end": 24238,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 24202,
											"end": 24238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24202,
											"end": 24238,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 24202,
											"end": 24238,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24202,
											"end": 24320,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24202,
											"end": 24320,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24202,
											"end": 24320,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24202,
											"end": 24320,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24202,
											"end": 24320,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 24202,
											"end": 24320,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24202,
											"end": 24320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24202,
											"end": 24320,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24202,
											"end": 24320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24202,
											"end": 24320,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 24202,
											"end": 24320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24202,
											"end": 24320,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 24202,
											"end": 24320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24202,
											"end": 24320,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24202,
											"end": 24320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24202,
											"end": 24320,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 24202,
											"end": 24320,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24202,
											"end": 24320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24202,
											"end": 24320,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24202,
											"end": 24320,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 24202,
											"end": 24320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24202,
											"end": 24320,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 24362,
											"end": 24378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 24225,
											"end": 24237,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24202,
											"end": 24320,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24362,
											"end": 24378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 24362,
											"end": 24378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24362,
											"end": 24378,
											"name": "tag",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 24362,
											"end": 24378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24334,
											"end": 24359,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 24334,
											"end": 24359,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24334,
											"end": 24359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24334,
											"end": 24359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24334,
											"end": 24359,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24334,
											"end": 24359,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24334,
											"end": 24348,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 24334,
											"end": 24359,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24334,
											"end": 24359,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24334,
											"end": 24359,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24334,
											"end": 24359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24334,
											"end": 24359,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24334,
											"end": 24378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24334,
											"end": 24378,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 24334,
											"end": 24378,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24334,
											"end": 24378,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 24334,
											"end": 24378,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24334,
											"end": 24378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24334,
											"end": 24378,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24334,
											"end": 24378,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24334,
											"end": 24378,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24334,
											"end": 24378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24334,
											"end": 24378,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24334,
											"end": 24378,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 24334,
											"end": 24378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24334,
											"end": 24378,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 23975,
											"end": 24389,
											"name": "tag",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 23975,
											"end": 24389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24404,
											"end": 24455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24404,
											"end": 24455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24404,
											"end": 24455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16548,
											"end": 16587,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16548,
											"end": 16587,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 16548,
											"end": 16587,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16530,
											"end": 16588,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16530,
											"end": 16588,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16624,
											"end": 16663,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16624,
											"end": 16663,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16619,
											"end": 16621,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16604,
											"end": 16622,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16604,
											"end": 16622,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16597,
											"end": 16664,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24404,
											"end": 24455,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 24404,
											"end": 24455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24404,
											"end": 24455,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24404,
											"end": 24455,
											"name": "PUSH",
											"source": 0,
											"value": "DEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724"
										},
										{
											"begin": 24404,
											"end": 24455,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16503,
											"end": 16521,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24404,
											"end": 24455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24404,
											"end": 24455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24404,
											"end": 24455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24404,
											"end": 24455,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24404,
											"end": 24455,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24404,
											"end": 24455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24404,
											"end": 24455,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 23824,
											"end": 24462,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23677,
											"end": 24462,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23677,
											"end": 24462,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23677,
											"end": 24462,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23677,
											"end": 24462,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23677,
											"end": 24462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24468,
											"end": 24657,
											"name": "tag",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 24468,
											"end": 24657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24570,
											"end": 24576,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24611,
											"end": 24623,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24600,
											"end": 24609,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24600,
											"end": 24609,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 24592,
											"end": 24624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 24592,
											"end": 24624,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24592,
											"end": 24624,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24592,
											"end": 24624,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24592,
											"end": 24624,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24592,
											"end": 24624,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24592,
											"end": 24624,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24592,
											"end": 24624,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24592,
											"end": 24624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 24592,
											"end": 24624,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24592,
											"end": 24624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14,
											"end": 432,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 14,
											"end": 432,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 163,
											"end": 165,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 152,
											"end": 161,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 145,
											"end": 166,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 201,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 189,
											"end": 202,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 238,
											"end": 244,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 233,
											"end": 235,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 222,
											"end": 231,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 218,
											"end": 236,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 211,
											"end": 245,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 297,
											"end": 303,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 292,
											"end": 294,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 284,
											"end": 290,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 280,
											"end": 295,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 275,
											"end": 277,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 264,
											"end": 273,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 260,
											"end": 278,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 254,
											"end": 304,
											"name": "MCOPY",
											"source": 1
										},
										{
											"begin": 353,
											"end": 354,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 350,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 345,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 328,
											"end": 337,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 324,
											"end": 346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 320,
											"end": 351,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 313,
											"end": 355,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 423,
											"end": 425,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 416,
											"end": 418,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 412,
											"end": 419,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 407,
											"end": 409,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 399,
											"end": 405,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 395,
											"end": 410,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 391,
											"end": 420,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 380,
											"end": 389,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 376,
											"end": 421,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 372,
											"end": 426,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 364,
											"end": 426,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 818,
											"name": "tag",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 645,
											"end": 818,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 713,
											"end": 733,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 713,
											"end": 733,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 762,
											"end": 793,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 762,
											"end": 793,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 752,
											"end": 794,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 752,
											"end": 794,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 742,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 742,
											"end": 812,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 808,
											"end": 809,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 805,
											"end": 806,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 798,
											"end": 810,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 742,
											"end": 812,
											"name": "tag",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 742,
											"end": 812,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 645,
											"end": 818,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 645,
											"end": 818,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 645,
											"end": 818,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 818,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 823,
											"end": 1123,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 823,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 891,
											"end": 897,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 899,
											"end": 905,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 952,
											"end": 954,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 949,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 931,
											"end": 938,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 927,
											"end": 950,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 923,
											"end": 955,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 920,
											"end": 972,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 920,
											"end": 972,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 920,
											"end": 972,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 968,
											"end": 969,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 965,
											"end": 966,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 958,
											"end": 970,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 920,
											"end": 972,
											"name": "tag",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 920,
											"end": 972,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 991,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 1010,
											"end": 1019,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 991,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 991,
											"end": 1020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 991,
											"end": 1020,
											"name": "tag",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 991,
											"end": 1020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 981,
											"end": 1020,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1091,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1074,
											"end": 1092,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1092,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1092,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1092,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1061,
											"end": 1093,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1061,
											"end": 1093,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 823,
											"end": 1123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1684,
											"end": 2058,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1684,
											"end": 2058,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1761,
											"end": 1767,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1769,
											"end": 1775,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1777,
											"end": 1783,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1832,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1818,
											"end": 1827,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1809,
											"end": 1816,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1801,
											"end": 1833,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 1850,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 1798,
											"end": 1850,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1846,
											"end": 1847,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1843,
											"end": 1844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1848,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 1850,
											"name": "tag",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 1798,
											"end": 1850,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1869,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 1888,
											"end": 1897,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1869,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 1869,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1869,
											"end": 1898,
											"name": "tag",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 1869,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1859,
											"end": 1898,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1859,
											"end": 1898,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1917,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 1951,
											"end": 1953,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1940,
											"end": 1949,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1936,
											"end": 1954,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1917,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 1917,
											"end": 1955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1917,
											"end": 1955,
											"name": "tag",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 1917,
											"end": 1955,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1684,
											"end": 2058,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1684,
											"end": 2058,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1907,
											"end": 1955,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1907,
											"end": 1955,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2024,
											"end": 2026,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2009,
											"end": 2027,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2009,
											"end": 2027,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2009,
											"end": 2027,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2009,
											"end": 2027,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1996,
											"end": 2028,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1996,
											"end": 2028,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1684,
											"end": 2058,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2252,
											"end": 2438,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2252,
											"end": 2438,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2311,
											"end": 2317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2364,
											"end": 2366,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2352,
											"end": 2361,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2343,
											"end": 2350,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2339,
											"end": 2362,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2335,
											"end": 2367,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2332,
											"end": 2384,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2332,
											"end": 2384,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 2332,
											"end": 2384,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2380,
											"end": 2381,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2377,
											"end": 2378,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2332,
											"end": 2384,
											"name": "tag",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 2332,
											"end": 2384,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2403,
											"end": 2432,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 2422,
											"end": 2431,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2403,
											"end": 2432,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 2403,
											"end": 2432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2853,
											"end": 3009,
											"name": "tag",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 2853,
											"end": 3009,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2919,
											"end": 2939,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2919,
											"end": 2939,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2979,
											"end": 2983,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 2968,
											"end": 2984,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 2984,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2958,
											"end": 2985,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2958,
											"end": 2985,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2948,
											"end": 3003,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 2948,
											"end": 3003,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2999,
											"end": 3000,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2996,
											"end": 2997,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3014,
											"end": 3747,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 3014,
											"end": 3747,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3116,
											"end": 3122,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3124,
											"end": 3130,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3132,
											"end": 3138,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3140,
											"end": 3146,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3148,
											"end": 3154,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3156,
											"end": 3162,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3209,
											"end": 3212,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 3197,
											"end": 3206,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3188,
											"end": 3195,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 3184,
											"end": 3207,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3180,
											"end": 3213,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3177,
											"end": 3230,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3177,
											"end": 3230,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 3177,
											"end": 3230,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3226,
											"end": 3227,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3223,
											"end": 3224,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3228,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3177,
											"end": 3230,
											"name": "tag",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 3177,
											"end": 3230,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3249,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 3268,
											"end": 3277,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3249,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 3249,
											"end": 3278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3249,
											"end": 3278,
											"name": "tag",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 3249,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3239,
											"end": 3278,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3347,
											"end": 3349,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3332,
											"end": 3350,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3332,
											"end": 3350,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3319,
											"end": 3351,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3319,
											"end": 3351,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3448,
											"end": 3450,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3433,
											"end": 3451,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3433,
											"end": 3451,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3420,
											"end": 3452,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3420,
											"end": 3452,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3497,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 3529,
											"end": 3531,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3514,
											"end": 3532,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 3514,
											"end": 3532,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 3497,
											"end": 3533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3533,
											"name": "tag",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 3497,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3014,
											"end": 3747,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 3014,
											"end": 3747,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 3014,
											"end": 3747,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3014,
											"end": 3747,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3014,
											"end": 3747,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3014,
											"end": 3747,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3609,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3591,
											"end": 3610,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3610,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3578,
											"end": 3611,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3578,
											"end": 3611,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3710,
											"end": 3713,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 3695,
											"end": 3714,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3695,
											"end": 3714,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3695,
											"end": 3714,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3682,
											"end": 3715,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3682,
											"end": 3715,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3014,
											"end": 3747,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3014,
											"end": 3747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3752,
											"end": 4560,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 3752,
											"end": 4560,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3863,
											"end": 3869,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3871,
											"end": 3877,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3879,
											"end": 3885,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3887,
											"end": 3893,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3895,
											"end": 3901,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3903,
											"end": 3909,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3911,
											"end": 3917,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3967,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3952,
											"end": 3961,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 3943,
											"end": 3950,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 3939,
											"end": 3962,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 3968,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3932,
											"end": 3985,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3932,
											"end": 3985,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 3932,
											"end": 3985,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3981,
											"end": 3982,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3978,
											"end": 3979,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3971,
											"end": 3983,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3932,
											"end": 3985,
											"name": "tag",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 3932,
											"end": 3985,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4004,
											"end": 4033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 4023,
											"end": 4032,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4004,
											"end": 4033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 4004,
											"end": 4033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4004,
											"end": 4033,
											"name": "tag",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 4004,
											"end": 4033,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3994,
											"end": 4033,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 3994,
											"end": 4033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4052,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4075,
											"end": 4084,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4089,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4052,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 4052,
											"end": 4090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4052,
											"end": 4090,
											"name": "tag",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 4052,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4042,
											"end": 4090,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4159,
											"end": 4161,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4144,
											"end": 4162,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4144,
											"end": 4162,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4131,
											"end": 4163,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4131,
											"end": 4163,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4260,
											"end": 4262,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4245,
											"end": 4263,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4245,
											"end": 4263,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4264,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4264,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4309,
											"end": 4346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 4341,
											"end": 4344,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 4326,
											"end": 4345,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 4326,
											"end": 4345,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4309,
											"end": 4346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 4309,
											"end": 4346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4309,
											"end": 4346,
											"name": "tag",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 4309,
											"end": 4346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3752,
											"end": 4560,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 3752,
											"end": 4560,
											"name": "SWAP10",
											"source": 1
										},
										{
											"begin": 3752,
											"end": 4560,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 3752,
											"end": 4560,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3752,
											"end": 4560,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3752,
											"end": 4560,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 3752,
											"end": 4560,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3752,
											"end": 4560,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 4299,
											"end": 4346,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4419,
											"end": 4422,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 4404,
											"end": 4423,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4404,
											"end": 4423,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4391,
											"end": 4424,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4391,
											"end": 4424,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4523,
											"end": 4526,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 4508,
											"end": 4527,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4527,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4527,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4495,
											"end": 4528,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4495,
											"end": 4528,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3752,
											"end": 4560,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3752,
											"end": 4560,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4565,
											"end": 4825,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 4565,
											"end": 4825,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4633,
											"end": 4639,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4641,
											"end": 4647,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4694,
											"end": 4696,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4682,
											"end": 4691,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4673,
											"end": 4680,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4669,
											"end": 4692,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4665,
											"end": 4697,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4662,
											"end": 4714,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4662,
											"end": 4714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 4662,
											"end": 4714,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4710,
											"end": 4711,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4707,
											"end": 4708,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4700,
											"end": 4712,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4662,
											"end": 4714,
											"name": "tag",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 4662,
											"end": 4714,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4733,
											"end": 4762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 4752,
											"end": 4761,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4733,
											"end": 4762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 4733,
											"end": 4762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4733,
											"end": 4762,
											"name": "tag",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 4733,
											"end": 4762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4723,
											"end": 4762,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4723,
											"end": 4762,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "389"
										},
										{
											"begin": 4815,
											"end": 4817,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4804,
											"end": 4813,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4800,
											"end": 4818,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 4781,
											"end": 4819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4819,
											"name": "tag",
											"source": 1,
											"value": "389"
										},
										{
											"begin": 4781,
											"end": 4819,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4819,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4819,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4565,
											"end": 4825,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4565,
											"end": 4825,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4565,
											"end": 4825,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4565,
											"end": 4825,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4565,
											"end": 4825,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4565,
											"end": 4825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4830,
											"end": 5180,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 4830,
											"end": 5180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4897,
											"end": 4903,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4905,
											"end": 4911,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4958,
											"end": 4960,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4946,
											"end": 4955,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4937,
											"end": 4944,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4933,
											"end": 4956,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4929,
											"end": 4961,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4926,
											"end": 4978,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4926,
											"end": 4978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 4926,
											"end": 4978,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4974,
											"end": 4975,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4971,
											"end": 4972,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4964,
											"end": 4976,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4926,
											"end": 4978,
											"name": "tag",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 4926,
											"end": 4978,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4997,
											"end": 5026,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "392"
										},
										{
											"begin": 5016,
											"end": 5025,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4997,
											"end": 5026,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 4997,
											"end": 5026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4997,
											"end": 5026,
											"name": "tag",
											"source": 1,
											"value": "392"
										},
										{
											"begin": 4997,
											"end": 5026,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5026,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5026,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5076,
											"end": 5078,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5065,
											"end": 5074,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5061,
											"end": 5079,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5048,
											"end": 5080,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5120,
											"end": 5130,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5113,
											"end": 5118,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5109,
											"end": 5131,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5102,
											"end": 5107,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5099,
											"end": 5132,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5089,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "393"
										},
										{
											"begin": 5089,
											"end": 5150,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5146,
											"end": 5147,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5143,
											"end": 5144,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5136,
											"end": 5148,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5089,
											"end": 5150,
											"name": "tag",
											"source": 1,
											"value": "393"
										},
										{
											"begin": 5089,
											"end": 5150,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5169,
											"end": 5174,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5159,
											"end": 5174,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5159,
											"end": 5174,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5159,
											"end": 5174,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4830,
											"end": 5180,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4830,
											"end": 5180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4830,
											"end": 5180,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4830,
											"end": 5180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4830,
											"end": 5180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4830,
											"end": 5180,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7684,
											"end": 7811,
											"name": "tag",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 7684,
											"end": 7811,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7745,
											"end": 7755,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 7740,
											"end": 7743,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 7736,
											"end": 7756,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 7733,
											"end": 7734,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7726,
											"end": 7757,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7776,
											"end": 7780,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 7773,
											"end": 7774,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7766,
											"end": 7781,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7800,
											"end": 7804,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7797,
											"end": 7798,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7790,
											"end": 7805,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7816,
											"end": 7986,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 7816,
											"end": 7986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7913,
											"end": 7923,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7906,
											"end": 7924,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7906,
											"end": 7924,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7906,
											"end": 7924,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7886,
											"end": 7904,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7886,
											"end": 7904,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7886,
											"end": 7904,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7882,
											"end": 7925,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7882,
											"end": 7925,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7937,
											"end": 7957,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7937,
											"end": 7957,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7934,
											"end": 7980,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7934,
											"end": 7980,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 7934,
											"end": 7980,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7960,
											"end": 7978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 7960,
											"end": 7978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 7960,
											"end": 7978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7991,
											"end": 8118,
											"name": "tag",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 7991,
											"end": 8118,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8052,
											"end": 8062,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 8047,
											"end": 8050,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 8043,
											"end": 8063,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 8040,
											"end": 8041,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8033,
											"end": 8064,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8083,
											"end": 8087,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 8080,
											"end": 8081,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8073,
											"end": 8088,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8107,
											"end": 8111,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8104,
											"end": 8105,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8097,
											"end": 8112,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8123,
											"end": 8301,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 8123,
											"end": 8301,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8162,
											"end": 8163,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8196,
											"end": 8206,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8193,
											"end": 8194,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8189,
											"end": 8207,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8226,
											"end": 8229,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8216,
											"end": 8253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "408"
										},
										{
											"begin": 8216,
											"end": 8253,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8233,
											"end": 8251,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "408"
										},
										{
											"begin": 8233,
											"end": 8251,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 8233,
											"end": 8251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8233,
											"end": 8251,
											"name": "tag",
											"source": 1,
											"value": "408"
										},
										{
											"begin": 8233,
											"end": 8251,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8291,
											"end": 8294,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8278,
											"end": 8288,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8275,
											"end": 8276,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8271,
											"end": 8289,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8267,
											"end": 8295,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8262,
											"end": 8295,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8262,
											"end": 8295,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8262,
											"end": 8295,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8123,
											"end": 8301,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8123,
											"end": 8301,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8123,
											"end": 8301,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8123,
											"end": 8301,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8123,
											"end": 8301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10356,
											"end": 10491,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 10356,
											"end": 10491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10395,
											"end": 10398,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10416,
											"end": 10433,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10416,
											"end": 10433,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10416,
											"end": 10433,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10413,
											"end": 10456,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "416"
										},
										{
											"begin": 10413,
											"end": 10456,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10436,
											"end": 10454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "416"
										},
										{
											"begin": 10436,
											"end": 10454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 10436,
											"end": 10454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10436,
											"end": 10454,
											"name": "tag",
											"source": 1,
											"value": "416"
										},
										{
											"begin": 10436,
											"end": 10454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10483,
											"end": 10484,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10472,
											"end": 10485,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10472,
											"end": 10485,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10356,
											"end": 10491,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13703,
											"end": 13921,
											"name": "tag",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 13703,
											"end": 13921,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13809,
											"end": 13843,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13809,
											"end": 13843,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13809,
											"end": 13843,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13773,
											"end": 13807,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13773,
											"end": 13807,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13773,
											"end": 13807,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13769,
											"end": 13844,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13769,
											"end": 13844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13856,
											"end": 13892,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13856,
											"end": 13892,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 13853,
											"end": 13915,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13853,
											"end": 13915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 13853,
											"end": 13915,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13895,
											"end": 13913,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 13895,
											"end": 13913,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 13895,
											"end": 13913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14780,
											"end": 14905,
											"name": "tag",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 14780,
											"end": 14905,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14845,
											"end": 14854,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14845,
											"end": 14854,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14845,
											"end": 14854,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14866,
											"end": 14876,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14866,
											"end": 14876,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14866,
											"end": 14876,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 14863,
											"end": 14899,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14863,
											"end": 14899,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 14863,
											"end": 14899,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14879,
											"end": 14897,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 14879,
											"end": 14897,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 14879,
											"end": 14897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15266,
											"end": 15434,
											"name": "tag",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 15266,
											"end": 15434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15339,
											"end": 15348,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15339,
											"end": 15348,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15339,
											"end": 15348,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 15370,
											"end": 15379,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15370,
											"end": 15379,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15387,
											"end": 15402,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15387,
											"end": 15402,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15387,
											"end": 15402,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 15381,
											"end": 15403,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15381,
											"end": 15403,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 15367,
											"end": 15404,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 15357,
											"end": 15428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 15357,
											"end": 15428,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15408,
											"end": 15426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 15408,
											"end": 15426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 15408,
											"end": 15426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15439,
											"end": 15559,
											"name": "tag",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 15439,
											"end": 15559,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15480,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15505,
											"end": 15506,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15495,
											"end": 15530,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 15495,
											"end": 15530,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15510,
											"end": 15528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 15510,
											"end": 15528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 15510,
											"end": 15528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15510,
											"end": 15528,
											"name": "tag",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 15510,
											"end": 15528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15544,
											"end": 15553,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 15544,
											"end": 15553,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15439,
											"end": 15559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15966,
											"end": 16181,
											"name": "tag",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 15966,
											"end": 16181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16034,
											"end": 16068,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16034,
											"end": 16068,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16034,
											"end": 16068,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16070,
											"end": 16104,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16070,
											"end": 16104,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16070,
											"end": 16104,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16030,
											"end": 16105,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16030,
											"end": 16105,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16117,
											"end": 16152,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16117,
											"end": 16152,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 16114,
											"end": 16175,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 16114,
											"end": 16175,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 16114,
											"end": 16175,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16155,
											"end": 16173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 16155,
											"end": 16173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 16155,
											"end": 16173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16186,
											"end": 16353,
											"name": "tag",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 16186,
											"end": 16353,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16281,
											"end": 16291,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 16254,
											"end": 16272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16254,
											"end": 16272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16254,
											"end": 16272,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16274,
											"end": 16292,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16274,
											"end": 16292,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16274,
											"end": 16292,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16250,
											"end": 16293,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16250,
											"end": 16293,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16305,
											"end": 16324,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16305,
											"end": 16324,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 16302,
											"end": 16347,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 16302,
											"end": 16347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 16302,
											"end": 16347,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16327,
											"end": 16345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 16327,
											"end": 16345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 16327,
											"end": 16345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										}
									],
									".data": {
										"0AB5EAE08D50CC345C58C2D7D67F9034A98D0A88DD540314C408C39A8DCEC01D": "556e693a3a6d696e743a207472616e7366657220616d6f756e74206f766572666c6f7773",
										"136758788D48EC4D9744BA8C2136A9C9406D6C92CD4A81EFF0DE4942B636DB13": "556e693a3a7472616e7366657246726f6d3a207472616e7366657220616d6f756e742065786365656473207370656e64657220616c6c6f77616e6365",
										"1EF2347F5DBB97E8EB7BC1442A128A1C6E65386B013257FE2B8AD95AAAA96AB8": "556e693a3a6d696e743a20746f74616c537570706c7920657863656564732039362062697473",
										"3230BA2CB739B33589720B8A5892642694535E935234939514431FF16907D24A": "556e693a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"58DA0B91010307EE6A63257C5283618928105E355857D8F79CF7E017AD7082F4": "556e693a3a7065726d69743a20616d6f756e7420657863656564732039362062697473",
										"5C6C891434A3C5951DB59F5FE43D566B04BF54E07BC444B7F9F72601E608DC42": "556e693a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f7773",
										"66157EF8D926A3327823FECD4CE53EDFCB6533C37C90DC98ACFB91E4F2854725": "556e693a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d62657220657863656564732033322062697473",
										"8F9E8E1E6816D4A772D233C08B8292A576126F7DBD1D9B7CD30EF07F7C3D78D2": "556e693a3a5f6d6f7665566f7465733a20766f746520616d6f756e7420756e646572666c6f7773",
										"9BC67DB7413F33B8F7A9995149809B7B3A4A83B5BA884084BEA06CFB35986555": "556e693a3a7472616e736665723a20616d6f756e7420657863656564732039362062697473",
										"BCB6733E7AC2AEE3C3602EE664D4B3CB251E429DF5C7E9148D412D0B60F07B16": "556e693a3a6d696e743a20616d6f756e7420657863656564732039362062697473",
										"CB3E128DA7F3F16C83A901CCE3AB145C66BAD45A0CD648091FECC9964EBF42FE": "556e693a3a617070726f76653a20616d6f756e7420657863656564732039362062697473",
										"F838EE8B15C3D07740BB9B304B8146EC63BB435A7703825B5E6424EE2072674A": "556e693a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e74206f766572666c6f7773"
									}
								}
							},
							"sourceList": [
								"contracts/Online/ERC20/Uni.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DELEGATION_TYPEHASH()": "e7a324dc",
							"DOMAIN_TYPEHASH()": "20606b70",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"checkpoints(address,uint32)": "f1127ed8",
							"decimals()": "313ce567",
							"delegate(address)": "5c19a95c",
							"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": "c3cda520",
							"delegates(address)": "587cde1e",
							"getCurrentVotes(address)": "b4b5ea57",
							"getPriorVotes(address,uint256)": "782d6fe1",
							"minimumTimeBetweenMints()": "5c11d62f",
							"mint(address,uint256)": "40c10f19",
							"mintCap()": "76c71ca1",
							"minter()": "07546172",
							"mintingAllowedAfter()": "30b36cef",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"numCheckpoints(address)": "6fcfff45",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"setMinter(address)": "fca3b5aa",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"minter_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"mintingAllowedAfter_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newMinter\",\"type\":\"address\"}],\"name\":\"MinterChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DELEGATION_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rawAmount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"votes\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getCurrentVotes\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPriorVotes\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumTimeBetweenMints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rawAmount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintCap\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintingAllowedAfter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rawAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter_\",\"type\":\"address\"}],\"name\":\"setMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rawAmount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rawAmount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"params\":{\"account\":\"The address of the account holding the funds\",\"spender\":\"The address of the account spending the funds\"},\"returns\":{\"_0\":\"The number of tokens approved\"}},\"approve(address,uint256)\":{\"details\":\"This will overwrite the approval amount for `spender`  and is subject to issues noted [here](https://eips.ethereum.org/EIPS/eip-20#approve)\",\"params\":{\"rawAmount\":\"The number of tokens that are approved (2^256-1 means infinite)\",\"spender\":\"The address of the account which may transfer tokens\"},\"returns\":{\"_0\":\"Whether or not the approval succeeded\"}},\"balanceOf(address)\":{\"params\":{\"account\":\"The address of the account to get the balance of\"},\"returns\":{\"_0\":\"The number of tokens held\"}},\"constructor\":{\"params\":{\"account\":\"The initial account to grant all the tokens\",\"minter_\":\"The account with minting ability\",\"mintingAllowedAfter_\":\"The timestamp after which minting may occur\"}},\"delegate(address)\":{\"params\":{\"delegatee\":\"The address to delegate votes to\"}},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"delegatee\":\"The address to delegate votes to\",\"expiry\":\"The time at which to expire the signature\",\"nonce\":\"The contract state required to match the signature\",\"r\":\"Half of the ECDSA signature pair\",\"s\":\"Half of the ECDSA signature pair\",\"v\":\"The recovery byte of the signature\"}},\"getCurrentVotes(address)\":{\"params\":{\"account\":\"The address to get votes balance\"},\"returns\":{\"_0\":\"The number of current votes for `account`\"}},\"getPriorVotes(address,uint256)\":{\"details\":\"Block number must be a finalized block or else this function will revert to prevent misinformation.\",\"params\":{\"account\":\"The address of the account to check\",\"blockNumber\":\"The block number to get the vote balance at\"},\"returns\":{\"_0\":\"The number of votes the account had as of the given block\"}},\"mint(address,uint256)\":{\"params\":{\"dst\":\"The address of the destination account\",\"rawAmount\":\"The number of tokens to be minted\"}},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"deadline\":\"The time at which to expire the signature\",\"owner\":\"The address to approve from\",\"r\":\"Half of the ECDSA signature pair\",\"rawAmount\":\"The number of tokens that are approved (2^256-1 means infinite)\",\"s\":\"Half of the ECDSA signature pair\",\"spender\":\"The address to be approved\",\"v\":\"The recovery byte of the signature\"}},\"setMinter(address)\":{\"params\":{\"minter_\":\"The address of the new minter\"}},\"transfer(address,uint256)\":{\"params\":{\"dst\":\"The address of the destination account\",\"rawAmount\":\"The number of tokens to transfer\"},\"returns\":{\"_0\":\"Whether or not the transfer succeeded\"}},\"transferFrom(address,address,uint256)\":{\"params\":{\"dst\":\"The address of the destination account\",\"rawAmount\":\"The number of tokens to transfer\",\"src\":\"The address of the source account\"},\"returns\":{\"_0\":\"Whether or not the transfer succeeded\"}}},\"version\":1},\"userdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"notice\":\"The standard EIP-20 approval event\"},\"DelegateChanged(address,address,address)\":{\"notice\":\"An event thats emitted when an account changes its delegate\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"notice\":\"An event thats emitted when a delegate account's vote balance changes\"},\"MinterChanged(address,address)\":{\"notice\":\"An event thats emitted when the minter address is changed\"},\"Transfer(address,address,uint256)\":{\"notice\":\"The standard EIP-20 transfer event\"}},\"kind\":\"user\",\"methods\":{\"DELEGATION_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the delegation struct used by the contract\"},\"DOMAIN_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the contract's domain\"},\"PERMIT_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the permit struct used by the contract\"},\"allowance(address,address)\":{\"notice\":\"Get the number of tokens `spender` is approved to spend on behalf of `account`\"},\"approve(address,uint256)\":{\"notice\":\"Approve `spender` to transfer up to `amount` from `src`\"},\"balanceOf(address)\":{\"notice\":\"Get the number of tokens held by the `account`\"},\"checkpoints(address,uint32)\":{\"notice\":\"A record of votes checkpoints for each account, by index\"},\"constructor\":{\"notice\":\"Construct a new Uni token\"},\"decimals()\":{\"notice\":\"EIP-20 token decimals for this token\"},\"delegate(address)\":{\"notice\":\"Delegate votes from `msg.sender` to `delegatee`\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Delegates votes from signatory to `delegatee`\"},\"delegates(address)\":{\"notice\":\"A record of each accounts delegate\"},\"getCurrentVotes(address)\":{\"notice\":\"Gets the current votes balance for `account`\"},\"getPriorVotes(address,uint256)\":{\"notice\":\"Determine the prior number of votes for an account as of a block number\"},\"minimumTimeBetweenMints()\":{\"notice\":\"Minimum time between mints\"},\"mint(address,uint256)\":{\"notice\":\"Mint new tokens\"},\"mintCap()\":{\"notice\":\"Cap on the percentage of totalSupply that can be minted at each mint\"},\"minter()\":{\"notice\":\"Address which may mint new tokens\"},\"mintingAllowedAfter()\":{\"notice\":\"The timestamp after which minting may occur\"},\"name()\":{\"notice\":\"EIP-20 token name for this token\"},\"nonces(address)\":{\"notice\":\"A record of states for signing / validating signatures\"},\"numCheckpoints(address)\":{\"notice\":\"The number of checkpoints for each account\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Triggers an approval from owner to spends\"},\"setMinter(address)\":{\"notice\":\"Change the minter address\"},\"symbol()\":{\"notice\":\"EIP-20 token symbol for this token\"},\"totalSupply()\":{\"notice\":\"Total number of tokens in circulation\"},\"transfer(address,uint256)\":{\"notice\":\"Transfer `amount` tokens from `msg.sender` to `dst`\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfer `amount` tokens from `src` to `dst`\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Online/ERC20/Uni.sol\":\"Uni\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Online/ERC20/Uni.sol\":{\"keccak256\":\"0xe832840aff7bec9eac140bb98fc8e67ec99e44d123767426486227b3410a0e50\",\"urls\":[\"bzz-raw://8b55ed0aa2706b2224ffcce466e7a3b9ce85945b345bb77db407860f32b5d515\",\"dweb:/ipfs/QmS6aCiwUYGknjd7MqbB1WL745Hhp8dSx58v1pChL2B7um\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 277,
								"contract": "contracts/Online/ERC20/Uni.sol:Uni",
								"label": "totalSupply",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 280,
								"contract": "contracts/Online/ERC20/Uni.sol:Uni",
								"label": "minter",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 283,
								"contract": "contracts/Online/ERC20/Uni.sol:Uni",
								"label": "mintingAllowedAfter",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 300,
								"contract": "contracts/Online/ERC20/Uni.sol:Uni",
								"label": "allowances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint96))"
							},
							{
								"astId": 305,
								"contract": "contracts/Online/ERC20/Uni.sol:Uni",
								"label": "balances",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint96)"
							},
							{
								"astId": 310,
								"contract": "contracts/Online/ERC20/Uni.sol:Uni",
								"label": "delegates",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_address)"
							},
							{
								"astId": 324,
								"contract": "contracts/Online/ERC20/Uni.sol:Uni",
								"label": "checkpoints",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)316_storage))"
							},
							{
								"astId": 329,
								"contract": "contracts/Online/ERC20/Uni.sol:Uni",
								"label": "numCheckpoints",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint32)"
							},
							{
								"astId": 352,
								"contract": "contracts/Online/ERC20/Uni.sol:Uni",
								"label": "nonces",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_address)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint96))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint96))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint96)"
							},
							"t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)316_storage))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint32 => struct Uni.Checkpoint))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint32,t_struct(Checkpoint)316_storage)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_address,t_uint32)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint32)",
								"numberOfBytes": "32",
								"value": "t_uint32"
							},
							"t_mapping(t_address,t_uint96)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint96)",
								"numberOfBytes": "32",
								"value": "t_uint96"
							},
							"t_mapping(t_uint32,t_struct(Checkpoint)316_storage)": {
								"encoding": "mapping",
								"key": "t_uint32",
								"label": "mapping(uint32 => struct Uni.Checkpoint)",
								"numberOfBytes": "32",
								"value": "t_struct(Checkpoint)316_storage"
							},
							"t_struct(Checkpoint)316_storage": {
								"encoding": "inplace",
								"label": "struct Uni.Checkpoint",
								"members": [
									{
										"astId": 313,
										"contract": "contracts/Online/ERC20/Uni.sol:Uni",
										"label": "fromBlock",
										"offset": 0,
										"slot": "0",
										"type": "t_uint32"
									},
									{
										"astId": 315,
										"contract": "contracts/Online/ERC20/Uni.sol:Uni",
										"label": "votes",
										"offset": 4,
										"slot": "0",
										"type": "t_uint96"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							},
							"t_uint96": {
								"encoding": "inplace",
								"label": "uint96",
								"numberOfBytes": "12"
							}
						}
					},
					"userdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"notice": "The standard EIP-20 approval event"
							},
							"DelegateChanged(address,address,address)": {
								"notice": "An event thats emitted when an account changes its delegate"
							},
							"DelegateVotesChanged(address,uint256,uint256)": {
								"notice": "An event thats emitted when a delegate account's vote balance changes"
							},
							"MinterChanged(address,address)": {
								"notice": "An event thats emitted when the minter address is changed"
							},
							"Transfer(address,address,uint256)": {
								"notice": "The standard EIP-20 transfer event"
							}
						},
						"kind": "user",
						"methods": {
							"DELEGATION_TYPEHASH()": {
								"notice": "The EIP-712 typehash for the delegation struct used by the contract"
							},
							"DOMAIN_TYPEHASH()": {
								"notice": "The EIP-712 typehash for the contract's domain"
							},
							"PERMIT_TYPEHASH()": {
								"notice": "The EIP-712 typehash for the permit struct used by the contract"
							},
							"allowance(address,address)": {
								"notice": "Get the number of tokens `spender` is approved to spend on behalf of `account`"
							},
							"approve(address,uint256)": {
								"notice": "Approve `spender` to transfer up to `amount` from `src`"
							},
							"balanceOf(address)": {
								"notice": "Get the number of tokens held by the `account`"
							},
							"checkpoints(address,uint32)": {
								"notice": "A record of votes checkpoints for each account, by index"
							},
							"constructor": {
								"notice": "Construct a new Uni token"
							},
							"decimals()": {
								"notice": "EIP-20 token decimals for this token"
							},
							"delegate(address)": {
								"notice": "Delegate votes from `msg.sender` to `delegatee`"
							},
							"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"notice": "Delegates votes from signatory to `delegatee`"
							},
							"delegates(address)": {
								"notice": "A record of each accounts delegate"
							},
							"getCurrentVotes(address)": {
								"notice": "Gets the current votes balance for `account`"
							},
							"getPriorVotes(address,uint256)": {
								"notice": "Determine the prior number of votes for an account as of a block number"
							},
							"minimumTimeBetweenMints()": {
								"notice": "Minimum time between mints"
							},
							"mint(address,uint256)": {
								"notice": "Mint new tokens"
							},
							"mintCap()": {
								"notice": "Cap on the percentage of totalSupply that can be minted at each mint"
							},
							"minter()": {
								"notice": "Address which may mint new tokens"
							},
							"mintingAllowedAfter()": {
								"notice": "The timestamp after which minting may occur"
							},
							"name()": {
								"notice": "EIP-20 token name for this token"
							},
							"nonces(address)": {
								"notice": "A record of states for signing / validating signatures"
							},
							"numCheckpoints(address)": {
								"notice": "The number of checkpoints for each account"
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"notice": "Triggers an approval from owner to spends"
							},
							"setMinter(address)": {
								"notice": "Change the minter address"
							},
							"symbol()": {
								"notice": "EIP-20 token symbol for this token"
							},
							"totalSupply()": {
								"notice": "Total number of tokens in circulation"
							},
							"transfer(address,uint256)": {
								"notice": "Transfer `amount` tokens from `msg.sender` to `dst`"
							},
							"transferFrom(address,address,uint256)": {
								"notice": "Transfer `amount` tokens from `src` to `dst`"
							}
						},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/Online/ERC20/Uni.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/Online/ERC20/Uni.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n   --> contracts/Online/ERC20/Uni.sol:315:5:\n    |\n315 |     constructor(\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 10782,
					"file": "contracts/Online/ERC20/Uni.sol",
					"start": 10276
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/Online/ERC20/Uni.sol": {
				"ast": {
					"absolutePath": "contracts/Online/ERC20/Uni.sol",
					"exportedSymbols": {
						"SafeMath": [
							261
						],
						"Uni": [
							1550
						]
					},
					"id": 1551,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "136:23:0"
						},
						{
							"id": 2,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "160:33:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "326:563:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 261,
							"linearizedBaseContracts": [
								261
							],
							"name": "SafeMath",
							"nameLocation": "898:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "1195:109:0",
										"statements": [
											{
												"assignments": [
													14
												],
												"declarations": [
													{
														"constant": false,
														"id": 14,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "1213:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 28,
														"src": "1205:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 13,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1205:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 18,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 15,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "1217:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 16,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "1221:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1217:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1205:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 20,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 14,
																"src": "1240:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 21,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 6,
																"src": "1245:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1240:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 23,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1248:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 19,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1232:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1232:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 25,
												"nodeType": "ExpressionStatement",
												"src": "1232:46:0"
											},
											{
												"expression": {
													"id": 26,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 14,
													"src": "1296:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 12,
												"id": 27,
												"nodeType": "Return",
												"src": "1289:8:0"
											}
										]
									},
									"documentation": {
										"id": 4,
										"nodeType": "StructuredDocumentation",
										"src": "913:210:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 29,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "1137:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1149:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "1141:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1141:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1160:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "1152:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 7,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1152:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1140:22:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "1186:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1186:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1185:9:0"
									},
									"scope": 261,
									"src": "1128:176:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 56,
										"nodeType": "Block",
										"src": "1670:92:0",
										"statements": [
											{
												"assignments": [
													42
												],
												"declarations": [
													{
														"constant": false,
														"id": 42,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "1688:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 56,
														"src": "1680:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 41,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1680:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 46,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 43,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "1692:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 44,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "1696:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1692:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1680:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 48,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 42,
																"src": "1715:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 49,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 32,
																"src": "1720:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1715:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 51,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 36,
															"src": "1723:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 47,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1707:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 52,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1707:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 53,
												"nodeType": "ExpressionStatement",
												"src": "1707:29:0"
											},
											{
												"expression": {
													"id": 54,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 42,
													"src": "1754:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 40,
												"id": 55,
												"nodeType": "Return",
												"src": "1747:8:0"
											}
										]
									},
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "1310:230:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting with custom message on overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 57,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "1554:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1575:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "1567:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1594:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "1586:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1586:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "1619:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "1605:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 35,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1605:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1557:80:0"
									},
									"returnParameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "1661:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1661:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1660:9:0"
									},
									"scope": 261,
									"src": "1545:217:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "2088:68:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 68,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 60,
															"src": "2109:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 69,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 62,
															"src": "2112:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e20756e646572666c6f77",
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2115:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1caebeb8fec78d96e2107fd22e0abe38fcab72034848d9a80a8de2a86ac41d40",
																"typeString": "literal_string \"SafeMath: subtraction underflow\""
															},
															"value": "SafeMath: subtraction underflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_1caebeb8fec78d96e2107fd22e0abe38fcab72034848d9a80a8de2a86ac41d40",
																"typeString": "literal_string \"SafeMath: subtraction underflow\""
															}
														],
														"id": 67,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															74,
															102
														],
														"referencedDeclaration": 102,
														"src": "2105:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2105:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 66,
												"id": 72,
												"nodeType": "Return",
												"src": "2098:51:0"
											}
										]
									},
									"documentation": {
										"id": 58,
										"nodeType": "StructuredDocumentation",
										"src": "1768:248:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on underflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot underflow."
									},
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "2030:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2042:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "2034:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 59,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2034:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2053:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "2045:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 61,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2045:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2033:22:0"
									},
									"returnParameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "2079:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2079:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2078:9:0"
									},
									"scope": 261,
									"src": "2021:135:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 101,
										"nodeType": "Block",
										"src": "2560:92:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 87,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 79,
																"src": "2578:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 88,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "2583:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2578:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 90,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "2586:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 86,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2570:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2570:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 92,
												"nodeType": "ExpressionStatement",
												"src": "2570:29:0"
											},
											{
												"assignments": [
													94
												],
												"declarations": [
													{
														"constant": false,
														"id": 94,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "2617:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 101,
														"src": "2609:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 93,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2609:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 98,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 97,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 95,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 77,
														"src": "2621:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 96,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "2625:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2621:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2609:17:0"
											},
											{
												"expression": {
													"id": 99,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 94,
													"src": "2644:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 85,
												"id": 100,
												"nodeType": "Return",
												"src": "2637:8:0"
											}
										]
									},
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "2162:268:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on underflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot underflow."
									},
									"id": 102,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "2444:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2465:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "2457:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2457:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2484:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "2476:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2476:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "2509:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "2495:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 80,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2495:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2447:80:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "2551:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 83,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2551:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2550:9:0"
									},
									"scope": 261,
									"src": "2435:217:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 136,
										"nodeType": "Block",
										"src": "2952:392:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 112,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 105,
														"src": "3184:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 113,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3189:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3184:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 118,
												"nodeType": "IfStatement",
												"src": "3180:45:0",
												"trueBody": {
													"id": 117,
													"nodeType": "Block",
													"src": "3192:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 115,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3213:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 111,
															"id": 116,
															"nodeType": "Return",
															"src": "3206:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													120
												],
												"declarations": [
													{
														"constant": false,
														"id": 120,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "3243:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 136,
														"src": "3235:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 119,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3235:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 124,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 121,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 105,
														"src": "3247:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 122,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 107,
														"src": "3251:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3247:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3235:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 128,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 126,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 120,
																	"src": "3270:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 127,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 105,
																	"src": "3274:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3270:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 129,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 107,
																"src": "3279:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3270:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3282:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 125,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3262:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3262:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 133,
												"nodeType": "ExpressionStatement",
												"src": "3262:56:0"
											},
											{
												"expression": {
													"id": 134,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 120,
													"src": "3336:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 111,
												"id": 135,
												"nodeType": "Return",
												"src": "3329:8:0"
											}
										]
									},
									"documentation": {
										"id": 103,
										"nodeType": "StructuredDocumentation",
										"src": "2658:222:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "2894:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2906:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "2898:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2898:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2917:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "2909:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2909:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2897:22:0"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "2943:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2943:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2942:9:0"
									},
									"scope": 261,
									"src": "2885:459:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 173,
										"nodeType": "Block",
										"src": "3702:369:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 149,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 140,
														"src": "3934:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 150,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3939:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3934:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 155,
												"nodeType": "IfStatement",
												"src": "3930:45:0",
												"trueBody": {
													"id": 154,
													"nodeType": "Block",
													"src": "3942:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 152,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3963:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 148,
															"id": 153,
															"nodeType": "Return",
															"src": "3956:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													157
												],
												"declarations": [
													{
														"constant": false,
														"id": 157,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "3993:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 173,
														"src": "3985:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 156,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3985:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 161,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 158,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 140,
														"src": "3997:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 159,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 142,
														"src": "4001:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3997:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3985:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 165,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 163,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 157,
																	"src": "4020:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 164,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 140,
																	"src": "4024:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4020:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 166,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 142,
																"src": "4029:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4020:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 168,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 144,
															"src": "4032:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 162,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4012:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4012:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 170,
												"nodeType": "ExpressionStatement",
												"src": "4012:33:0"
											},
											{
												"expression": {
													"id": 171,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 157,
													"src": "4063:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 148,
												"id": 172,
												"nodeType": "Return",
												"src": "4056:8:0"
											}
										]
									},
									"documentation": {
										"id": 138,
										"nodeType": "StructuredDocumentation",
										"src": "3350:222:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3586:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3607:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "3599:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3599:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3626:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "3618:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3618:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3651:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "3637:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 143,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3637:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3589:80:0"
									},
									"returnParameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "3693:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3693:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3692:9:0"
									},
									"scope": 261,
									"src": "3577:494:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 190,
										"nodeType": "Block",
										"src": "4593:63:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 185,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "4614:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 186,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "4617:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 187,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4620:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 184,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															191,
															219
														],
														"referencedDeclaration": 219,
														"src": "4610:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4610:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 183,
												"id": 189,
												"nodeType": "Return",
												"src": "4603:46:0"
											}
										]
									},
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "4077:444:0",
										"text": " @dev Returns the integer division of two unsigned integers.\n Reverts on division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 191,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "4535:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4547:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "4539:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4539:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4558:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "4550:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4550:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4538:22:0"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "4584:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4584:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4583:9:0"
									},
									"scope": 261,
									"src": "4526:130:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 218,
										"nodeType": "Block",
										"src": "5256:243:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 204,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 196,
																"src": "5340:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 205,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5344:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5340:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 207,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "5347:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 203,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5332:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5332:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "5332:28:0"
											},
											{
												"assignments": [
													211
												],
												"declarations": [
													{
														"constant": false,
														"id": 211,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "5378:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 218,
														"src": "5370:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 210,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5370:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 215,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 212,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "5382:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 213,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 196,
														"src": "5386:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5382:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5370:17:0"
											},
											{
												"expression": {
													"id": 216,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 211,
													"src": "5491:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 202,
												"id": 217,
												"nodeType": "Return",
												"src": "5484:8:0"
											}
										]
									},
									"documentation": {
										"id": 192,
										"nodeType": "StructuredDocumentation",
										"src": "4662:464:0",
										"text": " @dev Returns the integer division of two unsigned integers.\n Reverts with custom message on division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 219,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5140:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5161:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "5153:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5153:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5180:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "5172:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5172:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5205:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "5191:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 197,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5191:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5143:80:0"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "5247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5247:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5246:9:0"
									},
									"scope": 261,
									"src": "5131:368:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 235,
										"nodeType": "Block",
										"src": "6010:61:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 230,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 222,
															"src": "6031:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 231,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "6034:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 232,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6037:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 229,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															236,
															260
														],
														"referencedDeclaration": 260,
														"src": "6027:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6027:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 228,
												"id": 234,
												"nodeType": "Return",
												"src": "6020:44:0"
											}
										]
									},
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "5505:433:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "5952:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5964:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "5956:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5956:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5975:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "5967:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5967:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5955:22:0"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "6001:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6001:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6000:9:0"
									},
									"scope": 261,
									"src": "5943:128:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "6660:68:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 249,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 241,
																"src": "6678:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 250,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6683:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6678:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 252,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "6686:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 248,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6670:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6670:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 254,
												"nodeType": "ExpressionStatement",
												"src": "6670:29:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 255,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 239,
														"src": "6716:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 256,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "6720:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6716:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 247,
												"id": 258,
												"nodeType": "Return",
												"src": "6709:12:0"
											}
										]
									},
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "6077:453:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6544:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6565:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "6557:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6557:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6584:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "6576:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6576:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6609:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "6595:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 242,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6595:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6547:80:0"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "6651:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6651:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6650:9:0"
									},
									"scope": 261,
									"src": "6535:193:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1551,
							"src": "890:5840:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Uni",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1550,
							"linearizedBaseContracts": [
								1550
							],
							"name": "Uni",
							"nameLocation": "6741:3:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "6751:44:0",
										"text": "@notice EIP-20 token name for this token"
									},
									"functionSelector": "06fdde03",
									"id": 265,
									"mutability": "constant",
									"name": "name",
									"nameLocation": "6823:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 1550,
									"src": "6800:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 263,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "6800:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "556e6973776170",
										"id": 264,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6830:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_99c45e8ee5dde061ced9c812089094fbd28a020e7e37f2851198887e5ca64985",
											"typeString": "literal_string \"Uniswap\""
										},
										"value": "Uniswap"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 266,
										"nodeType": "StructuredDocumentation",
										"src": "6846:46:0",
										"text": "@notice EIP-20 token symbol for this token"
									},
									"functionSelector": "95d89b41",
									"id": 269,
									"mutability": "constant",
									"name": "symbol",
									"nameLocation": "6920:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 1550,
									"src": "6897:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 267,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "6897:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "554e49",
										"id": 268,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6929:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_fba01d52a7cd84480d0573725899486a0b5e55c20ff45d6628874349375d1650",
											"typeString": "literal_string \"UNI\""
										},
										"value": "UNI"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 270,
										"nodeType": "StructuredDocumentation",
										"src": "6941:48:0",
										"text": "@notice EIP-20 token decimals for this token"
									},
									"functionSelector": "313ce567",
									"id": 273,
									"mutability": "constant",
									"name": "decimals",
									"nameLocation": "7016:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 1550,
									"src": "6994:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 271,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "6994:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3138",
										"id": 272,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7027:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 274,
										"nodeType": "StructuredDocumentation",
										"src": "7036:49:0",
										"text": "@notice Total number of tokens in circulation"
									},
									"functionSelector": "18160ddd",
									"id": 277,
									"mutability": "mutable",
									"name": "totalSupply",
									"nameLocation": "7105:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1550,
									"src": "7090:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 275,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "7090:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "315f3030305f3030305f303030653138",
										"id": 276,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7119:16:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000000"
										},
										"value": "1_000_000_000e18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 278,
										"nodeType": "StructuredDocumentation",
										"src": "7159:45:0",
										"text": "@notice Address which may mint new tokens"
									},
									"functionSelector": "07546172",
									"id": 280,
									"mutability": "mutable",
									"name": "minter",
									"nameLocation": "7224:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 1550,
									"src": "7209:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 279,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "7209:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 281,
										"nodeType": "StructuredDocumentation",
										"src": "7237:55:0",
										"text": "@notice The timestamp after which minting may occur"
									},
									"functionSelector": "30b36cef",
									"id": 283,
									"mutability": "mutable",
									"name": "mintingAllowedAfter",
									"nameLocation": "7312:19:0",
									"nodeType": "VariableDeclaration",
									"scope": 1550,
									"src": "7297:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 282,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "7297:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 284,
										"nodeType": "StructuredDocumentation",
										"src": "7338:38:0",
										"text": "@notice Minimum time between mints"
									},
									"functionSelector": "5c11d62f",
									"id": 289,
									"mutability": "constant",
									"name": "minimumTimeBetweenMints",
									"nameLocation": "7404:23:0",
									"nodeType": "VariableDeclaration",
									"scope": 1550,
									"src": "7381:61:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 285,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "7381:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_31536000_by_1",
											"typeString": "int_const 31536000"
										},
										"id": 288,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 286,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "7430:6:0",
											"subdenomination": "days",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_86400_by_1",
												"typeString": "int_const 86400"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"hexValue": "333635",
											"id": 287,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "7439:3:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_365_by_1",
												"typeString": "int_const 365"
											},
											"value": "365"
										},
										"src": "7430:12:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_31536000_by_1",
											"typeString": "int_const 31536000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 290,
										"nodeType": "StructuredDocumentation",
										"src": "7449:80:0",
										"text": "@notice Cap on the percentage of totalSupply that can be minted at each mint"
									},
									"functionSelector": "76c71ca1",
									"id": 293,
									"mutability": "constant",
									"name": "mintCap",
									"nameLocation": "7556:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1550,
									"src": "7534:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 291,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "7534:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 292,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7566:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 294,
										"nodeType": "StructuredDocumentation",
										"src": "7574:49:0",
										"text": "@notice Allowance amounts on behalf of others"
									},
									"id": 300,
									"mutability": "mutable",
									"name": "allowances",
									"nameLocation": "7684:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 1550,
									"src": "7628:66:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint96_$_$",
										"typeString": "mapping(address => mapping(address => uint96))"
									},
									"typeName": {
										"id": 299,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 295,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "7636:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "7628:46:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint96_$_$",
											"typeString": "mapping(address => mapping(address => uint96))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 298,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 296,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "7655:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "7647:26:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
												"typeString": "mapping(address => uint96)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 297,
												"name": "uint96",
												"nodeType": "ElementaryTypeName",
												"src": "7666:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 301,
										"nodeType": "StructuredDocumentation",
										"src": "7701:62:0",
										"text": "@notice Official record of token balances for each account"
									},
									"id": 305,
									"mutability": "mutable",
									"name": "balances",
									"nameLocation": "7804:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 1550,
									"src": "7768:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
										"typeString": "mapping(address => uint96)"
									},
									"typeName": {
										"id": 304,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 302,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "7776:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "7768:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
											"typeString": "mapping(address => uint96)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 303,
											"name": "uint96",
											"nodeType": "ElementaryTypeName",
											"src": "7787:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint96",
												"typeString": "uint96"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "7819:46:0",
										"text": "@notice A record of each accounts delegate"
									},
									"functionSelector": "587cde1e",
									"id": 310,
									"mutability": "mutable",
									"name": "delegates",
									"nameLocation": "7905:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1550,
									"src": "7870:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
										"typeString": "mapping(address => address)"
									},
									"typeName": {
										"id": 309,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 307,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "7878:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "7870:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
											"typeString": "mapping(address => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "7889:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "Uni.Checkpoint",
									"documentation": {
										"id": 311,
										"nodeType": "StructuredDocumentation",
										"src": "7921:71:0",
										"text": "@notice A checkpoint for marking number of votes from a given block"
									},
									"id": 316,
									"members": [
										{
											"constant": false,
											"id": 313,
											"mutability": "mutable",
											"name": "fromBlock",
											"nameLocation": "8032:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 316,
											"src": "8025:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 312,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "8025:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 315,
											"mutability": "mutable",
											"name": "votes",
											"nameLocation": "8058:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 316,
											"src": "8051:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint96",
												"typeString": "uint96"
											},
											"typeName": {
												"id": 314,
												"name": "uint96",
												"nodeType": "ElementaryTypeName",
												"src": "8051:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Checkpoint",
									"nameLocation": "8004:10:0",
									"nodeType": "StructDefinition",
									"scope": 1550,
									"src": "7997:73:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 317,
										"nodeType": "StructuredDocumentation",
										"src": "8076:68:0",
										"text": "@notice A record of votes checkpoints for each account, by index"
									},
									"functionSelector": "f1127ed8",
									"id": 324,
									"mutability": "mutable",
									"name": "checkpoints",
									"nameLocation": "8206:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1550,
									"src": "8149:68:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$316_storage_$_$",
										"typeString": "mapping(address => mapping(uint32 => struct Uni.Checkpoint))"
									},
									"typeName": {
										"id": 323,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 318,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "8157:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "8149:49:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$316_storage_$_$",
											"typeString": "mapping(address => mapping(uint32 => struct Uni.Checkpoint))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 322,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 319,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "8176:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"nodeType": "Mapping",
											"src": "8168:29:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$316_storage_$",
												"typeString": "mapping(uint32 => struct Uni.Checkpoint)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 321,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 320,
													"name": "Checkpoint",
													"nameLocations": [
														"8186:10:0"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 316,
													"src": "8186:10:0"
												},
												"referencedDeclaration": 316,
												"src": "8186:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Checkpoint_$316_storage_ptr",
													"typeString": "struct Uni.Checkpoint"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 325,
										"nodeType": "StructuredDocumentation",
										"src": "8224:54:0",
										"text": "@notice The number of checkpoints for each account"
									},
									"functionSelector": "6fcfff45",
									"id": 329,
									"mutability": "mutable",
									"name": "numCheckpoints",
									"nameLocation": "8317:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 1550,
									"src": "8283:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
										"typeString": "mapping(address => uint32)"
									},
									"typeName": {
										"id": 328,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 326,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "8291:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "8283:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
											"typeString": "mapping(address => uint32)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 327,
											"name": "uint32",
											"nodeType": "ElementaryTypeName",
											"src": "8302:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "8338:58:0",
										"text": "@notice The EIP-712 typehash for the contract's domain"
									},
									"functionSelector": "20606b70",
									"id": 335,
									"mutability": "constant",
									"name": "DOMAIN_TYPEHASH",
									"nameLocation": "8425:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 1550,
									"src": "8401:152:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 331,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "8401:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
												"id": 333,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "8474:69:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
													"typeString": "literal_string \"EIP712Domain(string name,uint256 chainId,address verifyingContract)\""
												},
												"value": "EIP712Domain(string name,uint256 chainId,address verifyingContract)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
													"typeString": "literal_string \"EIP712Domain(string name,uint256 chainId,address verifyingContract)\""
												}
											],
											"id": 332,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "8451:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 334,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "8451:102:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "8560:79:0",
										"text": "@notice The EIP-712 typehash for the delegation struct used by the contract"
									},
									"functionSelector": "e7a324dc",
									"id": 341,
									"mutability": "constant",
									"name": "DELEGATION_TYPEHASH",
									"nameLocation": "8668:19:0",
									"nodeType": "VariableDeclaration",
									"scope": 1550,
									"src": "8644:125:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 337,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "8644:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "44656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929",
												"id": 339,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "8708:60:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf",
													"typeString": "literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""
												},
												"value": "Delegation(address delegatee,uint256 nonce,uint256 expiry)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf",
													"typeString": "literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""
												}
											],
											"id": 338,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "8698:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 340,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "8698:71:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 342,
										"nodeType": "StructuredDocumentation",
										"src": "8776:75:0",
										"text": "@notice The EIP-712 typehash for the permit struct used by the contract"
									},
									"functionSelector": "30adf81f",
									"id": 347,
									"mutability": "constant",
									"name": "PERMIT_TYPEHASH",
									"nameLocation": "8880:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 1550,
									"src": "8856:167:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 343,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "8856:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529",
												"id": 345,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "8929:84:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
													"typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
												},
												"value": "Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
													"typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
												}
											],
											"id": 344,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "8906:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 346,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "8906:117:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 348,
										"nodeType": "StructuredDocumentation",
										"src": "9030:66:0",
										"text": "@notice A record of states for signing / validating signatures"
									},
									"functionSelector": "7ecebe00",
									"id": 352,
									"mutability": "mutable",
									"name": "nonces",
									"nameLocation": "9136:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 1550,
									"src": "9101:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 351,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 349,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "9109:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "9101:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 350,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "9120:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 353,
										"nodeType": "StructuredDocumentation",
										"src": "9149:69:0",
										"text": "@notice An event thats emitted when the minter address is changed"
									},
									"eventSelector": "3b0007eb941cf645526cbb3a4fdaecda9d28ce4843167d9263b536a1f1edc0f6",
									"id": 359,
									"name": "MinterChanged",
									"nameLocation": "9229:13:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"indexed": false,
												"mutability": "mutable",
												"name": "minter",
												"nameLocation": "9251:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "9243:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9243:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 357,
												"indexed": false,
												"mutability": "mutable",
												"name": "newMinter",
												"nameLocation": "9267:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "9259:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9242:35:0"
									},
									"src": "9223:55:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "9284:71:0",
										"text": "@notice An event thats emitted when an account changes its delegate"
									},
									"eventSelector": "3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f",
									"id": 368,
									"name": "DelegateChanged",
									"nameLocation": "9366:15:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"indexed": true,
												"mutability": "mutable",
												"name": "delegator",
												"nameLocation": "9407:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "9391:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9391:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"indexed": true,
												"mutability": "mutable",
												"name": "fromDelegate",
												"nameLocation": "9442:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "9426:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9426:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"indexed": true,
												"mutability": "mutable",
												"name": "toDelegate",
												"nameLocation": "9480:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "9464:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9464:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9381:115:0"
									},
									"src": "9360:137:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 369,
										"nodeType": "StructuredDocumentation",
										"src": "9503:81:0",
										"text": "@notice An event thats emitted when a delegate account's vote balance changes"
									},
									"eventSelector": "dec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724",
									"id": 377,
									"name": "DelegateVotesChanged",
									"nameLocation": "9595:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"indexed": true,
												"mutability": "mutable",
												"name": "delegate",
												"nameLocation": "9641:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "9625:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9625:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 373,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousBalance",
												"nameLocation": "9667:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "9659:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9659:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"indexed": false,
												"mutability": "mutable",
												"name": "newBalance",
												"nameLocation": "9700:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "9692:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9692:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9615:101:0"
									},
									"src": "9589:128:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 378,
										"nodeType": "StructuredDocumentation",
										"src": "9723:46:0",
										"text": "@notice The standard EIP-20 transfer event"
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 386,
									"name": "Transfer",
									"nameLocation": "9780:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "9805:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "9789:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9789:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 382,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9827:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "9811:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9811:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 384,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9839:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "9831:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9831:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9788:58:0"
									},
									"src": "9774:73:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 387,
										"nodeType": "StructuredDocumentation",
										"src": "9853:46:0",
										"text": "@notice The standard EIP-20 approval event"
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 395,
									"name": "Approval",
									"nameLocation": "9910:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9944:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "9928:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 388,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9928:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 391,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9975:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "9959:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 390,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9959:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 393,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10000:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "9992:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9992:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9918:94:0"
									},
									"src": "9904:109:0"
								},
								{
									"body": {
										"id": 447,
										"nodeType": "Block",
										"src": "10389:393:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 406,
																"name": "mintingAllowedAfter_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 402,
																"src": "10420:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 407,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "10444:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 408,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10450:9:0",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "10444:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10420:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e693a3a636f6e7374727563746f723a206d696e74696e672063616e206f6e6c7920626567696e206166746572206465706c6f796d656e74",
															"id": 410,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10473:59:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_709d77ba4b86f1914120b68d9c9230eddba9a66e2dbda0bfb5bc324846702760",
																"typeString": "literal_string \"Uni::constructor: minting can only begin after deployment\""
															},
															"value": "Uni::constructor: minting can only begin after deployment"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_709d77ba4b86f1914120b68d9c9230eddba9a66e2dbda0bfb5bc324846702760",
																"typeString": "literal_string \"Uni::constructor: minting can only begin after deployment\""
															}
														],
														"id": 405,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10399:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10399:143:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 412,
												"nodeType": "ExpressionStatement",
												"src": "10399:143:0"
											},
											{
												"expression": {
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 413,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "10553:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
																"typeString": "mapping(address => uint96)"
															}
														},
														"id": 415,
														"indexExpression": {
															"id": 414,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 398,
															"src": "10562:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10553:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 418,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 277,
																"src": "10580:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10573:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint96_$",
																"typeString": "type(uint96)"
															},
															"typeName": {
																"id": 416,
																"name": "uint96",
																"nodeType": "ElementaryTypeName",
																"src": "10573:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 419,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10573:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "10553:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"id": 421,
												"nodeType": "ExpressionStatement",
												"src": "10553:39:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 425,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10624:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 424,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10616:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 423,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10616:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 426,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10616:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 427,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 398,
															"src": "10628:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 428,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 277,
															"src": "10637:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 422,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "10607:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10607:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 430,
												"nodeType": "EmitStatement",
												"src": "10602:47:0"
											},
											{
												"expression": {
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 431,
														"name": "minter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 280,
														"src": "10659:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 432,
														"name": "minter_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 400,
														"src": "10668:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10659:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 434,
												"nodeType": "ExpressionStatement",
												"src": "10659:16:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 438,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10712:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 437,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10704:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 436,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10704:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10704:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 440,
															"name": "minter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 280,
															"src": "10716:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 435,
														"name": "MinterChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "10690:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10690:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 442,
												"nodeType": "EmitStatement",
												"src": "10685:38:0"
											},
											{
												"expression": {
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 443,
														"name": "mintingAllowedAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 283,
														"src": "10733:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 444,
														"name": "mintingAllowedAfter_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 402,
														"src": "10755:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10733:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "10733:42:0"
											}
										]
									},
									"documentation": {
										"id": 396,
										"nodeType": "StructuredDocumentation",
										"src": "10019:252:0",
										"text": " @notice Construct a new Uni token\n @param account The initial account to grant all the tokens\n @param minter_ The account with minting ability\n @param mintingAllowedAfter_ The timestamp after which minting may occur"
									},
									"id": 448,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "10305:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "10297:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10297:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "minter_",
												"nameLocation": "10330:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "10322:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10322:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "mintingAllowedAfter_",
												"nameLocation": "10355:20:0",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "10347:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10347:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10287:94:0"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10389:0:0"
									},
									"scope": 1550,
									"src": "10276:506:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 471,
										"nodeType": "Block",
										"src": "10942:216:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 458,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 455,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "10973:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 456,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10977:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "10973:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 457,
																"name": "minter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 280,
																"src": "10987:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10973:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e693a3a7365744d696e7465723a206f6e6c7920746865206d696e7465722063616e206368616e676520746865206d696e7465722061646472657373",
															"id": 459,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11007:63:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d0c976c03aaa94802283adf77ef1ce74ec8a066553c069fcfec5a68a1eb9411a",
																"typeString": "literal_string \"Uni::setMinter: only the minter can change the minter address\""
															},
															"value": "Uni::setMinter: only the minter can change the minter address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d0c976c03aaa94802283adf77ef1ce74ec8a066553c069fcfec5a68a1eb9411a",
																"typeString": "literal_string \"Uni::setMinter: only the minter can change the minter address\""
															}
														],
														"id": 454,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10952:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10952:128:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 461,
												"nodeType": "ExpressionStatement",
												"src": "10952:128:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 463,
															"name": "minter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 280,
															"src": "11109:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 464,
															"name": "minter_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "11117:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 462,
														"name": "MinterChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "11095:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11095:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 466,
												"nodeType": "EmitStatement",
												"src": "11090:35:0"
											},
											{
												"expression": {
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 467,
														"name": "minter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 280,
														"src": "11135:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 468,
														"name": "minter_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 451,
														"src": "11144:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11135:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 470,
												"nodeType": "ExpressionStatement",
												"src": "11135:16:0"
											}
										]
									},
									"documentation": {
										"id": 449,
										"nodeType": "StructuredDocumentation",
										"src": "10788:104:0",
										"text": " @notice Change the minter address\n @param minter_ The address of the new minter"
									},
									"functionSelector": "fca3b5aa",
									"id": 472,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setMinter",
									"nameLocation": "10906:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "minter_",
												"nameLocation": "10924:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "10916:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10916:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10915:17:0"
									},
									"returnParameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10942:0:0"
									},
									"scope": 1550,
									"src": "10897:261:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 580,
										"nodeType": "Block",
										"src": "11381:1203:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 481,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "11399:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 482,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11403:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "11399:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 483,
																"name": "minter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 280,
																"src": "11413:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11399:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e693a3a6d696e743a206f6e6c7920746865206d696e7465722063616e206d696e74",
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11421:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc6a5c1b47b7f8bc902cdb48ac9758787b1a8119a1909e02b5432deee2d32a62",
																"typeString": "literal_string \"Uni::mint: only the minter can mint\""
															},
															"value": "Uni::mint: only the minter can mint"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc6a5c1b47b7f8bc902cdb48ac9758787b1a8119a1909e02b5432deee2d32a62",
																"typeString": "literal_string \"Uni::mint: only the minter can mint\""
															}
														],
														"id": 480,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11391:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11391:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 487,
												"nodeType": "ExpressionStatement",
												"src": "11391:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 489,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "11490:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11496:9:0",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "11490:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 491,
																"name": "mintingAllowedAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 283,
																"src": "11509:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11490:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e693a3a6d696e743a206d696e74696e67206e6f7420616c6c6f77656420796574",
															"id": 493,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11542:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7b0ec4a3f6bfba673b135595084a79859c9e4ba0d9455df08bfb3bece6df3142",
																"typeString": "literal_string \"Uni::mint: minting not allowed yet\""
															},
															"value": "Uni::mint: minting not allowed yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7b0ec4a3f6bfba673b135595084a79859c9e4ba0d9455df08bfb3bece6df3142",
																"typeString": "literal_string \"Uni::mint: minting not allowed yet\""
															}
														],
														"id": 488,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11469:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11469:119:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 495,
												"nodeType": "ExpressionStatement",
												"src": "11469:119:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 497,
																"name": "dst",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 475,
																"src": "11619:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11634:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11626:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 498,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11626:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11626:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11619:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e693a3a6d696e743a2063616e6e6f74207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11650:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5f24bdbd67fb75785b275770fb658b786eb2736feb96698cf0894896fdf28c73",
																"typeString": "literal_string \"Uni::mint: cannot transfer to the zero address\""
															},
															"value": "Uni::mint: cannot transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5f24bdbd67fb75785b275770fb658b786eb2736feb96698cf0894896fdf28c73",
																"typeString": "literal_string \"Uni::mint: cannot transfer to the zero address\""
															}
														],
														"id": 496,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11598:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11598:110:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 505,
												"nodeType": "ExpressionStatement",
												"src": "11598:110:0"
											},
											{
												"expression": {
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 506,
														"name": "mintingAllowedAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 283,
														"src": "11746:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 509,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "11794:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11800:9:0",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "11794:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 511,
																"name": "minimumTimeBetweenMints",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 289,
																"src": "11823:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															],
															"expression": {
																"id": 507,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 261,
																"src": "11768:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$261_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 508,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11777:3:0",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 29,
															"src": "11768:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 512,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11768:88:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11746:110:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 514,
												"nodeType": "ExpressionStatement",
												"src": "11746:110:0"
											},
											{
												"assignments": [
													516
												],
												"declarations": [
													{
														"constant": false,
														"id": 516,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "11901:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 580,
														"src": "11894:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 515,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "11894:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 521,
												"initialValue": {
													"arguments": [
														{
															"id": 518,
															"name": "rawAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "11917:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "556e693a3a6d696e743a20616d6f756e7420657863656564732039362062697473",
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11928:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bcb6733e7ac2aee3c3602ee664d4b3cb251e429df5c7e9148d412d0b60f07b16",
																"typeString": "literal_string \"Uni::mint: amount exceeds 96 bits\""
															},
															"value": "Uni::mint: amount exceeds 96 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_bcb6733e7ac2aee3c3602ee664d4b3cb251e429df5c7e9148d412d0b60f07b16",
																"typeString": "literal_string \"Uni::mint: amount exceeds 96 bits\""
															}
														],
														"id": 517,
														"name": "safe96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1487,
														"src": "11910:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint96_$",
															"typeString": "function (uint256,string memory) pure returns (uint96)"
														}
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11910:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11894:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 533,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 523,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 516,
																"src": "11995:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 528,
																				"name": "totalSupply",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 277,
																				"src": "12031:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 529,
																				"name": "mintCap",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 293,
																				"src": "12044:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			],
																			"expression": {
																				"id": 526,
																				"name": "SafeMath",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 261,
																				"src": "12018:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_SafeMath_$261_$",
																					"typeString": "type(library SafeMath)"
																				}
																			},
																			"id": 527,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "12027:3:0",
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 137,
																			"src": "12018:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 530,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12018:34:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "313030",
																		"id": 531,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12054:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		}
																	],
																	"expression": {
																		"id": 524,
																		"name": "SafeMath",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "12005:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeMath_$261_$",
																			"typeString": "type(library SafeMath)"
																		}
																	},
																	"id": 525,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12014:3:0",
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 191,
																	"src": "12005:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 532,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12005:53:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11995:63:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e693a3a6d696e743a206578636565646564206d696e7420636170",
															"id": 534,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12072:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c455438be199e7ac7b6d21fdc7332bbd68229582d8b1be9266bdb0f4844638c0",
																"typeString": "literal_string \"Uni::mint: exceeded mint cap\""
															},
															"value": "Uni::mint: exceeded mint cap"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c455438be199e7ac7b6d21fdc7332bbd68229582d8b1be9266bdb0f4844638c0",
																"typeString": "literal_string \"Uni::mint: exceeded mint cap\""
															}
														],
														"id": 522,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11974:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11974:138:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 536,
												"nodeType": "ExpressionStatement",
												"src": "11974:138:0"
											},
											{
												"expression": {
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 537,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 277,
														"src": "12122:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 541,
																		"name": "totalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 277,
																		"src": "12169:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 542,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 516,
																		"src": "12182:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	],
																	"expression": {
																		"id": 539,
																		"name": "SafeMath",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "12156:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeMath_$261_$",
																			"typeString": "type(library SafeMath)"
																		}
																	},
																	"id": 540,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12165:3:0",
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 29,
																	"src": "12156:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 543,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12156:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "556e693a3a6d696e743a20746f74616c537570706c7920657863656564732039362062697473",
																"id": 544,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12203:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_1ef2347f5dbb97e8eb7bc1442a128a1c6e65386b013257fe2b8ad95aaaa96ab8",
																	"typeString": "literal_string \"Uni::mint: totalSupply exceeds 96 bits\""
																},
																"value": "Uni::mint: totalSupply exceeds 96 bits"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_1ef2347f5dbb97e8eb7bc1442a128a1c6e65386b013257fe2b8ad95aaaa96ab8",
																	"typeString": "literal_string \"Uni::mint: totalSupply exceeds 96 bits\""
																}
															],
															"id": 538,
															"name": "safe96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1487,
															"src": "12136:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint96_$",
																"typeString": "function (uint256,string memory) pure returns (uint96)"
															}
														},
														"id": 545,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12136:117:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "12122:131:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 547,
												"nodeType": "ExpressionStatement",
												"src": "12122:131:0"
											},
											{
												"expression": {
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 548,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "12312:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
																"typeString": "mapping(address => uint96)"
															}
														},
														"id": 550,
														"indexExpression": {
															"id": 549,
															"name": "dst",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 475,
															"src": "12321:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12312:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"baseExpression": {
																	"id": 552,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "12347:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
																		"typeString": "mapping(address => uint96)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "dst",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 475,
																	"src": "12356:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12347:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															{
																"id": 555,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 516,
																"src": "12374:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															{
																"hexValue": "556e693a3a6d696e743a207472616e7366657220616d6f756e74206f766572666c6f7773",
																"id": 556,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12394:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_0ab5eae08d50cc345c58c2d7d67f9034a98d0a88dd540314c408c39a8dcec01d",
																	"typeString": "literal_string \"Uni::mint: transfer amount overflows\""
																},
																"value": "Uni::mint: transfer amount overflows"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																},
																{
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																},
																{
																	"typeIdentifier": "t_stringliteral_0ab5eae08d50cc345c58c2d7d67f9034a98d0a88dd540314c408c39a8dcec01d",
																	"typeString": "literal_string \"Uni::mint: transfer amount overflows\""
																}
															],
															"id": 551,
															"name": "add96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1514,
															"src": "12328:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint96_$_t_uint96_$_t_string_memory_ptr_$returns$_t_uint96_$",
																"typeString": "function (uint96,uint96,string memory) pure returns (uint96)"
															}
														},
														"id": 557,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12328:114:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "12312:130:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"id": 559,
												"nodeType": "ExpressionStatement",
												"src": "12312:130:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 563,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12474:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 562,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12466:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 561,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12466:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 564,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12466:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 565,
															"name": "dst",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 475,
															"src": "12478:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 566,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 516,
															"src": "12483:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 560,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "12457:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12457:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 568,
												"nodeType": "EmitStatement",
												"src": "12452:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 572,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12550:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 571,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12542:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 570,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12542:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12542:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"id": 574,
																"name": "delegates",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 310,
																"src": "12554:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																	"typeString": "mapping(address => address)"
																}
															},
															"id": 576,
															"indexExpression": {
																"id": 575,
																"name": "dst",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 475,
																"src": "12564:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12554:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 577,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 516,
															"src": "12570:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 569,
														"name": "_moveDelegates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1366,
														"src": "12527:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint96_$returns$__$",
															"typeString": "function (address,address,uint96)"
														}
													},
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12527:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 579,
												"nodeType": "ExpressionStatement",
												"src": "12527:50:0"
											}
										]
									},
									"documentation": {
										"id": 473,
										"nodeType": "StructuredDocumentation",
										"src": "11164:157:0",
										"text": " @notice Mint new tokens\n @param dst The address of the destination account\n @param rawAmount The number of tokens to be minted"
									},
									"functionSelector": "40c10f19",
									"id": 581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "11335:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "dst",
												"nameLocation": "11348:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "11340:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11340:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "rawAmount",
												"nameLocation": "11361:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "11353:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11353:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11339:32:0"
									},
									"returnParameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11381:0:0"
									},
									"scope": 1550,
									"src": "11326:1258:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 597,
										"nodeType": "Block",
										"src": "12993:52:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 591,
															"name": "allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "13010:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint96_$_$",
																"typeString": "mapping(address => mapping(address => uint96))"
															}
														},
														"id": 593,
														"indexExpression": {
															"id": 592,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "13021:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "13010:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
															"typeString": "mapping(address => uint96)"
														}
													},
													"id": 595,
													"indexExpression": {
														"id": 594,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 586,
														"src": "13030:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13010:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 590,
												"id": 596,
												"nodeType": "Return",
												"src": "13003:35:0"
											}
										]
									},
									"documentation": {
										"id": 582,
										"nodeType": "StructuredDocumentation",
										"src": "12590:285:0",
										"text": " @notice Get the number of tokens `spender` is approved to spend on behalf of `account`\n @param account The address of the account holding the funds\n @param spender The address of the account spending the funds\n @return The number of tokens approved"
									},
									"functionSelector": "dd62ed3e",
									"id": 598,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "12889:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "12907:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "12899:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12899:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "12924:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "12916:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12916:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12898:34:0"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "12980:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12980:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12979:9:0"
									},
									"scope": 1550,
									"src": "12880:165:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 636,
										"nodeType": "Block",
										"src": "13610:239:0",
										"statements": [
											{
												"assignments": [
													609
												],
												"declarations": [
													{
														"constant": false,
														"id": 609,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "13627:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 636,
														"src": "13620:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 608,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "13620:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 610,
												"nodeType": "VariableDeclarationStatement",
												"src": "13620:13:0"
											},
											{
												"expression": {
													"id": 616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 611,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "13643:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 613,
																"name": "rawAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 603,
																"src": "13659:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "556e693a3a617070726f76653a20616d6f756e7420657863656564732039362062697473",
																"id": 614,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13670:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_cb3e128da7f3f16c83a901cce3ab145c66bad45a0cd648091fecc9964ebf42fe",
																	"typeString": "literal_string \"Uni::approve: amount exceeds 96 bits\""
																},
																"value": "Uni::approve: amount exceeds 96 bits"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_cb3e128da7f3f16c83a901cce3ab145c66bad45a0cd648091fecc9964ebf42fe",
																	"typeString": "literal_string \"Uni::approve: amount exceeds 96 bits\""
																}
															],
															"id": 612,
															"name": "safe96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1487,
															"src": "13652:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint96_$",
																"typeString": "function (uint256,string memory) pure returns (uint96)"
															}
														},
														"id": 615,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13652:57:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "13643:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"id": 617,
												"nodeType": "ExpressionStatement",
												"src": "13643:66:0"
											},
											{
												"expression": {
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 618,
																"name": "allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 300,
																"src": "13728:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint96_$_$",
																	"typeString": "mapping(address => mapping(address => uint96))"
																}
															},
															"id": 622,
															"indexExpression": {
																"expression": {
																	"id": 619,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "13739:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 620,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "13743:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "13739:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13728:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
																"typeString": "mapping(address => uint96)"
															}
														},
														"id": 623,
														"indexExpression": {
															"id": 621,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 601,
															"src": "13751:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13728:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 624,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "13762:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "13728:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"id": 626,
												"nodeType": "ExpressionStatement",
												"src": "13728:40:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 628,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "13793:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 629,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13797:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "13793:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 630,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 601,
															"src": "13805:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 631,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "13814:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 627,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 395,
														"src": "13784:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13784:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 633,
												"nodeType": "EmitStatement",
												"src": "13779:42:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13838:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 607,
												"id": 635,
												"nodeType": "Return",
												"src": "13831:11:0"
											}
										]
									},
									"documentation": {
										"id": 599,
										"nodeType": "StructuredDocumentation",
										"src": "13051:457:0",
										"text": " @notice Approve `spender` to transfer up to `amount` from `src`\n @dev This will overwrite the approval amount for `spender`\n  and is subject to issues noted [here](https://eips.ethereum.org/EIPS/eip-20#approve)\n @param spender The address of the account which may transfer tokens\n @param rawAmount The number of tokens that are approved (2^256-1 means infinite)\n @return Whether or not the approval succeeded"
									},
									"functionSelector": "095ea7b3",
									"id": 637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "13522:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "13538:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "13530:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13530:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "rawAmount",
												"nameLocation": "13555:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "13547:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13547:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13529:36:0"
									},
									"returnParameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "13600:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 605,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13600:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13599:6:0"
									},
									"scope": 1550,
									"src": "13513:336:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 762,
										"nodeType": "Block",
										"src": "14514:1087:0",
										"statements": [
											{
												"assignments": [
													656
												],
												"declarations": [
													{
														"constant": false,
														"id": 656,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "14531:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 762,
														"src": "14524:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 655,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "14524:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 657,
												"nodeType": "VariableDeclarationStatement",
												"src": "14524:13:0"
											},
											{
												"expression": {
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 658,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 656,
														"src": "14547:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 660,
																"name": "rawAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 644,
																"src": "14563:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "556e693a3a7065726d69743a20616d6f756e7420657863656564732039362062697473",
																"id": 661,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14574:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_58da0b91010307ee6a63257c5283618928105e355857d8f79cf7e017ad7082f4",
																	"typeString": "literal_string \"Uni::permit: amount exceeds 96 bits\""
																},
																"value": "Uni::permit: amount exceeds 96 bits"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_58da0b91010307ee6a63257c5283618928105e355857d8f79cf7e017ad7082f4",
																	"typeString": "literal_string \"Uni::permit: amount exceeds 96 bits\""
																}
															],
															"id": 659,
															"name": "safe96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1487,
															"src": "14556:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint96_$",
																"typeString": "function (uint256,string memory) pure returns (uint96)"
															}
														},
														"id": 662,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14556:56:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "14547:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"id": 664,
												"nodeType": "ExpressionStatement",
												"src": "14547:65:0"
											},
											{
												"assignments": [
													666
												],
												"declarations": [
													{
														"constant": false,
														"id": 666,
														"mutability": "mutable",
														"name": "domainSeparator",
														"nameLocation": "14641:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 762,
														"src": "14633:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 665,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "14633:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 685,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 670,
																	"name": "DOMAIN_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "14710:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 674,
																					"name": "name",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 265,
																					"src": "14759:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 673,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "14753:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																					"typeString": "type(bytes storage pointer)"
																				},
																				"typeName": {
																					"id": 672,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "14753:5:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 675,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14753:11:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 671,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "14743:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 676,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14743:22:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 677,
																		"name": "getChainId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1549,
																		"src": "14783:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14783:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 681,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "14821:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Uni_$1550",
																				"typeString": "contract Uni"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Uni_$1550",
																				"typeString": "contract Uni"
																			}
																		],
																		"id": 680,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "14813:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 679,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "14813:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 682,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14813:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 668,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "14682:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 669,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "14686:6:0",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "14682:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14682:158:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 667,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "14659:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14659:191:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14633:217:0"
											},
											{
												"assignments": [
													687
												],
												"declarations": [
													{
														"constant": false,
														"id": 687,
														"mutability": "mutable",
														"name": "structHash",
														"nameLocation": "14868:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 762,
														"src": "14860:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 686,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "14860:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 702,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 691,
																	"name": "PERMIT_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 347,
																	"src": "14932:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 692,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 640,
																	"src": "14965:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 693,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 642,
																	"src": "14988:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 694,
																	"name": "rawAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 644,
																	"src": "15013:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "15040:15:0",
																	"subExpression": {
																		"baseExpression": {
																			"id": 695,
																			"name": "nonces",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 352,
																			"src": "15040:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 697,
																		"indexExpression": {
																			"id": 696,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 640,
																			"src": "15047:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"nodeType": "IndexAccess",
																		"src": "15040:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 699,
																	"name": "deadline",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 646,
																	"src": "15073:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 689,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "14904:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 690,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "14908:6:0",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "14904:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 700,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14904:191:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 688,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "14881:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14881:224:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14860:245:0"
											},
											{
												"assignments": [
													704
												],
												"declarations": [
													{
														"constant": false,
														"id": 704,
														"mutability": "mutable",
														"name": "digest",
														"nameLocation": "15123:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 762,
														"src": "15115:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 703,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "15115:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 713,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "1901",
																	"id": 708,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15172:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string hex\"1901\""
																	},
																	"value": "\u0019\u0001"
																},
																{
																	"id": 709,
																	"name": "domainSeparator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 666,
																	"src": "15184:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 710,
																	"name": "structHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 687,
																	"src": "15201:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string hex\"1901\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 706,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "15155:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 707,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "15159:12:0",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "15155:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 711,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15155:57:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 705,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "15132:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15132:90:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15115:107:0"
											},
											{
												"assignments": [
													715
												],
												"declarations": [
													{
														"constant": false,
														"id": 715,
														"mutability": "mutable",
														"name": "signatory",
														"nameLocation": "15240:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 762,
														"src": "15232:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 714,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "15232:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 722,
												"initialValue": {
													"arguments": [
														{
															"id": 717,
															"name": "digest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 704,
															"src": "15262:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 718,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 648,
															"src": "15270:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 719,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "15273:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 720,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "15276:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 716,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967290,
														"src": "15252:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15252:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15232:46:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 724,
																"name": "signatory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 715,
																"src": "15296:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15317:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 726,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15309:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 725,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15309:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15309:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "15296:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e693a3a7065726d69743a20696e76616c6964207369676e6174757265",
															"id": 730,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15321:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e94c1ed3488f38be72a83cd591a1465ccfe1e93939cfd7e4bf71c4eb9af19f1a",
																"typeString": "literal_string \"Uni::permit: invalid signature\""
															},
															"value": "Uni::permit: invalid signature"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e94c1ed3488f38be72a83cd591a1465ccfe1e93939cfd7e4bf71c4eb9af19f1a",
																"typeString": "literal_string \"Uni::permit: invalid signature\""
															}
														],
														"id": 723,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15288:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15288:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 732,
												"nodeType": "ExpressionStatement",
												"src": "15288:66:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 736,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 734,
																"name": "signatory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 715,
																"src": "15372:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 735,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 640,
																"src": "15385:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "15372:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e693a3a7065726d69743a20756e617574686f72697a6564",
															"id": 737,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15392:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f1c0fd1d78a537bfd8cc59c08393a4da90fc7d3eff469a9fd5787d9f1738b823",
																"typeString": "literal_string \"Uni::permit: unauthorized\""
															},
															"value": "Uni::permit: unauthorized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f1c0fd1d78a537bfd8cc59c08393a4da90fc7d3eff469a9fd5787d9f1738b823",
																"typeString": "literal_string \"Uni::permit: unauthorized\""
															}
														],
														"id": 733,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15364:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15364:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "15364:56:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 744,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 741,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "15438:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 742,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "15444:9:0",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "15438:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 743,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 646,
																"src": "15457:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15438:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e693a3a7065726d69743a207369676e61747572652065787069726564",
															"id": 745,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15467:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dfc249d887a80709dc035102a1322af6511c742bde4b1331b9d41e48d95becdb",
																"typeString": "literal_string \"Uni::permit: signature expired\""
															},
															"value": "Uni::permit: signature expired"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dfc249d887a80709dc035102a1322af6511c742bde4b1331b9d41e48d95becdb",
																"typeString": "literal_string \"Uni::permit: signature expired\""
															}
														],
														"id": 740,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15430:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15430:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 747,
												"nodeType": "ExpressionStatement",
												"src": "15430:70:0"
											},
											{
												"expression": {
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 748,
																"name": "allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 300,
																"src": "15511:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint96_$_$",
																	"typeString": "mapping(address => mapping(address => uint96))"
																}
															},
															"id": 751,
															"indexExpression": {
																"id": 749,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 640,
																"src": "15522:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15511:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
																"typeString": "mapping(address => uint96)"
															}
														},
														"id": 752,
														"indexExpression": {
															"id": 750,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "15529:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15511:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 753,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 656,
														"src": "15540:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "15511:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"id": 755,
												"nodeType": "ExpressionStatement",
												"src": "15511:35:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 757,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "15571:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 758,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "15578:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 759,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "15587:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 756,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 395,
														"src": "15562:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15562:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 761,
												"nodeType": "EmitStatement",
												"src": "15557:37:0"
											}
										]
									},
									"documentation": {
										"id": 638,
										"nodeType": "StructuredDocumentation",
										"src": "13855:467:0",
										"text": " @notice Triggers an approval from owner to spends\n @param owner The address to approve from\n @param spender The address to be approved\n @param rawAmount The number of tokens that are approved (2^256-1 means infinite)\n @param deadline The time at which to expire the signature\n @param v The recovery byte of the signature\n @param r Half of the ECDSA signature pair\n @param s Half of the ECDSA signature pair"
									},
									"functionSelector": "d505accf",
									"id": 763,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "14336:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "14360:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "14352:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14352:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14383:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "14375:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14375:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "rawAmount",
												"nameLocation": "14408:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "14400:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14400:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "14435:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "14427:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14427:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "14459:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "14453:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 647,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "14453:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "14478:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "14470:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 649,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "14470:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "14497:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "14489:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 651,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "14489:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14342:162:0"
									},
									"returnParameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14514:0:0"
									},
									"scope": 1550,
									"src": "14327:1274:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "15865:41:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 771,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "15882:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
															"typeString": "mapping(address => uint96)"
														}
													},
													"id": 773,
													"indexExpression": {
														"id": 772,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 766,
														"src": "15891:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "15882:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 770,
												"id": 774,
												"nodeType": "Return",
												"src": "15875:24:0"
											}
										]
									},
									"documentation": {
										"id": 764,
										"nodeType": "StructuredDocumentation",
										"src": "15607:185:0",
										"text": " @notice Get the number of tokens held by the `account`\n @param account The address of the account to get the balance of\n @return The number of tokens held"
									},
									"functionSelector": "70a08231",
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "15806:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "15824:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "15816:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 765,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15816:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15815:17:0"
									},
									"returnParameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "15856:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15856:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15855:9:0"
									},
									"scope": 1550,
									"src": "15797:109:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 802,
										"nodeType": "Block",
										"src": "16236:196:0",
										"statements": [
											{
												"assignments": [
													787
												],
												"declarations": [
													{
														"constant": false,
														"id": 787,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "16253:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 802,
														"src": "16246:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 786,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "16246:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 792,
												"initialValue": {
													"arguments": [
														{
															"id": 789,
															"name": "rawAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 781,
															"src": "16282:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "556e693a3a7472616e736665723a20616d6f756e7420657863656564732039362062697473",
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16305:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9bc67db7413f33b8f7a9995149809b7b3a4a83b5ba884084bea06cfb35986555",
																"typeString": "literal_string \"Uni::transfer: amount exceeds 96 bits\""
															},
															"value": "Uni::transfer: amount exceeds 96 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_9bc67db7413f33b8f7a9995149809b7b3a4a83b5ba884084bea06cfb35986555",
																"typeString": "literal_string \"Uni::transfer: amount exceeds 96 bits\""
															}
														],
														"id": 788,
														"name": "safe96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1487,
														"src": "16262:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint96_$",
															"typeString": "function (uint256,string memory) pure returns (uint96)"
														}
													},
													"id": 791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16262:92:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16246:108:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 794,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "16380:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 795,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "16384:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "16380:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 796,
															"name": "dst",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 779,
															"src": "16392:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 797,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "16397:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 793,
														"name": "_transferTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1257,
														"src": "16364:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint96_$returns$__$",
															"typeString": "function (address,address,uint96)"
														}
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16364:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 799,
												"nodeType": "ExpressionStatement",
												"src": "16364:40:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 800,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "16421:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 785,
												"id": 801,
												"nodeType": "Return",
												"src": "16414:11:0"
											}
										]
									},
									"documentation": {
										"id": 777,
										"nodeType": "StructuredDocumentation",
										"src": "15912:245:0",
										"text": " @notice Transfer `amount` tokens from `msg.sender` to `dst`\n @param dst The address of the destination account\n @param rawAmount The number of tokens to transfer\n @return Whether or not the transfer succeeded"
									},
									"functionSelector": "a9059cbb",
									"id": 803,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "16171:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "dst",
												"nameLocation": "16188:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "16180:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16180:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "rawAmount",
												"nameLocation": "16201:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "16193:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 780,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16193:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16179:32:0"
									},
									"returnParameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "16230:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 783,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16230:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16229:6:0"
									},
									"scope": 1550,
									"src": "16162:270:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 870,
										"nodeType": "Block",
										"src": "16854:631:0",
										"statements": [
											{
												"assignments": [
													816
												],
												"declarations": [
													{
														"constant": false,
														"id": 816,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "16872:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 870,
														"src": "16864:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 815,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16864:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 819,
												"initialValue": {
													"expression": {
														"id": 817,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "16882:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "16886:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "16882:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16864:28:0"
											},
											{
												"assignments": [
													821
												],
												"declarations": [
													{
														"constant": false,
														"id": 821,
														"mutability": "mutable",
														"name": "spenderAllowance",
														"nameLocation": "16909:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 870,
														"src": "16902:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 820,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "16902:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 827,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 822,
															"name": "allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "16928:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint96_$_$",
																"typeString": "mapping(address => mapping(address => uint96))"
															}
														},
														"id": 824,
														"indexExpression": {
															"id": 823,
															"name": "src",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "16939:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "16928:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
															"typeString": "mapping(address => uint96)"
														}
													},
													"id": 826,
													"indexExpression": {
														"id": 825,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 816,
														"src": "16944:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "16928:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16902:50:0"
											},
											{
												"assignments": [
													829
												],
												"declarations": [
													{
														"constant": false,
														"id": 829,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "16969:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 870,
														"src": "16962:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 828,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "16962:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 834,
												"initialValue": {
													"arguments": [
														{
															"id": 831,
															"name": "rawAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "16998:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "556e693a3a617070726f76653a20616d6f756e7420657863656564732039362062697473",
															"id": 832,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17021:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cb3e128da7f3f16c83a901cce3ab145c66bad45a0cd648091fecc9964ebf42fe",
																"typeString": "literal_string \"Uni::approve: amount exceeds 96 bits\""
															},
															"value": "Uni::approve: amount exceeds 96 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_cb3e128da7f3f16c83a901cce3ab145c66bad45a0cd648091fecc9964ebf42fe",
																"typeString": "literal_string \"Uni::approve: amount exceeds 96 bits\""
															}
														],
														"id": 830,
														"name": "safe96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1487,
														"src": "16978:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint96_$",
															"typeString": "function (uint256,string memory) pure returns (uint96)"
														}
													},
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16978:91:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16962:107:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 835,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 816,
														"src": "17084:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 836,
														"name": "src",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 806,
														"src": "17095:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17084:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 861,
												"nodeType": "IfStatement",
												"src": "17080:334:0",
												"trueBody": {
													"id": 860,
													"nodeType": "Block",
													"src": "17101:313:0",
													"statements": [
														{
															"assignments": [
																839
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 839,
																	"mutability": "mutable",
																	"name": "newAllowance",
																	"nameLocation": "17122:12:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 860,
																	"src": "17115:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	},
																	"typeName": {
																		"id": 838,
																		"name": "uint96",
																		"nodeType": "ElementaryTypeName",
																		"src": "17115:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 845,
															"initialValue": {
																"arguments": [
																	{
																		"id": 841,
																		"name": "spenderAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 821,
																		"src": "17160:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	},
																	{
																		"id": 842,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 829,
																		"src": "17194:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	},
																	{
																		"hexValue": "556e693a3a7472616e7366657246726f6d3a207472616e7366657220616d6f756e742065786365656473207370656e64657220616c6c6f77616e6365",
																		"id": 843,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17218:62:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_136758788d48ec4d9744ba8c2136a9c9406d6c92cd4a81eff0de4942b636db13",
																			"typeString": "literal_string \"Uni::transferFrom: transfer amount exceeds spender allowance\""
																		},
																		"value": "Uni::transferFrom: transfer amount exceeds spender allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		},
																		{
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_136758788d48ec4d9744ba8c2136a9c9406d6c92cd4a81eff0de4942b636db13",
																			"typeString": "literal_string \"Uni::transferFrom: transfer amount exceeds spender allowance\""
																		}
																	],
																	"id": 840,
																	"name": "sub96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1537,
																	"src": "17137:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint96_$_t_uint96_$_t_string_memory_ptr_$returns$_t_uint96_$",
																		"typeString": "function (uint96,uint96,string memory) pure returns (uint96)"
																	}
																},
																"id": 844,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17137:157:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "17115:179:0"
														},
														{
															"expression": {
																"id": 852,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 846,
																			"name": "allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 300,
																			"src": "17308:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint96_$_$",
																				"typeString": "mapping(address => mapping(address => uint96))"
																			}
																		},
																		"id": 849,
																		"indexExpression": {
																			"id": 847,
																			"name": "src",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 806,
																			"src": "17319:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "17308:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
																			"typeString": "mapping(address => uint96)"
																		}
																	},
																	"id": 850,
																	"indexExpression": {
																		"id": 848,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 816,
																		"src": "17324:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "17308:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 851,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 839,
																	"src": "17335:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"src": "17308:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"id": 853,
															"nodeType": "ExpressionStatement",
															"src": "17308:39:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 855,
																		"name": "src",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 806,
																		"src": "17376:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 856,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 816,
																		"src": "17381:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 857,
																		"name": "newAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 839,
																		"src": "17390:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	],
																	"id": 854,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "17367:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 858,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17367:36:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 859,
															"nodeType": "EmitStatement",
															"src": "17362:41:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 863,
															"name": "src",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "17440:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 864,
															"name": "dst",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "17445:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 865,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 829,
															"src": "17450:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 862,
														"name": "_transferTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1257,
														"src": "17424:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint96_$returns$__$",
															"typeString": "function (address,address,uint96)"
														}
													},
													"id": 866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17424:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 867,
												"nodeType": "ExpressionStatement",
												"src": "17424:33:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 868,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "17474:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 814,
												"id": 869,
												"nodeType": "Return",
												"src": "17467:11:0"
											}
										]
									},
									"documentation": {
										"id": 804,
										"nodeType": "StructuredDocumentation",
										"src": "16438:290:0",
										"text": " @notice Transfer `amount` tokens from `src` to `dst`\n @param src The address of the source account\n @param dst The address of the destination account\n @param rawAmount The number of tokens to transfer\n @return Whether or not the transfer succeeded"
									},
									"functionSelector": "23b872dd",
									"id": 871,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "16742:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "src",
												"nameLocation": "16772:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "16764:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 805,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16764:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "dst",
												"nameLocation": "16793:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "16785:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 807,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16785:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "rawAmount",
												"nameLocation": "16814:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "16806:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16806:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16754:75:0"
									},
									"returnParameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "16848:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 812,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16848:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16847:6:0"
									},
									"scope": 1550,
									"src": "16733:752:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 883,
										"nodeType": "Block",
										"src": "17671:56:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 878,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "17698:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 879,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17702:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "17698:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 880,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "17710:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 877,
														"name": "_delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1187,
														"src": "17688:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17688:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"functionReturnParameters": 876,
												"id": 882,
												"nodeType": "Return",
												"src": "17681:39:0"
											}
										]
									},
									"documentation": {
										"id": 872,
										"nodeType": "StructuredDocumentation",
										"src": "17491:131:0",
										"text": " @notice Delegate votes from `msg.sender` to `delegatee`\n @param delegatee The address to delegate votes to"
									},
									"functionSelector": "5c19a95c",
									"id": 884,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "delegate",
									"nameLocation": "17636:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "delegatee",
												"nameLocation": "17653:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "17645:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17644:19:0"
									},
									"returnParameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17671:0:0"
									},
									"scope": 1550,
									"src": "17627:100:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 986,
										"nodeType": "Block",
										"src": "18315:896:0",
										"statements": [
											{
												"assignments": [
													901
												],
												"declarations": [
													{
														"constant": false,
														"id": 901,
														"mutability": "mutable",
														"name": "domainSeparator",
														"nameLocation": "18333:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 986,
														"src": "18325:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 900,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "18325:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 920,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 905,
																	"name": "DOMAIN_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "18402:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 909,
																					"name": "name",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 265,
																					"src": "18451:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 908,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "18445:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																					"typeString": "type(bytes storage pointer)"
																				},
																				"typeName": {
																					"id": 907,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "18445:5:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 910,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "18445:11:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 906,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "18435:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 911,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18435:22:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 912,
																		"name": "getChainId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1549,
																		"src": "18475:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 913,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18475:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 916,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "18513:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Uni_$1550",
																				"typeString": "contract Uni"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Uni_$1550",
																				"typeString": "contract Uni"
																			}
																		],
																		"id": 915,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "18505:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 914,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "18505:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 917,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18505:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 903,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "18374:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 904,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "18378:6:0",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "18374:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 918,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18374:158:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 902,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "18351:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18351:191:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18325:217:0"
											},
											{
												"assignments": [
													922
												],
												"declarations": [
													{
														"constant": false,
														"id": 922,
														"mutability": "mutable",
														"name": "structHash",
														"nameLocation": "18560:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 986,
														"src": "18552:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 921,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "18552:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 932,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 926,
																	"name": "DELEGATION_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 341,
																	"src": "18607:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 927,
																	"name": "delegatee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 887,
																	"src": "18628:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 928,
																	"name": "nonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 889,
																	"src": "18639:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 929,
																	"name": "expiry",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 891,
																	"src": "18646:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 924,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "18596:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 925,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "18600:6:0",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "18596:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 930,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18596:57:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 923,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "18573:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18573:90:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18552:111:0"
											},
											{
												"assignments": [
													934
												],
												"declarations": [
													{
														"constant": false,
														"id": 934,
														"mutability": "mutable",
														"name": "digest",
														"nameLocation": "18681:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 986,
														"src": "18673:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 933,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "18673:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 943,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "1901",
																	"id": 938,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18730:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string hex\"1901\""
																	},
																	"value": "\u0019\u0001"
																},
																{
																	"id": 939,
																	"name": "domainSeparator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 901,
																	"src": "18742:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 940,
																	"name": "structHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 922,
																	"src": "18759:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string hex\"1901\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 936,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "18713:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 937,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "18717:12:0",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "18713:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 941,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18713:57:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 935,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "18690:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18690:90:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18673:107:0"
											},
											{
												"assignments": [
													945
												],
												"declarations": [
													{
														"constant": false,
														"id": 945,
														"mutability": "mutable",
														"name": "signatory",
														"nameLocation": "18798:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 986,
														"src": "18790:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 944,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "18790:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 952,
												"initialValue": {
													"arguments": [
														{
															"id": 947,
															"name": "digest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 934,
															"src": "18820:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 948,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "18828:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 949,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "18831:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 950,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 897,
															"src": "18834:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 946,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967290,
														"src": "18810:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18810:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18790:46:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 959,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 954,
																"name": "signatory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 945,
																"src": "18867:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 957,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18888:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 956,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18880:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 955,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "18880:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 958,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18880:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "18867:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e693a3a64656c656761746542795369673a20696e76616c6964207369676e6174757265",
															"id": 960,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18904:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_41ba3897512438c3b52e550ef92ff91255600d9202c2b92b8893f625252dfabf",
																"typeString": "literal_string \"Uni::delegateBySig: invalid signature\""
															},
															"value": "Uni::delegateBySig: invalid signature"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_41ba3897512438c3b52e550ef92ff91255600d9202c2b92b8893f625252dfabf",
																"typeString": "literal_string \"Uni::delegateBySig: invalid signature\""
															}
														],
														"id": 953,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "18846:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18846:107:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 962,
												"nodeType": "ExpressionStatement",
												"src": "18846:107:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 969,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 964,
																"name": "nonce",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 889,
																"src": "18984:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 968,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "18993:19:0",
																"subExpression": {
																	"baseExpression": {
																		"id": 965,
																		"name": "nonces",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 352,
																		"src": "18993:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 967,
																	"indexExpression": {
																		"id": 966,
																		"name": "signatory",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 945,
																		"src": "19000:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "18993:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18984:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e693a3a64656c656761746542795369673a20696e76616c6964206e6f6e6365",
															"id": 970,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19026:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d126ba952f4f7443590dacc43a358ae6ad956133386dc92be4e1185a27d416b3",
																"typeString": "literal_string \"Uni::delegateBySig: invalid nonce\""
															},
															"value": "Uni::delegateBySig: invalid nonce"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d126ba952f4f7443590dacc43a358ae6ad956133386dc92be4e1185a27d416b3",
																"typeString": "literal_string \"Uni::delegateBySig: invalid nonce\""
															}
														],
														"id": 963,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "18963:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18963:108:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 972,
												"nodeType": "ExpressionStatement",
												"src": "18963:108:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 977,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 974,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "19089:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 975,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "19095:9:0",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "19089:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 976,
																"name": "expiry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 891,
																"src": "19108:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19089:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e693a3a64656c656761746542795369673a207369676e61747572652065787069726564",
															"id": 978,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19116:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_287e5345cbd1fcc69d3d1d2165b5d321c6a9eb5b34f1162e798e9d80f3fdf12b",
																"typeString": "literal_string \"Uni::delegateBySig: signature expired\""
															},
															"value": "Uni::delegateBySig: signature expired"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_287e5345cbd1fcc69d3d1d2165b5d321c6a9eb5b34f1162e798e9d80f3fdf12b",
																"typeString": "literal_string \"Uni::delegateBySig: signature expired\""
															}
														],
														"id": 973,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19081:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19081:75:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 980,
												"nodeType": "ExpressionStatement",
												"src": "19081:75:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 982,
															"name": "signatory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 945,
															"src": "19183:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 983,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "19194:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 981,
														"name": "_delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1187,
														"src": "19173:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19173:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"functionReturnParameters": 899,
												"id": 985,
												"nodeType": "Return",
												"src": "19166:38:0"
											}
										]
									},
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "17733:412:0",
										"text": " @notice Delegates votes from signatory to `delegatee`\n @param delegatee The address to delegate votes to\n @param nonce The contract state required to match the signature\n @param expiry The time at which to expire the signature\n @param v The recovery byte of the signature\n @param r Half of the ECDSA signature pair\n @param s Half of the ECDSA signature pair"
									},
									"functionSelector": "c3cda520",
									"id": 987,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "delegateBySig",
									"nameLocation": "18159:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "delegatee",
												"nameLocation": "18190:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "18182:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 886,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18182:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "18217:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "18209:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18209:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "expiry",
												"nameLocation": "18240:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "18232:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18232:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "18262:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "18256:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 892,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "18256:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "18281:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "18273:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 894,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "18273:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "18300:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "18292:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 896,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "18292:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18172:135:0"
									},
									"returnParameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18315:0:0"
									},
									"scope": 1550,
									"src": "18150:1061:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1015,
										"nodeType": "Block",
										"src": "19478:158:0",
										"statements": [
											{
												"assignments": [
													996
												],
												"declarations": [
													{
														"constant": false,
														"id": 996,
														"mutability": "mutable",
														"name": "nCheckpoints",
														"nameLocation": "19495:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 1015,
														"src": "19488:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 995,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "19488:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1000,
												"initialValue": {
													"baseExpression": {
														"id": 997,
														"name": "numCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 329,
														"src": "19510:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
															"typeString": "mapping(address => uint32)"
														}
													},
													"id": 999,
													"indexExpression": {
														"id": 998,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 990,
														"src": "19525:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "19510:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19488:45:0"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 1003,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1001,
															"name": "nCheckpoints",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "19562:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19577:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "19562:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "30",
														"id": 1012,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19628:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 1013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "19562:67:0",
													"trueExpression": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 1004,
																	"name": "checkpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 324,
																	"src": "19581:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$316_storage_$_$",
																		"typeString": "mapping(address => mapping(uint32 => struct Uni.Checkpoint storage ref))"
																	}
																},
																"id": 1006,
																"indexExpression": {
																	"id": 1005,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 990,
																	"src": "19593:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "19581:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$316_storage_$",
																	"typeString": "mapping(uint32 => struct Uni.Checkpoint storage ref)"
																}
															},
															"id": 1010,
															"indexExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 1009,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1007,
																	"name": "nCheckpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 996,
																	"src": "19602:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1008,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19617:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "19602:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "19581:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Checkpoint_$316_storage",
																"typeString": "struct Uni.Checkpoint storage ref"
															}
														},
														"id": 1011,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "19620:5:0",
														"memberName": "votes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 315,
														"src": "19581:44:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 994,
												"id": 1014,
												"nodeType": "Return",
												"src": "19543:86:0"
											}
										]
									},
									"documentation": {
										"id": 988,
										"nodeType": "StructuredDocumentation",
										"src": "19217:183:0",
										"text": " @notice Gets the current votes balance for `account`\n @param account The address to get votes balance\n @return The number of current votes for `account`"
									},
									"functionSelector": "b4b5ea57",
									"id": 1016,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentVotes",
									"nameLocation": "19414:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "19438:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "19430:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 989,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19430:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19429:17:0"
									},
									"returnParameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "19470:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 992,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "19470:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19469:8:0"
									},
									"scope": 1550,
									"src": "19405:231:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1148,
										"nodeType": "Block",
										"src": "20176:1132:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1030,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1027,
																"name": "blockNumber",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1021,
																"src": "20207:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 1028,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "20221:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1029,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "20227:6:0",
																"memberName": "number",
																"nodeType": "MemberAccess",
																"src": "20221:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20207:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e693a3a6765745072696f72566f7465733a206e6f74207965742064657465726d696e6564",
															"id": 1031,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20247:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_49a8c5a37f9a1453393e39114b211b704ebc96555b0cd38f42c3478bd0b9f9d2",
																"typeString": "literal_string \"Uni::getPriorVotes: not yet determined\""
															},
															"value": "Uni::getPriorVotes: not yet determined"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_49a8c5a37f9a1453393e39114b211b704ebc96555b0cd38f42c3478bd0b9f9d2",
																"typeString": "literal_string \"Uni::getPriorVotes: not yet determined\""
															}
														],
														"id": 1026,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "20186:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20186:111:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1033,
												"nodeType": "ExpressionStatement",
												"src": "20186:111:0"
											},
											{
												"assignments": [
													1035
												],
												"declarations": [
													{
														"constant": false,
														"id": 1035,
														"mutability": "mutable",
														"name": "nCheckpoints",
														"nameLocation": "20315:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 1148,
														"src": "20308:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 1034,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "20308:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1039,
												"initialValue": {
													"baseExpression": {
														"id": 1036,
														"name": "numCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 329,
														"src": "20330:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
															"typeString": "mapping(address => uint32)"
														}
													},
													"id": 1038,
													"indexExpression": {
														"id": 1037,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1019,
														"src": "20345:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "20330:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20308:45:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1040,
														"name": "nCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1035,
														"src": "20367:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1041,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "20383:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "20367:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1046,
												"nodeType": "IfStatement",
												"src": "20363:56:0",
												"trueBody": {
													"id": 1045,
													"nodeType": "Block",
													"src": "20386:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1043,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20407:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1025,
															"id": 1044,
															"nodeType": "Return",
															"src": "20400:8:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 1047,
																	"name": "checkpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 324,
																	"src": "20476:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$316_storage_$_$",
																		"typeString": "mapping(address => mapping(uint32 => struct Uni.Checkpoint storage ref))"
																	}
																},
																"id": 1049,
																"indexExpression": {
																	"id": 1048,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1019,
																	"src": "20488:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "20476:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$316_storage_$",
																	"typeString": "mapping(uint32 => struct Uni.Checkpoint storage ref)"
																}
															},
															"id": 1053,
															"indexExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 1052,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1050,
																	"name": "nCheckpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1035,
																	"src": "20497:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1051,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20512:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "20497:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "20476:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Checkpoint_$316_storage",
																"typeString": "struct Uni.Checkpoint storage ref"
															}
														},
														"id": 1054,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "20515:9:0",
														"memberName": "fromBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 313,
														"src": "20476:48:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 1055,
														"name": "blockNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1021,
														"src": "20528:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20476:63:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1067,
												"nodeType": "IfStatement",
												"src": "20472:145:0",
												"trueBody": {
													"id": 1066,
													"nodeType": "Block",
													"src": "20541:76:0",
													"statements": [
														{
															"expression": {
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1057,
																			"name": "checkpoints",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 324,
																			"src": "20562:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$316_storage_$_$",
																				"typeString": "mapping(address => mapping(uint32 => struct Uni.Checkpoint storage ref))"
																			}
																		},
																		"id": 1059,
																		"indexExpression": {
																			"id": 1058,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1019,
																			"src": "20574:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "20562:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$316_storage_$",
																			"typeString": "mapping(uint32 => struct Uni.Checkpoint storage ref)"
																		}
																	},
																	"id": 1063,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		},
																		"id": 1062,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1060,
																			"name": "nCheckpoints",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1035,
																			"src": "20583:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1061,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20598:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "20583:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "20562:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$316_storage",
																		"typeString": "struct Uni.Checkpoint storage ref"
																	}
																},
																"id": 1064,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "20601:5:0",
																"memberName": "votes",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 315,
																"src": "20562:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"functionReturnParameters": 1025,
															"id": 1065,
															"nodeType": "Return",
															"src": "20555:51:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 1068,
																	"name": "checkpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 324,
																	"src": "20675:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$316_storage_$_$",
																		"typeString": "mapping(address => mapping(uint32 => struct Uni.Checkpoint storage ref))"
																	}
																},
																"id": 1070,
																"indexExpression": {
																	"id": 1069,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1019,
																	"src": "20687:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "20675:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$316_storage_$",
																	"typeString": "mapping(uint32 => struct Uni.Checkpoint storage ref)"
																}
															},
															"id": 1072,
															"indexExpression": {
																"hexValue": "30",
																"id": 1071,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20696:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "20675:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Checkpoint_$316_storage",
																"typeString": "struct Uni.Checkpoint storage ref"
															}
														},
														"id": 1073,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "20699:9:0",
														"memberName": "fromBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 313,
														"src": "20675:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1074,
														"name": "blockNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1021,
														"src": "20711:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20675:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1079,
												"nodeType": "IfStatement",
												"src": "20671:86:0",
												"trueBody": {
													"id": 1078,
													"nodeType": "Block",
													"src": "20724:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1076,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20745:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1025,
															"id": 1077,
															"nodeType": "Return",
															"src": "20738:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													1081
												],
												"declarations": [
													{
														"constant": false,
														"id": 1081,
														"mutability": "mutable",
														"name": "lower",
														"nameLocation": "20774:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1148,
														"src": "20767:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 1080,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "20767:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1083,
												"initialValue": {
													"hexValue": "30",
													"id": 1082,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "20782:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20767:16:0"
											},
											{
												"assignments": [
													1085
												],
												"declarations": [
													{
														"constant": false,
														"id": 1085,
														"mutability": "mutable",
														"name": "upper",
														"nameLocation": "20800:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1148,
														"src": "20793:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 1084,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "20793:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1089,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 1088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1086,
														"name": "nCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1035,
														"src": "20808:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 1087,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "20823:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "20808:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20793:31:0"
											},
											{
												"body": {
													"id": 1139,
													"nodeType": "Block",
													"src": "20856:396:0",
													"statements": [
														{
															"assignments": [
																1094
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1094,
																	"mutability": "mutable",
																	"name": "center",
																	"nameLocation": "20877:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1139,
																	"src": "20870:13:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"typeName": {
																		"id": 1093,
																		"name": "uint32",
																		"nodeType": "ElementaryTypeName",
																		"src": "20870:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1103,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 1102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1095,
																	"name": "upper",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1085,
																	"src": "20886:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"id": 1101,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"id": 1098,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1096,
																					"name": "upper",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1085,
																					"src": "20895:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1097,
																					"name": "lower",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1081,
																					"src": "20903:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"src": "20895:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			}
																		],
																		"id": 1099,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "20894:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 1100,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20912:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "20894:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "20886:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "20870:43:0"
														},
														{
															"assignments": [
																1106
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1106,
																	"mutability": "mutable",
																	"name": "cp",
																	"nameLocation": "20972:2:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1139,
																	"src": "20954:20:0",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$316_memory_ptr",
																		"typeString": "struct Uni.Checkpoint"
																	},
																	"typeName": {
																		"id": 1105,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 1104,
																			"name": "Checkpoint",
																			"nameLocations": [
																				"20954:10:0"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 316,
																			"src": "20954:10:0"
																		},
																		"referencedDeclaration": 316,
																		"src": "20954:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Checkpoint_$316_storage_ptr",
																			"typeString": "struct Uni.Checkpoint"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1112,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1107,
																		"name": "checkpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 324,
																		"src": "20977:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$316_storage_$_$",
																			"typeString": "mapping(address => mapping(uint32 => struct Uni.Checkpoint storage ref))"
																		}
																	},
																	"id": 1109,
																	"indexExpression": {
																		"id": 1108,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1019,
																		"src": "20989:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "20977:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$316_storage_$",
																		"typeString": "mapping(uint32 => struct Uni.Checkpoint storage ref)"
																	}
																},
																"id": 1111,
																"indexExpression": {
																	"id": 1110,
																	"name": "center",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1094,
																	"src": "20998:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "20977:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Checkpoint_$316_storage",
																	"typeString": "struct Uni.Checkpoint storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "20954:51:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1113,
																		"name": "cp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1106,
																		"src": "21023:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Checkpoint_$316_memory_ptr",
																			"typeString": "struct Uni.Checkpoint memory"
																		}
																	},
																	"id": 1114,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "21026:9:0",
																	"memberName": "fromBlock",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 313,
																	"src": "21023:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1115,
																	"name": "blockNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1021,
																	"src": "21039:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21023:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1121,
																			"name": "cp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1106,
																			"src": "21110:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Checkpoint_$316_memory_ptr",
																				"typeString": "struct Uni.Checkpoint memory"
																			}
																		},
																		"id": 1122,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "21113:9:0",
																		"memberName": "fromBlock",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 313,
																		"src": "21110:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"id": 1123,
																		"name": "blockNumber",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1021,
																		"src": "21125:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "21110:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"id": 1136,
																	"nodeType": "Block",
																	"src": "21191:51:0",
																	"statements": [
																		{
																			"expression": {
																				"id": 1134,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 1130,
																					"name": "upper",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1085,
																					"src": "21209:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"commonType": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					},
																					"id": 1133,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1131,
																						"name": "center",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1094,
																						"src": "21217:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 1132,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "21226:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "21217:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"src": "21209:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"id": 1135,
																			"nodeType": "ExpressionStatement",
																			"src": "21209:18:0"
																		}
																	]
																},
																"id": 1137,
																"nodeType": "IfStatement",
																"src": "21106:136:0",
																"trueBody": {
																	"id": 1129,
																	"nodeType": "Block",
																	"src": "21138:47:0",
																	"statements": [
																		{
																			"expression": {
																				"id": 1127,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 1125,
																					"name": "lower",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1081,
																					"src": "21156:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"id": 1126,
																					"name": "center",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1094,
																					"src": "21164:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"src": "21156:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"id": 1128,
																			"nodeType": "ExpressionStatement",
																			"src": "21156:14:0"
																		}
																	]
																}
															},
															"id": 1138,
															"nodeType": "IfStatement",
															"src": "21019:223:0",
															"trueBody": {
																"id": 1120,
																"nodeType": "Block",
																"src": "21052:48:0",
																"statements": [
																	{
																		"expression": {
																			"expression": {
																				"id": 1117,
																				"name": "cp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1106,
																				"src": "21077:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Checkpoint_$316_memory_ptr",
																					"typeString": "struct Uni.Checkpoint memory"
																				}
																			},
																			"id": 1118,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "21080:5:0",
																			"memberName": "votes",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 315,
																			"src": "21077:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		},
																		"functionReturnParameters": 1025,
																		"id": 1119,
																		"nodeType": "Return",
																		"src": "21070:15:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 1092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1090,
														"name": "upper",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1085,
														"src": "20841:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1091,
														"name": "lower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1081,
														"src": "20849:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "20841:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1140,
												"nodeType": "WhileStatement",
												"src": "20834:418:0"
											},
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"baseExpression": {
																"id": 1141,
																"name": "checkpoints",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 324,
																"src": "21268:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$316_storage_$_$",
																	"typeString": "mapping(address => mapping(uint32 => struct Uni.Checkpoint storage ref))"
																}
															},
															"id": 1143,
															"indexExpression": {
																"id": 1142,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1019,
																"src": "21280:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "21268:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$316_storage_$",
																"typeString": "mapping(uint32 => struct Uni.Checkpoint storage ref)"
															}
														},
														"id": 1145,
														"indexExpression": {
															"id": 1144,
															"name": "lower",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "21289:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "21268:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Checkpoint_$316_storage",
															"typeString": "struct Uni.Checkpoint storage ref"
														}
													},
													"id": 1146,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "21296:5:0",
													"memberName": "votes",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 315,
													"src": "21268:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 1025,
												"id": 1147,
												"nodeType": "Return",
												"src": "21261:40:0"
											}
										]
									},
									"documentation": {
										"id": 1017,
										"nodeType": "StructuredDocumentation",
										"src": "19642:411:0",
										"text": " @notice Determine the prior number of votes for an account as of a block number\n @dev Block number must be a finalized block or else this function will revert to prevent misinformation.\n @param account The address of the account to check\n @param blockNumber The block number to get the vote balance at\n @return The number of votes the account had as of the given block"
									},
									"functionSelector": "782d6fe1",
									"id": 1149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPriorVotes",
									"nameLocation": "20067:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "20089:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "20081:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1018,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20081:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "blockNumber",
												"nameLocation": "20106:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "20098:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20098:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20080:38:0"
									},
									"returnParameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "20164:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1023,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "20164:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20163:8:0"
									},
									"scope": 1550,
									"src": "20058:1250:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1186,
										"nodeType": "Block",
										"src": "21380:301:0",
										"statements": [
											{
												"assignments": [
													1157
												],
												"declarations": [
													{
														"constant": false,
														"id": 1157,
														"mutability": "mutable",
														"name": "currentDelegate",
														"nameLocation": "21398:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 1186,
														"src": "21390:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1156,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "21390:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1161,
												"initialValue": {
													"baseExpression": {
														"id": 1158,
														"name": "delegates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 310,
														"src": "21416:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
															"typeString": "mapping(address => address)"
														}
													},
													"id": 1160,
													"indexExpression": {
														"id": 1159,
														"name": "delegator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1151,
														"src": "21426:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "21416:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21390:46:0"
											},
											{
												"assignments": [
													1163
												],
												"declarations": [
													{
														"constant": false,
														"id": 1163,
														"mutability": "mutable",
														"name": "delegatorBalance",
														"nameLocation": "21453:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 1186,
														"src": "21446:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 1162,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "21446:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1167,
												"initialValue": {
													"baseExpression": {
														"id": 1164,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "21472:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
															"typeString": "mapping(address => uint96)"
														}
													},
													"id": 1166,
													"indexExpression": {
														"id": 1165,
														"name": "delegator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1151,
														"src": "21481:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "21472:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21446:45:0"
											},
											{
												"expression": {
													"id": 1172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1168,
															"name": "delegates",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 310,
															"src": "21501:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 1170,
														"indexExpression": {
															"id": 1169,
															"name": "delegator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1151,
															"src": "21511:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "21501:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1171,
														"name": "delegatee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1153,
														"src": "21524:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "21501:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1173,
												"nodeType": "ExpressionStatement",
												"src": "21501:32:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1175,
															"name": "delegator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1151,
															"src": "21565:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1176,
															"name": "currentDelegate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1157,
															"src": "21576:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1177,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1153,
															"src": "21593:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1174,
														"name": "DelegateChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 368,
														"src": "21549:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address,address)"
														}
													},
													"id": 1178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21549:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1179,
												"nodeType": "EmitStatement",
												"src": "21544:59:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1181,
															"name": "currentDelegate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1157,
															"src": "21629:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1182,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1153,
															"src": "21646:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1183,
															"name": "delegatorBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1163,
															"src": "21657:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 1180,
														"name": "_moveDelegates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1366,
														"src": "21614:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint96_$returns$__$",
															"typeString": "function (address,address,uint96)"
														}
													},
													"id": 1184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21614:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1185,
												"nodeType": "ExpressionStatement",
												"src": "21614:60:0"
											}
										]
									},
									"id": 1187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_delegate",
									"nameLocation": "21323:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "delegator",
												"nameLocation": "21341:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "21333:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21333:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "delegatee",
												"nameLocation": "21360:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "21352:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21352:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21332:38:0"
									},
									"returnParameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21380:0:0"
									},
									"scope": 1550,
									"src": "21314:367:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1256,
										"nodeType": "Block",
										"src": "21792:686:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1197,
																"name": "src",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1189,
																"src": "21823:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1200,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21838:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1199,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "21830:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1198,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "21830:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1201,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21830:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "21823:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e693a3a5f7472616e73666572546f6b656e733a2063616e6e6f74207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 1203,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21854:61:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_de7e0a100b60a11ede47141c5b3cbe581ee85f280a75b7fbf40a7340eb978ea6",
																"typeString": "literal_string \"Uni::_transferTokens: cannot transfer from the zero address\""
															},
															"value": "Uni::_transferTokens: cannot transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_de7e0a100b60a11ede47141c5b3cbe581ee85f280a75b7fbf40a7340eb978ea6",
																"typeString": "literal_string \"Uni::_transferTokens: cannot transfer from the zero address\""
															}
														],
														"id": 1196,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "21802:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21802:123:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1205,
												"nodeType": "ExpressionStatement",
												"src": "21802:123:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1207,
																"name": "dst",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1191,
																"src": "21956:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1210,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21971:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1209,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "21963:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1208,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "21963:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1211,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21963:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "21956:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e693a3a5f7472616e73666572546f6b656e733a2063616e6e6f74207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 1213,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21987:59:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8cdff6d324f122ca5cad9ec8d91ca56840c45dd7fc048a003b94957b6f733086",
																"typeString": "literal_string \"Uni::_transferTokens: cannot transfer to the zero address\""
															},
															"value": "Uni::_transferTokens: cannot transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8cdff6d324f122ca5cad9ec8d91ca56840c45dd7fc048a003b94957b6f733086",
																"typeString": "literal_string \"Uni::_transferTokens: cannot transfer to the zero address\""
															}
														],
														"id": 1206,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "21935:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21935:121:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1215,
												"nodeType": "ExpressionStatement",
												"src": "21935:121:0"
											},
											{
												"expression": {
													"id": 1226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1216,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "22067:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
																"typeString": "mapping(address => uint96)"
															}
														},
														"id": 1218,
														"indexExpression": {
															"id": 1217,
															"name": "src",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1189,
															"src": "22076:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "22067:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"baseExpression": {
																	"id": 1220,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "22102:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
																		"typeString": "mapping(address => uint96)"
																	}
																},
																"id": 1222,
																"indexExpression": {
																	"id": 1221,
																	"name": "src",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1189,
																	"src": "22111:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "22102:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															{
																"id": 1223,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1193,
																"src": "22129:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															{
																"hexValue": "556e693a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 1224,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22149:55:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_3230ba2cb739b33589720b8a5892642694535e935234939514431ff16907d24a",
																	"typeString": "literal_string \"Uni::_transferTokens: transfer amount exceeds balance\""
																},
																"value": "Uni::_transferTokens: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																},
																{
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																},
																{
																	"typeIdentifier": "t_stringliteral_3230ba2cb739b33589720b8a5892642694535e935234939514431ff16907d24a",
																	"typeString": "literal_string \"Uni::_transferTokens: transfer amount exceeds balance\""
																}
															],
															"id": 1219,
															"name": "sub96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1537,
															"src": "22083:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint96_$_t_uint96_$_t_string_memory_ptr_$returns$_t_uint96_$",
																"typeString": "function (uint96,uint96,string memory) pure returns (uint96)"
															}
														},
														"id": 1225,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22083:131:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "22067:147:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"id": 1227,
												"nodeType": "ExpressionStatement",
												"src": "22067:147:0"
											},
											{
												"expression": {
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1228,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "22224:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
																"typeString": "mapping(address => uint96)"
															}
														},
														"id": 1230,
														"indexExpression": {
															"id": 1229,
															"name": "dst",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1191,
															"src": "22233:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "22224:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"baseExpression": {
																	"id": 1232,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "22259:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
																		"typeString": "mapping(address => uint96)"
																	}
																},
																"id": 1234,
																"indexExpression": {
																	"id": 1233,
																	"name": "dst",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1191,
																	"src": "22268:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "22259:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															{
																"id": 1235,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1193,
																"src": "22286:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															{
																"hexValue": "556e693a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e74206f766572666c6f7773",
																"id": 1236,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22306:49:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_f838ee8b15c3d07740bb9b304b8146ec63bb435a7703825b5e6424ee2072674a",
																	"typeString": "literal_string \"Uni::_transferTokens: transfer amount overflows\""
																},
																"value": "Uni::_transferTokens: transfer amount overflows"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																},
																{
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																},
																{
																	"typeIdentifier": "t_stringliteral_f838ee8b15c3d07740bb9b304b8146ec63bb435a7703825b5e6424ee2072674a",
																	"typeString": "literal_string \"Uni::_transferTokens: transfer amount overflows\""
																}
															],
															"id": 1231,
															"name": "add96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1514,
															"src": "22240:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint96_$_t_uint96_$_t_string_memory_ptr_$returns$_t_uint96_$",
																"typeString": "function (uint96,uint96,string memory) pure returns (uint96)"
															}
														},
														"id": 1237,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22240:125:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "22224:141:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"id": 1239,
												"nodeType": "ExpressionStatement",
												"src": "22224:141:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1241,
															"name": "src",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1189,
															"src": "22389:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1242,
															"name": "dst",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1191,
															"src": "22394:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1243,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1193,
															"src": "22399:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 1240,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "22380:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22380:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1245,
												"nodeType": "EmitStatement",
												"src": "22375:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1247,
																"name": "delegates",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 310,
																"src": "22432:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																	"typeString": "mapping(address => address)"
																}
															},
															"id": 1249,
															"indexExpression": {
																"id": 1248,
																"name": "src",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1189,
																"src": "22442:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "22432:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"id": 1250,
																"name": "delegates",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 310,
																"src": "22448:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																	"typeString": "mapping(address => address)"
																}
															},
															"id": 1252,
															"indexExpression": {
																"id": 1251,
																"name": "dst",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1191,
																"src": "22458:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "22448:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1253,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1193,
															"src": "22464:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 1246,
														"name": "_moveDelegates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1366,
														"src": "22417:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint96_$returns$__$",
															"typeString": "function (address,address,uint96)"
														}
													},
													"id": 1254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22417:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1255,
												"nodeType": "ExpressionStatement",
												"src": "22417:54:0"
											}
										]
									},
									"id": 1257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferTokens",
									"nameLocation": "21696:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "src",
												"nameLocation": "21729:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "21721:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21721:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "dst",
												"nameLocation": "21750:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "21742:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21742:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "21770:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "21763:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1192,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "21763:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21711:71:0"
									},
									"returnParameters": {
										"id": 1195,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21792:0:0"
									},
									"scope": 1550,
									"src": "21687:791:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1365,
										"nodeType": "Block",
										"src": "22594:1077:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1268,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1266,
															"name": "srcRep",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1259,
															"src": "22608:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1267,
															"name": "dstRep",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1261,
															"src": "22618:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "22608:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"id": 1271,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1269,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1263,
															"src": "22628:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1270,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22637:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "22628:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "22608:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1364,
												"nodeType": "IfStatement",
												"src": "22604:1061:0",
												"trueBody": {
													"id": 1363,
													"nodeType": "Block",
													"src": "22640:1025:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1273,
																	"name": "srcRep",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1259,
																	"src": "22658:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1276,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22676:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "22668:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1274,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "22668:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "22668:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "22658:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1317,
															"nodeType": "IfStatement",
															"src": "22654:494:0",
															"trueBody": {
																"id": 1316,
																"nodeType": "Block",
																"src": "22680:468:0",
																"statements": [
																	{
																		"assignments": [
																			1280
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1280,
																				"mutability": "mutable",
																				"name": "srcRepNum",
																				"nameLocation": "22705:9:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1316,
																				"src": "22698:16:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"typeName": {
																					"id": 1279,
																					"name": "uint32",
																					"nodeType": "ElementaryTypeName",
																					"src": "22698:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1284,
																		"initialValue": {
																			"baseExpression": {
																				"id": 1281,
																				"name": "numCheckpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 329,
																				"src": "22717:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
																					"typeString": "mapping(address => uint32)"
																				}
																			},
																			"id": 1283,
																			"indexExpression": {
																				"id": 1282,
																				"name": "srcRep",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1259,
																				"src": "22732:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "22717:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "22698:41:0"
																	},
																	{
																		"assignments": [
																			1286
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1286,
																				"mutability": "mutable",
																				"name": "srcRepOld",
																				"nameLocation": "22764:9:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1316,
																				"src": "22757:16:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint96",
																					"typeString": "uint96"
																				},
																				"typeName": {
																					"id": 1285,
																					"name": "uint96",
																					"nodeType": "ElementaryTypeName",
																					"src": "22757:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1300,
																		"initialValue": {
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"id": 1289,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1287,
																					"name": "srcRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1280,
																					"src": "22776:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">",
																				"rightExpression": {
																					"hexValue": "30",
																					"id": 1288,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "22788:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "22776:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"hexValue": "30",
																				"id": 1298,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "22875:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"id": 1299,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "22776:100:0",
																			"trueExpression": {
																				"expression": {
																					"baseExpression": {
																						"baseExpression": {
																							"id": 1290,
																							"name": "checkpoints",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 324,
																							"src": "22812:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$316_storage_$_$",
																								"typeString": "mapping(address => mapping(uint32 => struct Uni.Checkpoint storage ref))"
																							}
																						},
																						"id": 1292,
																						"indexExpression": {
																							"id": 1291,
																							"name": "srcRep",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1259,
																							"src": "22824:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "22812:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$316_storage_$",
																							"typeString": "mapping(uint32 => struct Uni.Checkpoint storage ref)"
																						}
																					},
																					"id": 1296,
																					"indexExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						},
																						"id": 1295,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1293,
																							"name": "srcRepNum",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1280,
																							"src": "22832:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint32",
																								"typeString": "uint32"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 1294,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "22844:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "22832:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "22812:34:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Checkpoint_$316_storage",
																						"typeString": "struct Uni.Checkpoint storage ref"
																					}
																				},
																				"id": 1297,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "22847:5:0",
																				"memberName": "votes",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 315,
																				"src": "22812:40:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint96",
																					"typeString": "uint96"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "22757:119:0"
																	},
																	{
																		"assignments": [
																			1302
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1302,
																				"mutability": "mutable",
																				"name": "srcRepNew",
																				"nameLocation": "22901:9:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1316,
																				"src": "22894:16:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint96",
																					"typeString": "uint96"
																				},
																				"typeName": {
																					"id": 1301,
																					"name": "uint96",
																					"nodeType": "ElementaryTypeName",
																					"src": "22894:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1308,
																		"initialValue": {
																			"arguments": [
																				{
																					"id": 1304,
																					"name": "srcRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1286,
																					"src": "22940:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				{
																					"id": 1305,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1263,
																					"src": "22971:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				{
																					"hexValue": "556e693a3a5f6d6f7665566f7465733a20766f746520616d6f756e7420756e646572666c6f7773",
																					"id": 1306,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "22999:41:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_8f9e8e1e6816d4a772d233c08b8292a576126f7dbd1d9b7cd30ef07f7c3d78d2",
																						"typeString": "literal_string \"Uni::_moveVotes: vote amount underflows\""
																					},
																					"value": "Uni::_moveVotes: vote amount underflows"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					},
																					{
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_8f9e8e1e6816d4a772d233c08b8292a576126f7dbd1d9b7cd30ef07f7c3d78d2",
																						"typeString": "literal_string \"Uni::_moveVotes: vote amount underflows\""
																					}
																				],
																				"id": 1303,
																				"name": "sub96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1537,
																				"src": "22913:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint96_$_t_uint96_$_t_string_memory_ptr_$returns$_t_uint96_$",
																					"typeString": "function (uint96,uint96,string memory) pure returns (uint96)"
																				}
																			},
																			"id": 1307,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "22913:145:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "22894:164:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1310,
																					"name": "srcRep",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1259,
																					"src": "23093:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1311,
																					"name": "srcRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1280,
																					"src": "23101:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				{
																					"id": 1312,
																					"name": "srcRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1286,
																					"src": "23112:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				{
																					"id": 1313,
																					"name": "srcRepNew",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1302,
																					"src": "23123:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					},
																					{
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					},
																					{
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				],
																				"id": 1309,
																				"name": "_writeCheckpoint",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1439,
																				"src": "23076:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint32_$_t_uint96_$_t_uint96_$returns$__$",
																					"typeString": "function (address,uint32,uint96,uint96)"
																				}
																			},
																			"id": 1314,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "23076:57:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1315,
																		"nodeType": "ExpressionStatement",
																		"src": "23076:57:0"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1318,
																	"name": "dstRep",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1261,
																	"src": "23166:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1321,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23184:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1320,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "23176:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1319,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "23176:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23176:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "23166:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1362,
															"nodeType": "IfStatement",
															"src": "23162:493:0",
															"trueBody": {
																"id": 1361,
																"nodeType": "Block",
																"src": "23188:467:0",
																"statements": [
																	{
																		"assignments": [
																			1325
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1325,
																				"mutability": "mutable",
																				"name": "dstRepNum",
																				"nameLocation": "23213:9:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1361,
																				"src": "23206:16:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"typeName": {
																					"id": 1324,
																					"name": "uint32",
																					"nodeType": "ElementaryTypeName",
																					"src": "23206:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1329,
																		"initialValue": {
																			"baseExpression": {
																				"id": 1326,
																				"name": "numCheckpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 329,
																				"src": "23225:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
																					"typeString": "mapping(address => uint32)"
																				}
																			},
																			"id": 1328,
																			"indexExpression": {
																				"id": 1327,
																				"name": "dstRep",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1261,
																				"src": "23240:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "23225:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "23206:41:0"
																	},
																	{
																		"assignments": [
																			1331
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1331,
																				"mutability": "mutable",
																				"name": "dstRepOld",
																				"nameLocation": "23272:9:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1361,
																				"src": "23265:16:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint96",
																					"typeString": "uint96"
																				},
																				"typeName": {
																					"id": 1330,
																					"name": "uint96",
																					"nodeType": "ElementaryTypeName",
																					"src": "23265:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1345,
																		"initialValue": {
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"id": 1334,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1332,
																					"name": "dstRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1325,
																					"src": "23284:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">",
																				"rightExpression": {
																					"hexValue": "30",
																					"id": 1333,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "23296:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "23284:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"hexValue": "30",
																				"id": 1343,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "23383:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"id": 1344,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "23284:100:0",
																			"trueExpression": {
																				"expression": {
																					"baseExpression": {
																						"baseExpression": {
																							"id": 1335,
																							"name": "checkpoints",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 324,
																							"src": "23320:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$316_storage_$_$",
																								"typeString": "mapping(address => mapping(uint32 => struct Uni.Checkpoint storage ref))"
																							}
																						},
																						"id": 1337,
																						"indexExpression": {
																							"id": 1336,
																							"name": "dstRep",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1261,
																							"src": "23332:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "23320:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$316_storage_$",
																							"typeString": "mapping(uint32 => struct Uni.Checkpoint storage ref)"
																						}
																					},
																					"id": 1341,
																					"indexExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						},
																						"id": 1340,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1338,
																							"name": "dstRepNum",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1325,
																							"src": "23340:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint32",
																								"typeString": "uint32"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 1339,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "23352:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "23340:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "23320:34:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Checkpoint_$316_storage",
																						"typeString": "struct Uni.Checkpoint storage ref"
																					}
																				},
																				"id": 1342,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "23355:5:0",
																				"memberName": "votes",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 315,
																				"src": "23320:40:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint96",
																					"typeString": "uint96"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "23265:119:0"
																	},
																	{
																		"assignments": [
																			1347
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1347,
																				"mutability": "mutable",
																				"name": "dstRepNew",
																				"nameLocation": "23409:9:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1361,
																				"src": "23402:16:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint96",
																					"typeString": "uint96"
																				},
																				"typeName": {
																					"id": 1346,
																					"name": "uint96",
																					"nodeType": "ElementaryTypeName",
																					"src": "23402:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1353,
																		"initialValue": {
																			"arguments": [
																				{
																					"id": 1349,
																					"name": "dstRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1331,
																					"src": "23448:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				{
																					"id": 1350,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1263,
																					"src": "23479:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				{
																					"hexValue": "556e693a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f7773",
																					"id": 1351,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "23507:40:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_5c6c891434a3c5951db59f5fe43d566b04bf54e07bc444b7f9f72601e608dc42",
																						"typeString": "literal_string \"Uni::_moveVotes: vote amount overflows\""
																					},
																					"value": "Uni::_moveVotes: vote amount overflows"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					},
																					{
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_5c6c891434a3c5951db59f5fe43d566b04bf54e07bc444b7f9f72601e608dc42",
																						"typeString": "literal_string \"Uni::_moveVotes: vote amount overflows\""
																					}
																				],
																				"id": 1348,
																				"name": "add96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1514,
																				"src": "23421:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint96_$_t_uint96_$_t_string_memory_ptr_$returns$_t_uint96_$",
																					"typeString": "function (uint96,uint96,string memory) pure returns (uint96)"
																				}
																			},
																			"id": 1352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "23421:144:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "23402:163:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1355,
																					"name": "dstRep",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1261,
																					"src": "23600:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1356,
																					"name": "dstRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1325,
																					"src": "23608:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				{
																					"id": 1357,
																					"name": "dstRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1331,
																					"src": "23619:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				{
																					"id": 1358,
																					"name": "dstRepNew",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1347,
																					"src": "23630:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					},
																					{
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					},
																					{
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				],
																				"id": 1354,
																				"name": "_writeCheckpoint",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1439,
																				"src": "23583:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint32_$_t_uint96_$_t_uint96_$returns$__$",
																					"typeString": "function (address,uint32,uint96,uint96)"
																				}
																			},
																			"id": 1359,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "23583:57:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1360,
																		"nodeType": "ExpressionStatement",
																		"src": "23583:57:0"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"id": 1366,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_moveDelegates",
									"nameLocation": "22493:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "srcRep",
												"nameLocation": "22525:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1366,
												"src": "22517:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22517:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "dstRep",
												"nameLocation": "22549:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1366,
												"src": "22541:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22541:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "22572:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1366,
												"src": "22565:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1262,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "22565:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22507:77:0"
									},
									"returnParameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22594:0:0"
									},
									"scope": 1550,
									"src": "22484:1187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1438,
										"nodeType": "Block",
										"src": "23824:638:0",
										"statements": [
											{
												"assignments": [
													1378
												],
												"declarations": [
													{
														"constant": false,
														"id": 1378,
														"mutability": "mutable",
														"name": "blockNumber",
														"nameLocation": "23841:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 1438,
														"src": "23834:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 1377,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "23834:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1384,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1380,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "23875:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "23881:6:0",
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "23875:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "556e693a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d62657220657863656564732033322062697473",
															"id": 1382,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23901:53:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_66157ef8d926a3327823fecd4ce53edfcb6533c37c90dc98acfb91e4f2854725",
																"typeString": "literal_string \"Uni::_writeCheckpoint: block number exceeds 32 bits\""
															},
															"value": "Uni::_writeCheckpoint: block number exceeds 32 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_66157ef8d926a3327823fecd4ce53edfcb6533c37c90dc98acfb91e4f2854725",
																"typeString": "literal_string \"Uni::_writeCheckpoint: block number exceeds 32 bits\""
															}
														],
														"id": 1379,
														"name": "safe32",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1463,
														"src": "23855:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint32_$",
															"typeString": "function (uint256,string memory) pure returns (uint32)"
														}
													},
													"id": 1383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23855:109:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23834:130:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 1387,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1385,
															"name": "nCheckpoints",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1370,
															"src": "23992:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1386,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24007:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "23992:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 1397,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1388,
																		"name": "checkpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 324,
																		"src": "24024:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$316_storage_$_$",
																			"typeString": "mapping(address => mapping(uint32 => struct Uni.Checkpoint storage ref))"
																		}
																	},
																	"id": 1390,
																	"indexExpression": {
																		"id": 1389,
																		"name": "delegatee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1368,
																		"src": "24036:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "24024:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$316_storage_$",
																		"typeString": "mapping(uint32 => struct Uni.Checkpoint storage ref)"
																	}
																},
																"id": 1394,
																"indexExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"id": 1393,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1391,
																		"name": "nCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1370,
																		"src": "24047:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1392,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24062:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "24047:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "24024:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Checkpoint_$316_storage",
																	"typeString": "struct Uni.Checkpoint storage ref"
																}
															},
															"id": 1395,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "24065:9:0",
															"memberName": "fromBlock",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 313,
															"src": "24024:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1396,
															"name": "blockNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1378,
															"src": "24078:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"src": "24024:65:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "23992:97:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1430,
													"nodeType": "Block",
													"src": "24188:201:0",
													"statements": [
														{
															"expression": {
																"id": 1420,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1411,
																			"name": "checkpoints",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 324,
																			"src": "24202:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$316_storage_$_$",
																				"typeString": "mapping(address => mapping(uint32 => struct Uni.Checkpoint storage ref))"
																			}
																		},
																		"id": 1414,
																		"indexExpression": {
																			"id": 1412,
																			"name": "delegatee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1368,
																			"src": "24214:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "24202:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$316_storage_$",
																			"typeString": "mapping(uint32 => struct Uni.Checkpoint storage ref)"
																		}
																	},
																	"id": 1415,
																	"indexExpression": {
																		"id": 1413,
																		"name": "nCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1370,
																		"src": "24225:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "24202:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$316_storage",
																		"typeString": "struct Uni.Checkpoint storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1417,
																			"name": "blockNumber",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1378,
																			"src": "24269:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		{
																			"id": 1418,
																			"name": "newVotes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1374,
																			"src": "24298:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			},
																			{
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		],
																		"id": 1416,
																		"name": "Checkpoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 316,
																		"src": "24241:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_struct$_Checkpoint_$316_storage_ptr_$",
																			"typeString": "type(struct Uni.Checkpoint storage pointer)"
																		}
																	},
																	"id": 1419,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "structConstructorCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24241:79:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$316_memory_ptr",
																		"typeString": "struct Uni.Checkpoint memory"
																	}
																},
																"src": "24202:118:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Checkpoint_$316_storage",
																	"typeString": "struct Uni.Checkpoint storage ref"
																}
															},
															"id": 1421,
															"nodeType": "ExpressionStatement",
															"src": "24202:118:0"
														},
														{
															"expression": {
																"id": 1428,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1422,
																		"name": "numCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 329,
																		"src": "24334:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
																			"typeString": "mapping(address => uint32)"
																		}
																	},
																	"id": 1424,
																	"indexExpression": {
																		"id": 1423,
																		"name": "delegatee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1368,
																		"src": "24349:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "24334:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"id": 1427,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1425,
																		"name": "nCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1370,
																		"src": "24362:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1426,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24377:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "24362:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "24334:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"id": 1429,
															"nodeType": "ExpressionStatement",
															"src": "24334:44:0"
														}
													]
												},
												"id": 1431,
												"nodeType": "IfStatement",
												"src": "23975:414:0",
												"trueBody": {
													"id": 1410,
													"nodeType": "Block",
													"src": "24100:82:0",
													"statements": [
														{
															"expression": {
																"id": 1408,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 1399,
																				"name": "checkpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 324,
																				"src": "24114:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$316_storage_$_$",
																					"typeString": "mapping(address => mapping(uint32 => struct Uni.Checkpoint storage ref))"
																				}
																			},
																			"id": 1404,
																			"indexExpression": {
																				"id": 1400,
																				"name": "delegatee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1368,
																				"src": "24126:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "24114:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$316_storage_$",
																				"typeString": "mapping(uint32 => struct Uni.Checkpoint storage ref)"
																			}
																		},
																		"id": 1405,
																		"indexExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			},
																			"id": 1403,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1401,
																				"name": "nCheckpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1370,
																				"src": "24137:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1402,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24152:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "24137:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "24114:40:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Checkpoint_$316_storage",
																			"typeString": "struct Uni.Checkpoint storage ref"
																		}
																	},
																	"id": 1406,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "24155:5:0",
																	"memberName": "votes",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 315,
																	"src": "24114:46:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1407,
																	"name": "newVotes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1374,
																	"src": "24163:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"src": "24114:57:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"id": 1409,
															"nodeType": "ExpressionStatement",
															"src": "24114:57:0"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1433,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1368,
															"src": "24425:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1434,
															"name": "oldVotes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1372,
															"src": "24436:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														{
															"id": 1435,
															"name": "newVotes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1374,
															"src": "24446:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 1432,
														"name": "DelegateVotesChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 377,
														"src": "24404:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24404:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1437,
												"nodeType": "EmitStatement",
												"src": "24399:56:0"
											}
										]
									},
									"id": 1439,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_writeCheckpoint",
									"nameLocation": "23686:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "delegatee",
												"nameLocation": "23720:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "23712:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23712:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "nCheckpoints",
												"nameLocation": "23746:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "23739:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1369,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "23739:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1372,
												"mutability": "mutable",
												"name": "oldVotes",
												"nameLocation": "23775:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "23768:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1371,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "23768:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "newVotes",
												"nameLocation": "23800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "23793:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1373,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "23793:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23702:112:0"
									},
									"returnParameters": {
										"id": 1376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23824:0:0"
									},
									"scope": 1550,
									"src": "23677:785:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1462,
										"nodeType": "Block",
										"src": "24582:75:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1449,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1441,
																"src": "24600:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																},
																"id": 1452,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24604:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1451,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24607:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "24604:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																}
															},
															"src": "24600:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1454,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1443,
															"src": "24611:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1448,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "24592:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24592:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1456,
												"nodeType": "ExpressionStatement",
												"src": "24592:32:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1459,
															"name": "n",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1441,
															"src": "24648:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1458,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "24641:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint32_$",
															"typeString": "type(uint32)"
														},
														"typeName": {
															"id": 1457,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "24641:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 1460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24641:9:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 1447,
												"id": 1461,
												"nodeType": "Return",
												"src": "24634:16:0"
											}
										]
									},
									"id": 1463,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe32",
									"nameLocation": "24477:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "24492:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "24484:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24484:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "24509:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "24495:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1442,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "24495:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24483:39:0"
									},
									"returnParameters": {
										"id": 1447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "24570:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1445,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "24570:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24569:8:0"
									},
									"scope": 1550,
									"src": "24468:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1486,
										"nodeType": "Block",
										"src": "24777:75:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1477,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1473,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1465,
																"src": "24795:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
																	"typeString": "int_const 79228162514264337593543950336"
																},
																"id": 1476,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1474,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24799:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3936",
																	"id": 1475,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24802:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_96_by_1",
																		"typeString": "int_const 96"
																	},
																	"value": "96"
																},
																"src": "24799:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
																	"typeString": "int_const 79228162514264337593543950336"
																}
															},
															"src": "24795:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1478,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1467,
															"src": "24806:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1472,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "24787:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24787:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1480,
												"nodeType": "ExpressionStatement",
												"src": "24787:32:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1483,
															"name": "n",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1465,
															"src": "24843:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1482,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "24836:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint96_$",
															"typeString": "type(uint96)"
														},
														"typeName": {
															"id": 1481,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "24836:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 1484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24836:9:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 1471,
												"id": 1485,
												"nodeType": "Return",
												"src": "24829:16:0"
											}
										]
									},
									"id": 1487,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe96",
									"nameLocation": "24672:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1465,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "24687:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "24679:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24679:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1467,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "24704:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "24690:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1466,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "24690:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24678:39:0"
									},
									"returnParameters": {
										"id": 1471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "24765:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1469,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "24765:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24764:8:0"
									},
									"scope": 1550,
									"src": "24663:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1513,
										"nodeType": "Block",
										"src": "24982:90:0",
										"statements": [
											{
												"assignments": [
													1499
												],
												"declarations": [
													{
														"constant": false,
														"id": 1499,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "24999:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 1513,
														"src": "24992:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 1498,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "24992:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1503,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													},
													"id": 1502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1500,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1489,
														"src": "25003:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1501,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1491,
														"src": "25007:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "25003:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24992:16:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															"id": 1507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1505,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1499,
																"src": "25026:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1506,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1489,
																"src": "25031:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"src": "25026:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1508,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1493,
															"src": "25034:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1504,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "25018:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25018:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1510,
												"nodeType": "ExpressionStatement",
												"src": "25018:29:0"
											},
											{
												"expression": {
													"id": 1511,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1499,
													"src": "25064:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 1497,
												"id": 1512,
												"nodeType": "Return",
												"src": "25057:8:0"
											}
										]
									},
									"id": 1514,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add96",
									"nameLocation": "24867:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "24889:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "24882:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1488,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "24882:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "24907:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "24900:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1490,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "24900:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1493,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "24932:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "24918:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1492,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "24918:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24872:78:0"
									},
									"returnParameters": {
										"id": 1497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "24974:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1495,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "24974:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24973:8:0"
									},
									"scope": 1550,
									"src": "24858:214:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1536,
										"nodeType": "Block",
										"src": "25202:68:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															"id": 1528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1526,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1518,
																"src": "25220:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1527,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1516,
																"src": "25225:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"src": "25220:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1529,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1520,
															"src": "25228:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1525,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "25212:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25212:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1531,
												"nodeType": "ExpressionStatement",
												"src": "25212:29:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													},
													"id": 1534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1532,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1516,
														"src": "25258:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1533,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1518,
														"src": "25262:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "25258:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 1524,
												"id": 1535,
												"nodeType": "Return",
												"src": "25251:12:0"
											}
										]
									},
									"id": 1537,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub96",
									"nameLocation": "25087:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "25109:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "25102:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1515,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "25102:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1518,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "25127:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "25120:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1517,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "25120:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1520,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "25152:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "25138:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1519,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "25138:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25092:78:0"
									},
									"returnParameters": {
										"id": 1524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1523,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "25194:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1522,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "25194:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25193:8:0"
									},
									"scope": 1550,
									"src": "25078:192:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1548,
										"nodeType": "Block",
										"src": "25331:118:0",
										"statements": [
											{
												"assignments": [
													1543
												],
												"declarations": [
													{
														"constant": false,
														"id": 1543,
														"mutability": "mutable",
														"name": "chainId",
														"nameLocation": "25349:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1548,
														"src": "25341:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1542,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "25341:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1544,
												"nodeType": "VariableDeclarationStatement",
												"src": "25341:15:0"
											},
											{
												"AST": {
													"nativeSrc": "25375:44:0",
													"nodeType": "YulBlock",
													"src": "25375:44:0",
													"statements": [
														{
															"nativeSrc": "25389:20:0",
															"nodeType": "YulAssignment",
															"src": "25389:20:0",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "chainid",
																	"nativeSrc": "25400:7:0",
																	"nodeType": "YulIdentifier",
																	"src": "25400:7:0"
																},
																"nativeSrc": "25400:9:0",
																"nodeType": "YulFunctionCall",
																"src": "25400:9:0"
															},
															"variableNames": [
																{
																	"name": "chainId",
																	"nativeSrc": "25389:7:0",
																	"nodeType": "YulIdentifier",
																	"src": "25389:7:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1543,
														"isOffset": false,
														"isSlot": false,
														"src": "25389:7:0",
														"valueSize": 1
													}
												],
												"id": 1545,
												"nodeType": "InlineAssembly",
												"src": "25366:53:0"
											},
											{
												"expression": {
													"id": 1546,
													"name": "chainId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1543,
													"src": "25435:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1541,
												"id": 1547,
												"nodeType": "Return",
												"src": "25428:14:0"
											}
										]
									},
									"id": 1549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getChainId",
									"nameLocation": "25285:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25295:2:0"
									},
									"returnParameters": {
										"id": 1541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1540,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "25322:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25322:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25321:9:0"
									},
									"scope": 1550,
									"src": "25276:173:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1551,
							"src": "6732:18719:0",
							"usedErrors": [],
							"usedEvents": [
								359,
								368,
								377,
								386,
								395
							]
						}
					],
					"src": "136:25316:0"
				},
				"id": 0
			}
		}
	}
}