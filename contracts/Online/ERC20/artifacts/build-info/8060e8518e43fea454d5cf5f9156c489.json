{
	"id": "8060e8518e43fea454d5cf5f9156c489",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.24",
	"solcLongVersion": "0.4.24+commit.e67f0147",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"contracts/Online/ERC20/TetherToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.4.17;\r\n/**\r\n * @title SafeMath\r\n * @dev Math operations with safety checks that throw on error\r\n */\r\nlibrary SafeMath {\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        assert(c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n    address public owner;\r\n\r\n    /**\r\n      * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n      * account.\r\n      */\r\n    function ownable() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    /**\r\n      * @dev Throws if called by any account other than the owner.\r\n      */\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    /**\r\n    * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n    * @param newOwner The address to transfer ownership to.\r\n    */\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        if (newOwner != address(0)) {\r\n            owner = newOwner;\r\n        }\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * @title ERC20Basic\r\n * @dev Simpler version of ERC20 interface\r\n * @dev see https://github.com/ethereum/EIPs/issues/20\r\n */\r\ncontract ERC20Basic {\r\n    uint public _totalSupply;\r\n    function totalSupply() public constant returns (uint);\r\n    function balanceOf(address who) public constant returns (uint);\r\n    function transfer(address to, uint value) public;\r\n    event Transfer(address indexed from, address indexed to, uint value);\r\n}\r\n\r\n/**\r\n * @title ERC20 interface\r\n * @dev see https://github.com/ethereum/EIPs/issues/20\r\n */\r\ncontract ERC20 is ERC20Basic {\r\n    function allowance(address owner, address spender) public constant returns (uint);\r\n    function transferFrom(address from, address to, uint value) public;\r\n    function approve(address spender, uint value) public;\r\n    event Approval(address indexed owner, address indexed spender, uint value);\r\n}\r\n\r\n/**\r\n * @title Basic token\r\n * @dev Basic version of StandardToken, with no allowances.\r\n */\r\ncontract BasicToken is Ownable, ERC20Basic {\r\n    using SafeMath for uint;\r\n\r\n    mapping(address => uint) public balances;\r\n\r\n    // additional variables for use if transaction fees ever became necessary\r\n    uint public basisPointsRate = 0;\r\n    uint public maximumFee = 0;\r\n\r\n    /**\r\n    * @dev Fix for the ERC20 short address attack.\r\n    */\r\n    modifier onlyPayloadSize(uint size) {\r\n        require(!(msg.data.length < size + 4));\r\n        _;\r\n    }\r\n\r\n    /**\r\n    * @dev transfer token for a specified address\r\n    * @param _to The address to transfer to.\r\n    * @param _value The amount to be transferred.\r\n    */\r\n    function transfer(address _to, uint _value) public onlyPayloadSize(2 * 32) {\r\n        uint fee = (_value.mul(basisPointsRate)).div(10000);\r\n        if (fee > maximumFee) {\r\n            fee = maximumFee;\r\n        }\r\n        uint sendAmount = _value.sub(fee);\r\n        balances[msg.sender] = balances[msg.sender].sub(_value);\r\n        balances[_to] = balances[_to].add(sendAmount);\r\n        if (fee > 0) {\r\n            balances[owner] = balances[owner].add(fee);\r\n            emit Transfer(msg.sender, owner, fee);\r\n        }\r\n        emit Transfer(msg.sender, _to, sendAmount);\r\n    }\r\n\r\n    /**\r\n    * @dev Gets the balance of the specified address.\r\n    * @param _owner The address to query the the balance of.\r\n    * @return An uint representing the amount owned by the passed address.\r\n    */\r\n    function balanceOf(address _owner) public constant returns (uint balance) {\r\n        return balances[_owner];\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * @title Standard ERC20 token\r\n *\r\n * @dev Implementation of the basic standard token.\r\n * @dev https://github.com/ethereum/EIPs/issues/20\r\n * @dev Based oncode by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\r\n */\r\ncontract StandardToken is BasicToken, ERC20 {\r\n\r\n    mapping (address => mapping (address => uint)) public allowed;\r\n\r\n    uint public constant MAX_UINT = 2**256 - 1;\r\n\r\n    /**\r\n    * @dev Transfer tokens from one address to another\r\n    * @param _from address The address which you want to send tokens from\r\n    * @param _to address The address which you want to transfer to\r\n    * @param _value uint the amount of tokens to be transferred\r\n    */\r\n    function transferFrom(address _from, address _to, uint _value) public onlyPayloadSize(3 * 32) {\r\n        uint _allowance = allowed[_from][msg.sender];\r\n\r\n        // Check is not needed because sub(_allowance, _value) will already throw if this condition is not met\r\n        // if (_value > _allowance) throw;\r\n\r\n        uint fee = (_value.mul(basisPointsRate)).div(10000);\r\n        if (fee > maximumFee) {\r\n            fee = maximumFee;\r\n        }\r\n        if (_allowance < MAX_UINT) {\r\n            allowed[_from][msg.sender] = _allowance.sub(_value);\r\n        }\r\n        uint sendAmount = _value.sub(fee);\r\n        balances[_from] = balances[_from].sub(_value);\r\n        balances[_to] = balances[_to].add(sendAmount);\r\n        if (fee > 0) {\r\n            balances[owner] = balances[owner].add(fee);\r\n            emit Transfer(_from, owner, fee);\r\n        }\r\n        emit Transfer(_from, _to, sendAmount);\r\n    }\r\n\r\n    /**\r\n    * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\r\n    * @param _spender The address which will spend the funds.\r\n    * @param _value The amount of tokens to be spent.\r\n    */\r\n    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\r\n\r\n        // To change the approve amount you first have to reduce the addresses`\r\n        //  allowance to zero by calling `approve(_spender, 0)` if it is not\r\n        //  already 0 to mitigate the race condition described here:\r\n        //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n        require(!((_value != 0) && (allowed[msg.sender][_spender] != 0)));\r\n\r\n        allowed[msg.sender][_spender] = _value;\r\n        Approval(msg.sender, _spender, _value);\r\n    }\r\n\r\n    /**\r\n    * @dev Function to check the amount of tokens than an owner allowed to a spender.\r\n    * @param _owner address The address which owns the funds.\r\n    * @param _spender address The address which will spend the funds.\r\n    * @return A uint specifying the amount of tokens still available for the spender.\r\n    */\r\n    function allowance(address _owner, address _spender) public constant returns (uint remaining) {\r\n        return allowed[_owner][_spender];\r\n    }\r\n\r\n}\r\n\r\n\r\n/**\r\n * @title Pausable\r\n * @dev Base contract which allows children to implement an emergency stop mechanism.\r\n */\r\ncontract Pausable is Ownable {\r\n  event Pause();\r\n  event Unpause();\r\n\r\n  bool public paused = false;\r\n\r\n\r\n  /**\r\n   * @dev Modifier to make a function callable only when the contract is not paused.\r\n   */\r\n  modifier whenNotPaused() {\r\n    require(!paused);\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev Modifier to make a function callable only when the contract is paused.\r\n   */\r\n  modifier whenPaused() {\r\n    require(paused);\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev called by the owner to pause, triggers stopped state\r\n   */\r\n  function pause() onlyOwner whenNotPaused public {\r\n    paused = true;\r\n   emit Pause();\r\n  }\r\n\r\n  /**\r\n   * @dev called by the owner to unpause, returns to normal state\r\n   */\r\n  function unpause() onlyOwner whenPaused public {\r\n    paused = false;\r\n   emit Unpause();\r\n  }\r\n}\r\n\r\ncontract BlackList is Ownable, BasicToken {\r\n\r\n    /////// Getters to allow the same blacklist to be used also by other contracts (including upgraded Tether) ///////\r\n    function getBlackListStatus(address _maker) external constant returns (bool) {\r\n        return isBlackListed[_maker];\r\n    }\r\n\r\n    function getOwner() external constant returns (address) {\r\n        return owner;\r\n    }\r\n\r\n    mapping (address => bool) public isBlackListed;\r\n    \r\n    function addBlackList (address _evilUser) public onlyOwner {\r\n        isBlackListed[_evilUser] = true;\r\n       emit AddedBlackList(_evilUser);\r\n    }\r\n\r\n    function removeBlackList (address _clearedUser) public onlyOwner {\r\n        isBlackListed[_clearedUser] = false;\r\n       emit RemovedBlackList(_clearedUser);\r\n    }\r\n\r\n    function destroyBlackFunds (address _blackListedUser) public onlyOwner {\r\n        require(isBlackListed[_blackListedUser]);\r\n        uint dirtyFunds = balanceOf(_blackListedUser);\r\n        balances[_blackListedUser] = 0;\r\n        _totalSupply -= dirtyFunds;\r\n        emit DestroyedBlackFunds(_blackListedUser, dirtyFunds);\r\n    }\r\n\r\n    event DestroyedBlackFunds(address _blackListedUser, uint _balance);\r\n\r\n    event AddedBlackList(address _user);\r\n\r\n    event RemovedBlackList(address _user);\r\n\r\n}\r\n\r\ncontract UpgradedStandardToken is StandardToken{\r\n    // those methods are called by the legacy contract\r\n    // and they must ensure msg.sender to be the contract address\r\n    function transferByLegacy(address from, address to, uint value) public;\r\n    function transferFromByLegacy(address sender, address from, address spender, uint value) public;\r\n    function approveByLegacy(address from, address spender, uint value) public;\r\n}\r\n\r\ncontract TetherToken is Pausable, StandardToken, BlackList {\r\n\r\n    string public name;\r\n    string public symbol;\r\n    uint public decimals;\r\n    address public upgradedAddress;\r\n    bool public deprecated;\r\n\r\n    //  The contract can be initialized with a number of tokens\r\n    //  All the tokens are deposited to the owner address\r\n    //\r\n    // @param _balance Initial supply of the contract\r\n    // @param _name Token Name\r\n    // @param _symbol Token symbol\r\n    // @param _decimals Token decimals\r\n    function TetherToken(uint _initialSupply, string _name, string _symbol, uint _decimals) public {\r\n        _totalSupply = _initialSupply;\r\n        name = _name;\r\n        symbol = _symbol;\r\n        decimals = _decimals;\r\n        balances[owner] = _initialSupply;\r\n        deprecated = false;\r\n    }\r\n\r\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\r\n    function transfer(address _to, uint _value) public whenNotPaused {\r\n        require(!isBlackListed[msg.sender]);\r\n        if (deprecated) {\r\n            return UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value);\r\n        } else {\r\n            return super.transfer(_to, _value);\r\n        }\r\n    }\r\n\r\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\r\n    function transferFrom(address _from, address _to, uint _value) public whenNotPaused {\r\n        require(!isBlackListed[_from]);\r\n        if (deprecated) {\r\n            return UpgradedStandardToken(upgradedAddress).transferFromByLegacy(msg.sender, _from, _to, _value);\r\n        } else {\r\n            return super.transferFrom(_from, _to, _value);\r\n        }\r\n    }\r\n\r\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\r\n    function balanceOf(address who) public constant returns (uint) {\r\n        if (deprecated) {\r\n            return UpgradedStandardToken(upgradedAddress).balanceOf(who);\r\n        } else {\r\n            return super.balanceOf(who);\r\n        }\r\n    }\r\n\r\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\r\n    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\r\n        if (deprecated) {\r\n            return UpgradedStandardToken(upgradedAddress).approveByLegacy(msg.sender, _spender, _value);\r\n        } else {\r\n            return super.approve(_spender, _value);\r\n        }\r\n    }\r\n\r\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\r\n    function allowance(address _owner, address _spender) public constant returns (uint remaining) {\r\n        if (deprecated) {\r\n            return StandardToken(upgradedAddress).allowance(_owner, _spender);\r\n        } else {\r\n            return super.allowance(_owner, _spender);\r\n        }\r\n    }\r\n\r\n    // deprecate current contract in favour of a new one\r\n    function deprecate(address _upgradedAddress) public onlyOwner {\r\n        deprecated = true;\r\n        upgradedAddress = _upgradedAddress;\r\n        emit Deprecate(_upgradedAddress);\r\n    }\r\n\r\n    // deprecate current contract if favour of a new one\r\n    function totalSupply() public constant returns (uint) {\r\n        if (deprecated) {\r\n            return StandardToken(upgradedAddress).totalSupply();\r\n        } else {\r\n            return _totalSupply;\r\n        }\r\n    }\r\n\r\n    // Issue a new amount of tokens\r\n    // these tokens are deposited into the owner address\r\n    //\r\n    // @param _amount Number of tokens to be issued\r\n    function issue(uint amount) public onlyOwner {\r\n        require(_totalSupply + amount > _totalSupply);\r\n        require(balances[owner] + amount > balances[owner]);\r\n\r\n        balances[owner] += amount;\r\n        _totalSupply += amount;\r\n        Issue(amount);\r\n    }\r\n\r\n    // Redeem tokens.\r\n    // These tokens are withdrawn from the owner address\r\n    // if the balance must be enough to cover the redeem\r\n    // or the call will fail.\r\n    // @param _amount Number of tokens to be issued\r\n    function redeem(uint amount) public onlyOwner {\r\n        require(_totalSupply >= amount);\r\n        require(balances[owner] >= amount);\r\n\r\n        _totalSupply -= amount;\r\n        balances[owner] -= amount;\r\n        emit Redeem(amount);\r\n    }\r\n\r\n    function setParams(uint newBasisPoints, uint newMaxFee) public onlyOwner {\r\n        // Ensure transparency by hardcoding limit beyond which fees can never be added\r\n        require(newBasisPoints < 20);\r\n        require(newMaxFee < 50);\r\n\r\n        basisPointsRate = newBasisPoints;\r\n        maximumFee = newMaxFee.mul(10**decimals);\r\n\r\n        emit Params(basisPointsRate, maximumFee);\r\n    }\r\n\r\n    // Called when new token are issued\r\n    event Issue(uint amount);\r\n\r\n    // Called when tokens are redeemed\r\n    event Redeem(uint amount);\r\n\r\n    // Called when contract is deprecated\r\n    event Deprecate(address newAddress);\r\n\r\n    // Called if contract ever adds fees\r\n    event Params(uint feeBasisPoints, uint maxFee);\r\n}"
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Online/ERC20/TetherToken.sol": {
				"BasicToken": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "balances",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "maximumFee",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "balance",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "ownable",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "basisPointsRate",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"balanceOf(address)": {
								"details": "Gets the balance of the specified address.\r",
								"params": {
									"_owner": "The address to query the the balance of.\r"
								},
								"return": "An uint representing the amount owned by the passed address.\r"
							},
							"ownable()": {
								"details": "The Ownable constructor sets the original `owner` of the contract to the sender\r account.\r"
							},
							"transfer(address,uint256)": {
								"details": "transfer token for a specified address\r",
								"params": {
									"_to": "The address to transfer to.\r",
									"_value": "The amount to be transferred.\r"
								}
							},
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.\r",
								"params": {
									"newOwner": "The address to transfer ownership to.\r"
								}
							}
						},
						"title": "Basic token\r"
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"_totalSupply()": "3eaaf86b",
							"balanceOf(address)": "70a08231",
							"balances(address)": "27e235e3",
							"basisPointsRate()": "dd644f72",
							"maximumFee()": "35390714",
							"ownable()": "b38854be",
							"owner()": "8da5cb5b",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {}
					}
				},
				"BlackList": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "_evilUser",
									"type": "address"
								}
							],
							"name": "addBlackList",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "balances",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "maximumFee",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_maker",
									"type": "address"
								}
							],
							"name": "getBlackListStatus",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "balance",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "ownable",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "basisPointsRate",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "isBlackListed",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_clearedUser",
									"type": "address"
								}
							],
							"name": "removeBlackList",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_blackListedUser",
									"type": "address"
								}
							],
							"name": "destroyBlackFunds",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "_blackListedUser",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "_balance",
									"type": "uint256"
								}
							],
							"name": "DestroyedBlackFunds",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "_user",
									"type": "address"
								}
							],
							"name": "AddedBlackList",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "_user",
									"type": "address"
								}
							],
							"name": "RemovedBlackList",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"balanceOf(address)": {
								"details": "Gets the balance of the specified address.\r",
								"params": {
									"_owner": "The address to query the the balance of.\r"
								},
								"return": "An uint representing the amount owned by the passed address.\r"
							},
							"ownable()": {
								"details": "The Ownable constructor sets the original `owner` of the contract to the sender\r account.\r"
							},
							"transfer(address,uint256)": {
								"details": "transfer token for a specified address\r",
								"params": {
									"_to": "The address to transfer to.\r",
									"_value": "The amount to be transferred.\r"
								}
							},
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.\r",
								"params": {
									"newOwner": "The address to transfer ownership to.\r"
								}
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"_totalSupply()": "3eaaf86b",
							"addBlackList(address)": "0ecb93c0",
							"balanceOf(address)": "70a08231",
							"balances(address)": "27e235e3",
							"basisPointsRate()": "dd644f72",
							"destroyBlackFunds(address)": "f3bdc228",
							"getBlackListStatus(address)": "59bf1abe",
							"getOwner()": "893d20e8",
							"isBlackListed(address)": "e47d6060",
							"maximumFee()": "35390714",
							"ownable()": "b38854be",
							"owner()": "8da5cb5b",
							"removeBlackList(address)": "e4997dc5",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {
							"getBlackListStatus(address)": {
								"notice": "//// Getters to allow the same blacklist to be used also by other contracts (including upgraded Tether) ///////\r"
							}
						}
					}
				},
				"ERC20": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "spender",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "from",
									"type": "address"
								},
								{
									"name": "to",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "who",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "to",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "owner",
									"type": "address"
								},
								{
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {},
						"title": "ERC20 interface\r"
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"_totalSupply()": "3eaaf86b",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {}
					}
				},
				"ERC20Basic": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "who",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "to",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {},
						"title": "ERC20Basic\r"
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"_totalSupply()": "3eaaf86b",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {}
					}
				},
				"Ownable": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "ownable",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"ownable()": {
								"details": "The Ownable constructor sets the original `owner` of the contract to the sender\r account.\r"
							},
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.\r",
								"params": {
									"newOwner": "The address to transfer ownership to.\r"
								}
							}
						},
						"title": "Ownable\r"
					},
					"evm": {
						"assembly": "    /* \"contracts/Online/ERC20/TetherToken.sol\":1169:1921  contract Ownable {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/Online/ERC20/TetherToken.sol\":1169:1921  contract Ownable {\r... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1169:1921  contract Ownable {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      and(div(calldataload(0x0), 0x100000000000000000000000000000000000000000000000000000000), 0xffffffff)\n      0x8da5cb5b\n      dup2\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xb38854be\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1193:1213  address public owner */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_5\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_5:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1193:1213  address public owner */\n      pop\n      tag_6\n      jump(tag_7)\n    tag_6:\n      0x40\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1353:1416  function ownable() public {\r... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_8\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_8:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1353:1416  function ownable() public {\r... */\n      pop\n      tag_9\n      jump(tag_10)\n    tag_9:\n      stop\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1765:1916  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_11\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_11:\n      pop\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1765:1916  function transferOwnership(address newOwner) public onlyOwner {\r... */\n      tag_9\n      and(calldataload(0x4), 0xffffffffffffffffffffffffffffffffffffffff)\n      jump(tag_13)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1193:1213  address public owner */\n    tag_7:\n      and(0xffffffffffffffffffffffffffffffffffffffff, sload(0x0))\n      dup2\n      jump\t// out\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1353:1416  function ownable() public {\r... */\n    tag_10:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1390:1395  owner */\n      0x0\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1390:1408  owner = msg.sender */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1398:1408  msg.sender */\n      caller\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1390:1408  owner = msg.sender */\n      or\n      swap1\n      sstore\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1353:1416  function ownable() public {\r... */\n      jump\t// out\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1765:1916  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_13:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1565:1570  owner */\n      and(0xffffffffffffffffffffffffffffffffffffffff, sload(0x0))\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1551:1561  msg.sender */\n      caller\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1551:1570  msg.sender == owner */\n      eq\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1543:1571  require(msg.sender == owner) */\n      tag_16\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_16:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1842:1864  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n      iszero\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1838:1909  if (newOwner != address(0)) {\r... */\n      tag_18\n      jumpi\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1881:1886  owner */\n      0x0\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1881:1897  owner = newOwner */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1838:1909  if (newOwner != address(0)) {\r... */\n    tag_18:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1765:1916  function transferOwnership(address newOwner) public onlyOwner {\r... */\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a723058209627146a820843135200dab0ddb51eb77e1acd75eb5b9f73d98482525964b49f0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506101c0806100206000396000f3006080604052600436106100565763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416638da5cb5b811461005b578063b38854be14610099578063f2fde38b146100b0575b600080fd5b34801561006757600080fd5b506100706100de565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b3480156100a557600080fd5b506100ae6100fa565b005b3480156100bc57600080fd5b506100ae73ffffffffffffffffffffffffffffffffffffffff6004351661011b565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b6000805473ffffffffffffffffffffffffffffffffffffffff191633179055565b60005473ffffffffffffffffffffffffffffffffffffffff16331461013f57600080fd5b73ffffffffffffffffffffffffffffffffffffffff811615610191576000805473ffffffffffffffffffffffffffffffffffffffff191673ffffffffffffffffffffffffffffffffffffffff83161790555b505600a165627a7a723058209627146a820843135200dab0ddb51eb77e1acd75eb5b9f73d98482525964b49f0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C0 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x56 JUMPI PUSH4 0xFFFFFFFF PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x8DA5CB5B DUP2 EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0xB38854BE EQ PUSH2 0x99 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xB0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x70 PUSH2 0xDE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAE PUSH2 0xFA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD AND PUSH2 0x11B JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND CALLER OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x13F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO PUSH2 0x191 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND OR SWAP1 SSTORE JUMPDEST POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 SWAP7 0x27 EQ PUSH11 0x820843135200DAB0DDB51E 0xb7 PUSH31 0x1ACD75EB5B9F73D98482525964B49F00290000000000000000000000000000 ",
							"sourceMap": "1169:752:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1169:752:0;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600436106100565763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416638da5cb5b811461005b578063b38854be14610099578063f2fde38b146100b0575b600080fd5b34801561006757600080fd5b506100706100de565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b3480156100a557600080fd5b506100ae6100fa565b005b3480156100bc57600080fd5b506100ae73ffffffffffffffffffffffffffffffffffffffff6004351661011b565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b6000805473ffffffffffffffffffffffffffffffffffffffff191633179055565b60005473ffffffffffffffffffffffffffffffffffffffff16331461013f57600080fd5b73ffffffffffffffffffffffffffffffffffffffff811615610191576000805473ffffffffffffffffffffffffffffffffffffffff191673ffffffffffffffffffffffffffffffffffffffff83161790555b505600a165627a7a723058209627146a820843135200dab0ddb51eb77e1acd75eb5b9f73d98482525964b49f0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x56 JUMPI PUSH4 0xFFFFFFFF PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x8DA5CB5B DUP2 EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0xB38854BE EQ PUSH2 0x99 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xB0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x70 PUSH2 0xDE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAE PUSH2 0xFA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD AND PUSH2 0x11B JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND CALLER OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x13F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO PUSH2 0x191 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND OR SWAP1 SSTORE JUMPDEST POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 SWAP7 0x27 EQ PUSH11 0x820843135200DAB0DDB51E 0xb7 PUSH31 0x1ACD75EB5B9F73D98482525964B49F00290000000000000000000000000000 ",
							"sourceMap": "1169:752:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1193:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1193:20:0;;;;;;;;;;;;;;;;;;;;;;;1353:63;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1353:63:0;;;;;;1765:151;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1765:151:0;;;;;;;1193:20;;;;;;:::o;1353:63::-;1390:5;:18;;-1:-1:-1;;1390:18:0;1398:10;1390:18;;;1353:63::o;1765:151::-;1565:5;;;;1551:10;:19;1543:28;;;;;;1842:22;;;;1838:71;;1881:5;:16;;-1:-1:-1;;1881:16:0;;;;;;;1838:71;1765:151;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "89600",
								"executionCost": "135",
								"totalCost": "89735"
							},
							"external": {
								"ownable()": "20375",
								"owner()": "399",
								"transferOwnership(address)": "20672"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1169,
									"end": 1921,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 1169,
									"end": 1921,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1169,
									"end": 1921,
									"name": "MSTORE"
								},
								{
									"begin": 1169,
									"end": 1921,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 1169,
									"end": 1921,
									"name": "POP"
								},
								{
									"begin": 1169,
									"end": 1921,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1169,
									"end": 1921,
									"name": "DUP1"
								},
								{
									"begin": 1169,
									"end": 1921,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1169,
									"end": 1921,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1169,
									"end": 1921,
									"name": "CODECOPY"
								},
								{
									"begin": 1169,
									"end": 1921,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1169,
									"end": 1921,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a723058209627146a820843135200dab0ddb51eb77e1acd75eb5b9f73d98482525964b49f0029",
									".code": [
										{
											"begin": 1169,
											"end": 1921,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 1169,
											"end": 1921,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1169,
											"end": 1921,
											"name": "MSTORE"
										},
										{
											"begin": 1169,
											"end": 1921,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1169,
											"end": 1921,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1169,
											"end": 1921,
											"name": "LT"
										},
										{
											"begin": 1169,
											"end": 1921,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 1169,
											"end": 1921,
											"name": "JUMPI"
										},
										{
											"begin": 1169,
											"end": 1921,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1169,
											"end": 1921,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1169,
											"end": 1921,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1169,
											"end": 1921,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1169,
											"end": 1921,
											"name": "DIV"
										},
										{
											"begin": 1169,
											"end": 1921,
											"name": "AND"
										},
										{
											"begin": 1169,
											"end": 1921,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 1169,
											"end": 1921,
											"name": "DUP2"
										},
										{
											"begin": 1169,
											"end": 1921,
											"name": "EQ"
										},
										{
											"begin": 1169,
											"end": 1921,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 1169,
											"end": 1921,
											"name": "JUMPI"
										},
										{
											"begin": 1169,
											"end": 1921,
											"name": "DUP1"
										},
										{
											"begin": 1169,
											"end": 1921,
											"name": "PUSH",
											"value": "B38854BE"
										},
										{
											"begin": 1169,
											"end": 1921,
											"name": "EQ"
										},
										{
											"begin": 1169,
											"end": 1921,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 1169,
											"end": 1921,
											"name": "JUMPI"
										},
										{
											"begin": 1169,
											"end": 1921,
											"name": "DUP1"
										},
										{
											"begin": 1169,
											"end": 1921,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 1169,
											"end": 1921,
											"name": "EQ"
										},
										{
											"begin": 1169,
											"end": 1921,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 1169,
											"end": 1921,
											"name": "JUMPI"
										},
										{
											"begin": 1169,
											"end": 1921,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 1169,
											"end": 1921,
											"name": "JUMPDEST"
										},
										{
											"begin": 1169,
											"end": 1921,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1169,
											"end": 1921,
											"name": "DUP1"
										},
										{
											"begin": 1169,
											"end": 1921,
											"name": "REVERT"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "JUMPDEST"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "POP"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "JUMP"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "JUMPDEST"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "DUP1"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "MLOAD"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "SWAP1"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "SWAP3"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "AND"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "DUP3"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "MSTORE"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "MLOAD"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "SWAP1"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "DUP2"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "SWAP1"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "SUB"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "ADD"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "SWAP1"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "RETURN"
										},
										{
											"begin": 1353,
											"end": 1416,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 1353,
											"end": 1416,
											"name": "JUMPDEST"
										},
										{
											"begin": 1353,
											"end": 1416,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1353,
											"end": 1416,
											"name": "POP"
										},
										{
											"begin": 1353,
											"end": 1416,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 1353,
											"end": 1416,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 1353,
											"end": 1416,
											"name": "JUMP"
										},
										{
											"begin": 1353,
											"end": 1416,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 1353,
											"end": 1416,
											"name": "JUMPDEST"
										},
										{
											"begin": 1353,
											"end": 1416,
											"name": "STOP"
										},
										{
											"begin": 1765,
											"end": 1916,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 1765,
											"end": 1916,
											"name": "JUMPDEST"
										},
										{
											"begin": 1765,
											"end": 1916,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1765,
											"end": 1916,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 1765,
											"end": 1916,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1765,
											"end": 1916,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1765,
											"end": 1916,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1765,
											"end": 1916,
											"name": "AND"
										},
										{
											"begin": 1765,
											"end": 1916,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 1765,
											"end": 1916,
											"name": "JUMP"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "JUMPDEST"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "SLOAD"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "AND"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "DUP2"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1353,
											"end": 1416,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 1353,
											"end": 1416,
											"name": "JUMPDEST"
										},
										{
											"begin": 1390,
											"end": 1395,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1390,
											"end": 1408,
											"name": "DUP1"
										},
										{
											"begin": 1390,
											"end": 1408,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 1390,
											"end": 1408,
											"name": "AND"
										},
										{
											"begin": 1398,
											"end": 1408,
											"name": "CALLER"
										},
										{
											"begin": 1390,
											"end": 1408,
											"name": "OR"
										},
										{
											"begin": 1390,
											"end": 1408,
											"name": "SWAP1"
										},
										{
											"begin": 1390,
											"end": 1408,
											"name": "SSTORE"
										},
										{
											"begin": 1353,
											"end": 1416,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1765,
											"end": 1916,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 1765,
											"end": 1916,
											"name": "JUMPDEST"
										},
										{
											"begin": 1565,
											"end": 1570,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1565,
											"end": 1570,
											"name": "SLOAD"
										},
										{
											"begin": 1565,
											"end": 1570,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1565,
											"end": 1570,
											"name": "AND"
										},
										{
											"begin": 1551,
											"end": 1561,
											"name": "CALLER"
										},
										{
											"begin": 1551,
											"end": 1570,
											"name": "EQ"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "JUMPI"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "DUP1"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "REVERT"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "JUMPDEST"
										},
										{
											"begin": 1842,
											"end": 1864,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1842,
											"end": 1864,
											"name": "DUP2"
										},
										{
											"begin": 1842,
											"end": 1864,
											"name": "AND"
										},
										{
											"begin": 1842,
											"end": 1864,
											"name": "ISZERO"
										},
										{
											"begin": 1838,
											"end": 1909,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 1838,
											"end": 1909,
											"name": "JUMPI"
										},
										{
											"begin": 1881,
											"end": 1886,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1881,
											"end": 1897,
											"name": "DUP1"
										},
										{
											"begin": 1881,
											"end": 1897,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 1881,
											"end": 1897,
											"name": "AND"
										},
										{
											"begin": 1881,
											"end": 1897,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1881,
											"end": 1897,
											"name": "DUP4"
										},
										{
											"begin": 1881,
											"end": 1897,
											"name": "AND"
										},
										{
											"begin": 1881,
											"end": 1897,
											"name": "OR"
										},
										{
											"begin": 1881,
											"end": 1897,
											"name": "SWAP1"
										},
										{
											"begin": 1881,
											"end": 1897,
											"name": "SSTORE"
										},
										{
											"begin": 1838,
											"end": 1909,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 1838,
											"end": 1909,
											"name": "JUMPDEST"
										},
										{
											"begin": 1765,
											"end": 1916,
											"name": "POP"
										},
										{
											"begin": 1765,
											"end": 1916,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"ownable()": "b38854be",
							"owner()": "8da5cb5b",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"ownable\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"ownable()\":{\"details\":\"The Ownable constructor sets the original `owner` of the contract to the sender\\r account.\\r\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\\r\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\\r\"}}},\"title\":\"Ownable\\r\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/Online/ERC20/TetherToken.sol\":\"Ownable\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Online/ERC20/TetherToken.sol\":{\"keccak256\":\"0x1be4c35b4a2fe43aa8634352b33338e83e01c821ce429b205acfd0c573367fac\",\"urls\":[\"bzzr://e4b62ea0df615e3876e2e264b43942fada818008cadc1ae4530c2fcca01199a5\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"Pausable": {
					"abi": [
						{
							"constant": false,
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "ownable",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Pause",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Unpause",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"ownable()": {
								"details": "The Ownable constructor sets the original `owner` of the contract to the sender\r account.\r"
							},
							"pause()": {
								"details": "called by the owner to pause, triggers stopped state\r"
							},
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.\r",
								"params": {
									"newOwner": "The address to transfer ownership to.\r"
								}
							},
							"unpause()": {
								"details": "called by the owner to unpause, returns to normal state\r"
							}
						},
						"title": "Pausable\r"
					},
					"evm": {
						"assembly": "    /* \"contracts/Online/ERC20/TetherToken.sol\":7522:8313  contract Pausable is Ownable {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Online/ERC20/TetherToken.sol\":7617:7622  false */\n  0x0\n    /* \"contracts/Online/ERC20/TetherToken.sol\":7596:7622  bool public paused = false */\n  dup1\n  sload\n  not(mul(0xff, exp(0x2, 0xa0)))\n  and\n  swap1\n  sstore\n    /* \"contracts/Online/ERC20/TetherToken.sol\":7522:8313  contract Pausable is Ownable {\r... */\n  callvalue\n    /* \"--CODEGEN--\":5:7   */\n  dup1\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/Online/ERC20/TetherToken.sol\":7522:8313  contract Pausable is Ownable {\r... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Online/ERC20/TetherToken.sol\":7522:8313  contract Pausable is Ownable {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      and(div(calldataload(0x0), 0x100000000000000000000000000000000000000000000000000000000), 0xffffffff)\n      0x3f4ba83a\n      dup2\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xb38854be\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8216:8310  function unpause() onlyOwner whenPaused public {\r... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_8\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_8:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8216:8310  function unpause() onlyOwner whenPaused public {\r... */\n      pop\n      tag_9\n      jump(tag_10)\n    tag_9:\n      stop\n        /* \"contracts/Online/ERC20/TetherToken.sol\":7596:7622  bool public paused = false */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_11\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_11:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":7596:7622  bool public paused = false */\n      pop\n      tag_12\n      jump(tag_13)\n    tag_12:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8037:8129  function pause() onlyOwner whenNotPaused public {\r... */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_14\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_14:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8037:8129  function pause() onlyOwner whenNotPaused public {\r... */\n      pop\n      tag_9\n      jump(tag_16)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1193:1213  address public owner */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_17\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_17:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1193:1213  address public owner */\n      pop\n      tag_18\n      jump(tag_19)\n    tag_18:\n      0x40\n      dup1\n      mload\n      sub(exp(0x2, 0xa0), 0x1)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1353:1416  function ownable() public {\r... */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_20\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_20:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1353:1416  function ownable() public {\r... */\n      pop\n      tag_9\n      jump(tag_22)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1765:1916  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_7:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_23\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_23:\n      pop\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1765:1916  function transferOwnership(address newOwner) public onlyOwner {\r... */\n      tag_9\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      jump(tag_25)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8216:8310  function unpause() onlyOwner whenPaused public {\r... */\n    tag_10:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1565:1570  owner */\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x0))\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1551:1561  msg.sender */\n      caller\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1551:1570  msg.sender == owner */\n      eq\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1543:1571  require(msg.sender == owner) */\n      tag_27\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_27:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":7932:7938  paused */\n      sload(0x0)\n      0x10000000000000000000000000000000000000000\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Online/ERC20/TetherToken.sol\":7924:7939  require(paused) */\n      iszero\n      iszero\n      tag_29\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_29:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8279:8284  false */\n      0x0\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8270:8284  paused = false */\n      dup1\n      sload\n      not(0xff0000000000000000000000000000000000000000)\n      and\n      dup2\n      sstore\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8295:8304  Unpause() */\n      mload(0x40)\n      0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33\n      swap2\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8279:8284  false */\n      swap1\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8295:8304  Unpause() */\n      log1\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8216:8310  function unpause() onlyOwner whenPaused public {\r... */\n      jump\t// out\n        /* \"contracts/Online/ERC20/TetherToken.sol\":7596:7622  bool public paused = false */\n    tag_13:\n      sload(0x0)\n      0x10000000000000000000000000000000000000000\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8037:8129  function pause() onlyOwner whenNotPaused public {\r... */\n    tag_16:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1565:1570  owner */\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x0))\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1551:1561  msg.sender */\n      caller\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1551:1570  msg.sender == owner */\n      eq\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1543:1571  require(msg.sender == owner) */\n      tag_32\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_32:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":7772:7778  paused */\n      sload(0x0)\n      0x10000000000000000000000000000000000000000\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Online/ERC20/TetherToken.sol\":7771:7778  !paused */\n      iszero\n        /* \"contracts/Online/ERC20/TetherToken.sol\":7763:7779  require(!paused) */\n      tag_34\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_34:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8092:8098  paused */\n      0x0\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8092:8105  paused = true */\n      dup1\n      sload\n      not(0xff0000000000000000000000000000000000000000)\n      and\n      0x10000000000000000000000000000000000000000\n      or\n      dup2\n      sstore\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8116:8123  Pause() */\n      mload(0x40)\n      0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625\n      swap2\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8092:8098  paused */\n      swap1\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8116:8123  Pause() */\n      log1\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8037:8129  function pause() onlyOwner whenNotPaused public {\r... */\n      jump\t// out\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1193:1213  address public owner */\n    tag_19:\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x0))\n      dup2\n      jump\t// out\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1353:1416  function ownable() public {\r... */\n    tag_22:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1390:1395  owner */\n      0x0\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1390:1408  owner = msg.sender */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1398:1408  msg.sender */\n      caller\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1390:1408  owner = msg.sender */\n      or\n      swap1\n      sstore\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1353:1416  function ownable() public {\r... */\n      jump\t// out\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1765:1916  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_25:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1565:1570  owner */\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x0))\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1551:1561  msg.sender */\n      caller\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1551:1570  msg.sender == owner */\n      eq\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1543:1571  require(msg.sender == owner) */\n      tag_38\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_38:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1842:1864  newOwner != address(0) */\n      dup2\n      and\n      iszero\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1838:1909  if (newOwner != address(0)) {\r... */\n      tag_40\n      jumpi\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1881:1886  owner */\n      0x0\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1881:1897  owner = newOwner */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      and\n      sub(exp(0x2, 0xa0), 0x1)\n      dup4\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1838:1909  if (newOwner != address(0)) {\r... */\n    tag_40:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1765:1916  function transferOwnership(address newOwner) public onlyOwner {\r... */\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820d6fee4d0786b7863f8040968f9154fea7e989469a3b20479940ab7f8aed6d06a0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040526000805460a060020a60ff021916905534801561002057600080fd5b5061032b806100306000396000f3006080604052600436106100775763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416633f4ba83a811461007c5780635c975abb146100935780638456cb59146100bc5780638da5cb5b146100d1578063b38854be14610102578063f2fde38b14610117575b600080fd5b34801561008857600080fd5b50610091610138565b005b34801561009f57600080fd5b506100a86101bf565b604080519115158252519081900360200190f35b3480156100c857600080fd5b506100916101e0565b3480156100dd57600080fd5b506100e661027d565b60408051600160a060020a039092168252519081900360200190f35b34801561010e57600080fd5b5061009161028c565b34801561012357600080fd5b50610091600160a060020a03600435166102ad565b600054600160a060020a0316331461014f57600080fd5b60005474010000000000000000000000000000000000000000900460ff16151561017857600080fd5b6000805474ff0000000000000000000000000000000000000000191681556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b339190a1565b60005474010000000000000000000000000000000000000000900460ff1681565b600054600160a060020a031633146101f757600080fd5b60005474010000000000000000000000000000000000000000900460ff161561021f57600080fd5b6000805474ff00000000000000000000000000000000000000001916740100000000000000000000000000000000000000001781556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff6259190a1565b600054600160a060020a031681565b6000805473ffffffffffffffffffffffffffffffffffffffff191633179055565b600054600160a060020a031633146102c457600080fd5b600160a060020a038116156102fc576000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b505600a165627a7a72305820d6fee4d0786b7863f8040968f9154fea7e989469a3b20479940ab7f8aed6d06a0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP PUSH1 0xFF MUL NOT AND SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32B DUP1 PUSH2 0x30 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x77 JUMPI PUSH4 0xFFFFFFFF PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x3F4BA83A DUP2 EQ PUSH2 0x7C JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x93 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0xB38854BE EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x117 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x91 PUSH2 0x138 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA8 PUSH2 0x1BF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x91 PUSH2 0x1E0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE6 PUSH2 0x27D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x91 PUSH2 0x28C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x123 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x91 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x2AD JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x14F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH21 0xFF0000000000000000000000000000000000000000 NOT AND DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33 SWAP2 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x1F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x21F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH21 0xFF0000000000000000000000000000000000000000 NOT AND PUSH21 0x10000000000000000000000000000000000000000 OR DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625 SWAP2 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND CALLER OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x2C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND ISZERO PUSH2 0x2FC JUMPI PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND OR SWAP1 SSTORE JUMPDEST POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xd6 INVALID 0xe4 0xd0 PUSH25 0x6B7863F8040968F9154FEA7E989469A3B20479940AB7F8AED6 0xd0 PUSH11 0x29000000000000000000 ",
							"sourceMap": "7522:791:0:-;;;7617:5;7596:26;;-1:-1:-1;;;;;;7596:26:0;;;7522:791;5:2:-1;;;;30:1;27;20:12;5:2;7522:791:0;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600436106100775763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416633f4ba83a811461007c5780635c975abb146100935780638456cb59146100bc5780638da5cb5b146100d1578063b38854be14610102578063f2fde38b14610117575b600080fd5b34801561008857600080fd5b50610091610138565b005b34801561009f57600080fd5b506100a86101bf565b604080519115158252519081900360200190f35b3480156100c857600080fd5b506100916101e0565b3480156100dd57600080fd5b506100e661027d565b60408051600160a060020a039092168252519081900360200190f35b34801561010e57600080fd5b5061009161028c565b34801561012357600080fd5b50610091600160a060020a03600435166102ad565b600054600160a060020a0316331461014f57600080fd5b60005474010000000000000000000000000000000000000000900460ff16151561017857600080fd5b6000805474ff0000000000000000000000000000000000000000191681556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b339190a1565b60005474010000000000000000000000000000000000000000900460ff1681565b600054600160a060020a031633146101f757600080fd5b60005474010000000000000000000000000000000000000000900460ff161561021f57600080fd5b6000805474ff00000000000000000000000000000000000000001916740100000000000000000000000000000000000000001781556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff6259190a1565b600054600160a060020a031681565b6000805473ffffffffffffffffffffffffffffffffffffffff191633179055565b600054600160a060020a031633146102c457600080fd5b600160a060020a038116156102fc576000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b505600a165627a7a72305820d6fee4d0786b7863f8040968f9154fea7e989469a3b20479940ab7f8aed6d06a0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x77 JUMPI PUSH4 0xFFFFFFFF PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x3F4BA83A DUP2 EQ PUSH2 0x7C JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x93 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0xB38854BE EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x117 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x91 PUSH2 0x138 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA8 PUSH2 0x1BF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x91 PUSH2 0x1E0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE6 PUSH2 0x27D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x91 PUSH2 0x28C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x123 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x91 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x2AD JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x14F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH21 0xFF0000000000000000000000000000000000000000 NOT AND DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33 SWAP2 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x1F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x21F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH21 0xFF0000000000000000000000000000000000000000 NOT AND PUSH21 0x10000000000000000000000000000000000000000 OR DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625 SWAP2 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND CALLER OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x2C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND ISZERO PUSH2 0x2FC JUMPI PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND OR SWAP1 SSTORE JUMPDEST POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xd6 INVALID 0xe4 0xd0 PUSH25 0x6B7863F8040968F9154FEA7E989469A3B20479940AB7F8AED6 0xd0 PUSH11 0x29000000000000000000 ",
							"sourceMap": "7522:791:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8216:94;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8216:94:0;;;;;;7596:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7596:26:0;;;;;;;;;;;;;;;;;;;;;;8037:92;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8037:92:0;;;;1193:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1193:20:0;;;;;;;;-1:-1:-1;;;;;1193:20:0;;;;;;;;;;;;;;1353:63;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1353:63:0;;;;1765:151;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1765:151:0;-1:-1:-1;;;;;1765:151:0;;;;;8216:94;1565:5;;-1:-1:-1;;;;;1565:5:0;1551:10;:19;1543:28;;;;;;7932:6;;;;;;;7924:15;;;;;;;;8279:5;8270:14;;-1:-1:-1;;8270:14:0;;;8295:9;;;;8279:5;8295:9;8216:94::o;7596:26::-;;;;;;;;;:::o;8037:92::-;1565:5;;-1:-1:-1;;;;;1565:5:0;1551:10;:19;1543:28;;;;;;7772:6;;;;;;;7771:7;7763:16;;;;;;8092:6;:13;;-1:-1:-1;;8092:13:0;;;;;8116:7;;;;8092:6;8116:7;8037:92::o;1193:20::-;;;-1:-1:-1;;;;;1193:20:0;;:::o;1353:63::-;1390:5;:18;;-1:-1:-1;;1390:18:0;1398:10;1390:18;;;1353:63::o;1765:151::-;1565:5;;-1:-1:-1;;;;;1565:5:0;1551:10;:19;1543:28;;;;;;-1:-1:-1;;;;;1842:22:0;;;1838:71;;1881:5;:16;;-1:-1:-1;;1881:16:0;-1:-1:-1;;;;;1881:16:0;;;;;1838:71;1765:151;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "162200",
								"executionCost": "20497",
								"totalCost": "182697"
							},
							"external": {
								"ownable()": "20441",
								"owner()": "603",
								"pause()": "21697",
								"paused()": "429",
								"transferOwnership(address)": "21014",
								"unpause()": "21650"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 7522,
									"end": 8313,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 7522,
									"end": 8313,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 7522,
									"end": 8313,
									"name": "MSTORE"
								},
								{
									"begin": 7617,
									"end": 7622,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 7596,
									"end": 7622,
									"name": "DUP1"
								},
								{
									"begin": 7596,
									"end": 7622,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MUL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 7596,
									"end": 7622,
									"name": "AND"
								},
								{
									"begin": 7596,
									"end": 7622,
									"name": "SWAP1"
								},
								{
									"begin": 7596,
									"end": 7622,
									"name": "SSTORE"
								},
								{
									"begin": 7522,
									"end": 8313,
									"name": "CALLVALUE"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 7522,
									"end": 8313,
									"name": "POP"
								},
								{
									"begin": 7522,
									"end": 8313,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7522,
									"end": 8313,
									"name": "DUP1"
								},
								{
									"begin": 7522,
									"end": 8313,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7522,
									"end": 8313,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 7522,
									"end": 8313,
									"name": "CODECOPY"
								},
								{
									"begin": 7522,
									"end": 8313,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 7522,
									"end": 8313,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820d6fee4d0786b7863f8040968f9154fea7e989469a3b20479940ab7f8aed6d06a0029",
									".code": [
										{
											"begin": 7522,
											"end": 8313,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 7522,
											"end": 8313,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7522,
											"end": 8313,
											"name": "MSTORE"
										},
										{
											"begin": 7522,
											"end": 8313,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7522,
											"end": 8313,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 7522,
											"end": 8313,
											"name": "LT"
										},
										{
											"begin": 7522,
											"end": 8313,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 7522,
											"end": 8313,
											"name": "JUMPI"
										},
										{
											"begin": 7522,
											"end": 8313,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7522,
											"end": 8313,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7522,
											"end": 8313,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7522,
											"end": 8313,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7522,
											"end": 8313,
											"name": "DIV"
										},
										{
											"begin": 7522,
											"end": 8313,
											"name": "AND"
										},
										{
											"begin": 7522,
											"end": 8313,
											"name": "PUSH",
											"value": "3F4BA83A"
										},
										{
											"begin": 7522,
											"end": 8313,
											"name": "DUP2"
										},
										{
											"begin": 7522,
											"end": 8313,
											"name": "EQ"
										},
										{
											"begin": 7522,
											"end": 8313,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 7522,
											"end": 8313,
											"name": "JUMPI"
										},
										{
											"begin": 7522,
											"end": 8313,
											"name": "DUP1"
										},
										{
											"begin": 7522,
											"end": 8313,
											"name": "PUSH",
											"value": "5C975ABB"
										},
										{
											"begin": 7522,
											"end": 8313,
											"name": "EQ"
										},
										{
											"begin": 7522,
											"end": 8313,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 7522,
											"end": 8313,
											"name": "JUMPI"
										},
										{
											"begin": 7522,
											"end": 8313,
											"name": "DUP1"
										},
										{
											"begin": 7522,
											"end": 8313,
											"name": "PUSH",
											"value": "8456CB59"
										},
										{
											"begin": 7522,
											"end": 8313,
											"name": "EQ"
										},
										{
											"begin": 7522,
											"end": 8313,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 7522,
											"end": 8313,
											"name": "JUMPI"
										},
										{
											"begin": 7522,
											"end": 8313,
											"name": "DUP1"
										},
										{
											"begin": 7522,
											"end": 8313,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 7522,
											"end": 8313,
											"name": "EQ"
										},
										{
											"begin": 7522,
											"end": 8313,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 7522,
											"end": 8313,
											"name": "JUMPI"
										},
										{
											"begin": 7522,
											"end": 8313,
											"name": "DUP1"
										},
										{
											"begin": 7522,
											"end": 8313,
											"name": "PUSH",
											"value": "B38854BE"
										},
										{
											"begin": 7522,
											"end": 8313,
											"name": "EQ"
										},
										{
											"begin": 7522,
											"end": 8313,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 7522,
											"end": 8313,
											"name": "JUMPI"
										},
										{
											"begin": 7522,
											"end": 8313,
											"name": "DUP1"
										},
										{
											"begin": 7522,
											"end": 8313,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 7522,
											"end": 8313,
											"name": "EQ"
										},
										{
											"begin": 7522,
											"end": 8313,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 7522,
											"end": 8313,
											"name": "JUMPI"
										},
										{
											"begin": 7522,
											"end": 8313,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 7522,
											"end": 8313,
											"name": "JUMPDEST"
										},
										{
											"begin": 7522,
											"end": 8313,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7522,
											"end": 8313,
											"name": "DUP1"
										},
										{
											"begin": 7522,
											"end": 8313,
											"name": "REVERT"
										},
										{
											"begin": 8216,
											"end": 8310,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 8216,
											"end": 8310,
											"name": "JUMPDEST"
										},
										{
											"begin": 8216,
											"end": 8310,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8216,
											"end": 8310,
											"name": "POP"
										},
										{
											"begin": 8216,
											"end": 8310,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 8216,
											"end": 8310,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 8216,
											"end": 8310,
											"name": "JUMP"
										},
										{
											"begin": 8216,
											"end": 8310,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 8216,
											"end": 8310,
											"name": "JUMPDEST"
										},
										{
											"begin": 8216,
											"end": 8310,
											"name": "STOP"
										},
										{
											"begin": 7596,
											"end": 7622,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 7596,
											"end": 7622,
											"name": "JUMPDEST"
										},
										{
											"begin": 7596,
											"end": 7622,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 7596,
											"end": 7622,
											"name": "POP"
										},
										{
											"begin": 7596,
											"end": 7622,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 7596,
											"end": 7622,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 7596,
											"end": 7622,
											"name": "JUMP"
										},
										{
											"begin": 7596,
											"end": 7622,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 7596,
											"end": 7622,
											"name": "JUMPDEST"
										},
										{
											"begin": 7596,
											"end": 7622,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7596,
											"end": 7622,
											"name": "DUP1"
										},
										{
											"begin": 7596,
											"end": 7622,
											"name": "MLOAD"
										},
										{
											"begin": 7596,
											"end": 7622,
											"name": "SWAP2"
										},
										{
											"begin": 7596,
											"end": 7622,
											"name": "ISZERO"
										},
										{
											"begin": 7596,
											"end": 7622,
											"name": "ISZERO"
										},
										{
											"begin": 7596,
											"end": 7622,
											"name": "DUP3"
										},
										{
											"begin": 7596,
											"end": 7622,
											"name": "MSTORE"
										},
										{
											"begin": 7596,
											"end": 7622,
											"name": "MLOAD"
										},
										{
											"begin": 7596,
											"end": 7622,
											"name": "SWAP1"
										},
										{
											"begin": 7596,
											"end": 7622,
											"name": "DUP2"
										},
										{
											"begin": 7596,
											"end": 7622,
											"name": "SWAP1"
										},
										{
											"begin": 7596,
											"end": 7622,
											"name": "SUB"
										},
										{
											"begin": 7596,
											"end": 7622,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7596,
											"end": 7622,
											"name": "ADD"
										},
										{
											"begin": 7596,
											"end": 7622,
											"name": "SWAP1"
										},
										{
											"begin": 7596,
											"end": 7622,
											"name": "RETURN"
										},
										{
											"begin": 8037,
											"end": 8129,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 8037,
											"end": 8129,
											"name": "JUMPDEST"
										},
										{
											"begin": 8037,
											"end": 8129,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8037,
											"end": 8129,
											"name": "POP"
										},
										{
											"begin": 8037,
											"end": 8129,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 8037,
											"end": 8129,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 8037,
											"end": 8129,
											"name": "JUMP"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "JUMPDEST"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "POP"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "JUMP"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "JUMPDEST"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "DUP1"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "SWAP1"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "SWAP3"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "AND"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "DUP3"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "MSTORE"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "MLOAD"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "SWAP1"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "DUP2"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "SWAP1"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "SUB"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "ADD"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "SWAP1"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "RETURN"
										},
										{
											"begin": 1353,
											"end": 1416,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 1353,
											"end": 1416,
											"name": "JUMPDEST"
										},
										{
											"begin": 1353,
											"end": 1416,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1353,
											"end": 1416,
											"name": "POP"
										},
										{
											"begin": 1353,
											"end": 1416,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 1353,
											"end": 1416,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 1353,
											"end": 1416,
											"name": "JUMP"
										},
										{
											"begin": 1765,
											"end": 1916,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 1765,
											"end": 1916,
											"name": "JUMPDEST"
										},
										{
											"begin": 1765,
											"end": 1916,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1765,
											"end": 1916,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1765,
											"end": 1916,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1765,
											"end": 1916,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1765,
											"end": 1916,
											"name": "AND"
										},
										{
											"begin": 1765,
											"end": 1916,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 1765,
											"end": 1916,
											"name": "JUMP"
										},
										{
											"begin": 8216,
											"end": 8310,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 8216,
											"end": 8310,
											"name": "JUMPDEST"
										},
										{
											"begin": 1565,
											"end": 1570,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1565,
											"end": 1570,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1565,
											"end": 1570,
											"name": "AND"
										},
										{
											"begin": 1551,
											"end": 1561,
											"name": "CALLER"
										},
										{
											"begin": 1551,
											"end": 1570,
											"name": "EQ"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "JUMPI"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "DUP1"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "REVERT"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "JUMPDEST"
										},
										{
											"begin": 7932,
											"end": 7938,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7932,
											"end": 7938,
											"name": "SLOAD"
										},
										{
											"begin": 7932,
											"end": 7938,
											"name": "PUSH",
											"value": "10000000000000000000000000000000000000000"
										},
										{
											"begin": 7932,
											"end": 7938,
											"name": "SWAP1"
										},
										{
											"begin": 7932,
											"end": 7938,
											"name": "DIV"
										},
										{
											"begin": 7932,
											"end": 7938,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 7932,
											"end": 7938,
											"name": "AND"
										},
										{
											"begin": 7924,
											"end": 7939,
											"name": "ISZERO"
										},
										{
											"begin": 7924,
											"end": 7939,
											"name": "ISZERO"
										},
										{
											"begin": 7924,
											"end": 7939,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 7924,
											"end": 7939,
											"name": "JUMPI"
										},
										{
											"begin": 7924,
											"end": 7939,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7924,
											"end": 7939,
											"name": "DUP1"
										},
										{
											"begin": 7924,
											"end": 7939,
											"name": "REVERT"
										},
										{
											"begin": 7924,
											"end": 7939,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 7924,
											"end": 7939,
											"name": "JUMPDEST"
										},
										{
											"begin": 8279,
											"end": 8284,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8270,
											"end": 8284,
											"name": "DUP1"
										},
										{
											"begin": 8270,
											"end": 8284,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FF0000000000000000000000000000000000000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 8270,
											"end": 8284,
											"name": "AND"
										},
										{
											"begin": 8270,
											"end": 8284,
											"name": "DUP2"
										},
										{
											"begin": 8270,
											"end": 8284,
											"name": "SSTORE"
										},
										{
											"begin": 8295,
											"end": 8304,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8295,
											"end": 8304,
											"name": "MLOAD"
										},
										{
											"begin": 8295,
											"end": 8304,
											"name": "PUSH",
											"value": "7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33"
										},
										{
											"begin": 8295,
											"end": 8304,
											"name": "SWAP2"
										},
										{
											"begin": 8279,
											"end": 8284,
											"name": "SWAP1"
										},
										{
											"begin": 8295,
											"end": 8304,
											"name": "LOG1"
										},
										{
											"begin": 8216,
											"end": 8310,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7596,
											"end": 7622,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 7596,
											"end": 7622,
											"name": "JUMPDEST"
										},
										{
											"begin": 7596,
											"end": 7622,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7596,
											"end": 7622,
											"name": "SLOAD"
										},
										{
											"begin": 7596,
											"end": 7622,
											"name": "PUSH",
											"value": "10000000000000000000000000000000000000000"
										},
										{
											"begin": 7596,
											"end": 7622,
											"name": "SWAP1"
										},
										{
											"begin": 7596,
											"end": 7622,
											"name": "DIV"
										},
										{
											"begin": 7596,
											"end": 7622,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 7596,
											"end": 7622,
											"name": "AND"
										},
										{
											"begin": 7596,
											"end": 7622,
											"name": "DUP2"
										},
										{
											"begin": 7596,
											"end": 7622,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8037,
											"end": 8129,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 8037,
											"end": 8129,
											"name": "JUMPDEST"
										},
										{
											"begin": 1565,
											"end": 1570,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1565,
											"end": 1570,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1565,
											"end": 1570,
											"name": "AND"
										},
										{
											"begin": 1551,
											"end": 1561,
											"name": "CALLER"
										},
										{
											"begin": 1551,
											"end": 1570,
											"name": "EQ"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "JUMPI"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "DUP1"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "REVERT"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "JUMPDEST"
										},
										{
											"begin": 7772,
											"end": 7778,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7772,
											"end": 7778,
											"name": "SLOAD"
										},
										{
											"begin": 7772,
											"end": 7778,
											"name": "PUSH",
											"value": "10000000000000000000000000000000000000000"
										},
										{
											"begin": 7772,
											"end": 7778,
											"name": "SWAP1"
										},
										{
											"begin": 7772,
											"end": 7778,
											"name": "DIV"
										},
										{
											"begin": 7772,
											"end": 7778,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 7772,
											"end": 7778,
											"name": "AND"
										},
										{
											"begin": 7771,
											"end": 7778,
											"name": "ISZERO"
										},
										{
											"begin": 7763,
											"end": 7779,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 7763,
											"end": 7779,
											"name": "JUMPI"
										},
										{
											"begin": 7763,
											"end": 7779,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7763,
											"end": 7779,
											"name": "DUP1"
										},
										{
											"begin": 7763,
											"end": 7779,
											"name": "REVERT"
										},
										{
											"begin": 7763,
											"end": 7779,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 7763,
											"end": 7779,
											"name": "JUMPDEST"
										},
										{
											"begin": 8092,
											"end": 8098,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8092,
											"end": 8105,
											"name": "DUP1"
										},
										{
											"begin": 8092,
											"end": 8105,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FF0000000000000000000000000000000000000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 8092,
											"end": 8105,
											"name": "AND"
										},
										{
											"begin": 8092,
											"end": 8105,
											"name": "PUSH",
											"value": "10000000000000000000000000000000000000000"
										},
										{
											"begin": 8092,
											"end": 8105,
											"name": "OR"
										},
										{
											"begin": 8092,
											"end": 8105,
											"name": "DUP2"
										},
										{
											"begin": 8092,
											"end": 8105,
											"name": "SSTORE"
										},
										{
											"begin": 8116,
											"end": 8123,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8116,
											"end": 8123,
											"name": "MLOAD"
										},
										{
											"begin": 8116,
											"end": 8123,
											"name": "PUSH",
											"value": "6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625"
										},
										{
											"begin": 8116,
											"end": 8123,
											"name": "SWAP2"
										},
										{
											"begin": 8092,
											"end": 8098,
											"name": "SWAP1"
										},
										{
											"begin": 8116,
											"end": 8123,
											"name": "LOG1"
										},
										{
											"begin": 8037,
											"end": 8129,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "JUMPDEST"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "AND"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "DUP2"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1353,
											"end": 1416,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 1353,
											"end": 1416,
											"name": "JUMPDEST"
										},
										{
											"begin": 1390,
											"end": 1395,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1390,
											"end": 1408,
											"name": "DUP1"
										},
										{
											"begin": 1390,
											"end": 1408,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 1390,
											"end": 1408,
											"name": "AND"
										},
										{
											"begin": 1398,
											"end": 1408,
											"name": "CALLER"
										},
										{
											"begin": 1390,
											"end": 1408,
											"name": "OR"
										},
										{
											"begin": 1390,
											"end": 1408,
											"name": "SWAP1"
										},
										{
											"begin": 1390,
											"end": 1408,
											"name": "SSTORE"
										},
										{
											"begin": 1353,
											"end": 1416,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1765,
											"end": 1916,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 1765,
											"end": 1916,
											"name": "JUMPDEST"
										},
										{
											"begin": 1565,
											"end": 1570,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1565,
											"end": 1570,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1565,
											"end": 1570,
											"name": "AND"
										},
										{
											"begin": 1551,
											"end": 1561,
											"name": "CALLER"
										},
										{
											"begin": 1551,
											"end": 1570,
											"name": "EQ"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "JUMPI"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "DUP1"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "REVERT"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1842,
											"end": 1864,
											"name": "DUP2"
										},
										{
											"begin": 1842,
											"end": 1864,
											"name": "AND"
										},
										{
											"begin": 1842,
											"end": 1864,
											"name": "ISZERO"
										},
										{
											"begin": 1838,
											"end": 1909,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 1838,
											"end": 1909,
											"name": "JUMPI"
										},
										{
											"begin": 1881,
											"end": 1886,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1881,
											"end": 1897,
											"name": "DUP1"
										},
										{
											"begin": 1881,
											"end": 1897,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 1881,
											"end": 1897,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1881,
											"end": 1897,
											"name": "DUP4"
										},
										{
											"begin": 1881,
											"end": 1897,
											"name": "AND"
										},
										{
											"begin": 1881,
											"end": 1897,
											"name": "OR"
										},
										{
											"begin": 1881,
											"end": 1897,
											"name": "SWAP1"
										},
										{
											"begin": 1881,
											"end": 1897,
											"name": "SSTORE"
										},
										{
											"begin": 1838,
											"end": 1909,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 1838,
											"end": 1909,
											"name": "JUMPDEST"
										},
										{
											"begin": 1765,
											"end": 1916,
											"name": "POP"
										},
										{
											"begin": 1765,
											"end": 1916,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"ownable()": "b38854be",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"ownable\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"ownable()\":{\"details\":\"The Ownable constructor sets the original `owner` of the contract to the sender\\r account.\\r\"},\"pause()\":{\"details\":\"called by the owner to pause, triggers stopped state\\r\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\\r\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\\r\"}},\"unpause()\":{\"details\":\"called by the owner to unpause, returns to normal state\\r\"}},\"title\":\"Pausable\\r\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/Online/ERC20/TetherToken.sol\":\"Pausable\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Online/ERC20/TetherToken.sol\":{\"keccak256\":\"0x1be4c35b4a2fe43aa8634352b33338e83e01c821ce429b205acfd0c573367fac\",\"urls\":[\"bzzr://e4b62ea0df615e3876e2e264b43942fada818008cadc1ae4530c2fcca01199a5\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"methods": {},
						"title": "SafeMath\r"
					},
					"evm": {
						"assembly": "    /* \"contracts/Online/ERC20/TetherToken.sol\":153:970  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0xb\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":252:259   */\n  dup1\n    /* \"--CODEGEN--\":246:260   */\n  mload\n    /* \"--CODEGEN--\":243:244   */\n  0x0\n    /* \"--CODEGEN--\":238:261   */\n  byte\n    /* \"--CODEGEN--\":232:236   */\n  0x73\n    /* \"--CODEGEN--\":229:262   */\n  eq\n    /* \"--CODEGEN--\":270:271   */\n  0x0\n    /* \"--CODEGEN--\":265:285   */\n  dup2\n  eq\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":222:285   */\n  jump(tag_1)\n    /* \"--CODEGEN--\":265:285   */\ntag_2:\n    /* \"--CODEGEN--\":274:283   */\n  invalid\n    /* \"--CODEGEN--\":222:285   */\ntag_1:\n  pop\n    /* \"--CODEGEN--\":298:307   */\n  address\n    /* \"--CODEGEN--\":295:296   */\n  0x0\n    /* \"--CODEGEN--\":288:308   */\n  mstore\n    /* \"--CODEGEN--\":328:332   */\n  0x73\n    /* \"--CODEGEN--\":319:326   */\n  dup2\n    /* \"--CODEGEN--\":311:333   */\n  mstore8\n    /* \"--CODEGEN--\":352:359   */\n  dup3\n    /* \"--CODEGEN--\":343:350   */\n  dup2\n    /* \"--CODEGEN--\":336:360   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Online/ERC20/TetherToken.sol\":153:970  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x0\n      dup1\n      revert\n\n    auxdata: 0xa165627a7a723058201777e8f7d7097e6a098b5554067e97c78c8c68a8aa8791f66e643c54497e04880029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "604c602c600b82828239805160001a60731460008114601c57601e565bfe5b5030600052607381538281f30073000000000000000000000000000000000000000030146080604052600080fd00a165627a7a723058201777e8f7d7097e6a098b5554067e97c78c8c68a8aa8791f66e643c54497e04880029",
							"opcodes": "PUSH1 0x4C PUSH1 0x2C PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x0 DUP2 EQ PUSH1 0x1C JUMPI PUSH1 0x1E JUMP JUMPDEST INVALID JUMPDEST POP ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN STOP PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 OR PUSH24 0xE8F7D7097E6A098B5554067E97C78C8C68A8AA8791F66E64 EXTCODECOPY SLOAD 0x49 PUSH31 0x4880029000000000000000000000000000000000000000000000000000000 ",
							"sourceMap": "153:817:0:-;;132:2:-1;166:7;155:9;146:7;137:37;252:7;246:14;243:1;238:23;232:4;229:33;270:1;265:20;;;;222:63;;265:20;274:9;222:63;;298:9;295:1;288:20;328:4;319:7;311:22;352:7;343;336:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fd00a165627a7a723058201777e8f7d7097e6a098b5554067e97c78c8c68a8aa8791f66e643c54497e04880029",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 OR PUSH24 0xE8F7D7097E6A098B5554067E97C78C8C68A8AA8791F66E64 EXTCODECOPY SLOAD 0x49 PUSH31 0x4880029000000000000000000000000000000000000000000000000000000 ",
							"sourceMap": "153:817:0:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "15200",
								"executionCost": "116",
								"totalCost": "15316"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 153,
									"end": 970,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 153,
									"end": 970,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 252,
									"end": 259,
									"name": "DUP1"
								},
								{
									"begin": 246,
									"end": 260,
									"name": "MLOAD"
								},
								{
									"begin": 243,
									"end": 244,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 238,
									"end": 261,
									"name": "BYTE"
								},
								{
									"begin": 232,
									"end": 236,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 229,
									"end": 262,
									"name": "EQ"
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "DUP2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "EQ"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "JUMPI"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "JUMP"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "JUMPDEST"
								},
								{
									"begin": 274,
									"end": 283,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "JUMPDEST"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "POP"
								},
								{
									"begin": 298,
									"end": 307,
									"name": "ADDRESS"
								},
								{
									"begin": 295,
									"end": 296,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 288,
									"end": 308,
									"name": "MSTORE"
								},
								{
									"begin": 328,
									"end": 332,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 319,
									"end": 326,
									"name": "DUP2"
								},
								{
									"begin": 311,
									"end": 333,
									"name": "MSTORE8"
								},
								{
									"begin": 352,
									"end": 359,
									"name": "DUP3"
								},
								{
									"begin": 343,
									"end": 350,
									"name": "DUP2"
								},
								{
									"begin": 336,
									"end": 360,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a723058201777e8f7d7097e6a098b5554067e97c78c8c68a8aa8791f66e643c54497e04880029",
									".code": [
										{
											"begin": 153,
											"end": 970,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 153,
											"end": 970,
											"name": "ADDRESS"
										},
										{
											"begin": 153,
											"end": 970,
											"name": "EQ"
										},
										{
											"begin": 153,
											"end": 970,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 153,
											"end": 970,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 153,
											"end": 970,
											"name": "MSTORE"
										},
										{
											"begin": 153,
											"end": 970,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 153,
											"end": 970,
											"name": "DUP1"
										},
										{
											"begin": 153,
											"end": 970,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{},\"title\":\"SafeMath\\r\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/Online/ERC20/TetherToken.sol\":\"SafeMath\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Online/ERC20/TetherToken.sol\":{\"keccak256\":\"0x1be4c35b4a2fe43aa8634352b33338e83e01c821ce429b205acfd0c573367fac\",\"urls\":[\"bzzr://e4b62ea0df615e3876e2e264b43942fada818008cadc1ae4530c2fcca01199a5\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"StandardToken": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "_spender",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_from",
									"type": "address"
								},
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "balances",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "maximumFee",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								},
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "allowed",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "balance",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "ownable",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_owner",
									"type": "address"
								},
								{
									"name": "_spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"name": "remaining",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "basisPointsRate",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MAX_UINT",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "Function to check the amount of tokens than an owner allowed to a spender.\r",
								"params": {
									"_owner": "address The address which owns the funds.\r",
									"_spender": "address The address which will spend the funds.\r"
								},
								"return": "A uint specifying the amount of tokens still available for the spender.\r"
							},
							"approve(address,uint256)": {
								"details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\r",
								"params": {
									"_spender": "The address which will spend the funds.\r",
									"_value": "The amount of tokens to be spent.\r"
								}
							},
							"balanceOf(address)": {
								"details": "Gets the balance of the specified address.\r",
								"params": {
									"_owner": "The address to query the the balance of.\r"
								},
								"return": "An uint representing the amount owned by the passed address.\r"
							},
							"ownable()": {
								"details": "The Ownable constructor sets the original `owner` of the contract to the sender\r account.\r"
							},
							"transfer(address,uint256)": {
								"details": "transfer token for a specified address\r",
								"params": {
									"_to": "The address to transfer to.\r",
									"_value": "The amount to be transferred.\r"
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfer tokens from one address to another\r",
								"params": {
									"_from": "address The address which you want to send tokens from\r",
									"_to": "address The address which you want to transfer to\r",
									"_value": "uint the amount of tokens to be transferred\r"
								}
							},
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.\r",
								"params": {
									"newOwner": "The address to transfer ownership to.\r"
								}
							}
						},
						"title": "Standard ERC20 token\r "
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"MAX_UINT()": "e5b5019a",
							"_totalSupply()": "3eaaf86b",
							"allowance(address,address)": "dd62ed3e",
							"allowed(address,address)": "5c658165",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"balances(address)": "27e235e3",
							"basisPointsRate()": "dd644f72",
							"maximumFee()": "35390714",
							"ownable()": "b38854be",
							"owner()": "8da5cb5b",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {}
					}
				},
				"TetherToken": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_upgradedAddress",
									"type": "address"
								}
							],
							"name": "deprecate",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_spender",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "deprecated",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_evilUser",
									"type": "address"
								}
							],
							"name": "addBlackList",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_from",
									"type": "address"
								},
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "upgradedAddress",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "balances",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "maximumFee",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_maker",
									"type": "address"
								}
							],
							"name": "getBlackListStatus",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								},
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "allowed",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "who",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "ownable",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newBasisPoints",
									"type": "uint256"
								},
								{
									"name": "newMaxFee",
									"type": "uint256"
								}
							],
							"name": "setParams",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "issue",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "redeem",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_owner",
									"type": "address"
								},
								{
									"name": "_spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"name": "remaining",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "basisPointsRate",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "isBlackListed",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_clearedUser",
									"type": "address"
								}
							],
							"name": "removeBlackList",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MAX_UINT",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_blackListedUser",
									"type": "address"
								}
							],
							"name": "destroyBlackFunds",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"name": "_initialSupply",
									"type": "uint256"
								},
								{
									"name": "_name",
									"type": "string"
								},
								{
									"name": "_symbol",
									"type": "string"
								},
								{
									"name": "_decimals",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Issue",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Redeem",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "Deprecate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "feeBasisPoints",
									"type": "uint256"
								},
								{
									"indexed": false,
									"name": "maxFee",
									"type": "uint256"
								}
							],
							"name": "Params",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "_blackListedUser",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "_balance",
									"type": "uint256"
								}
							],
							"name": "DestroyedBlackFunds",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "_user",
									"type": "address"
								}
							],
							"name": "AddedBlackList",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "_user",
									"type": "address"
								}
							],
							"name": "RemovedBlackList",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Pause",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Unpause",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"ownable()": {
								"details": "The Ownable constructor sets the original `owner` of the contract to the sender\r account.\r"
							},
							"pause()": {
								"details": "called by the owner to pause, triggers stopped state\r"
							},
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.\r",
								"params": {
									"newOwner": "The address to transfer ownership to.\r"
								}
							},
							"unpause()": {
								"details": "called by the owner to unpause, returns to normal state\r"
							}
						}
					},
					"evm": {
						"assembly": "    /* \"contracts/Online/ERC20/TetherToken.sol\":10044:14976  contract TetherToken is Pausable, StandardToken, BlackList {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Online/ERC20/TetherToken.sol\":7617:7622  false */\n  0x0\n    /* \"contracts/Online/ERC20/TetherToken.sol\":7596:7622  bool public paused = false */\n  dup1\n  sload\n  not(mul(0xff, exp(0x2, 0xa0)))\n  and\n  dup2\n  sstore\n    /* \"contracts/Online/ERC20/TetherToken.sol\":3110:3141  uint public basisPointsRate = 0 */\n  0x3\n  dup2\n  swap1\n  sstore\n    /* \"contracts/Online/ERC20/TetherToken.sol\":3148:3174  uint public maximumFee = 0 */\n  0x4\n  sstore\n    /* \"contracts/Online/ERC20/TetherToken.sol\":10554:10850  function TetherToken(uint _initialSupply, string _name, string _symbol, uint _decimals) public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":5:7   */\n  dup1\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/Online/ERC20/TetherToken.sol\":10554:10850  function TetherToken(uint _initialSupply, string _name, string _symbol, uint _decimals) public {\r... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  swap1\n  dup2\n  mstore\n  dup2\n  mload\n  0x20\n  dup1\n  dup5\n  add\n  mload\n  swap3\n  dup5\n  add\n  mload\n  0x60\n  dup6\n  add\n  mload\n    /* \"contracts/Online/ERC20/TetherToken.sol\":10660:10672  _totalSupply */\n  0x1\n    /* \"contracts/Online/ERC20/TetherToken.sol\":10660:10689  _totalSupply = _initialSupply */\n  dup5\n  swap1\n  sstore\n    /* \"contracts/Online/ERC20/TetherToken.sol\":10554:10850  function TetherToken(uint _initialSupply, string _name, string _symbol, uint _decimals) public {\r... */\n  swap4\n  dup6\n  add\n    /* \"contracts/Online/ERC20/TetherToken.sol\":10700:10712  name = _name */\n  dup1\n  mload\n    /* \"contracts/Online/ERC20/TetherToken.sol\":10554:10850  function TetherToken(uint _initialSupply, string _name, string _symbol, uint _decimals) public {\r... */\n  swap4\n  swap6\n  swap1\n  swap5\n  swap2\n  add\n  swap3\n  swap1\n  swap2\n    /* \"contracts/Online/ERC20/TetherToken.sol\":10700:10712  name = _name */\n  tag_4\n  swap2\n    /* \"contracts/Online/ERC20/TetherToken.sol\":10700:10704  name */\n  0x7\n  swap2\n    /* \"contracts/Online/ERC20/TetherToken.sol\":10700:10712  name = _name */\n  dup7\n  add\n  swap1\n  jump\t// in(tag_5)\ntag_4:\n  pop\n    /* \"contracts/Online/ERC20/TetherToken.sol\":10723:10739  symbol = _symbol */\n  dup2\n  mload\n  tag_6\n  swap1\n    /* \"contracts/Online/ERC20/TetherToken.sol\":10723:10729  symbol */\n  0x8\n  swap1\n    /* \"contracts/Online/ERC20/TetherToken.sol\":10723:10739  symbol = _symbol */\n  0x20\n  dup6\n  add\n  swap1\n  jump\t// in(tag_5)\ntag_6:\n  pop\n    /* \"contracts/Online/ERC20/TetherToken.sol\":10750:10758  decimals */\n  0x9\n    /* \"contracts/Online/ERC20/TetherToken.sol\":10750:10770  decimals = _decimals */\n  sstore\n  pop\n  pop\n    /* \"contracts/Online/ERC20/TetherToken.sol\":10781:10796  balances[owner] */\n  0x0\n    /* \"contracts/Online/ERC20/TetherToken.sol\":10790:10795  owner */\n  dup1\n  sload\n  sub(exp(0x2, 0xa0), 0x1)\n  and\n    /* \"contracts/Online/ERC20/TetherToken.sol\":10781:10796  balances[owner] */\n  dup2\n  mstore\n    /* \"contracts/Online/ERC20/TetherToken.sol\":10781:10789  balances */\n  0x2\n    /* \"contracts/Online/ERC20/TetherToken.sol\":10781:10796  balances[owner] */\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"contracts/Online/ERC20/TetherToken.sol\":10781:10813  balances[owner] = _initialSupply */\n  sstore\n    /* \"contracts/Online/ERC20/TetherToken.sol\":10824:10834  deprecated */\n  0xa\n    /* \"contracts/Online/ERC20/TetherToken.sol\":10824:10842  deprecated = false */\n  dup1\n  sload\n  not(mul(0xff, exp(0x2, 0xa0)))\n  and\n  swap1\n  sstore\n    /* \"contracts/Online/ERC20/TetherToken.sol\":10044:14976  contract TetherToken is Pausable, StandardToken, BlackList {\r... */\n  jump(tag_7)\ntag_5:\n  dup3\n  dup1\n  sload\n  0x1\n  dup2\n  0x1\n  and\n  iszero\n  0x100\n  mul\n  sub\n  and\n  0x2\n  swap1\n  div\n  swap1\n  0x0\n  mstore\n  keccak256(0x0, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_9\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_11)\ntag_9:\n  dup3\n  dup1\n  add\n  0x1\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_11\n  jumpi\n  swap2\n  dup3\n  add\ntag_10:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_11\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x1\n  add\n  swap1\n  jump(tag_10)\ntag_11:\n  pop\n  tag_12\n  swap3\n  swap2\n  pop\n  jump\t// in(tag_13)\ntag_12:\n  pop\n  swap1\n  jump\t// out\ntag_13:\n  tag_14\n  swap2\n  swap1\ntag_15:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_12\n  jumpi\n  0x0\n  dup2\n  sstore\n  0x1\n  add\n  jump(tag_15)\ntag_14:\n  swap1\n  jump\t// out\ntag_7:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Online/ERC20/TetherToken.sol\":10044:14976  contract TetherToken is Pausable, StandardToken, BlackList {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      and(div(calldataload(0x0), 0x100000000000000000000000000000000000000000000000000000000), 0xffffffff)\n      0x6fdde03\n      dup2\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x753c30c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x95ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xe136b19\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xecb93c0\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x26976e3f\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x27e235e3\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x35390714\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x3eaaf86b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x59bf1abe\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x5c658165\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x893d20e8\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xb38854be\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xc0324c77\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xcc872b66\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xdb006a75\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xdd644f72\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xe47d6060\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xe4997dc5\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xe5b5019a\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xf3bdc228\n      eq\n      tag_34\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"contracts/Online/ERC20/TetherToken.sol\":10112:10130  string public name */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_35\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_35:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":10112:10130  string public name */\n      pop\n      tag_36\n      jump(tag_37)\n    tag_36:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_38:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_39\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_38)\n    tag_39:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/Online/ERC20/TetherToken.sol\":10112:10130  string public name */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_41\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x1\n      dup4\n      0x20\n      sub\n      0x100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_41:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Online/ERC20/TetherToken.sol\":12868:13054  function deprecate(address _upgradedAddress) public onlyOwner {\r... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_42\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_42:\n      pop\n        /* \"contracts/Online/ERC20/TetherToken.sol\":12868:13054  function deprecate(address _upgradedAddress) public onlyOwner {\r... */\n      tag_43\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      jump(tag_44)\n    tag_43:\n      stop\n        /* \"contracts/Online/ERC20/TetherToken.sol\":12122:12424  function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\r... */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_45\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_45:\n      pop\n        /* \"contracts/Online/ERC20/TetherToken.sol\":12122:12424  function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\r... */\n      tag_43\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      calldataload(0x24)\n      jump(tag_47)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":10228:10250  bool public deprecated */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_48\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_48:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":10228:10250  bool public deprecated */\n      pop\n      tag_49\n      jump(tag_50)\n    tag_49:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8774:8923  function addBlackList (address _evilUser) public onlyOwner {\r... */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_51\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_51:\n      pop\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8774:8923  function addBlackList (address _evilUser) public onlyOwner {\r... */\n      tag_43\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      jump(tag_53)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":13120:13338  function totalSupply() public constant returns (uint) {\r... */\n    tag_7:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_54\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_54:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":13120:13338  function totalSupply() public constant returns (uint) {\r... */\n      pop\n      tag_55\n      jump(tag_56)\n    tag_55:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11346:11708  function transferFrom(address _from, address _to, uint _value) public whenNotPaused {\r... */\n    tag_8:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_57\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_57:\n      pop\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11346:11708  function transferFrom(address _from, address _to, uint _value) public whenNotPaused {\r... */\n      tag_43\n      sub(exp(0x2, 0xa0), 0x1)\n      calldataload(0x4)\n      dup2\n      and\n      swap1\n      calldataload(0x24)\n      and\n      calldataload(0x44)\n      jump(tag_59)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":10191:10221  address public upgradedAddress */\n    tag_9:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_60\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_60:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":10191:10221  address public upgradedAddress */\n      pop\n      tag_61\n      jump(tag_62)\n    tag_61:\n      0x40\n      dup1\n      mload\n      sub(exp(0x2, 0xa0), 0x1)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/Online/ERC20/TetherToken.sol\":2982:3022  mapping(address => uint) public balances */\n    tag_10:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_63\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_63:\n      pop\n        /* \"contracts/Online/ERC20/TetherToken.sol\":2982:3022  mapping(address => uint) public balances */\n      tag_55\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      jump(tag_65)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":10164:10184  uint public decimals */\n    tag_11:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_66\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_66:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":10164:10184  uint public decimals */\n      pop\n      tag_55\n      jump(tag_68)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3148:3174  uint public maximumFee = 0 */\n    tag_12:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_69\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_69:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3148:3174  uint public maximumFee = 0 */\n      pop\n      tag_55\n      jump(tag_71)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":2084:2108  uint public _totalSupply */\n    tag_13:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_72\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_72:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":2084:2108  uint public _totalSupply */\n      pop\n      tag_55\n      jump(tag_74)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8216:8310  function unpause() onlyOwner whenPaused public {\r... */\n    tag_14:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_75\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_75:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8216:8310  function unpause() onlyOwner whenPaused public {\r... */\n      pop\n      tag_43\n      jump(tag_77)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8488:8612  function getBlackListStatus(address _maker) external constant returns (bool) {\r... */\n    tag_15:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_78\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_78:\n      pop\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8488:8612  function getBlackListStatus(address _maker) external constant returns (bool) {\r... */\n      tag_49\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      jump(tag_80)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":4782:4843  mapping (address => mapping (address => uint)) public allowed */\n    tag_16:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_81\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_81:\n      pop\n        /* \"contracts/Online/ERC20/TetherToken.sol\":4782:4843  mapping (address => mapping (address => uint)) public allowed */\n      tag_55\n      sub(exp(0x2, 0xa0), 0x1)\n      calldataload(0x4)\n      dup2\n      and\n      swap1\n      calldataload(0x24)\n      and\n      jump(tag_83)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":7596:7622  bool public paused = false */\n    tag_17:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_84\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_84:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":7596:7622  bool public paused = false */\n      pop\n      tag_49\n      jump(tag_86)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11793:12037  function balanceOf(address who) public constant returns (uint) {\r... */\n    tag_18:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_87\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_87:\n      pop\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11793:12037  function balanceOf(address who) public constant returns (uint) {\r... */\n      tag_55\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      jump(tag_89)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8037:8129  function pause() onlyOwner whenNotPaused public {\r... */\n    tag_19:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_90\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_90:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8037:8129  function pause() onlyOwner whenNotPaused public {\r... */\n      pop\n      tag_43\n      jump(tag_92)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8620:8707  function getOwner() external constant returns (address) {\r... */\n    tag_20:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_93\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_93:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8620:8707  function getOwner() external constant returns (address) {\r... */\n      pop\n      tag_61\n      jump(tag_95)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1193:1213  address public owner */\n    tag_21:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_96\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_96:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1193:1213  address public owner */\n      pop\n      tag_61\n      jump(tag_98)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":10137:10157  string public symbol */\n    tag_22:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_99\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_99:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":10137:10157  string public symbol */\n      pop\n      tag_36\n      jump(tag_101)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":10935:11261  function transfer(address _to, uint _value) public whenNotPaused {\r... */\n    tag_23:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_106\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_106:\n      pop\n        /* \"contracts/Online/ERC20/TetherToken.sol\":10935:11261  function transfer(address _to, uint _value) public whenNotPaused {\r... */\n      tag_43\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      calldataload(0x24)\n      jump(tag_108)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1353:1416  function ownable() public {\r... */\n    tag_24:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_109\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_109:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1353:1416  function ownable() public {\r... */\n      pop\n      tag_43\n      jump(tag_111)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":14249:14641  function setParams(uint newBasisPoints, uint newMaxFee) public onlyOwner {\r... */\n    tag_25:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_112\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_112:\n      pop\n        /* \"contracts/Online/ERC20/TetherToken.sol\":14249:14641  function setParams(uint newBasisPoints, uint newMaxFee) public onlyOwner {\r... */\n      tag_43\n      calldataload(0x4)\n      calldataload(0x24)\n      jump(tag_114)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":13502:13768  function issue(uint amount) public onlyOwner {\r... */\n    tag_26:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_115\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_115:\n      pop\n        /* \"contracts/Online/ERC20/TetherToken.sol\":13502:13768  function issue(uint amount) public onlyOwner {\r... */\n      tag_43\n      calldataload(0x4)\n      jump(tag_117)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":13999:14241  function redeem(uint amount) public onlyOwner {\r... */\n    tag_27:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_118\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_118:\n      pop\n        /* \"contracts/Online/ERC20/TetherToken.sol\":13999:14241  function redeem(uint amount) public onlyOwner {\r... */\n      tag_43\n      calldataload(0x4)\n      jump(tag_120)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":12509:12802  function allowance(address _owner, address _spender) public constant returns (uint remaining) {\r... */\n    tag_28:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_121\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_121:\n      pop\n        /* \"contracts/Online/ERC20/TetherToken.sol\":12509:12802  function allowance(address _owner, address _spender) public constant returns (uint remaining) {\r... */\n      tag_55\n      sub(exp(0x2, 0xa0), 0x1)\n      calldataload(0x4)\n      dup2\n      and\n      swap1\n      calldataload(0x24)\n      and\n      jump(tag_123)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3110:3141  uint public basisPointsRate = 0 */\n    tag_29:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_124\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_124:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3110:3141  uint public basisPointsRate = 0 */\n      pop\n      tag_55\n      jump(tag_126)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8715:8761  mapping (address => bool) public isBlackListed */\n    tag_30:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_127\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_127:\n      pop\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8715:8761  mapping (address => bool) public isBlackListed */\n      tag_49\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      jump(tag_129)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8931:9095  function removeBlackList (address _clearedUser) public onlyOwner {\r... */\n    tag_31:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_130\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_130:\n      pop\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8931:9095  function removeBlackList (address _clearedUser) public onlyOwner {\r... */\n      tag_43\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      jump(tag_132)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":4852:4894  uint public constant MAX_UINT = 2**256 - 1 */\n    tag_32:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_133\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_133:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":4852:4894  uint public constant MAX_UINT = 2**256 - 1 */\n      pop\n      tag_55\n      jump(tag_135)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1765:1916  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_33:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_136\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_136:\n      pop\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1765:1916  function transferOwnership(address newOwner) public onlyOwner {\r... */\n      tag_43\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      jump(tag_138)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":9103:9432  function destroyBlackFunds (address _blackListedUser) public onlyOwner {\r... */\n    tag_34:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_139\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_139:\n      pop\n        /* \"contracts/Online/ERC20/TetherToken.sol\":9103:9432  function destroyBlackFunds (address _blackListedUser) public onlyOwner {\r... */\n      tag_43\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      jump(tag_141)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":10112:10130  string public name */\n    tag_37:\n      0x7\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x2\n      0x1\n      dup6\n      and\n      iszero\n      0x100\n      mul\n      not(0x0)\n      add\n      swap1\n      swap5\n      and\n      swap4\n      swap1\n      swap4\n      div\n      0x1f\n      dup2\n      add\n      dup5\n      swap1\n      div\n      dup5\n      mul\n      dup3\n      add\n      dup5\n      add\n      swap1\n      swap3\n      mstore\n      dup2\n      dup2\n      mstore\n      swap3\n      swap2\n      dup4\n      add\n      dup3\n      dup3\n      dup1\n      iszero\n      tag_142\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_143\n      jumpi\n      0x100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_142)\n    tag_143:\n      dup3\n      add\n      swap2\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap1\n    tag_144:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x1\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_144\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_142:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/Online/ERC20/TetherToken.sol\":12868:13054  function deprecate(address _upgradedAddress) public onlyOwner {\r... */\n    tag_44:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1565:1570  owner */\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x0))\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1551:1561  msg.sender */\n      caller\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1551:1570  msg.sender == owner */\n      eq\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1543:1571  require(msg.sender == owner) */\n      tag_146\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_146:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":12941:12951  deprecated */\n      0xa\n        /* \"contracts/Online/ERC20/TetherToken.sol\":12941:12958  deprecated = true */\n      dup1\n      sload\n      exp(0x2, 0xa0)\n      not(0xff0000000000000000000000000000000000000000)\n      swap1\n      swap2\n      and\n      or\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":12969:13003  upgradedAddress = _upgradedAddress */\n      and\n      sub(exp(0x2, 0xa0), 0x1)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/Online/ERC20/TetherToken.sol\":13019:13046  Deprecate(_upgradedAddress) */\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      0xcc358699805e9a8b7f77b522628c7cb9abd07d9efb86b6fb616af1609036a99e\n      swap2\n      0x20\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log1\n        /* \"contracts/Online/ERC20/TetherToken.sol\":12868:13054  function deprecate(address _upgradedAddress) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/Online/ERC20/TetherToken.sol\":12122:12424  function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\r... */\n    tag_47:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":12193:12199  2 * 32 */\n      0x40\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3327:3335  size + 4 */\n      0x44\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3309:3317  msg.data */\n      calldatasize\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3309:3335  msg.data.length < size + 4 */\n      lt\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3307:3336  !(msg.data.length < size + 4) */\n      iszero\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3299:3337  require(!(msg.data.length < size + 4)) */\n      tag_149\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_149:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":12216:12226  deprecated */\n      sload(0xa)\n      exp(0x2, 0xa0)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Online/ERC20/TetherToken.sol\":12212:12417  if (deprecated) {\r... */\n      iszero\n      tag_151\n      jumpi\n        /* \"contracts/Online/ERC20/TetherToken.sol\":12272:12287  upgradedAddress */\n      sload(0xa)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":12250:12334  UpgradedStandardToken(upgradedAddress).approveByLegacy(msg.sender, _spender, _value) */\n      0x40\n      dup1\n      mload\n      0xaee92d3300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/Online/ERC20/TetherToken.sol\":12305:12315  msg.sender */\n      caller\n        /* \"contracts/Online/ERC20/TetherToken.sol\":12250:12334  UpgradedStandardToken(upgradedAddress).approveByLegacy(msg.sender, _spender, _value) */\n      0x4\n      dup3\n      add\n      mstore\n      sub(exp(0x2, 0xa0), 0x1)\n      dup7\n      dup2\n      and\n      0x24\n      dup4\n      add\n      mstore\n      0x44\n      dup3\n      add\n      dup7\n      swap1\n      mstore\n      swap2\n      mload\n        /* \"contracts/Online/ERC20/TetherToken.sol\":12272:12287  upgradedAddress */\n      swap2\n      swap1\n      swap3\n      and\n      swap2\n        /* \"contracts/Online/ERC20/TetherToken.sol\":12250:12304  UpgradedStandardToken(upgradedAddress).approveByLegacy */\n      0xaee92d33\n      swap2\n        /* \"contracts/Online/ERC20/TetherToken.sol\":12250:12334  UpgradedStandardToken(upgradedAddress).approveByLegacy(msg.sender, _spender, _value) */\n      0x64\n      dup1\n      dup4\n      add\n      swap3\n        /* \"contracts/Online/ERC20/TetherToken.sol\":12272:12287  upgradedAddress */\n      0x0\n      swap3\n        /* \"contracts/Online/ERC20/TetherToken.sol\":12250:12334  UpgradedStandardToken(upgradedAddress).approveByLegacy(msg.sender, _spender, _value) */\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/Online/ERC20/TetherToken.sol\":12272:12287  upgradedAddress */\n      dup4\n      dup8\n        /* \"contracts/Online/ERC20/TetherToken.sol\":12250:12334  UpgradedStandardToken(upgradedAddress).approveByLegacy(msg.sender, _spender, _value) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_152\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_152:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":12250:12334  UpgradedStandardToken(upgradedAddress).approveByLegacy(msg.sender, _spender, _value) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_153\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_153:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":12250:12334  UpgradedStandardToken(upgradedAddress).approveByLegacy(msg.sender, _spender, _value) */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Online/ERC20/TetherToken.sol\":12243:12334  return UpgradedStandardToken(upgradedAddress).approveByLegacy(msg.sender, _spender, _value) */\n      jump(tag_155)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":12212:12417  if (deprecated) {\r... */\n    tag_151:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":12374:12405  super.approve(_spender, _value) */\n      tag_155\n        /* \"contracts/Online/ERC20/TetherToken.sol\":12388:12396  _spender */\n      dup4\n        /* \"contracts/Online/ERC20/TetherToken.sol\":12398:12404  _value */\n      dup4\n        /* \"contracts/Online/ERC20/TetherToken.sol\":12374:12387  super.approve */\n      tag_156\n        /* \"contracts/Online/ERC20/TetherToken.sol\":12374:12405  super.approve(_spender, _value) */\n      jump\t// in\n    tag_155:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":12122:12424  function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Online/ERC20/TetherToken.sol\":10228:10250  bool public deprecated */\n    tag_50:\n      sload(0xa)\n      exp(0x2, 0xa0)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8774:8923  function addBlackList (address _evilUser) public onlyOwner {\r... */\n    tag_53:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1565:1570  owner */\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x0))\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1551:1561  msg.sender */\n      caller\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1551:1570  msg.sender == owner */\n      eq\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1543:1571  require(msg.sender == owner) */\n      tag_158\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_158:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8844:8868  isBlackListed[_evilUser] */\n      dup2\n      and\n      0x0\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8844:8857  isBlackListed */\n      0x6\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8844:8868  isBlackListed[_evilUser] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8844:8875  isBlackListed[_evilUser] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8871:8875  true */\n      0x1\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8844:8875  isBlackListed[_evilUser] = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8890:8915  AddedBlackList(_evilUser) */\n      dup2\n      mload\n      swap3\n      dup4\n      mstore\n      swap1\n      mload\n      0x42e160154868087d6bfdc0ca23d96a1c1cfa32f1b72ba9ba27b69b98a0d819dc\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log1\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8774:8923  function addBlackList (address _evilUser) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/Online/ERC20/TetherToken.sol\":13120:13338  function totalSupply() public constant returns (uint) {\r... */\n    tag_56:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":13189:13199  deprecated */\n      sload(0xa)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":13168:13172  uint */\n      0x0\n      swap1\n      exp(0x2, 0xa0)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":13189:13199  deprecated */\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Online/ERC20/TetherToken.sol\":13185:13331  if (deprecated) {\r... */\n      iszero\n      tag_161\n      jumpi\n        /* \"contracts/Online/ERC20/TetherToken.sol\":13237:13252  upgradedAddress */\n      0xa\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      sub(exp(0x2, 0xa0), 0x1)\n      and\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":13223:13265  StandardToken(upgradedAddress).totalSupply */\n      and\n      0x18160ddd\n        /* \"contracts/Online/ERC20/TetherToken.sol\":13223:13267  StandardToken(upgradedAddress).totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_162\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_162:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":13223:13267  StandardToken(upgradedAddress).totalSupply() */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_163\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_163:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":13223:13267  StandardToken(upgradedAddress).totalSupply() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_164\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_164:\n      pop\n        /* \"contracts/Online/ERC20/TetherToken.sol\":13223:13267  StandardToken(upgradedAddress).totalSupply() */\n      mload\n      swap1\n      pop\n        /* \"contracts/Online/ERC20/TetherToken.sol\":13216:13267  return StandardToken(upgradedAddress).totalSupply() */\n      jump(tag_165)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":13185:13331  if (deprecated) {\r... */\n    tag_161:\n      pop\n        /* \"contracts/Online/ERC20/TetherToken.sol\":13307:13319  _totalSupply */\n      sload(0x1)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":13185:13331  if (deprecated) {\r... */\n    tag_165:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":13120:13338  function totalSupply() public constant returns (uint) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11346:11708  function transferFrom(address _from, address _to, uint _value) public whenNotPaused {\r... */\n    tag_59:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":7772:7778  paused */\n      sload(0x0)\n      exp(0x2, 0xa0)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Online/ERC20/TetherToken.sol\":7771:7778  !paused */\n      iszero\n        /* \"contracts/Online/ERC20/TetherToken.sol\":7763:7779  require(!paused) */\n      tag_167\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_167:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11450:11470  isBlackListed[_from] */\n      dup4\n      and\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11450:11463  isBlackListed */\n      0x6\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11450:11470  isBlackListed[_from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11449:11470  !isBlackListed[_from] */\n      iszero\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11441:11471  require(!isBlackListed[_from]) */\n      tag_169\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_169:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11486:11496  deprecated */\n      sload(0xa)\n      exp(0x2, 0xa0)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11482:11701  if (deprecated) {\r... */\n      iszero\n      tag_170\n      jumpi\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11542:11557  upgradedAddress */\n      sload(0xa)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11520:11611  UpgradedStandardToken(upgradedAddress).transferFromByLegacy(msg.sender, _from, _to, _value) */\n      0x40\n      dup1\n      mload\n      0x8b477adb00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11580:11590  msg.sender */\n      caller\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11520:11611  UpgradedStandardToken(upgradedAddress).transferFromByLegacy(msg.sender, _from, _to, _value) */\n      0x4\n      dup3\n      add\n      mstore\n      sub(exp(0x2, 0xa0), 0x1)\n      dup7\n      dup2\n      and\n      0x24\n      dup4\n      add\n      mstore\n      dup6\n      dup2\n      and\n      0x44\n      dup4\n      add\n      mstore\n      0x64\n      dup3\n      add\n      dup6\n      swap1\n      mstore\n      swap2\n      mload\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11542:11557  upgradedAddress */\n      swap2\n      swap1\n      swap3\n      and\n      swap2\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11520:11579  UpgradedStandardToken(upgradedAddress).transferFromByLegacy */\n      0x8b477adb\n      swap2\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11520:11611  UpgradedStandardToken(upgradedAddress).transferFromByLegacy(msg.sender, _from, _to, _value) */\n      0x84\n      dup1\n      dup4\n      add\n      swap3\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11542:11557  upgradedAddress */\n      0x0\n      swap3\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11520:11611  UpgradedStandardToken(upgradedAddress).transferFromByLegacy(msg.sender, _from, _to, _value) */\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11542:11557  upgradedAddress */\n      dup4\n      dup8\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11520:11611  UpgradedStandardToken(upgradedAddress).transferFromByLegacy(msg.sender, _from, _to, _value) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_152\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11482:11701  if (deprecated) {\r... */\n    tag_170:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11651:11689  super.transferFrom(_from, _to, _value) */\n      tag_155\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11670:11675  _from */\n      dup4\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11677:11680  _to */\n      dup4\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11682:11688  _value */\n      dup4\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11651:11669  super.transferFrom */\n      tag_175\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11651:11689  super.transferFrom(_from, _to, _value) */\n      jump\t// in\n        /* \"contracts/Online/ERC20/TetherToken.sol\":10191:10221  address public upgradedAddress */\n    tag_62:\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0xa))\n      dup2\n      jump\t// out\n        /* \"contracts/Online/ERC20/TetherToken.sol\":2982:3022  mapping(address => uint) public balances */\n    tag_65:\n      mstore(0x20, 0x2)\n      0x0\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/Online/ERC20/TetherToken.sol\":10164:10184  uint public decimals */\n    tag_68:\n      sload(0x9)\n      dup2\n      jump\t// out\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3148:3174  uint public maximumFee = 0 */\n    tag_71:\n      sload(0x4)\n      dup2\n      jump\t// out\n        /* \"contracts/Online/ERC20/TetherToken.sol\":2084:2108  uint public _totalSupply */\n    tag_74:\n      sload(0x1)\n      dup2\n      jump\t// out\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8216:8310  function unpause() onlyOwner whenPaused public {\r... */\n    tag_77:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1565:1570  owner */\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x0))\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1551:1561  msg.sender */\n      caller\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1551:1570  msg.sender == owner */\n      eq\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1543:1571  require(msg.sender == owner) */\n      tag_177\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_177:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":7932:7938  paused */\n      sload(0x0)\n      exp(0x2, 0xa0)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Online/ERC20/TetherToken.sol\":7924:7939  require(paused) */\n      iszero\n      iszero\n      tag_179\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_179:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8279:8284  false */\n      0x0\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8270:8284  paused = false */\n      dup1\n      sload\n      not(0xff0000000000000000000000000000000000000000)\n      and\n      dup2\n      sstore\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8295:8304  Unpause() */\n      mload(0x40)\n      0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33\n      swap2\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8279:8284  false */\n      swap1\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8295:8304  Unpause() */\n      log1\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8216:8310  function unpause() onlyOwner whenPaused public {\r... */\n      jump\t// out\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8488:8612  function getBlackListStatus(address _maker) external constant returns (bool) {\r... */\n    tag_80:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8583:8604  isBlackListed[_maker] */\n      dup2\n      and\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8559:8563  bool */\n      0x0\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8583:8604  isBlackListed[_maker] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8583:8596  isBlackListed */\n      0x6\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8583:8604  isBlackListed[_maker] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8488:8612  function getBlackListStatus(address _maker) external constant returns (bool) {\r... */\n    tag_181:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Online/ERC20/TetherToken.sol\":4782:4843  mapping (address => mapping (address => uint)) public allowed */\n    tag_83:\n      0x5\n      0x20\n      swap1\n      dup2\n      mstore\n      0x0\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/Online/ERC20/TetherToken.sol\":7596:7622  bool public paused = false */\n    tag_86:\n      sload(0x0)\n      exp(0x2, 0xa0)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11793:12037  function balanceOf(address who) public constant returns (uint) {\r... */\n    tag_89:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11871:11881  deprecated */\n      sload(0xa)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11850:11854  uint */\n      0x0\n      swap1\n      exp(0x2, 0xa0)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11871:11881  deprecated */\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11867:12030  if (deprecated) {\r... */\n      iszero\n      tag_183\n      jumpi\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11927:11942  upgradedAddress */\n      sload(0xa)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11905:11958  UpgradedStandardToken(upgradedAddress).balanceOf(who) */\n      0x40\n      dup1\n      mload\n      0x70a0823100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      sub(exp(0x2, 0xa0), 0x1)\n      dup6\n      dup2\n      and\n      0x4\n      dup4\n      add\n      mstore\n      swap2\n      mload\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11927:11942  upgradedAddress */\n      swap2\n      swap1\n      swap3\n      and\n      swap2\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11905:11953  UpgradedStandardToken(upgradedAddress).balanceOf */\n      0x70a08231\n      swap2\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11905:11958  UpgradedStandardToken(upgradedAddress).balanceOf(who) */\n      0x24\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11927:11942  upgradedAddress */\n      0x0\n      dup8\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11905:11958  UpgradedStandardToken(upgradedAddress).balanceOf(who) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_184\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_184:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11905:11958  UpgradedStandardToken(upgradedAddress).balanceOf(who) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_185\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_185:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11905:11958  UpgradedStandardToken(upgradedAddress).balanceOf(who) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_186\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_186:\n      pop\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11905:11958  UpgradedStandardToken(upgradedAddress).balanceOf(who) */\n      mload\n      swap1\n      pop\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11898:11958  return UpgradedStandardToken(upgradedAddress).balanceOf(who) */\n      jump(tag_181)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11867:12030  if (deprecated) {\r... */\n    tag_183:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11998:12018  super.balanceOf(who) */\n      tag_188\n        /* \"contracts/Online/ERC20/TetherToken.sol\":12014:12017  who */\n      dup3\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11998:12013  super.balanceOf */\n      tag_189\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11998:12018  super.balanceOf(who) */\n      jump\t// in\n    tag_188:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11991:12018  return super.balanceOf(who) */\n      swap1\n      pop\n      jump(tag_181)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8037:8129  function pause() onlyOwner whenNotPaused public {\r... */\n    tag_92:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1565:1570  owner */\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x0))\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1551:1561  msg.sender */\n      caller\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1551:1570  msg.sender == owner */\n      eq\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1543:1571  require(msg.sender == owner) */\n      tag_191\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_191:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":7772:7778  paused */\n      sload(0x0)\n      exp(0x2, 0xa0)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Online/ERC20/TetherToken.sol\":7771:7778  !paused */\n      iszero\n        /* \"contracts/Online/ERC20/TetherToken.sol\":7763:7779  require(!paused) */\n      tag_193\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_193:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8092:8098  paused */\n      0x0\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8092:8105  paused = true */\n      dup1\n      sload\n      not(0xff0000000000000000000000000000000000000000)\n      and\n      exp(0x2, 0xa0)\n      or\n      dup2\n      sstore\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8116:8123  Pause() */\n      mload(0x40)\n      0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625\n      swap2\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8092:8098  paused */\n      swap1\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8116:8123  Pause() */\n      log1\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8037:8129  function pause() onlyOwner whenNotPaused public {\r... */\n      jump\t// out\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8620:8707  function getOwner() external constant returns (address) {\r... */\n    tag_95:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8667:8674  address */\n      0x0\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8694:8699  owner */\n      sload\n      sub(exp(0x2, 0xa0), 0x1)\n      and\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8620:8707  function getOwner() external constant returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1193:1213  address public owner */\n    tag_98:\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x0))\n      dup2\n      jump\t// out\n        /* \"contracts/Online/ERC20/TetherToken.sol\":10137:10157  string public symbol */\n    tag_101:\n      0x8\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x2\n      0x1\n      dup6\n      and\n      iszero\n      0x100\n      mul\n      not(0x0)\n      add\n      swap1\n      swap5\n      and\n      swap4\n      swap1\n      swap4\n      div\n      0x1f\n      dup2\n      add\n      dup5\n      swap1\n      div\n      dup5\n      mul\n      dup3\n      add\n      dup5\n      add\n      swap1\n      swap3\n      mstore\n      dup2\n      dup2\n      mstore\n      swap3\n      swap2\n      dup4\n      add\n      dup3\n      dup3\n      dup1\n      iszero\n      tag_142\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_143\n      jumpi\n      0x100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_142)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":10935:11261  function transfer(address _to, uint _value) public whenNotPaused {\r... */\n    tag_108:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":7772:7778  paused */\n      sload(0x0)\n      exp(0x2, 0xa0)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Online/ERC20/TetherToken.sol\":7771:7778  !paused */\n      iszero\n        /* \"contracts/Online/ERC20/TetherToken.sol\":7763:7779  require(!paused) */\n      tag_200\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_200:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11034:11044  msg.sender */\n      caller\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11020:11045  isBlackListed[msg.sender] */\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11020:11033  isBlackListed */\n      0x6\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11020:11045  isBlackListed[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11019:11045  !isBlackListed[msg.sender] */\n      iszero\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11011:11046  require(!isBlackListed[msg.sender]) */\n      tag_202\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_202:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11061:11071  deprecated */\n      sload(0xa)\n      exp(0x2, 0xa0)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11057:11254  if (deprecated) {\r... */\n      iszero\n      tag_203\n      jumpi\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11117:11132  upgradedAddress */\n      sload(0xa)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11095:11175  UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value) */\n      0x40\n      dup1\n      mload\n      0x6e18980a00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11151:11161  msg.sender */\n      caller\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11095:11175  UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value) */\n      0x4\n      dup3\n      add\n      mstore\n      sub(exp(0x2, 0xa0), 0x1)\n      dup6\n      dup2\n      and\n      0x24\n      dup4\n      add\n      mstore\n      0x44\n      dup3\n      add\n      dup6\n      swap1\n      mstore\n      swap2\n      mload\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11117:11132  upgradedAddress */\n      swap2\n      swap1\n      swap3\n      and\n      swap2\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11095:11150  UpgradedStandardToken(upgradedAddress).transferByLegacy */\n      0x6e18980a\n      swap2\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11095:11175  UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value) */\n      0x64\n      dup1\n      dup4\n      add\n      swap3\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11117:11132  upgradedAddress */\n      0x0\n      swap3\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11095:11175  UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value) */\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11117:11132  upgradedAddress */\n      dup4\n      dup8\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11095:11175  UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_204\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_204:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11095:11175  UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_205\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_205:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11095:11175  UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value) */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11088:11175  return UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value) */\n      jump(tag_207)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11057:11254  if (deprecated) {\r... */\n    tag_203:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11215:11242  super.transfer(_to, _value) */\n      tag_207\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11230:11233  _to */\n      dup3\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11235:11241  _value */\n      dup3\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11215:11229  super.transfer */\n      tag_208\n        /* \"contracts/Online/ERC20/TetherToken.sol\":11215:11242  super.transfer(_to, _value) */\n      jump\t// in\n    tag_207:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":10935:11261  function transfer(address _to, uint _value) public whenNotPaused {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1353:1416  function ownable() public {\r... */\n    tag_111:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1390:1395  owner */\n      0x0\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1390:1408  owner = msg.sender */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1398:1408  msg.sender */\n      caller\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1390:1408  owner = msg.sender */\n      or\n      swap1\n      sstore\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1353:1416  function ownable() public {\r... */\n      jump\t// out\n        /* \"contracts/Online/ERC20/TetherToken.sol\":14249:14641  function setParams(uint newBasisPoints, uint newMaxFee) public onlyOwner {\r... */\n    tag_114:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1565:1570  owner */\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x0))\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1551:1561  msg.sender */\n      caller\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1551:1570  msg.sender == owner */\n      eq\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1543:1571  require(msg.sender == owner) */\n      tag_211\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_211:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":14447:14449  20 */\n      0x14\n        /* \"contracts/Online/ERC20/TetherToken.sol\":14430:14449  newBasisPoints < 20 */\n      dup3\n      lt\n        /* \"contracts/Online/ERC20/TetherToken.sol\":14422:14450  require(newBasisPoints < 20) */\n      tag_213\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_213:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":14481:14483  50 */\n      0x32\n        /* \"contracts/Online/ERC20/TetherToken.sol\":14469:14483  newMaxFee < 50 */\n      dup2\n      lt\n        /* \"contracts/Online/ERC20/TetherToken.sol\":14461:14484  require(newMaxFee < 50) */\n      tag_214\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_214:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":14497:14512  basisPointsRate */\n      0x3\n        /* \"contracts/Online/ERC20/TetherToken.sol\":14497:14529  basisPointsRate = newBasisPoints */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/Online/ERC20/TetherToken.sol\":14571:14579  decimals */\n      sload(0x9)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":14553:14580  newMaxFee.mul(10**decimals) */\n      tag_215\n      swap1\n        /* \"contracts/Online/ERC20/TetherToken.sol\":14553:14562  newMaxFee */\n      dup3\n      swap1\n        /* \"contracts/Online/ERC20/TetherToken.sol\":14567:14569  10 */\n      0xa\n        /* \"contracts/Online/ERC20/TetherToken.sol\":14567:14579  10**decimals */\n      exp\n        /* \"contracts/Online/ERC20/TetherToken.sol\":14553:14580  newMaxFee.mul(10**decimals) */\n      0xffffffff\n        /* \"contracts/Online/ERC20/TetherToken.sol\":14553:14566  newMaxFee.mul */\n      tag_216\n        /* \"contracts/Online/ERC20/TetherToken.sol\":14553:14580  newMaxFee.mul(10**decimals) */\n      and\n      jump\t// in\n    tag_215:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":14540:14550  maximumFee */\n      0x4\n        /* \"contracts/Online/ERC20/TetherToken.sol\":14540:14580  maximumFee = newMaxFee.mul(10**decimals) */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/Online/ERC20/TetherToken.sol\":14605:14620  basisPointsRate */\n      sload(0x3)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":14598:14633  Params(basisPointsRate, maximumFee) */\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      dup2\n      mload\n      0xb044a1e409eac5c48e5af22d4af52670dd1a99059537a78b31b48c6500a6354e\n      swap3\n      swap2\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log1\n        /* \"contracts/Online/ERC20/TetherToken.sol\":14249:14641  function setParams(uint newBasisPoints, uint newMaxFee) public onlyOwner {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Online/ERC20/TetherToken.sol\":13502:13768  function issue(uint amount) public onlyOwner {\r... */\n    tag_117:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1565:1570  owner */\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x0))\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1551:1561  msg.sender */\n      caller\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1551:1570  msg.sender == owner */\n      eq\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1543:1571  require(msg.sender == owner) */\n      tag_218\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_218:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":13590:13602  _totalSupply */\n      sload(0x1)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":13566:13587  _totalSupply + amount */\n      dup2\n      dup2\n      add\n        /* \"contracts/Online/ERC20/TetherToken.sol\":13566:13602  _totalSupply + amount > _totalSupply */\n      gt\n        /* \"contracts/Online/ERC20/TetherToken.sol\":13558:13603  require(_totalSupply + amount > _totalSupply) */\n      tag_220\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_220:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":13649:13664  balances[owner] */\n      0x0\n        /* \"contracts/Online/ERC20/TetherToken.sol\":13658:13663  owner */\n      dup1\n      sload\n      sub(exp(0x2, 0xa0), 0x1)\n      and\n        /* \"contracts/Online/ERC20/TetherToken.sol\":13649:13664  balances[owner] */\n      dup2\n      mstore\n        /* \"contracts/Online/ERC20/TetherToken.sol\":13649:13657  balances */\n      0x2\n        /* \"contracts/Online/ERC20/TetherToken.sol\":13649:13664  balances[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Online/ERC20/TetherToken.sol\":13622:13646  balances[owner] + amount */\n      dup2\n      dup2\n      add\n        /* \"contracts/Online/ERC20/TetherToken.sol\":13622:13664  balances[owner] + amount > balances[owner] */\n      gt\n        /* \"contracts/Online/ERC20/TetherToken.sol\":13614:13665  require(balances[owner] + amount > balances[owner]) */\n      tag_221\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_221:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":13678:13693  balances[owner] */\n      0x0\n        /* \"contracts/Online/ERC20/TetherToken.sol\":13687:13692  owner */\n      dup1\n      sload\n      sub(exp(0x2, 0xa0), 0x1)\n      and\n        /* \"contracts/Online/ERC20/TetherToken.sol\":13678:13693  balances[owner] */\n      dup2\n      mstore\n        /* \"contracts/Online/ERC20/TetherToken.sol\":13678:13686  balances */\n      0x2\n        /* \"contracts/Online/ERC20/TetherToken.sol\":13678:13693  balances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/Online/ERC20/TetherToken.sol\":13678:13703  balances[owner] += amount */\n      dup1\n      sload\n      dup5\n      add\n      swap1\n      sstore\n        /* \"contracts/Online/ERC20/TetherToken.sol\":13687:13692  owner */\n      0x1\n        /* \"contracts/Online/ERC20/TetherToken.sol\":13714:13736  _totalSupply += amount */\n      dup1\n      sload\n      dup5\n      add\n      swap1\n      sstore\n        /* \"contracts/Online/ERC20/TetherToken.sol\":13747:13760  Issue(amount) */\n      dup2\n      mload\n      dup4\n      dup2\n      mstore\n      swap2\n      mload\n      0xcb8241adb0c3fdb35b70c24ce35c5eb0c17af7431c99f827d44a445ca624176a\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log1\n        /* \"contracts/Online/ERC20/TetherToken.sol\":13502:13768  function issue(uint amount) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/Online/ERC20/TetherToken.sol\":13999:14241  function redeem(uint amount) public onlyOwner {\r... */\n    tag_120:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1565:1570  owner */\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x0))\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1551:1561  msg.sender */\n      caller\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1551:1570  msg.sender == owner */\n      eq\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1543:1571  require(msg.sender == owner) */\n      tag_223\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_223:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":14064:14076  _totalSupply */\n      sload(0x1)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":14064:14086  _totalSupply >= amount */\n      dup2\n      gt\n      iszero\n        /* \"contracts/Online/ERC20/TetherToken.sol\":14056:14087  require(_totalSupply >= amount) */\n      tag_225\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_225:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":14106:14121  balances[owner] */\n      0x0\n        /* \"contracts/Online/ERC20/TetherToken.sol\":14115:14120  owner */\n      dup1\n      sload\n      sub(exp(0x2, 0xa0), 0x1)\n      and\n        /* \"contracts/Online/ERC20/TetherToken.sol\":14106:14121  balances[owner] */\n      dup2\n      mstore\n        /* \"contracts/Online/ERC20/TetherToken.sol\":14106:14114  balances */\n      0x2\n        /* \"contracts/Online/ERC20/TetherToken.sol\":14106:14121  balances[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Online/ERC20/TetherToken.sol\":14106:14131  balances[owner] >= amount */\n      dup2\n      gt\n      iszero\n        /* \"contracts/Online/ERC20/TetherToken.sol\":14098:14132  require(balances[owner] >= amount) */\n      tag_226\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_226:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":14145:14157  _totalSupply */\n      0x1\n        /* \"contracts/Online/ERC20/TetherToken.sol\":14145:14167  _totalSupply -= amount */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"contracts/Online/ERC20/TetherToken.sol\":14145:14157  _totalSupply */\n      0x0\n        /* \"contracts/Online/ERC20/TetherToken.sol\":14187:14192  owner */\n      dup1\n      sload\n      sub(exp(0x2, 0xa0), 0x1)\n      and\n        /* \"contracts/Online/ERC20/TetherToken.sol\":14178:14193  balances[owner] */\n      dup2\n      mstore\n        /* \"contracts/Online/ERC20/TetherToken.sol\":14178:14186  balances */\n      0x2\n        /* \"contracts/Online/ERC20/TetherToken.sol\":14178:14193  balances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/Online/ERC20/TetherToken.sol\":14178:14203  balances[owner] -= amount */\n      dup1\n      sload\n      dup5\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"contracts/Online/ERC20/TetherToken.sol\":14219:14233  Redeem(amount) */\n      dup2\n      mload\n      dup4\n      dup2\n      mstore\n      swap2\n      mload\n      0x702d5967f45f6513a38ffc42d6ba9bf230bd40e8f53b16363c7eb4fd2deb9a44\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log1\n        /* \"contracts/Online/ERC20/TetherToken.sol\":13999:14241  function redeem(uint amount) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/Online/ERC20/TetherToken.sol\":12509:12802  function allowance(address _owner, address _spender) public constant returns (uint remaining) {\r... */\n    tag_123:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":12618:12628  deprecated */\n      sload(0xa)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":12587:12601  uint remaining */\n      0x0\n      swap1\n      exp(0x2, 0xa0)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":12618:12628  deprecated */\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Online/ERC20/TetherToken.sol\":12614:12795  if (deprecated) {\r... */\n      iszero\n      tag_228\n      jumpi\n        /* \"contracts/Online/ERC20/TetherToken.sol\":12666:12681  upgradedAddress */\n      sload(0xa)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":12652:12710  StandardToken(upgradedAddress).allowance(_owner, _spender) */\n      0x40\n      dup1\n      mload\n      0xdd62ed3e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      sub(exp(0x2, 0xa0), 0x1)\n      dup7\n      dup2\n      and\n      0x4\n      dup4\n      add\n      mstore\n      dup6\n      dup2\n      and\n      0x24\n      dup4\n      add\n      mstore\n      swap2\n      mload\n        /* \"contracts/Online/ERC20/TetherToken.sol\":12666:12681  upgradedAddress */\n      swap2\n      swap1\n      swap3\n      and\n      swap2\n        /* \"contracts/Online/ERC20/TetherToken.sol\":12652:12692  StandardToken(upgradedAddress).allowance */\n      0xdd62ed3e\n      swap2\n        /* \"contracts/Online/ERC20/TetherToken.sol\":12652:12710  StandardToken(upgradedAddress).allowance(_owner, _spender) */\n      0x44\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/Online/ERC20/TetherToken.sol\":12666:12681  upgradedAddress */\n      0x0\n      dup8\n        /* \"contracts/Online/ERC20/TetherToken.sol\":12652:12710  StandardToken(upgradedAddress).allowance(_owner, _spender) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_229\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_229:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":12652:12710  StandardToken(upgradedAddress).allowance(_owner, _spender) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_230\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_230:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":12652:12710  StandardToken(upgradedAddress).allowance(_owner, _spender) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_231\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_231:\n      pop\n        /* \"contracts/Online/ERC20/TetherToken.sol\":12652:12710  StandardToken(upgradedAddress).allowance(_owner, _spender) */\n      mload\n      swap1\n      pop\n        /* \"contracts/Online/ERC20/TetherToken.sol\":12645:12710  return StandardToken(upgradedAddress).allowance(_owner, _spender) */\n      jump(tag_232)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":12614:12795  if (deprecated) {\r... */\n    tag_228:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":12750:12783  super.allowance(_owner, _spender) */\n      tag_233\n        /* \"contracts/Online/ERC20/TetherToken.sol\":12766:12772  _owner */\n      dup4\n        /* \"contracts/Online/ERC20/TetherToken.sol\":12774:12782  _spender */\n      dup4\n        /* \"contracts/Online/ERC20/TetherToken.sol\":12750:12765  super.allowance */\n      tag_234\n        /* \"contracts/Online/ERC20/TetherToken.sol\":12750:12783  super.allowance(_owner, _spender) */\n      jump\t// in\n    tag_233:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":12743:12783  return super.allowance(_owner, _spender) */\n      swap1\n      pop\n        /* \"contracts/Online/ERC20/TetherToken.sol\":12614:12795  if (deprecated) {\r... */\n    tag_232:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":12509:12802  function allowance(address _owner, address _spender) public constant returns (uint remaining) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3110:3141  uint public basisPointsRate = 0 */\n    tag_126:\n      sload(0x3)\n      dup2\n      jump\t// out\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8715:8761  mapping (address => bool) public isBlackListed */\n    tag_129:\n      mstore(0x20, 0x6)\n      0x0\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8931:9095  function removeBlackList (address _clearedUser) public onlyOwner {\r... */\n    tag_132:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1565:1570  owner */\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x0))\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1551:1561  msg.sender */\n      caller\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1551:1570  msg.sender == owner */\n      eq\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1543:1571  require(msg.sender == owner) */\n      tag_236\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_236:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":9007:9034  isBlackListed[_clearedUser] */\n      dup2\n      and\n        /* \"contracts/Online/ERC20/TetherToken.sol\":9037:9042  false */\n      0x0\n        /* \"contracts/Online/ERC20/TetherToken.sol\":9007:9034  isBlackListed[_clearedUser] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Online/ERC20/TetherToken.sol\":9007:9020  isBlackListed */\n      0x6\n        /* \"contracts/Online/ERC20/TetherToken.sol\":9007:9034  isBlackListed[_clearedUser] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/Online/ERC20/TetherToken.sol\":9007:9042  isBlackListed[_clearedUser] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/Online/ERC20/TetherToken.sol\":9057:9087  RemovedBlackList(_clearedUser) */\n      dup2\n      mload\n      swap3\n      dup4\n      mstore\n      swap1\n      mload\n      0xd7e9ec6e6ecd65492dce6bf513cd6867560d49544421d0783ddf06e76c24470c\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log1\n        /* \"contracts/Online/ERC20/TetherToken.sol\":8931:9095  function removeBlackList (address _clearedUser) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/Online/ERC20/TetherToken.sol\":4852:4894  uint public constant MAX_UINT = 2**256 - 1 */\n    tag_135:\n      not(0x0)\n      dup2\n      jump\t// out\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1765:1916  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_138:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1565:1570  owner */\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x0))\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1551:1561  msg.sender */\n      caller\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1551:1570  msg.sender == owner */\n      eq\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1543:1571  require(msg.sender == owner) */\n      tag_239\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_239:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1842:1864  newOwner != address(0) */\n      dup2\n      and\n      iszero\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1838:1909  if (newOwner != address(0)) {\r... */\n      tag_241\n      jumpi\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1881:1886  owner */\n      0x0\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1881:1897  owner = newOwner */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      and\n      sub(exp(0x2, 0xa0), 0x1)\n      dup4\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1838:1909  if (newOwner != address(0)) {\r... */\n    tag_241:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1765:1916  function transferOwnership(address newOwner) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/Online/ERC20/TetherToken.sol\":9103:9432  function destroyBlackFunds (address _blackListedUser) public onlyOwner {\r... */\n    tag_141:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":9236:9251  uint dirtyFunds */\n      0x0\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1565:1570  owner */\n      dup1\n      sload\n      sub(exp(0x2, 0xa0), 0x1)\n      and\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1551:1561  msg.sender */\n      caller\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1551:1570  msg.sender == owner */\n      eq\n        /* \"contracts/Online/ERC20/TetherToken.sol\":1543:1571  require(msg.sender == owner) */\n      tag_243\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_243:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":9193:9224  isBlackListed[_blackListedUser] */\n      dup3\n      and\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Online/ERC20/TetherToken.sol\":9193:9206  isBlackListed */\n      0x6\n        /* \"contracts/Online/ERC20/TetherToken.sol\":9193:9224  isBlackListed[_blackListedUser] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/Online/ERC20/TetherToken.sol\":9185:9225  require(isBlackListed[_blackListedUser]) */\n      iszero\n      iszero\n      tag_245\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_245:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":9254:9281  balanceOf(_blackListedUser) */\n      tag_246\n        /* \"contracts/Online/ERC20/TetherToken.sol\":9264:9280  _blackListedUser */\n      dup3\n        /* \"contracts/Online/ERC20/TetherToken.sol\":9254:9263  balanceOf */\n      tag_89\n        /* \"contracts/Online/ERC20/TetherToken.sol\":9254:9281  balanceOf(_blackListedUser) */\n      jump\t// in\n    tag_246:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":9292:9318  balances[_blackListedUser] */\n      dup4\n      and\n        /* \"contracts/Online/ERC20/TetherToken.sol\":9321:9322  0 */\n      0x0\n        /* \"contracts/Online/ERC20/TetherToken.sol\":9292:9318  balances[_blackListedUser] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Online/ERC20/TetherToken.sol\":9292:9300  balances */\n      0x2\n        /* \"contracts/Online/ERC20/TetherToken.sol\":9292:9318  balances[_blackListedUser] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Online/ERC20/TetherToken.sol\":9292:9322  balances[_blackListedUser] = 0 */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"contracts/Online/ERC20/TetherToken.sol\":9333:9345  _totalSupply */\n      0x1\n        /* \"contracts/Online/ERC20/TetherToken.sol\":9333:9359  _totalSupply -= dirtyFunds */\n      dup1\n      sload\n      dup6\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"contracts/Online/ERC20/TetherToken.sol\":9375:9424  DestroyedBlackFunds(_blackListedUser, dirtyFunds) */\n      dup2\n      mload\n      swap3\n      dup4\n      mstore\n      dup3\n      add\n      dup4\n      swap1\n      mstore\n      dup1\n      mload\n        /* \"contracts/Online/ERC20/TetherToken.sol\":9236:9281  uint dirtyFunds = balanceOf(_blackListedUser) */\n      swap3\n      swap4\n      pop\n        /* \"contracts/Online/ERC20/TetherToken.sol\":9375:9424  DestroyedBlackFunds(_blackListedUser, dirtyFunds) */\n      0x61e6e66b0d6339b2980aecc6ccc0039736791f0ccde9ed512e789a7fbdd698c6\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log1\n        /* \"contracts/Online/ERC20/TetherToken.sol\":9103:9432  function destroyBlackFunds (address _blackListedUser) public onlyOwner {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Online/ERC20/TetherToken.sol\":6343:6916  function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\r... */\n    tag_156:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":6414:6420  2 * 32 */\n      0x40\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3327:3335  size + 4 */\n      0x44\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3309:3317  msg.data */\n      calldatasize\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3309:3335  msg.data.length < size + 4 */\n      lt\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3307:3336  !(msg.data.length < size + 4) */\n      iszero\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3299:3337  require(!(msg.data.length < size + 4)) */\n      tag_248\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_248:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":6754:6765  _value != 0 */\n      dup2\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"contracts/Online/ERC20/TetherToken.sol\":6753:6806  (_value != 0) && (allowed[msg.sender][_spender] != 0) */\n      tag_250\n      jumpi\n      pop\n        /* \"contracts/Online/ERC20/TetherToken.sol\":6779:6789  msg.sender */\n      caller\n        /* \"contracts/Online/ERC20/TetherToken.sol\":6771:6790  allowed[msg.sender] */\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Online/ERC20/TetherToken.sol\":6771:6778  allowed */\n      0x5\n        /* \"contracts/Online/ERC20/TetherToken.sol\":6771:6790  allowed[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":6771:6800  allowed[msg.sender][_spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Online/ERC20/TetherToken.sol\":6771:6805  allowed[msg.sender][_spender] != 0 */\n      iszero\n      iszero\n        /* \"contracts/Online/ERC20/TetherToken.sol\":6753:6806  (_value != 0) && (allowed[msg.sender][_spender] != 0) */\n    tag_250:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":6751:6807  !((_value != 0) && (allowed[msg.sender][_spender] != 0)) */\n      iszero\n        /* \"contracts/Online/ERC20/TetherToken.sol\":6743:6808  require(!((_value != 0) && (allowed[msg.sender][_spender] != 0))) */\n      tag_251\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_251:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":6829:6839  msg.sender */\n      caller\n        /* \"contracts/Online/ERC20/TetherToken.sol\":6821:6840  allowed[msg.sender] */\n      0x0\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Online/ERC20/TetherToken.sol\":6821:6828  allowed */\n      0x5\n        /* \"contracts/Online/ERC20/TetherToken.sol\":6821:6840  allowed[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":6821:6850  allowed[msg.sender][_spender] */\n      dup9\n      and\n      dup1\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/Online/ERC20/TetherToken.sol\":6821:6859  allowed[msg.sender][_spender] = _value */\n      dup7\n      swap1\n      sstore\n        /* \"contracts/Online/ERC20/TetherToken.sol\":6870:6908  Approval(msg.sender, _spender, _value) */\n      dup1\n      mload\n      dup7\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/Online/ERC20/TetherToken.sol\":6821:6850  allowed[msg.sender][_spender] */\n      swap3\n      swap4\n        /* \"contracts/Online/ERC20/TetherToken.sol\":6829:6839  msg.sender */\n      swap3\n        /* \"contracts/Online/ERC20/TetherToken.sol\":6870:6908  Approval(msg.sender, _spender, _value) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      swap2\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"contracts/Online/ERC20/TetherToken.sol\":6343:6916  function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5184:6096  function transferFrom(address _from, address _to, uint _value) public onlyPayloadSize(3 * 32) {\r... */\n    tag_175:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5289:5304  uint _allowance */\n      0x0\n      dup1\n      dup1\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5270:5276  3 * 32 */\n      0x60\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3327:3335  size + 4 */\n      0x64\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3309:3317  msg.data */\n      calldatasize\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3309:3335  msg.data.length < size + 4 */\n      lt\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3307:3336  !(msg.data.length < size + 4) */\n      iszero\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3299:3337  require(!(msg.data.length < size + 4)) */\n      tag_253\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_253:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5307:5321  allowed[_from] */\n      dup8\n      and\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5307:5314  allowed */\n      0x5\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5307:5321  allowed[_from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5322:5332  msg.sender */\n      caller\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5307:5333  allowed[_from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5527:5542  basisPointsRate */\n      sload(0x3)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5307:5333  allowed[_from][msg.sender] */\n      swap1\n      swap5\n      pop\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5515:5555  (_value.mul(basisPointsRate)).div(10000) */\n      tag_255\n      swap1\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5549:5554  10000 */\n      0x2710\n      swap1\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5516:5543  _value.mul(basisPointsRate) */\n      tag_256\n      swap1\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5516:5522  _value */\n      dup9\n      swap1\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5516:5543  _value.mul(basisPointsRate) */\n      0xffffffff\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5516:5526  _value.mul */\n      tag_216\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5516:5543  _value.mul(basisPointsRate) */\n      and\n      jump\t// in\n    tag_256:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5515:5548  (_value.mul(basisPointsRate)).div */\n      swap1\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5515:5555  (_value.mul(basisPointsRate)).div(10000) */\n      0xffffffff\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5515:5548  (_value.mul(basisPointsRate)).div */\n      tag_257\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5515:5555  (_value.mul(basisPointsRate)).div(10000) */\n      and\n      jump\t// in\n    tag_255:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5504:5555  uint fee = (_value.mul(basisPointsRate)).div(10000) */\n      swap3\n      pop\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5576:5586  maximumFee */\n      sload(0x4)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5570:5573  fee */\n      dup4\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5570:5586  fee > maximumFee */\n      gt\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5566:5631  if (fee > maximumFee) {\r... */\n      iszero\n      tag_258\n      jumpi\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5609:5619  maximumFee */\n      sload(0x4)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5603:5619  fee = maximumFee */\n      swap3\n      pop\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5566:5631  if (fee > maximumFee) {\r... */\n    tag_258:\n      not(0x0)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5645:5655  _allowance */\n      dup5\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5645:5666  _allowance < MAX_UINT */\n      lt\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5641:5746  if (_allowance < MAX_UINT) {\r... */\n      iszero\n      tag_259\n      jumpi\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5712:5734  _allowance.sub(_value) */\n      tag_260\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5712:5722  _allowance */\n      dup5\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5727:5733  _value */\n      dup7\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5712:5734  _allowance.sub(_value) */\n      0xffffffff\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5712:5726  _allowance.sub */\n      tag_261\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5712:5734  _allowance.sub(_value) */\n      and\n      jump\t// in\n    tag_260:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5683:5697  allowed[_from] */\n      dup9\n      and\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5683:5690  allowed */\n      0x5\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5683:5697  allowed[_from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5698:5708  msg.sender */\n      caller\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5683:5709  allowed[_from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5683:5734  allowed[_from][msg.sender] = _allowance.sub(_value) */\n      sstore\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5641:5746  if (_allowance < MAX_UINT) {\r... */\n    tag_259:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5774:5789  _value.sub(fee) */\n      tag_262\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5774:5780  _value */\n      dup6\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5785:5788  fee */\n      dup5\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5774:5789  _value.sub(fee) */\n      0xffffffff\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5774:5784  _value.sub */\n      tag_261\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5774:5789  _value.sub(fee) */\n      and\n      jump\t// in\n    tag_262:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5818:5833  balances[_from] */\n      dup9\n      and\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5818:5826  balances */\n      0x2\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5818:5833  balances[_from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5756:5789  uint sendAmount = _value.sub(fee) */\n      swap1\n      swap3\n      pop\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5818:5845  balances[_from].sub(_value) */\n      tag_263\n      swap1\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5838:5844  _value */\n      dup7\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5818:5845  balances[_from].sub(_value) */\n      0xffffffff\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5818:5837  balances[_from].sub */\n      tag_261\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5818:5845  balances[_from].sub(_value) */\n      and\n      jump\t// in\n    tag_263:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5800:5815  balances[_from] */\n      dup1\n      dup10\n      and\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5800:5808  balances */\n      0x2\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5800:5815  balances[_from] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5800:5845  balances[_from] = balances[_from].sub(_value) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5872:5885  balances[_to] */\n      swap1\n      dup9\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5872:5901  balances[_to].add(sendAmount) */\n      tag_264\n      swap1\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5890:5900  sendAmount */\n      dup4\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5872:5901  balances[_to].add(sendAmount) */\n      0xffffffff\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5872:5889  balances[_to].add */\n      tag_265\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5872:5901  balances[_to].add(sendAmount) */\n      and\n      jump\t// in\n    tag_264:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5856:5869  balances[_to] */\n      dup8\n      and\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5856:5864  balances */\n      0x2\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5856:5869  balances[_to] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5856:5901  balances[_to] = balances[_to].add(sendAmount) */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5916:5923  fee > 0 */\n      dup4\n      gt\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5912:6041  if (fee > 0) {\r... */\n      iszero\n      tag_266\n      jumpi\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5958:5973  balances[owner] */\n      0x0\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5967:5972  owner */\n      dup1\n      sload\n      sub(exp(0x2, 0xa0), 0x1)\n      and\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5958:5973  balances[owner] */\n      dup2\n      mstore\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5958:5966  balances */\n      0x2\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5958:5973  balances[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5958:5982  balances[owner].add(fee) */\n      tag_267\n      swap1\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5978:5981  fee */\n      dup5\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5958:5982  balances[owner].add(fee) */\n      0xffffffff\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5958:5977  balances[owner].add */\n      tag_265\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5958:5982  balances[owner].add(fee) */\n      and\n      jump\t// in\n    tag_267:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5940:5955  balances[owner] */\n      0x0\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5949:5954  owner */\n      dup1\n      sload\n      sub(exp(0x2, 0xa0), 0x1)\n      swap1\n      dup2\n      and\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5940:5955  balances[owner] */\n      dup3\n      mstore\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5940:5948  balances */\n      0x2\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5940:5955  balances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5940:5982  balances[owner] = balances[owner].add(fee) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"contracts/Online/ERC20/TetherToken.sol\":6018:6023  owner */\n      swap2\n      sload\n        /* \"contracts/Online/ERC20/TetherToken.sol\":6002:6029  Transfer(_from, owner, fee) */\n      dup4\n      mload\n      dup8\n      dup2\n      mstore\n      swap4\n      mload\n        /* \"contracts/Online/ERC20/TetherToken.sol\":6018:6023  owner */\n      swap1\n      dup3\n      and\n      swap4\n        /* \"contracts/Online/ERC20/TetherToken.sol\":6002:6029  Transfer(_from, owner, fee) */\n      swap2\n      dup12\n      and\n      swap3\n      0x0\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap3\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5912:6041  if (fee > 0) {\r... */\n    tag_266:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":6072:6075  _to */\n      dup6\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":6056:6088  Transfer(_from, _to, sendAmount) */\n      and\n        /* \"contracts/Online/ERC20/TetherToken.sol\":6065:6070  _from */\n      dup8\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":6056:6088  Transfer(_from, _to, sendAmount) */\n      and\n      0x0\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/Online/ERC20/TetherToken.sol\":6077:6087  sendAmount */\n      dup5\n        /* \"contracts/Online/ERC20/TetherToken.sol\":6056:6088  Transfer(_from, _to, sendAmount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Online/ERC20/TetherToken.sol\":5184:6096  function transferFrom(address _from, address _to, uint _value) public onlyPayloadSize(3 * 32) {\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Online/ERC20/TetherToken.sol\":4331:4447  function balanceOf(address _owner) public constant returns (uint balance) {\r... */\n    tag_189:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":4423:4439  balances[_owner] */\n      and\n        /* \"contracts/Online/ERC20/TetherToken.sol\":4391:4403  uint balance */\n      0x0\n        /* \"contracts/Online/ERC20/TetherToken.sol\":4423:4439  balances[_owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Online/ERC20/TetherToken.sol\":4423:4431  balances */\n      0x2\n        /* \"contracts/Online/ERC20/TetherToken.sol\":4423:4439  balances[_owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/Online/ERC20/TetherToken.sol\":4331:4447  function balanceOf(address _owner) public constant returns (uint balance) {\r... */\n      jump\t// out\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3530:4113  function transfer(address _to, uint _value) public onlyPayloadSize(2 * 32) {\r... */\n    tag_208:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3616:3624  uint fee */\n      0x0\n      dup1\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3597:3603  2 * 32 */\n      0x40\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3327:3335  size + 4 */\n      0x44\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3309:3317  msg.data */\n      calldatasize\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3309:3335  msg.data.length < size + 4 */\n      lt\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3307:3336  !(msg.data.length < size + 4) */\n      iszero\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3299:3337  require(!(msg.data.length < size + 4)) */\n      tag_270\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_270:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3627:3667  (_value.mul(basisPointsRate)).div(10000) */\n      tag_272\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3661:3666  10000 */\n      0x2710\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3628:3655  _value.mul(basisPointsRate) */\n      tag_256\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3639:3654  basisPointsRate */\n      sload(0x3)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3628:3634  _value */\n      dup8\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3628:3638  _value.mul */\n      tag_216\n      swap1\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3628:3655  _value.mul(basisPointsRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3627:3667  (_value.mul(basisPointsRate)).div(10000) */\n    tag_272:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3616:3667  uint fee = (_value.mul(basisPointsRate)).div(10000) */\n      swap3\n      pop\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3688:3698  maximumFee */\n      sload(0x4)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3682:3685  fee */\n      dup4\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3682:3698  fee > maximumFee */\n      gt\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3678:3743  if (fee > maximumFee) {\r... */\n      iszero\n      tag_274\n      jumpi\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3721:3731  maximumFee */\n      sload(0x4)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3715:3731  fee = maximumFee */\n      swap3\n      pop\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3678:3743  if (fee > maximumFee) {\r... */\n    tag_274:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3771:3786  _value.sub(fee) */\n      tag_275\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3771:3777  _value */\n      dup5\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3782:3785  fee */\n      dup5\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3771:3786  _value.sub(fee) */\n      0xffffffff\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3771:3781  _value.sub */\n      tag_261\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3771:3786  _value.sub(fee) */\n      and\n      jump\t// in\n    tag_275:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3829:3839  msg.sender */\n      caller\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3820:3840  balances[msg.sender] */\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3820:3828  balances */\n      0x2\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3820:3840  balances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3753:3786  uint sendAmount = _value.sub(fee) */\n      swap1\n      swap3\n      pop\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3820:3852  balances[msg.sender].sub(_value) */\n      tag_276\n      swap1\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3845:3851  _value */\n      dup6\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3820:3852  balances[msg.sender].sub(_value) */\n      0xffffffff\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3820:3844  balances[msg.sender].sub */\n      tag_261\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3820:3852  balances[msg.sender].sub(_value) */\n      and\n      jump\t// in\n    tag_276:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3806:3816  msg.sender */\n      caller\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3797:3817  balances[msg.sender] */\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3797:3805  balances */\n      0x2\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3797:3817  balances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3797:3852  balances[msg.sender] = balances[msg.sender].sub(_value) */\n      swap3\n      swap1\n      swap3\n      sstore\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3879:3892  balances[_to] */\n      dup8\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3879:3908  balances[_to].add(sendAmount) */\n      tag_277\n      swap1\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3897:3907  sendAmount */\n      dup4\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3879:3908  balances[_to].add(sendAmount) */\n      0xffffffff\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3879:3896  balances[_to].add */\n      tag_265\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3879:3908  balances[_to].add(sendAmount) */\n      and\n      jump\t// in\n    tag_277:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3863:3876  balances[_to] */\n      dup7\n      and\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3863:3871  balances */\n      0x2\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3863:3876  balances[_to] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3863:3908  balances[_to] = balances[_to].add(sendAmount) */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3923:3930  fee > 0 */\n      dup4\n      gt\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3919:4053  if (fee > 0) {\r... */\n      iszero\n      tag_278\n      jumpi\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3965:3980  balances[owner] */\n      0x0\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3974:3979  owner */\n      dup1\n      sload\n      sub(exp(0x2, 0xa0), 0x1)\n      and\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3965:3980  balances[owner] */\n      dup2\n      mstore\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3965:3973  balances */\n      0x2\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3965:3980  balances[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3965:3989  balances[owner].add(fee) */\n      tag_279\n      swap1\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3985:3988  fee */\n      dup5\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3965:3989  balances[owner].add(fee) */\n      0xffffffff\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3965:3984  balances[owner].add */\n      tag_265\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3965:3989  balances[owner].add(fee) */\n      and\n      jump\t// in\n    tag_279:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3947:3962  balances[owner] */\n      0x0\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3956:3961  owner */\n      dup1\n      sload\n      sub(exp(0x2, 0xa0), 0x1)\n      swap1\n      dup2\n      and\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3947:3962  balances[owner] */\n      dup3\n      mstore\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3947:3955  balances */\n      0x2\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3947:3962  balances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3947:3989  balances[owner] = balances[owner].add(fee) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"contracts/Online/ERC20/TetherToken.sol\":4030:4035  owner */\n      swap2\n      sload\n        /* \"contracts/Online/ERC20/TetherToken.sol\":4009:4041  Transfer(msg.sender, owner, fee) */\n      dup4\n      mload\n      dup8\n      dup2\n      mstore\n      swap4\n      mload\n        /* \"contracts/Online/ERC20/TetherToken.sol\":4030:4035  owner */\n      swap2\n      and\n      swap3\n        /* \"contracts/Online/ERC20/TetherToken.sol\":4018:4028  msg.sender */\n      caller\n      swap3\n      0x0\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/Online/ERC20/TetherToken.sol\":4009:4041  Transfer(msg.sender, owner, fee) */\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3919:4053  if (fee > 0) {\r... */\n    tag_278:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":4068:4105  Transfer(msg.sender, _to, sendAmount) */\n      0x40\n      dup1\n      mload\n      dup4\n      dup2\n      mstore\n      swap1\n      mload\n      sub(exp(0x2, 0xa0), 0x1)\n      dup8\n      and\n      swap2\n        /* \"contracts/Online/ERC20/TetherToken.sol\":4077:4087  msg.sender */\n      caller\n      swap2\n      0x0\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/Online/ERC20/TetherToken.sol\":4068:4105  Transfer(msg.sender, _to, sendAmount) */\n      swap2\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log3\n        /* \"contracts/Online/ERC20/TetherToken.sol\":3530:4113  function transfer(address _to, uint _value) public onlyPayloadSize(2 * 32) {\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Online/ERC20/TetherToken.sol\":177:385  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_216:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":235:242  uint256 */\n      0x0\n      dup1\n        /* \"contracts/Online/ERC20/TetherToken.sol\":259:265  a == 0 */\n      dup4\n      iszero\n        /* \"contracts/Online/ERC20/TetherToken.sol\":255:302  if (a == 0) {\r... */\n      iszero\n      tag_281\n      jumpi\n        /* \"contracts/Online/ERC20/TetherToken.sol\":289:290  0 */\n      0x0\n        /* \"contracts/Online/ERC20/TetherToken.sol\":282:290  return 0 */\n      swap2\n      pop\n      jump(tag_280)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":255:302  if (a == 0) {\r... */\n    tag_281:\n      pop\n        /* \"contracts/Online/ERC20/TetherToken.sol\":324:329  a * b */\n      dup3\n      dup3\n      mul\n        /* \"contracts/Online/ERC20/TetherToken.sol\":328:329  b */\n      dup3\n        /* \"contracts/Online/ERC20/TetherToken.sol\":324:325  a */\n      dup5\n        /* \"contracts/Online/ERC20/TetherToken.sol\":324:329  a * b */\n      dup3\n        /* \"contracts/Online/ERC20/TetherToken.sol\":347:352  c / a */\n      dup2\n      iszero\n      iszero\n      tag_282\n      jumpi\n      invalid\n    tag_282:\n      div\n        /* \"contracts/Online/ERC20/TetherToken.sol\":347:357  c / a == b */\n      eq\n        /* \"contracts/Online/ERC20/TetherToken.sol\":340:358  assert(c / a == b) */\n      tag_283\n      jumpi\n      invalid\n    tag_283:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":376:377  c */\n      dup1\n        /* \"contracts/Online/ERC20/TetherToken.sol\":369:377  return c */\n      swap2\n      pop\n        /* \"contracts/Online/ERC20/TetherToken.sol\":177:385  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_280:\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Online/ERC20/TetherToken.sol\":7249:7394  function allowance(address _owner, address _spender) public constant returns (uint remaining) {\r... */\n    tag_234:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/Online/ERC20/TetherToken.sol\":7361:7376  allowed[_owner] */\n      swap2\n      dup3\n      and\n        /* \"contracts/Online/ERC20/TetherToken.sol\":7327:7341  uint remaining */\n      0x0\n        /* \"contracts/Online/ERC20/TetherToken.sol\":7361:7376  allowed[_owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Online/ERC20/TetherToken.sol\":7361:7368  allowed */\n      0x5\n        /* \"contracts/Online/ERC20/TetherToken.sol\":7361:7376  allowed[_owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Online/ERC20/TetherToken.sol\":7361:7386  allowed[_owner][_spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"contracts/Online/ERC20/TetherToken.sol\":7249:7394  function allowance(address _owner, address _spender) public constant returns (uint remaining) {\r... */\n      jump\t// out\n        /* \"contracts/Online/ERC20/TetherToken.sol\":393:681  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_257:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":451:458  uint256 */\n      0x0\n        /* \"contracts/Online/ERC20/TetherToken.sol\":550:559  uint256 c */\n      dup1\n        /* \"contracts/Online/ERC20/TetherToken.sol\":566:567  b */\n      dup3\n        /* \"contracts/Online/ERC20/TetherToken.sol\":562:563  a */\n      dup5\n        /* \"contracts/Online/ERC20/TetherToken.sol\":562:567  a / b */\n      dup2\n      iszero\n      iszero\n      tag_286\n      jumpi\n      invalid\n    tag_286:\n      div\n      swap5\n        /* \"contracts/Online/ERC20/TetherToken.sol\":393:681  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Online/ERC20/TetherToken.sol\":689:812  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_261:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":747:754  uint256 */\n      0x0\n        /* \"contracts/Online/ERC20/TetherToken.sol\":774:780  b <= a */\n      dup3\n      dup3\n      gt\n      iszero\n        /* \"contracts/Online/ERC20/TetherToken.sol\":767:781  assert(b <= a) */\n      tag_288\n      jumpi\n      invalid\n    tag_288:\n      pop\n        /* \"contracts/Online/ERC20/TetherToken.sol\":799:804  a - b */\n      swap1\n      sub\n      swap1\n        /* \"contracts/Online/ERC20/TetherToken.sol\":689:812  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      jump\t// out\n        /* \"contracts/Online/ERC20/TetherToken.sol\":820:967  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_265:\n        /* \"contracts/Online/ERC20/TetherToken.sol\":878:885  uint256 */\n      0x0\n        /* \"contracts/Online/ERC20/TetherToken.sol\":910:915  a + b */\n      dup3\n      dup3\n      add\n        /* \"contracts/Online/ERC20/TetherToken.sol\":933:939  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"contracts/Online/ERC20/TetherToken.sol\":926:940  assert(c >= a) */\n      tag_283\n      jumpi\n      invalid\n    stop\n    data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n\n    auxdata: 0xa165627a7a72305820bfc6dbe9abbba8829f6c33f5f3ce5f6727b6891c5bc4a5d7ed43c3fcdd3f136b0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040526000805460a060020a60ff021916815560038190556004553480156200002957600080fd5b5060405162001861380380620018618339810160409081528151602080840151928401516060850151600184905593850180519395909491019290916200007691600791860190620000c1565b5081516200008c906008906020850190620000c1565b50600955505060008054600160a060020a0316815260026020526040902055600a805460a060020a60ff021916905562000166565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200010457805160ff191683800117855562000134565b8280016001018555821562000134579182015b828111156200013457825182559160200191906001019062000117565b506200014292915062000146565b5090565b6200016391905b808211156200014257600081556001016200014d565b90565b6116eb80620001766000396000f3006080604052600436106101a05763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146101a55780630753c30c1461022f578063095ea7b3146102525780630e136b19146102765780630ecb93c01461029f57806318160ddd146102c057806323b872dd146102e757806326976e3f1461031157806327e235e314610342578063313ce5671461036357806335390714146103785780633eaaf86b1461038d5780633f4ba83a146103a257806359bf1abe146103b75780635c658165146103d85780635c975abb146103ff57806370a08231146104145780638456cb5914610435578063893d20e81461044a5780638da5cb5b1461045f57806395d89b4114610474578063a9059cbb14610489578063b38854be146104ad578063c0324c77146104c2578063cc872b66146104dd578063db006a75146104f5578063dd62ed3e1461050d578063dd644f7214610534578063e47d606014610549578063e4997dc51461056a578063e5b5019a1461058b578063f2fde38b146105a0578063f3bdc228146105c1575b600080fd5b3480156101b157600080fd5b506101ba6105e2565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101f45781810151838201526020016101dc565b50505050905090810190601f1680156102215780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561023b57600080fd5b50610250600160a060020a0360043516610670565b005b34801561025e57600080fd5b50610250600160a060020a0360043516602435610708565b34801561028257600080fd5b5061028b6107ca565b604080519115158252519081900360200190f35b3480156102ab57600080fd5b50610250600160a060020a03600435166107da565b3480156102cc57600080fd5b506102d561084c565b60408051918252519081900360200190f35b3480156102f357600080fd5b50610250600160a060020a0360043581169060243516604435610908565b34801561031d57600080fd5b506103266109de565b60408051600160a060020a039092168252519081900360200190f35b34801561034e57600080fd5b506102d5600160a060020a03600435166109ed565b34801561036f57600080fd5b506102d56109ff565b34801561038457600080fd5b506102d5610a05565b34801561039957600080fd5b506102d5610a0b565b3480156103ae57600080fd5b50610250610a11565b3480156103c357600080fd5b5061028b600160a060020a0360043516610a87565b3480156103e457600080fd5b506102d5600160a060020a0360043581169060243516610aa9565b34801561040b57600080fd5b5061028b610ac6565b34801561042057600080fd5b506102d5600160a060020a0360043516610ad6565b34801561044157600080fd5b50610250610b96565b34801561045657600080fd5b50610326610c11565b34801561046b57600080fd5b50610326610c20565b34801561048057600080fd5b506101ba610c2f565b34801561049557600080fd5b50610250600160a060020a0360043516602435610c8a565b3480156104b957600080fd5b50610250610d6f565b3480156104ce57600080fd5b50610250600435602435610d90565b3480156104e957600080fd5b50610250600435610e25565b34801561050157600080fd5b50610250600435610ed0565b34801561051957600080fd5b506102d5600160a060020a0360043581169060243516610f7b565b34801561054057600080fd5b506102d5611046565b34801561055557600080fd5b5061028b600160a060020a036004351661104c565b34801561057657600080fd5b50610250600160a060020a0360043516611061565b34801561059757600080fd5b506102d56110d0565b3480156105ac57600080fd5b50610250600160a060020a03600435166110d6565b3480156105cd57600080fd5b50610250600160a060020a0360043516611128565b6007805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156106685780601f1061063d57610100808354040283529160200191610668565b820191906000526020600020905b81548152906001019060200180831161064b57829003601f168201915b505050505081565b600054600160a060020a0316331461068757600080fd5b600a805460a060020a74ff0000000000000000000000000000000000000000199091161773ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03831690811790915560408051918252517fcc358699805e9a8b7f77b522628c7cb9abd07d9efb86b6fb616af1609036a99e916020908290030190a150565b6040604436101561071857600080fd5b600a5460a060020a900460ff16156107bb57600a54604080517faee92d33000000000000000000000000000000000000000000000000000000008152336004820152600160a060020a038681166024830152604482018690529151919092169163aee92d3391606480830192600092919082900301818387803b15801561079e57600080fd5b505af11580156107b2573d6000803e3d6000fd5b505050506107c5565b6107c583836111d4565b505050565b600a5460a060020a900460ff1681565b600054600160a060020a031633146107f157600080fd5b600160a060020a038116600081815260066020908152604091829020805460ff19166001179055815192835290517f42e160154868087d6bfdc0ca23d96a1c1cfa32f1b72ba9ba27b69b98a0d819dc9281900390910190a150565b600a5460009060a060020a900460ff161561090057600a60009054906101000a9004600160a060020a0316600160a060020a03166318160ddd6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156108cd57600080fd5b505af11580156108e1573d6000803e3d6000fd5b505050506040513d60208110156108f757600080fd5b50519050610905565b506001545b90565b60005460a060020a900460ff161561091f57600080fd5b600160a060020a03831660009081526006602052604090205460ff161561094557600080fd5b600a5460a060020a900460ff16156109d357600a54604080517f8b477adb000000000000000000000000000000000000000000000000000000008152336004820152600160a060020a03868116602483015285811660448301526064820185905291519190921691638b477adb91608480830192600092919082900301818387803b15801561079e57600080fd5b6107c5838383611282565b600a54600160a060020a031681565b60026020526000908152604090205481565b60095481565b60045481565b60015481565b600054600160a060020a03163314610a2857600080fd5b60005460a060020a900460ff161515610a4057600080fd5b6000805474ff0000000000000000000000000000000000000000191681556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b339190a1565b600160a060020a03811660009081526006602052604090205460ff165b919050565b600560209081526000928352604080842090915290825290205481565b60005460a060020a900460ff1681565b600a5460009060a060020a900460ff1615610b8657600a54604080517f70a08231000000000000000000000000000000000000000000000000000000008152600160a060020a038581166004830152915191909216916370a082319160248083019260209291908290030181600087803b158015610b5357600080fd5b505af1158015610b67573d6000803e3d6000fd5b505050506040513d6020811015610b7d57600080fd5b50519050610aa4565b610b8f8261147e565b9050610aa4565b600054600160a060020a03163314610bad57600080fd5b60005460a060020a900460ff1615610bc457600080fd5b6000805474ff0000000000000000000000000000000000000000191660a060020a1781556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff6259190a1565b600054600160a060020a031690565b600054600160a060020a031681565b6008805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156106685780601f1061063d57610100808354040283529160200191610668565b60005460a060020a900460ff1615610ca157600080fd5b3360009081526006602052604090205460ff1615610cbe57600080fd5b600a5460a060020a900460ff1615610d6157600a54604080517f6e18980a000000000000000000000000000000000000000000000000000000008152336004820152600160a060020a0385811660248301526044820185905291519190921691636e18980a91606480830192600092919082900301818387803b158015610d4457600080fd5b505af1158015610d58573d6000803e3d6000fd5b50505050610d6b565b610d6b8282611499565b5050565b6000805473ffffffffffffffffffffffffffffffffffffffff191633179055565b600054600160a060020a03163314610da757600080fd5b60148210610db457600080fd5b60328110610dc157600080fd5b6003829055600954610ddd908290600a0a63ffffffff61160616565b600481905560035460408051918252602082019290925281517fb044a1e409eac5c48e5af22d4af52670dd1a99059537a78b31b48c6500a6354e929181900390910190a15050565b600054600160a060020a03163314610e3c57600080fd5b60015481810111610e4c57600080fd5b60008054600160a060020a031681526002602052604090205481810111610e7257600080fd5b60008054600160a060020a03168152600260209081526040918290208054840190556001805484019055815183815291517fcb8241adb0c3fdb35b70c24ce35c5eb0c17af7431c99f827d44a445ca624176a9281900390910190a150565b600054600160a060020a03163314610ee757600080fd5b600154811115610ef657600080fd5b60008054600160a060020a0316815260026020526040902054811115610f1b57600080fd5b60018054829003905560008054600160a060020a031681526002602090815260409182902080548490039055815183815291517f702d5967f45f6513a38ffc42d6ba9bf230bd40e8f53b16363c7eb4fd2deb9a449281900390910190a150565b600a5460009060a060020a900460ff161561103357600a54604080517fdd62ed3e000000000000000000000000000000000000000000000000000000008152600160a060020a03868116600483015285811660248301529151919092169163dd62ed3e9160448083019260209291908290030181600087803b15801561100057600080fd5b505af1158015611014573d6000803e3d6000fd5b505050506040513d602081101561102a57600080fd5b50519050611040565b61103d838361163c565b90505b92915050565b60035481565b60066020526000908152604090205460ff1681565b600054600160a060020a0316331461107857600080fd5b600160a060020a038116600081815260066020908152604091829020805460ff19169055815192835290517fd7e9ec6e6ecd65492dce6bf513cd6867560d49544421d0783ddf06e76c24470c9281900390910190a150565b60001981565b600054600160a060020a031633146110ed57600080fd5b600160a060020a03811615611125576000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b50565b60008054600160a060020a0316331461114057600080fd5b600160a060020a03821660009081526006602052604090205460ff16151561116757600080fd5b61117082610ad6565b600160a060020a0383166000818152600260209081526040808320929092556001805485900390558151928352820183905280519293507f61e6e66b0d6339b2980aecc6ccc0039736791f0ccde9ed512e789a7fbdd698c692918290030190a15050565b604060443610156111e457600080fd5b81158015906112155750336000908152600560209081526040808320600160a060020a038716845290915290205415155b1561121f57600080fd5b336000818152600560209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a3505050565b600080806060606436101561129657600080fd5b600160a060020a03871660009081526005602090815260408083203384529091529020546003549094506112e590612710906112d990889063ffffffff61160616565b9063ffffffff61166716565b92506004548311156112f75760045492505b60001984101561133657611311848663ffffffff61167e16565b600160a060020a03881660009081526005602090815260408083203384529091529020555b611346858463ffffffff61167e16565b600160a060020a038816600090815260026020526040902054909250611372908663ffffffff61167e16565b600160a060020a0380891660009081526002602052604080822093909355908816815220546113a7908363ffffffff61169016565b600160a060020a03871660009081526002602052604081209190915583111561143c5760008054600160a060020a03168152600260205260409020546113f3908463ffffffff61169016565b60008054600160a060020a0390811682526002602090815260408084209490945591548351878152935190821693918b16926000805160206116a0833981519152928290030190a35b85600160a060020a031687600160a060020a03166000805160206116a0833981519152846040518082815260200191505060405180910390a350505050505050565b600160a060020a031660009081526002602052604090205490565b600080604060443610156114ac57600080fd5b6114c76127106112d96003548761160690919063ffffffff16565b92506004548311156114d95760045492505b6114e9848463ffffffff61167e16565b3360009081526002602052604090205490925061150c908563ffffffff61167e16565b3360009081526002602052604080822092909255600160a060020a0387168152205461153e908363ffffffff61169016565b600160a060020a0386166000908152600260205260408120919091558311156115d15760008054600160a060020a031681526002602052604090205461158a908463ffffffff61169016565b60008054600160a060020a0390811682526002602090815260408084209490945591548351878152935191169233926000805160206116a083398151915292918290030190a35b604080518381529051600160a060020a0387169133916000805160206116a08339815191529181900360200190a35050505050565b6000808315156116195760009150611635565b5082820282848281151561162957fe5b041461163157fe5b8091505b5092915050565b600160a060020a03918216600090815260056020908152604080832093909416825291909152205490565b600080828481151561167557fe5b04949350505050565b60008282111561168a57fe5b50900390565b60008282018381101561163157fe00ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a72305820bfc6dbe9abbba8829f6c33f5f3ce5f6727b6891c5bc4a5d7ed43c3fcdd3f136b0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP PUSH1 0xFF MUL NOT AND DUP2 SSTORE PUSH1 0x3 DUP2 SWAP1 SSTORE PUSH1 0x4 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1861 CODESIZE SUB DUP1 PUSH3 0x1861 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 SWAP1 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 DUP1 DUP5 ADD MLOAD SWAP3 DUP5 ADD MLOAD PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x1 DUP5 SWAP1 SSTORE SWAP4 DUP6 ADD DUP1 MLOAD SWAP4 SWAP6 SWAP1 SWAP5 SWAP2 ADD SWAP3 SWAP1 SWAP2 PUSH3 0x76 SWAP2 PUSH1 0x7 SWAP2 DUP7 ADD SWAP1 PUSH3 0xC1 JUMP JUMPDEST POP DUP2 MLOAD PUSH3 0x8C SWAP1 PUSH1 0x8 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0xC1 JUMP JUMPDEST POP PUSH1 0x9 SSTORE POP POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0xA DUP1 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH3 0x166 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x104 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x134 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x134 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x134 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x117 JUMP JUMPDEST POP PUSH3 0x142 SWAP3 SWAP2 POP PUSH3 0x146 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x163 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x142 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x14D JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x16EB DUP1 PUSH3 0x176 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A0 JUMPI PUSH4 0xFFFFFFFF PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x6FDDE03 DUP2 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x753C30C EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0xE136B19 EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0xECB93C0 EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0x26976E3F EQ PUSH2 0x311 JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x363 JUMPI DUP1 PUSH4 0x35390714 EQ PUSH2 0x378 JUMPI DUP1 PUSH4 0x3EAAF86B EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x3A2 JUMPI DUP1 PUSH4 0x59BF1ABE EQ PUSH2 0x3B7 JUMPI DUP1 PUSH4 0x5C658165 EQ PUSH2 0x3D8 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x414 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x435 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x44A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x45F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x474 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x489 JUMPI DUP1 PUSH4 0xB38854BE EQ PUSH2 0x4AD JUMPI DUP1 PUSH4 0xC0324C77 EQ PUSH2 0x4C2 JUMPI DUP1 PUSH4 0xCC872B66 EQ PUSH2 0x4DD JUMPI DUP1 PUSH4 0xDB006A75 EQ PUSH2 0x4F5 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x50D JUMPI DUP1 PUSH4 0xDD644F72 EQ PUSH2 0x534 JUMPI DUP1 PUSH4 0xE47D6060 EQ PUSH2 0x549 JUMPI DUP1 PUSH4 0xE4997DC5 EQ PUSH2 0x56A JUMPI DUP1 PUSH4 0xE5B5019A EQ PUSH2 0x58B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5A0 JUMPI DUP1 PUSH4 0xF3BDC228 EQ PUSH2 0x5C1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BA PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F4 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1DC JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x221 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x250 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x670 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x250 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x708 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x282 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28B PUSH2 0x7CA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x250 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x7DA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D5 PUSH2 0x84C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x250 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x24 CALLDATALOAD AND PUSH1 0x44 CALLDATALOAD PUSH2 0x908 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x9DE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D5 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x9ED JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D5 PUSH2 0x9FF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x384 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D5 PUSH2 0xA05 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x399 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D5 PUSH2 0xA0B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x250 PUSH2 0xA11 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28B PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0xA87 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D5 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x24 CALLDATALOAD AND PUSH2 0xAA9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28B PUSH2 0xAC6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x420 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D5 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0xAD6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x441 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x250 PUSH2 0xB96 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x456 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0xC11 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0xC20 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x480 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BA PUSH2 0xC2F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x495 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x250 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0xC8A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x250 PUSH2 0xD6F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x250 PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH2 0xD90 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x250 PUSH1 0x4 CALLDATALOAD PUSH2 0xE25 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x501 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x250 PUSH1 0x4 CALLDATALOAD PUSH2 0xED0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x519 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D5 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x24 CALLDATALOAD AND PUSH2 0xF7B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x540 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D5 PUSH2 0x1046 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x555 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28B PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x104C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x576 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x250 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x1061 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x597 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D5 PUSH2 0x10D0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x250 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x10D6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x250 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x1128 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x668 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x63D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x668 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x64B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x687 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP PUSH21 0xFF0000000000000000000000000000000000000000 NOT SWAP1 SWAP2 AND OR PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD PUSH32 0xCC358699805E9A8B7F77B522628C7CB9ABD07D9EFB86B6FB616AF1609036A99E SWAP2 PUSH1 0x20 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x40 PUSH1 0x44 CALLDATASIZE LT ISZERO PUSH2 0x718 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x7BB JUMPI PUSH1 0xA SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xAEE92D3300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP7 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0xAEE92D33 SWAP2 PUSH1 0x64 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x79E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7B2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x7C5 JUMP JUMPDEST PUSH2 0x7C5 DUP4 DUP4 PUSH2 0x11D4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x7F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE SWAP1 MLOAD PUSH32 0x42E160154868087D6BFDC0CA23D96A1C1CFA32F1B72BA9BA27B69B98A0D819DC SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x900 JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8E1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x905 JUMP JUMPDEST POP PUSH1 0x1 SLOAD JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x91F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x945 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x9D3 JUMPI PUSH1 0xA SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B477ADB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0x8B477ADB SWAP2 PUSH1 0x84 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x79E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7C5 DUP4 DUP4 DUP4 PUSH2 0x1282 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0xA28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0xA40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH21 0xFF0000000000000000000000000000000000000000 NOT AND DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33 SWAP2 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xB86 JUMPI PUSH1 0xA SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB67 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0xAA4 JUMP JUMPDEST PUSH2 0xB8F DUP3 PUSH2 0x147E JUMP JUMPDEST SWAP1 POP PUSH2 0xAA4 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0xBAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xBC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH21 0xFF0000000000000000000000000000000000000000 NOT AND PUSH1 0xA0 PUSH1 0x2 EXP OR DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625 SWAP2 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x668 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x63D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x668 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xCA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xCBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xD61 JUMPI PUSH1 0xA SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x6E18980A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0x6E18980A SWAP2 PUSH1 0x64 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD58 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0xD6B JUMP JUMPDEST PUSH2 0xD6B DUP3 DUP3 PUSH2 0x1499 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND CALLER OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0xDA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x14 DUP3 LT PUSH2 0xDB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x32 DUP2 LT PUSH2 0xDC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 DUP3 SWAP1 SSTORE PUSH1 0x9 SLOAD PUSH2 0xDDD SWAP1 DUP3 SWAP1 PUSH1 0xA EXP PUSH4 0xFFFFFFFF PUSH2 0x1606 AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP2 MLOAD PUSH32 0xB044A1E409EAC5C48E5AF22D4AF52670DD1A99059537A78B31B48C6500A6354E SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0xE3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD DUP2 DUP2 ADD GT PUSH2 0xE4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 ADD GT PUSH2 0xE72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP5 ADD SWAP1 SSTORE PUSH1 0x1 DUP1 SLOAD DUP5 ADD SWAP1 SSTORE DUP2 MLOAD DUP4 DUP2 MSTORE SWAP2 MLOAD PUSH32 0xCB8241ADB0C3FDB35B70C24CE35C5EB0C17AF7431C99F827D44A445CA624176A SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0xEE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD DUP2 GT ISZERO PUSH2 0xEF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0xF1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP5 SWAP1 SUB SWAP1 SSTORE DUP2 MLOAD DUP4 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x702D5967F45F6513A38FFC42D6BA9BF230BD40E8F53B16363C7EB4FD2DEB9A44 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1033 JUMPI PUSH1 0xA SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xDD62ED3E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0xDD62ED3E SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1000 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1014 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x102A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x1040 JUMP JUMPDEST PUSH2 0x103D DUP4 DUP4 PUSH2 0x163C JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x1078 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE SWAP1 MLOAD PUSH32 0xD7E9EC6E6ECD65492DCE6BF513CD6867560D49544421D0783DDF06E76C24470C SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 NOT DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x10ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND ISZERO PUSH2 0x1125 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND OR SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x1140 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x1167 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1170 DUP3 PUSH2 0xAD6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x1 DUP1 SLOAD DUP6 SWAP1 SUB SWAP1 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD DUP4 SWAP1 MSTORE DUP1 MLOAD SWAP3 SWAP4 POP PUSH32 0x61E6E66B0D6339B2980AECC6CCC0039736791F0CCDE9ED512E789A7FBDD698C6 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x40 PUSH1 0x44 CALLDATASIZE LT ISZERO PUSH2 0x11E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1215 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x121F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP9 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP7 SWAP1 SSTORE DUP1 MLOAD DUP7 DUP2 MSTORE SWAP1 MLOAD SWAP3 SWAP4 SWAP3 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x60 PUSH1 0x64 CALLDATASIZE LT ISZERO PUSH2 0x1296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x3 SLOAD SWAP1 SWAP5 POP PUSH2 0x12E5 SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x12D9 SWAP1 DUP9 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1606 AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1667 AND JUMP JUMPDEST SWAP3 POP PUSH1 0x4 SLOAD DUP4 GT ISZERO PUSH2 0x12F7 JUMPI PUSH1 0x4 SLOAD SWAP3 POP JUMPDEST PUSH1 0x0 NOT DUP5 LT ISZERO PUSH2 0x1336 JUMPI PUSH2 0x1311 DUP5 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x167E AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE JUMPDEST PUSH2 0x1346 DUP6 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x167E AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP3 POP PUSH2 0x1372 SWAP1 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x167E AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP9 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x13A7 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1690 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE DUP4 GT ISZERO PUSH2 0x143C JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x13F3 SWAP1 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x1690 AND JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 SLOAD DUP4 MLOAD DUP8 DUP2 MSTORE SWAP4 MLOAD SWAP1 DUP3 AND SWAP4 SWAP2 DUP12 AND SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16A0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG3 JUMPDEST DUP6 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP8 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16A0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 PUSH1 0x44 CALLDATASIZE LT ISZERO PUSH2 0x14AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14C7 PUSH2 0x2710 PUSH2 0x12D9 PUSH1 0x3 SLOAD DUP8 PUSH2 0x1606 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH1 0x4 SLOAD DUP4 GT ISZERO PUSH2 0x14D9 JUMPI PUSH1 0x4 SLOAD SWAP3 POP JUMPDEST PUSH2 0x14E9 DUP5 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x167E AND JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP3 POP PUSH2 0x150C SWAP1 DUP6 PUSH4 0xFFFFFFFF PUSH2 0x167E AND JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x153E SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1690 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE DUP4 GT ISZERO PUSH2 0x15D1 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x158A SWAP1 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x1690 AND JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 SLOAD DUP4 MLOAD DUP8 DUP2 MSTORE SWAP4 MLOAD SWAP2 AND SWAP3 CALLER SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16A0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND SWAP2 CALLER SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16A0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 ISZERO ISZERO PUSH2 0x1619 JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x1635 JUMP JUMPDEST POP DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 ISZERO ISZERO PUSH2 0x1629 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x1631 JUMPI INVALID JUMPDEST DUP1 SWAP2 POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 DUP2 ISZERO ISZERO PUSH2 0x1675 JUMPI INVALID JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x168A JUMPI INVALID JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x1631 JUMPI INVALID STOP 0xdd CALLCODE MSTORE 0xad SHL 0xe2 0xc8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 0xf5 GAS 0x4d 0xf5 0x23 0xb3 0xef LOG1 PUSH6 0x627A7A723058 KECCAK256 0xbf 0xc6 0xdb 0xe9 0xab 0xbb 0xa8 DUP3 SWAP16 PUSH13 0x33F5F3CE5F6727B6891C5BC4A5 0xd7 0xed NUMBER 0xc3 0xfc 0xdd 0x3f SGT PUSH12 0x2900000000000000000000 ",
							"sourceMap": "10044:4932:0:-;;;7617:5;7596:26;;-1:-1:-1;;;;;;7596:26:0;;;3110:31;;;;3148:26;;10554:296;5:2:-1;;;;30:1;27;20:12;5:2;10554:296:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10660:12;:29;;;10554:296;;;10700:12;;10554:296;;;;;;;;;10700:12;;:4;;:12;;;;:::i;:::-;-1:-1:-1;10723:16:0;;;;:6;;:16;;;;;:::i;:::-;-1:-1:-1;10750:8:0;:20;-1:-1:-1;;10781:15:0;10790:5;;-1:-1:-1;;;;;10790:5:0;10781:15;;:8;:15;;;;;:32;10824:10;:18;;-1:-1:-1;;;;;;10824:18:0;;;10044:4932;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10044:4932:0;;;-1:-1:-1;10044:4932:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600436106101a05763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146101a55780630753c30c1461022f578063095ea7b3146102525780630e136b19146102765780630ecb93c01461029f57806318160ddd146102c057806323b872dd146102e757806326976e3f1461031157806327e235e314610342578063313ce5671461036357806335390714146103785780633eaaf86b1461038d5780633f4ba83a146103a257806359bf1abe146103b75780635c658165146103d85780635c975abb146103ff57806370a08231146104145780638456cb5914610435578063893d20e81461044a5780638da5cb5b1461045f57806395d89b4114610474578063a9059cbb14610489578063b38854be146104ad578063c0324c77146104c2578063cc872b66146104dd578063db006a75146104f5578063dd62ed3e1461050d578063dd644f7214610534578063e47d606014610549578063e4997dc51461056a578063e5b5019a1461058b578063f2fde38b146105a0578063f3bdc228146105c1575b600080fd5b3480156101b157600080fd5b506101ba6105e2565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101f45781810151838201526020016101dc565b50505050905090810190601f1680156102215780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561023b57600080fd5b50610250600160a060020a0360043516610670565b005b34801561025e57600080fd5b50610250600160a060020a0360043516602435610708565b34801561028257600080fd5b5061028b6107ca565b604080519115158252519081900360200190f35b3480156102ab57600080fd5b50610250600160a060020a03600435166107da565b3480156102cc57600080fd5b506102d561084c565b60408051918252519081900360200190f35b3480156102f357600080fd5b50610250600160a060020a0360043581169060243516604435610908565b34801561031d57600080fd5b506103266109de565b60408051600160a060020a039092168252519081900360200190f35b34801561034e57600080fd5b506102d5600160a060020a03600435166109ed565b34801561036f57600080fd5b506102d56109ff565b34801561038457600080fd5b506102d5610a05565b34801561039957600080fd5b506102d5610a0b565b3480156103ae57600080fd5b50610250610a11565b3480156103c357600080fd5b5061028b600160a060020a0360043516610a87565b3480156103e457600080fd5b506102d5600160a060020a0360043581169060243516610aa9565b34801561040b57600080fd5b5061028b610ac6565b34801561042057600080fd5b506102d5600160a060020a0360043516610ad6565b34801561044157600080fd5b50610250610b96565b34801561045657600080fd5b50610326610c11565b34801561046b57600080fd5b50610326610c20565b34801561048057600080fd5b506101ba610c2f565b34801561049557600080fd5b50610250600160a060020a0360043516602435610c8a565b3480156104b957600080fd5b50610250610d6f565b3480156104ce57600080fd5b50610250600435602435610d90565b3480156104e957600080fd5b50610250600435610e25565b34801561050157600080fd5b50610250600435610ed0565b34801561051957600080fd5b506102d5600160a060020a0360043581169060243516610f7b565b34801561054057600080fd5b506102d5611046565b34801561055557600080fd5b5061028b600160a060020a036004351661104c565b34801561057657600080fd5b50610250600160a060020a0360043516611061565b34801561059757600080fd5b506102d56110d0565b3480156105ac57600080fd5b50610250600160a060020a03600435166110d6565b3480156105cd57600080fd5b50610250600160a060020a0360043516611128565b6007805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156106685780601f1061063d57610100808354040283529160200191610668565b820191906000526020600020905b81548152906001019060200180831161064b57829003601f168201915b505050505081565b600054600160a060020a0316331461068757600080fd5b600a805460a060020a74ff0000000000000000000000000000000000000000199091161773ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03831690811790915560408051918252517fcc358699805e9a8b7f77b522628c7cb9abd07d9efb86b6fb616af1609036a99e916020908290030190a150565b6040604436101561071857600080fd5b600a5460a060020a900460ff16156107bb57600a54604080517faee92d33000000000000000000000000000000000000000000000000000000008152336004820152600160a060020a038681166024830152604482018690529151919092169163aee92d3391606480830192600092919082900301818387803b15801561079e57600080fd5b505af11580156107b2573d6000803e3d6000fd5b505050506107c5565b6107c583836111d4565b505050565b600a5460a060020a900460ff1681565b600054600160a060020a031633146107f157600080fd5b600160a060020a038116600081815260066020908152604091829020805460ff19166001179055815192835290517f42e160154868087d6bfdc0ca23d96a1c1cfa32f1b72ba9ba27b69b98a0d819dc9281900390910190a150565b600a5460009060a060020a900460ff161561090057600a60009054906101000a9004600160a060020a0316600160a060020a03166318160ddd6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156108cd57600080fd5b505af11580156108e1573d6000803e3d6000fd5b505050506040513d60208110156108f757600080fd5b50519050610905565b506001545b90565b60005460a060020a900460ff161561091f57600080fd5b600160a060020a03831660009081526006602052604090205460ff161561094557600080fd5b600a5460a060020a900460ff16156109d357600a54604080517f8b477adb000000000000000000000000000000000000000000000000000000008152336004820152600160a060020a03868116602483015285811660448301526064820185905291519190921691638b477adb91608480830192600092919082900301818387803b15801561079e57600080fd5b6107c5838383611282565b600a54600160a060020a031681565b60026020526000908152604090205481565b60095481565b60045481565b60015481565b600054600160a060020a03163314610a2857600080fd5b60005460a060020a900460ff161515610a4057600080fd5b6000805474ff0000000000000000000000000000000000000000191681556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b339190a1565b600160a060020a03811660009081526006602052604090205460ff165b919050565b600560209081526000928352604080842090915290825290205481565b60005460a060020a900460ff1681565b600a5460009060a060020a900460ff1615610b8657600a54604080517f70a08231000000000000000000000000000000000000000000000000000000008152600160a060020a038581166004830152915191909216916370a082319160248083019260209291908290030181600087803b158015610b5357600080fd5b505af1158015610b67573d6000803e3d6000fd5b505050506040513d6020811015610b7d57600080fd5b50519050610aa4565b610b8f8261147e565b9050610aa4565b600054600160a060020a03163314610bad57600080fd5b60005460a060020a900460ff1615610bc457600080fd5b6000805474ff0000000000000000000000000000000000000000191660a060020a1781556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff6259190a1565b600054600160a060020a031690565b600054600160a060020a031681565b6008805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156106685780601f1061063d57610100808354040283529160200191610668565b60005460a060020a900460ff1615610ca157600080fd5b3360009081526006602052604090205460ff1615610cbe57600080fd5b600a5460a060020a900460ff1615610d6157600a54604080517f6e18980a000000000000000000000000000000000000000000000000000000008152336004820152600160a060020a0385811660248301526044820185905291519190921691636e18980a91606480830192600092919082900301818387803b158015610d4457600080fd5b505af1158015610d58573d6000803e3d6000fd5b50505050610d6b565b610d6b8282611499565b5050565b6000805473ffffffffffffffffffffffffffffffffffffffff191633179055565b600054600160a060020a03163314610da757600080fd5b60148210610db457600080fd5b60328110610dc157600080fd5b6003829055600954610ddd908290600a0a63ffffffff61160616565b600481905560035460408051918252602082019290925281517fb044a1e409eac5c48e5af22d4af52670dd1a99059537a78b31b48c6500a6354e929181900390910190a15050565b600054600160a060020a03163314610e3c57600080fd5b60015481810111610e4c57600080fd5b60008054600160a060020a031681526002602052604090205481810111610e7257600080fd5b60008054600160a060020a03168152600260209081526040918290208054840190556001805484019055815183815291517fcb8241adb0c3fdb35b70c24ce35c5eb0c17af7431c99f827d44a445ca624176a9281900390910190a150565b600054600160a060020a03163314610ee757600080fd5b600154811115610ef657600080fd5b60008054600160a060020a0316815260026020526040902054811115610f1b57600080fd5b60018054829003905560008054600160a060020a031681526002602090815260409182902080548490039055815183815291517f702d5967f45f6513a38ffc42d6ba9bf230bd40e8f53b16363c7eb4fd2deb9a449281900390910190a150565b600a5460009060a060020a900460ff161561103357600a54604080517fdd62ed3e000000000000000000000000000000000000000000000000000000008152600160a060020a03868116600483015285811660248301529151919092169163dd62ed3e9160448083019260209291908290030181600087803b15801561100057600080fd5b505af1158015611014573d6000803e3d6000fd5b505050506040513d602081101561102a57600080fd5b50519050611040565b61103d838361163c565b90505b92915050565b60035481565b60066020526000908152604090205460ff1681565b600054600160a060020a0316331461107857600080fd5b600160a060020a038116600081815260066020908152604091829020805460ff19169055815192835290517fd7e9ec6e6ecd65492dce6bf513cd6867560d49544421d0783ddf06e76c24470c9281900390910190a150565b60001981565b600054600160a060020a031633146110ed57600080fd5b600160a060020a03811615611125576000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b50565b60008054600160a060020a0316331461114057600080fd5b600160a060020a03821660009081526006602052604090205460ff16151561116757600080fd5b61117082610ad6565b600160a060020a0383166000818152600260209081526040808320929092556001805485900390558151928352820183905280519293507f61e6e66b0d6339b2980aecc6ccc0039736791f0ccde9ed512e789a7fbdd698c692918290030190a15050565b604060443610156111e457600080fd5b81158015906112155750336000908152600560209081526040808320600160a060020a038716845290915290205415155b1561121f57600080fd5b336000818152600560209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a3505050565b600080806060606436101561129657600080fd5b600160a060020a03871660009081526005602090815260408083203384529091529020546003549094506112e590612710906112d990889063ffffffff61160616565b9063ffffffff61166716565b92506004548311156112f75760045492505b60001984101561133657611311848663ffffffff61167e16565b600160a060020a03881660009081526005602090815260408083203384529091529020555b611346858463ffffffff61167e16565b600160a060020a038816600090815260026020526040902054909250611372908663ffffffff61167e16565b600160a060020a0380891660009081526002602052604080822093909355908816815220546113a7908363ffffffff61169016565b600160a060020a03871660009081526002602052604081209190915583111561143c5760008054600160a060020a03168152600260205260409020546113f3908463ffffffff61169016565b60008054600160a060020a0390811682526002602090815260408084209490945591548351878152935190821693918b16926000805160206116a0833981519152928290030190a35b85600160a060020a031687600160a060020a03166000805160206116a0833981519152846040518082815260200191505060405180910390a350505050505050565b600160a060020a031660009081526002602052604090205490565b600080604060443610156114ac57600080fd5b6114c76127106112d96003548761160690919063ffffffff16565b92506004548311156114d95760045492505b6114e9848463ffffffff61167e16565b3360009081526002602052604090205490925061150c908563ffffffff61167e16565b3360009081526002602052604080822092909255600160a060020a0387168152205461153e908363ffffffff61169016565b600160a060020a0386166000908152600260205260408120919091558311156115d15760008054600160a060020a031681526002602052604090205461158a908463ffffffff61169016565b60008054600160a060020a0390811682526002602090815260408084209490945591548351878152935191169233926000805160206116a083398151915292918290030190a35b604080518381529051600160a060020a0387169133916000805160206116a08339815191529181900360200190a35050505050565b6000808315156116195760009150611635565b5082820282848281151561162957fe5b041461163157fe5b8091505b5092915050565b600160a060020a03918216600090815260056020908152604080832093909416825291909152205490565b600080828481151561167557fe5b04949350505050565b60008282111561168a57fe5b50900390565b60008282018381101561163157fe00ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a72305820bfc6dbe9abbba8829f6c33f5f3ce5f6727b6891c5bc4a5d7ed43c3fcdd3f136b0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A0 JUMPI PUSH4 0xFFFFFFFF PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x6FDDE03 DUP2 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x753C30C EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0xE136B19 EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0xECB93C0 EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0x26976E3F EQ PUSH2 0x311 JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x363 JUMPI DUP1 PUSH4 0x35390714 EQ PUSH2 0x378 JUMPI DUP1 PUSH4 0x3EAAF86B EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x3A2 JUMPI DUP1 PUSH4 0x59BF1ABE EQ PUSH2 0x3B7 JUMPI DUP1 PUSH4 0x5C658165 EQ PUSH2 0x3D8 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x414 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x435 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x44A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x45F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x474 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x489 JUMPI DUP1 PUSH4 0xB38854BE EQ PUSH2 0x4AD JUMPI DUP1 PUSH4 0xC0324C77 EQ PUSH2 0x4C2 JUMPI DUP1 PUSH4 0xCC872B66 EQ PUSH2 0x4DD JUMPI DUP1 PUSH4 0xDB006A75 EQ PUSH2 0x4F5 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x50D JUMPI DUP1 PUSH4 0xDD644F72 EQ PUSH2 0x534 JUMPI DUP1 PUSH4 0xE47D6060 EQ PUSH2 0x549 JUMPI DUP1 PUSH4 0xE4997DC5 EQ PUSH2 0x56A JUMPI DUP1 PUSH4 0xE5B5019A EQ PUSH2 0x58B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5A0 JUMPI DUP1 PUSH4 0xF3BDC228 EQ PUSH2 0x5C1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BA PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F4 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1DC JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x221 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x250 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x670 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x250 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x708 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x282 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28B PUSH2 0x7CA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x250 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x7DA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D5 PUSH2 0x84C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x250 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x24 CALLDATALOAD AND PUSH1 0x44 CALLDATALOAD PUSH2 0x908 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x9DE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D5 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x9ED JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D5 PUSH2 0x9FF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x384 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D5 PUSH2 0xA05 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x399 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D5 PUSH2 0xA0B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x250 PUSH2 0xA11 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28B PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0xA87 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D5 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x24 CALLDATALOAD AND PUSH2 0xAA9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28B PUSH2 0xAC6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x420 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D5 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0xAD6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x441 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x250 PUSH2 0xB96 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x456 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0xC11 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0xC20 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x480 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BA PUSH2 0xC2F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x495 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x250 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0xC8A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x250 PUSH2 0xD6F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x250 PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH2 0xD90 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x250 PUSH1 0x4 CALLDATALOAD PUSH2 0xE25 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x501 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x250 PUSH1 0x4 CALLDATALOAD PUSH2 0xED0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x519 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D5 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x24 CALLDATALOAD AND PUSH2 0xF7B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x540 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D5 PUSH2 0x1046 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x555 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28B PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x104C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x576 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x250 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x1061 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x597 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D5 PUSH2 0x10D0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x250 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x10D6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x250 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x1128 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x668 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x63D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x668 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x64B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x687 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP PUSH21 0xFF0000000000000000000000000000000000000000 NOT SWAP1 SWAP2 AND OR PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD PUSH32 0xCC358699805E9A8B7F77B522628C7CB9ABD07D9EFB86B6FB616AF1609036A99E SWAP2 PUSH1 0x20 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x40 PUSH1 0x44 CALLDATASIZE LT ISZERO PUSH2 0x718 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x7BB JUMPI PUSH1 0xA SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xAEE92D3300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP7 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0xAEE92D33 SWAP2 PUSH1 0x64 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x79E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7B2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x7C5 JUMP JUMPDEST PUSH2 0x7C5 DUP4 DUP4 PUSH2 0x11D4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x7F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE SWAP1 MLOAD PUSH32 0x42E160154868087D6BFDC0CA23D96A1C1CFA32F1B72BA9BA27B69B98A0D819DC SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x900 JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8E1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x905 JUMP JUMPDEST POP PUSH1 0x1 SLOAD JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x91F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x945 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x9D3 JUMPI PUSH1 0xA SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B477ADB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0x8B477ADB SWAP2 PUSH1 0x84 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x79E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7C5 DUP4 DUP4 DUP4 PUSH2 0x1282 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0xA28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0xA40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH21 0xFF0000000000000000000000000000000000000000 NOT AND DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33 SWAP2 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xB86 JUMPI PUSH1 0xA SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB67 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0xAA4 JUMP JUMPDEST PUSH2 0xB8F DUP3 PUSH2 0x147E JUMP JUMPDEST SWAP1 POP PUSH2 0xAA4 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0xBAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xBC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH21 0xFF0000000000000000000000000000000000000000 NOT AND PUSH1 0xA0 PUSH1 0x2 EXP OR DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625 SWAP2 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x668 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x63D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x668 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xCA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xCBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xD61 JUMPI PUSH1 0xA SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x6E18980A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0x6E18980A SWAP2 PUSH1 0x64 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD58 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0xD6B JUMP JUMPDEST PUSH2 0xD6B DUP3 DUP3 PUSH2 0x1499 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND CALLER OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0xDA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x14 DUP3 LT PUSH2 0xDB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x32 DUP2 LT PUSH2 0xDC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 DUP3 SWAP1 SSTORE PUSH1 0x9 SLOAD PUSH2 0xDDD SWAP1 DUP3 SWAP1 PUSH1 0xA EXP PUSH4 0xFFFFFFFF PUSH2 0x1606 AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP2 MLOAD PUSH32 0xB044A1E409EAC5C48E5AF22D4AF52670DD1A99059537A78B31B48C6500A6354E SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0xE3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD DUP2 DUP2 ADD GT PUSH2 0xE4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 ADD GT PUSH2 0xE72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP5 ADD SWAP1 SSTORE PUSH1 0x1 DUP1 SLOAD DUP5 ADD SWAP1 SSTORE DUP2 MLOAD DUP4 DUP2 MSTORE SWAP2 MLOAD PUSH32 0xCB8241ADB0C3FDB35B70C24CE35C5EB0C17AF7431C99F827D44A445CA624176A SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0xEE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD DUP2 GT ISZERO PUSH2 0xEF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0xF1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP5 SWAP1 SUB SWAP1 SSTORE DUP2 MLOAD DUP4 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x702D5967F45F6513A38FFC42D6BA9BF230BD40E8F53B16363C7EB4FD2DEB9A44 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1033 JUMPI PUSH1 0xA SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xDD62ED3E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0xDD62ED3E SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1000 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1014 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x102A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x1040 JUMP JUMPDEST PUSH2 0x103D DUP4 DUP4 PUSH2 0x163C JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x1078 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE SWAP1 MLOAD PUSH32 0xD7E9EC6E6ECD65492DCE6BF513CD6867560D49544421D0783DDF06E76C24470C SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 NOT DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x10ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND ISZERO PUSH2 0x1125 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND OR SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x1140 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x1167 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1170 DUP3 PUSH2 0xAD6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x1 DUP1 SLOAD DUP6 SWAP1 SUB SWAP1 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD DUP4 SWAP1 MSTORE DUP1 MLOAD SWAP3 SWAP4 POP PUSH32 0x61E6E66B0D6339B2980AECC6CCC0039736791F0CCDE9ED512E789A7FBDD698C6 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x40 PUSH1 0x44 CALLDATASIZE LT ISZERO PUSH2 0x11E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1215 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x121F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP9 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP7 SWAP1 SSTORE DUP1 MLOAD DUP7 DUP2 MSTORE SWAP1 MLOAD SWAP3 SWAP4 SWAP3 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x60 PUSH1 0x64 CALLDATASIZE LT ISZERO PUSH2 0x1296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x3 SLOAD SWAP1 SWAP5 POP PUSH2 0x12E5 SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x12D9 SWAP1 DUP9 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1606 AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1667 AND JUMP JUMPDEST SWAP3 POP PUSH1 0x4 SLOAD DUP4 GT ISZERO PUSH2 0x12F7 JUMPI PUSH1 0x4 SLOAD SWAP3 POP JUMPDEST PUSH1 0x0 NOT DUP5 LT ISZERO PUSH2 0x1336 JUMPI PUSH2 0x1311 DUP5 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x167E AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE JUMPDEST PUSH2 0x1346 DUP6 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x167E AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP3 POP PUSH2 0x1372 SWAP1 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x167E AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP9 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x13A7 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1690 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE DUP4 GT ISZERO PUSH2 0x143C JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x13F3 SWAP1 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x1690 AND JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 SLOAD DUP4 MLOAD DUP8 DUP2 MSTORE SWAP4 MLOAD SWAP1 DUP3 AND SWAP4 SWAP2 DUP12 AND SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16A0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG3 JUMPDEST DUP6 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP8 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16A0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 PUSH1 0x44 CALLDATASIZE LT ISZERO PUSH2 0x14AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14C7 PUSH2 0x2710 PUSH2 0x12D9 PUSH1 0x3 SLOAD DUP8 PUSH2 0x1606 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH1 0x4 SLOAD DUP4 GT ISZERO PUSH2 0x14D9 JUMPI PUSH1 0x4 SLOAD SWAP3 POP JUMPDEST PUSH2 0x14E9 DUP5 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x167E AND JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP3 POP PUSH2 0x150C SWAP1 DUP6 PUSH4 0xFFFFFFFF PUSH2 0x167E AND JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x153E SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1690 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE DUP4 GT ISZERO PUSH2 0x15D1 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x158A SWAP1 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x1690 AND JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 SLOAD DUP4 MLOAD DUP8 DUP2 MSTORE SWAP4 MLOAD SWAP2 AND SWAP3 CALLER SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16A0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND SWAP2 CALLER SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16A0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 ISZERO ISZERO PUSH2 0x1619 JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x1635 JUMP JUMPDEST POP DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 ISZERO ISZERO PUSH2 0x1629 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x1631 JUMPI INVALID JUMPDEST DUP1 SWAP2 POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 DUP2 ISZERO ISZERO PUSH2 0x1675 JUMPI INVALID JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x168A JUMPI INVALID JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x1631 JUMPI INVALID STOP 0xdd CALLCODE MSTORE 0xad SHL 0xe2 0xc8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 0xf5 GAS 0x4d 0xf5 0x23 0xb3 0xef LOG1 PUSH6 0x627A7A723058 KECCAK256 0xbf 0xc6 0xdb 0xe9 0xab 0xbb 0xa8 DUP3 SWAP16 PUSH13 0x33F5F3CE5F6727B6891C5BC4A5 0xd7 0xed NUMBER 0xc3 0xfc 0xdd 0x3f SGT PUSH12 0x2900000000000000000000 ",
							"sourceMap": "10044:4932:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10112:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10112:18:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;10112:18:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12868:186;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;12868:186:0;-1:-1:-1;;;;;12868:186:0;;;;;;;12122:302;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;12122:302:0;-1:-1:-1;;;;;12122:302:0;;;;;;;10228:22;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10228:22:0;;;;;;;;;;;;;;;;;;;;;;8774:149;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;8774:149:0;-1:-1:-1;;;;;8774:149:0;;;;;13120:218;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13120:218:0;;;;;;;;;;;;;;;;;;;;11346:362;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;11346:362:0;-1:-1:-1;;;;;11346:362:0;;;;;;;;;;;;10191:30;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10191:30:0;;;;;;;;-1:-1:-1;;;;;10191:30:0;;;;;;;;;;;;;;2982:40;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2982:40:0;-1:-1:-1;;;;;2982:40:0;;;;;10164:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10164:20:0;;;;3148:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3148:26:0;;;;2084:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2084:24:0;;;;8216:94;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8216:94:0;;;;8488:124;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;8488:124:0;-1:-1:-1;;;;;8488:124:0;;;;;4782:61;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4782:61:0;-1:-1:-1;;;;;4782:61:0;;;;;;;;;;7596:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7596:26:0;;;;11793:244;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;11793:244:0;-1:-1:-1;;;;;11793:244:0;;;;;8037:92;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8037:92:0;;;;8620:87;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8620:87:0;;;;1193:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1193:20:0;;;;10137;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10137:20:0;;;;10935:326;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;10935:326:0;-1:-1:-1;;;;;10935:326:0;;;;;;;1353:63;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1353:63:0;;;;14249:392;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;14249:392:0;;;;;;;13502:266;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;13502:266:0;;;;;13999:242;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;13999:242:0;;;;;12509:293;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;12509:293:0;-1:-1:-1;;;;;12509:293:0;;;;;;;;;;3110:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3110:31:0;;;;8715:46;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;8715:46:0;-1:-1:-1;;;;;8715:46:0;;;;;8931:164;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;8931:164:0;-1:-1:-1;;;;;8931:164:0;;;;;4852:42;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4852:42:0;;;;1765:151;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1765:151:0;-1:-1:-1;;;;;1765:151:0;;;;;9103:329;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;9103:329:0;-1:-1:-1;;;;;9103:329:0;;;;;10112:18;;;;;;;;;;;;;;;-1:-1:-1;;10112:18:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;12868:186::-;1565:5;;-1:-1:-1;;;;;1565:5:0;1551:10;:19;1543:28;;;;;;12941:10;:17;;-1:-1:-1;;;;;12941:17:0;;;;-1:-1:-1;;12969:34:0;-1:-1:-1;;;;;12969:34:0;;;;;;;;13019:27;;;;;;;;;;;;;;;;;12868:186;:::o;12122:302::-;12193:6;3327:8;3309;:26;3307:29;3299:38;;;;;;12216:10;;-1:-1:-1;;;12216:10:0;;;;12212:205;;;12272:15;;12250:84;;;;;;12305:10;12250:84;;;;-1:-1:-1;;;;;12250:84:0;;;;;;;;;;;;;;;12272:15;;;;;12250:54;;:84;;;;;12272:15;;12250:84;;;;;;;12272:15;;12250:84;;;5:2:-1;;;;30:1;27;20:12;5:2;12250:84:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12250:84:0;;;;12243:91;;12212:205;12374:31;12388:8;12398:6;12374:13;:31::i;:::-;12122:302;;;:::o;10228:22::-;;;-1:-1:-1;;;10228:22:0;;;;;:::o;8774:149::-;1565:5;;-1:-1:-1;;;;;1565:5:0;1551:10;:19;1543:28;;;;;;-1:-1:-1;;;;;8844:24:0;;;;;;:13;:24;;;;;;;;;:31;;-1:-1:-1;;8844:31:0;8871:4;8844:31;;;8890:25;;;;;;;;;;;;;;;;;8774:149;:::o;13120:218::-;13189:10;;13168:4;;-1:-1:-1;;;13189:10:0;;;;13185:146;;;13237:15;;;;;;;;;-1:-1:-1;;;;;13237:15:0;-1:-1:-1;;;;;13223:42:0;;:44;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13223:44:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13223:44:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;13223:44:0;;-1:-1:-1;13216:51:0;;13185:146;-1:-1:-1;13307:12:0;;13185:146;13120:218;:::o;11346:362::-;7772:6;;-1:-1:-1;;;7772:6:0;;;;7771:7;7763:16;;;;;;-1:-1:-1;;;;;11450:20:0;;;;;;:13;:20;;;;;;;;11449:21;11441:30;;;;;;11486:10;;-1:-1:-1;;;11486:10:0;;;;11482:219;;;11542:15;;11520:91;;;;;;11580:10;11520:91;;;;-1:-1:-1;;;;;11520:91:0;;;;;;;;;;;;;;;;;;;;;;11542:15;;;;;11520:59;;:91;;;;;11542:15;;11520:91;;;;;;;11542:15;;11520:91;;;5:2:-1;;;;30:1;27;20:12;11482:219:0;11651:38;11670:5;11677:3;11682:6;11651:18;:38::i;10191:30::-;;;-1:-1:-1;;;;;10191:30:0;;:::o;2982:40::-;;;;;;;;;;;;;:::o;10164:20::-;;;;:::o;3148:26::-;;;;:::o;2084:24::-;;;;:::o;8216:94::-;1565:5;;-1:-1:-1;;;;;1565:5:0;1551:10;:19;1543:28;;;;;;7932:6;;-1:-1:-1;;;7932:6:0;;;;7924:15;;;;;;;;8279:5;8270:14;;-1:-1:-1;;8270:14:0;;;8295:9;;;;8279:5;8295:9;8216:94::o;8488:124::-;-1:-1:-1;;;;;8583:21:0;;8559:4;8583:21;;;:13;:21;;;;;;;;8488:124;;;;:::o;4782:61::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;7596:26::-;;;-1:-1:-1;;;7596:26:0;;;;;:::o;11793:244::-;11871:10;;11850:4;;-1:-1:-1;;;11871:10:0;;;;11867:163;;;11927:15;;11905:53;;;;;;-1:-1:-1;;;;;11905:53:0;;;;;;;;;11927:15;;;;;11905:48;;:53;;;;;;;;;;;;;;11927:15;;11905:53;;;5:2:-1;;;;30:1;27;20:12;5:2;11905:53:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11905:53:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;11905:53:0;;-1:-1:-1;11898:60:0;;11867:163;11998:20;12014:3;11998:15;:20::i;:::-;11991:27;;;;8037:92;1565:5;;-1:-1:-1;;;;;1565:5:0;1551:10;:19;1543:28;;;;;;7772:6;;-1:-1:-1;;;7772:6:0;;;;7771:7;7763:16;;;;;;8092:6;:13;;-1:-1:-1;;8092:13:0;-1:-1:-1;;;8092:13:0;;;8116:7;;;;8092:6;8116:7;8037:92::o;8620:87::-;8667:7;8694:5;-1:-1:-1;;;;;8694:5:0;8620:87;:::o;1193:20::-;;;-1:-1:-1;;;;;1193:20:0;;:::o;10137:::-;;;;;;;;;;;;;;;-1:-1:-1;;10137:20:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10935:326;7772:6;;-1:-1:-1;;;7772:6:0;;;;7771:7;7763:16;;;;;;11034:10;11020:25;;;;:13;:25;;;;;;;;11019:26;11011:35;;;;;;11061:10;;-1:-1:-1;;;11061:10:0;;;;11057:197;;;11117:15;;11095:80;;;;;;11151:10;11095:80;;;;-1:-1:-1;;;;;11095:80:0;;;;;;;;;;;;;;;11117:15;;;;;11095:55;;:80;;;;;11117:15;;11095:80;;;;;;;11117:15;;11095:80;;;5:2:-1;;;;30:1;27;20:12;5:2;11095:80:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11095:80:0;;;;11088:87;;11057:197;11215:27;11230:3;11235:6;11215:14;:27::i;:::-;10935:326;;:::o;1353:63::-;1390:5;:18;;-1:-1:-1;;1390:18:0;1398:10;1390:18;;;1353:63::o;14249:392::-;1565:5;;-1:-1:-1;;;;;1565:5:0;1551:10;:19;1543:28;;;;;;14447:2;14430:19;;14422:28;;;;;;14481:2;14469:14;;14461:23;;;;;;14497:15;:32;;;14571:8;;14553:27;;:9;;14567:2;:12;14553:27;:13;:27;:::i;:::-;14540:10;:40;;;14605:15;;14598:35;;;;;;;;;;;;;;;;;;;;;;;;;;14249:392;;:::o;13502:266::-;1565:5;;-1:-1:-1;;;;;1565:5:0;1551:10;:19;1543:28;;;;;;13590:12;;13566:21;;;:36;13558:45;;;;;;13649:15;13658:5;;-1:-1:-1;;;;;13658:5:0;13649:15;;:8;:15;;;;;;13622:24;;;:42;13614:51;;;;;;13678:15;13687:5;;-1:-1:-1;;;;;13687:5:0;13678:15;;:8;:15;;;;;;;;;:25;;;;;;13687:5;13714:22;;;;;;13747:13;;;;;;;;;;;;;;;;;13502:266;:::o;13999:242::-;1565:5;;-1:-1:-1;;;;;1565:5:0;1551:10;:19;1543:28;;;;;;14064:12;;:22;-1:-1:-1;14064:22:0;14056:31;;;;;;14106:15;14115:5;;-1:-1:-1;;;;;14115:5:0;14106:15;;:8;:15;;;;;;:25;-1:-1:-1;14106:25:0;14098:34;;;;;;14145:12;:22;;;;;;;:12;14187:5;;-1:-1:-1;;;;;14187:5:0;14178:15;;:8;:15;;;;;;;;;:25;;;;;;;14219:14;;;;;;;;;;;;;;;;;13999:242;:::o;12509:293::-;12618:10;;12587:14;;-1:-1:-1;;;12618:10:0;;;;12614:181;;;12666:15;;12652:58;;;;;;-1:-1:-1;;;;;12652:58:0;;;;;;;;;;;;;;;;12666:15;;;;;12652:40;;:58;;;;;;;;;;;;;;12666:15;;12652:58;;;5:2:-1;;;;30:1;27;20:12;5:2;12652:58:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12652:58:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;12652:58:0;;-1:-1:-1;12645:65:0;;12614:181;12750:33;12766:6;12774:8;12750:15;:33::i;:::-;12743:40;;12614:181;12509:293;;;;:::o;3110:31::-;;;;:::o;8715:46::-;;;;;;;;;;;;;;;:::o;8931:164::-;1565:5;;-1:-1:-1;;;;;1565:5:0;1551:10;:19;1543:28;;;;;;-1:-1:-1;;;;;9007:27:0;;9037:5;9007:27;;;:13;:27;;;;;;;;;:35;;-1:-1:-1;;9007:35:0;;;9057:30;;;;;;;;;;;;;;;;;8931:164;:::o;4852:42::-;-1:-1:-1;;4852:42:0;:::o;1765:151::-;1565:5;;-1:-1:-1;;;;;1565:5:0;1551:10;:19;1543:28;;;;;;-1:-1:-1;;;;;1842:22:0;;;1838:71;;1881:5;:16;;-1:-1:-1;;1881:16:0;-1:-1:-1;;;;;1881:16:0;;;;;1838:71;1765:151;:::o;9103:329::-;9236:15;1565:5;;-1:-1:-1;;;;;1565:5:0;1551:10;:19;1543:28;;;;;;-1:-1:-1;;;;;9193:31:0;;;;;;:13;:31;;;;;;;;9185:40;;;;;;;;9254:27;9264:16;9254:9;:27::i;:::-;-1:-1:-1;;;;;9292:26:0;;9321:1;9292:26;;;:8;:26;;;;;;;;:30;;;;9333:12;:26;;;;;;;9375:49;;;;;;;;;;;;9236:45;;-1:-1:-1;9375:49:0;;;;;;;;;9103:329;;:::o;6343:573::-;6414:6;3327:8;3309;:26;3307:29;3299:38;;;;;;6754:11;;;;;6753:53;;-1:-1:-1;6779:10:0;6771:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;6771:29:0;;;;;;;;;;:34;;6753:53;6751:56;6743:65;;;;;;6829:10;6821:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;6821:29:0;;;;;;;;;;;;:38;;;6870;;;;;;;6821:29;;6829:10;6870:38;;;;;;;;;;;6343:573;;;:::o;5184:912::-;5289:15;;;5270:6;3327:8;3309;:26;3307:29;3299:38;;;;;;-1:-1:-1;;;;;5307:14:0;;;;;;:7;:14;;;;;;;;5322:10;5307:26;;;;;;;;5527:15;;5307:26;;-1:-1:-1;5515:40:0;;5549:5;;5516:27;;:6;;:27;:10;:27;:::i;:::-;5515:33;:40;:33;:40;:::i;:::-;5504:51;;5576:10;;5570:3;:16;5566:65;;;5609:10;;5603:16;;5566:65;-1:-1:-1;;5645:10:0;:21;5641:105;;;5712:22;:10;5727:6;5712:22;:14;:22;:::i;:::-;-1:-1:-1;;;;;5683:14:0;;;;;;:7;:14;;;;;;;;5698:10;5683:26;;;;;;;:51;5641:105;5774:15;:6;5785:3;5774:15;:10;:15;:::i;:::-;-1:-1:-1;;;;;5818:15:0;;;;;;:8;:15;;;;;;5756:33;;-1:-1:-1;5818:27:0;;5838:6;5818:27;:19;:27;:::i;:::-;-1:-1:-1;;;;;5800:15:0;;;;;;;:8;:15;;;;;;:45;;;;5872:13;;;;;;;:29;;5890:10;5872:29;:17;:29;:::i;:::-;-1:-1:-1;;;;;5856:13:0;;;;;;:8;:13;;;;;:45;;;;5916:7;;5912:129;;;5958:15;5967:5;;-1:-1:-1;;;;;5967:5:0;5958:15;;:8;:15;;;;;;:24;;5978:3;5958:24;:19;:24;:::i;:::-;5940:15;5949:5;;-1:-1:-1;;;;;5949:5:0;;;5940:15;;:8;:15;;;;;;;;:42;;;;6018:5;;6002:27;;;;;;;6018:5;;;;6002:27;;;;-1:-1:-1;;;;;;;;;;;6002:27:0;;;;;;;5912:129;6072:3;-1:-1:-1;;;;;6056:32:0;6065:5;-1:-1:-1;;;;;6056:32:0;-1:-1:-1;;;;;;;;;;;6077:10:0;6056:32;;;;;;;;;;;;;;;;;;5184:912;;;;;;;:::o;4331:116::-;-1:-1:-1;;;;;4423:16:0;4391:12;4423:16;;;:8;:16;;;;;;;4331:116::o;3530:583::-;3616:8;;3597:6;3327:8;3309;:26;3307:29;3299:38;;;;;;3627:40;3661:5;3628:27;3639:15;;3628:6;:10;;:27;;;;:::i;3627:40::-;3616:51;;3688:10;;3682:3;:16;3678:65;;;3721:10;;3715:16;;3678:65;3771:15;:6;3782:3;3771:15;:10;:15;:::i;:::-;3829:10;3820:20;;;;:8;:20;;;;;;3753:33;;-1:-1:-1;3820:32:0;;3845:6;3820:32;:24;:32;:::i;:::-;3806:10;3797:20;;;;:8;:20;;;;;;:55;;;;-1:-1:-1;;;;;3879:13:0;;;;;;:29;;3897:10;3879:29;:17;:29;:::i;:::-;-1:-1:-1;;;;;3863:13:0;;;;;;:8;:13;;;;;:45;;;;3923:7;;3919:134;;;3965:15;3974:5;;-1:-1:-1;;;;;3974:5:0;3965:15;;:8;:15;;;;;;:24;;3985:3;3965:24;:19;:24;:::i;:::-;3947:15;3956:5;;-1:-1:-1;;;;;3956:5:0;;;3947:15;;:8;:15;;;;;;;;:42;;;;4030:5;;4009:32;;;;;;;4030:5;;;4018:10;;-1:-1:-1;;;;;;;;;;;4009:32:0;;;;;;;;3919:134;4068:37;;;;;;;;-1:-1:-1;;;;;4068:37:0;;;4077:10;;-1:-1:-1;;;;;;;;;;;4068:37:0;;;;;;;;3530:583;;;;;:::o;177:208::-;235:7;;259:6;;255:47;;;289:1;282:8;;;;255:47;-1:-1:-1;324:5:0;;;328:1;324;:5;347;;;;;;;;:10;340:18;;;;376:1;369:8;;177:208;;;;;;:::o;7249:145::-;-1:-1:-1;;;;;7361:15:0;;;7327:14;7361:15;;;:7;:15;;;;;;;;:25;;;;;;;;;;;;;7249:145::o;393:288::-;451:7;550:9;566:1;562;:5;;;;;;;;;393:288;-1:-1:-1;;;;393:288:0:o;689:123::-;747:7;774:6;;;;767:14;;;;-1:-1:-1;799:5:0;;;689:123::o;820:147::-;878:7;910:5;;;933:6;;;;926:14;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1173400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"MAX_UINT()": "847",
								"_totalSupply()": "626",
								"addBlackList(address)": "22038",
								"allowance(address,address)": "infinite",
								"allowed(address,address)": "926",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"balances(address)": "707",
								"basisPointsRate()": "978",
								"decimals()": "582",
								"deprecate(address)": "21984",
								"deprecated()": "536",
								"destroyBlackFunds(address)": "infinite",
								"getBlackListStatus(address)": "913",
								"getOwner()": "933",
								"isBlackListed(address)": "1159",
								"issue(uint256)": "43605",
								"maximumFee()": "604",
								"name()": "infinite",
								"ownable()": "20837",
								"owner()": "955",
								"pause()": "22153",
								"paused()": "800",
								"redeem(uint256)": "43627",
								"removeBlackList(address)": "22582",
								"setParams(uint256,uint256)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "infinite",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "21586",
								"unpause()": "21977",
								"upgradedAddress()": "691"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 10044,
									"end": 14976,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "MSTORE"
								},
								{
									"begin": 7617,
									"end": 7622,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 7596,
									"end": 7622,
									"name": "DUP1"
								},
								{
									"begin": 7596,
									"end": 7622,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MUL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 7596,
									"end": 7622,
									"name": "AND"
								},
								{
									"begin": 7596,
									"end": 7622,
									"name": "DUP2"
								},
								{
									"begin": 7596,
									"end": 7622,
									"name": "SSTORE"
								},
								{
									"begin": 3110,
									"end": 3141,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 3110,
									"end": 3141,
									"name": "DUP2"
								},
								{
									"begin": 3110,
									"end": 3141,
									"name": "SWAP1"
								},
								{
									"begin": 3110,
									"end": 3141,
									"name": "SSTORE"
								},
								{
									"begin": 3148,
									"end": 3174,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 3148,
									"end": 3174,
									"name": "SSTORE"
								},
								{
									"begin": 10554,
									"end": 10850,
									"name": "CALLVALUE"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 10554,
									"end": 10850,
									"name": "POP"
								},
								{
									"begin": 10554,
									"end": 10850,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 10554,
									"end": 10850,
									"name": "MLOAD"
								},
								{
									"begin": 10554,
									"end": 10850,
									"name": "PUSHSIZE"
								},
								{
									"begin": 10554,
									"end": 10850,
									"name": "CODESIZE"
								},
								{
									"begin": 10554,
									"end": 10850,
									"name": "SUB"
								},
								{
									"begin": 10554,
									"end": 10850,
									"name": "DUP1"
								},
								{
									"begin": 10554,
									"end": 10850,
									"name": "PUSHSIZE"
								},
								{
									"begin": 10554,
									"end": 10850,
									"name": "DUP4"
								},
								{
									"begin": 10554,
									"end": 10850,
									"name": "CODECOPY"
								},
								{
									"begin": 10554,
									"end": 10850,
									"name": "DUP2"
								},
								{
									"begin": 10554,
									"end": 10850,
									"name": "ADD"
								},
								{
									"begin": 10554,
									"end": 10850,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 10554,
									"end": 10850,
									"name": "SWAP1"
								},
								{
									"begin": 10554,
									"end": 10850,
									"name": "DUP2"
								},
								{
									"begin": 10554,
									"end": 10850,
									"name": "MSTORE"
								},
								{
									"begin": 10554,
									"end": 10850,
									"name": "DUP2"
								},
								{
									"begin": 10554,
									"end": 10850,
									"name": "MLOAD"
								},
								{
									"begin": 10554,
									"end": 10850,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 10554,
									"end": 10850,
									"name": "DUP1"
								},
								{
									"begin": 10554,
									"end": 10850,
									"name": "DUP5"
								},
								{
									"begin": 10554,
									"end": 10850,
									"name": "ADD"
								},
								{
									"begin": 10554,
									"end": 10850,
									"name": "MLOAD"
								},
								{
									"begin": 10554,
									"end": 10850,
									"name": "SWAP3"
								},
								{
									"begin": 10554,
									"end": 10850,
									"name": "DUP5"
								},
								{
									"begin": 10554,
									"end": 10850,
									"name": "ADD"
								},
								{
									"begin": 10554,
									"end": 10850,
									"name": "MLOAD"
								},
								{
									"begin": 10554,
									"end": 10850,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 10554,
									"end": 10850,
									"name": "DUP6"
								},
								{
									"begin": 10554,
									"end": 10850,
									"name": "ADD"
								},
								{
									"begin": 10554,
									"end": 10850,
									"name": "MLOAD"
								},
								{
									"begin": 10660,
									"end": 10672,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 10660,
									"end": 10689,
									"name": "DUP5"
								},
								{
									"begin": 10660,
									"end": 10689,
									"name": "SWAP1"
								},
								{
									"begin": 10660,
									"end": 10689,
									"name": "SSTORE"
								},
								{
									"begin": 10554,
									"end": 10850,
									"name": "SWAP4"
								},
								{
									"begin": 10554,
									"end": 10850,
									"name": "DUP6"
								},
								{
									"begin": 10554,
									"end": 10850,
									"name": "ADD"
								},
								{
									"begin": 10700,
									"end": 10712,
									"name": "DUP1"
								},
								{
									"begin": 10700,
									"end": 10712,
									"name": "MLOAD"
								},
								{
									"begin": 10554,
									"end": 10850,
									"name": "SWAP4"
								},
								{
									"begin": 10554,
									"end": 10850,
									"name": "SWAP6"
								},
								{
									"begin": 10554,
									"end": 10850,
									"name": "SWAP1"
								},
								{
									"begin": 10554,
									"end": 10850,
									"name": "SWAP5"
								},
								{
									"begin": 10554,
									"end": 10850,
									"name": "SWAP2"
								},
								{
									"begin": 10554,
									"end": 10850,
									"name": "ADD"
								},
								{
									"begin": 10554,
									"end": 10850,
									"name": "SWAP3"
								},
								{
									"begin": 10554,
									"end": 10850,
									"name": "SWAP1"
								},
								{
									"begin": 10554,
									"end": 10850,
									"name": "SWAP2"
								},
								{
									"begin": 10700,
									"end": 10712,
									"name": "PUSH [tag]",
									"value": "4"
								},
								{
									"begin": 10700,
									"end": 10712,
									"name": "SWAP2"
								},
								{
									"begin": 10700,
									"end": 10704,
									"name": "PUSH",
									"value": "7"
								},
								{
									"begin": 10700,
									"end": 10704,
									"name": "SWAP2"
								},
								{
									"begin": 10700,
									"end": 10712,
									"name": "DUP7"
								},
								{
									"begin": 10700,
									"end": 10712,
									"name": "ADD"
								},
								{
									"begin": 10700,
									"end": 10712,
									"name": "SWAP1"
								},
								{
									"begin": 10700,
									"end": 10712,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": 10700,
									"end": 10712,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 10700,
									"end": 10712,
									"name": "tag",
									"value": "4"
								},
								{
									"begin": 10700,
									"end": 10712,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 10723,
									"end": 10739,
									"name": "DUP2"
								},
								{
									"begin": 10723,
									"end": 10739,
									"name": "MLOAD"
								},
								{
									"begin": 10723,
									"end": 10739,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 10723,
									"end": 10739,
									"name": "SWAP1"
								},
								{
									"begin": 10723,
									"end": 10729,
									"name": "PUSH",
									"value": "8"
								},
								{
									"begin": 10723,
									"end": 10729,
									"name": "SWAP1"
								},
								{
									"begin": 10723,
									"end": 10739,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 10723,
									"end": 10739,
									"name": "DUP6"
								},
								{
									"begin": 10723,
									"end": 10739,
									"name": "ADD"
								},
								{
									"begin": 10723,
									"end": 10739,
									"name": "SWAP1"
								},
								{
									"begin": 10723,
									"end": 10739,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": 10723,
									"end": 10739,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 10723,
									"end": 10739,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 10723,
									"end": 10739,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 10750,
									"end": 10758,
									"name": "PUSH",
									"value": "9"
								},
								{
									"begin": 10750,
									"end": 10770,
									"name": "SSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 10781,
									"end": 10796,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 10790,
									"end": 10795,
									"name": "DUP1"
								},
								{
									"begin": 10790,
									"end": 10795,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 10790,
									"end": 10795,
									"name": "AND"
								},
								{
									"begin": 10781,
									"end": 10796,
									"name": "DUP2"
								},
								{
									"begin": 10781,
									"end": 10796,
									"name": "MSTORE"
								},
								{
									"begin": 10781,
									"end": 10789,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 10781,
									"end": 10796,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 10781,
									"end": 10796,
									"name": "MSTORE"
								},
								{
									"begin": 10781,
									"end": 10796,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 10781,
									"end": 10796,
									"name": "SWAP1"
								},
								{
									"begin": 10781,
									"end": 10796,
									"name": "KECCAK256"
								},
								{
									"begin": 10781,
									"end": 10813,
									"name": "SSTORE"
								},
								{
									"begin": 10824,
									"end": 10834,
									"name": "PUSH",
									"value": "A"
								},
								{
									"begin": 10824,
									"end": 10842,
									"name": "DUP1"
								},
								{
									"begin": 10824,
									"end": 10842,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MUL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 10824,
									"end": 10842,
									"name": "AND"
								},
								{
									"begin": 10824,
									"end": 10842,
									"name": "SWAP1"
								},
								{
									"begin": 10824,
									"end": 10842,
									"name": "SSTORE"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "JUMP"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "tag",
									"value": "5"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "JUMPDEST"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "DUP3"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "DUP1"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "SLOAD"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "DUP2"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "AND"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "ISZERO"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "MUL"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "SUB"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "AND"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "SWAP1"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "DIV"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "SWAP1"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "MSTORE"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "KECCAK256"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "SWAP1"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "ADD"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "SWAP1"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "DIV"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "DUP2"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "ADD"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "SWAP3"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "DUP3"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "LT"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "JUMPI"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "DUP1"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "MLOAD"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "NOT"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "AND"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "DUP4"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "DUP1"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "ADD"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "OR"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "DUP6"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "SSTORE"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "JUMP"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "JUMPDEST"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "DUP3"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "DUP1"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "ADD"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "ADD"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "DUP6"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "SSTORE"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "DUP3"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "ISZERO"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "JUMPI"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "SWAP2"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "DUP3"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "ADD"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "JUMPDEST"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "DUP3"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "DUP2"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "GT"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "ISZERO"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "JUMPI"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "DUP3"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "MLOAD"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "DUP3"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "SSTORE"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "SWAP2"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "ADD"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "SWAP2"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "SWAP1"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "ADD"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "SWAP1"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "JUMP"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "SWAP3"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "SWAP2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "JUMPDEST"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "POP"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "SWAP1"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "JUMPDEST"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "PUSH [tag]",
									"value": "14"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "SWAP2"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "SWAP1"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "tag",
									"value": "15"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "JUMPDEST"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "DUP1"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "DUP3"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "GT"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "ISZERO"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "JUMPI"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "DUP2"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "SSTORE"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "ADD"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "JUMP"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "tag",
									"value": "14"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "JUMPDEST"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "SWAP1"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "JUMPDEST"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "DUP1"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "CODECOPY"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 10044,
									"end": 14976,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820bfc6dbe9abbba8829f6c33f5f3ce5f6727b6891c5bc4a5d7ed43c3fcdd3f136b0029",
									".code": [
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "MSTORE"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "LT"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "JUMPI"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "DIV"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "AND"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "DUP2"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "EQ"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "JUMPI"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "DUP1"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH",
											"value": "753C30C"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "EQ"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "JUMPI"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "DUP1"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "EQ"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "JUMPI"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "DUP1"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH",
											"value": "E136B19"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "EQ"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "JUMPI"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "DUP1"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH",
											"value": "ECB93C0"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "EQ"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "JUMPI"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "DUP1"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "EQ"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "JUMPI"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "DUP1"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "EQ"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "JUMPI"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "DUP1"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH",
											"value": "26976E3F"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "EQ"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "JUMPI"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "DUP1"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH",
											"value": "27E235E3"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "EQ"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "JUMPI"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "DUP1"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "EQ"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "JUMPI"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "DUP1"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH",
											"value": "35390714"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "EQ"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "JUMPI"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "DUP1"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH",
											"value": "3EAAF86B"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "EQ"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "JUMPI"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "DUP1"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH",
											"value": "3F4BA83A"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "EQ"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "JUMPI"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "DUP1"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH",
											"value": "59BF1ABE"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "EQ"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "JUMPI"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "DUP1"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH",
											"value": "5C658165"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "EQ"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "JUMPI"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "DUP1"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH",
											"value": "5C975ABB"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "EQ"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "JUMPI"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "DUP1"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "EQ"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "JUMPI"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "DUP1"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH",
											"value": "8456CB59"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "EQ"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "JUMPI"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "DUP1"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH",
											"value": "893D20E8"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "EQ"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "JUMPI"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "DUP1"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "EQ"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "JUMPI"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "DUP1"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "EQ"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "JUMPI"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "DUP1"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "EQ"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "JUMPI"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "DUP1"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH",
											"value": "B38854BE"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "EQ"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "JUMPI"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "DUP1"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH",
											"value": "C0324C77"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "EQ"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "JUMPI"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "DUP1"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH",
											"value": "CC872B66"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "EQ"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "JUMPI"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "DUP1"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH",
											"value": "DB006A75"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "EQ"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "JUMPI"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "DUP1"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "EQ"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "JUMPI"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "DUP1"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH",
											"value": "DD644F72"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "EQ"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "JUMPI"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "DUP1"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH",
											"value": "E47D6060"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "EQ"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "JUMPI"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "DUP1"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH",
											"value": "E4997DC5"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "EQ"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "JUMPI"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "DUP1"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH",
											"value": "E5B5019A"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "EQ"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "JUMPI"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "DUP1"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "EQ"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "JUMPI"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "DUP1"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH",
											"value": "F3BDC228"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "EQ"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "JUMPI"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "JUMPDEST"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "DUP1"
										},
										{
											"begin": 10044,
											"end": 14976,
											"name": "REVERT"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "JUMPDEST"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "POP"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "JUMP"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "JUMPDEST"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "DUP1"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "MLOAD"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "DUP1"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "DUP3"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "MSTORE"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "DUP4"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "MLOAD"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "DUP2"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "DUP4"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "ADD"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "MSTORE"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "DUP4"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "MLOAD"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "SWAP2"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "SWAP3"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "DUP4"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "SWAP3"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "SWAP1"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "DUP4"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "ADD"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "SWAP2"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "DUP6"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "ADD"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "SWAP1"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "DUP1"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "DUP4"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "DUP4"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "POP"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "POP"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "POP"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "SWAP1"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "POP"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "SWAP1"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "DUP2"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "ADD"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "SWAP1"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "AND"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "DUP1"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "ISZERO"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "JUMPI"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "DUP1"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "DUP3"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "SUB"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "DUP1"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "MLOAD"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "DUP4"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "SUB"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "EXP"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "SUB"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "NOT"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "AND"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "DUP2"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "MSTORE"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "ADD"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "SWAP2"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "POP"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "JUMPDEST"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "POP"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "SWAP3"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "POP"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "POP"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "POP"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "MLOAD"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "DUP1"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "SWAP2"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "SUB"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "SWAP1"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "RETURN"
										},
										{
											"begin": 12868,
											"end": 13054,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 12868,
											"end": 13054,
											"name": "JUMPDEST"
										},
										{
											"begin": 12868,
											"end": 13054,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 12868,
											"end": 13054,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12868,
											"end": 13054,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12868,
											"end": 13054,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12868,
											"end": 13054,
											"name": "AND"
										},
										{
											"begin": 12868,
											"end": 13054,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 12868,
											"end": 13054,
											"name": "JUMP"
										},
										{
											"begin": 12868,
											"end": 13054,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 12868,
											"end": 13054,
											"name": "JUMPDEST"
										},
										{
											"begin": 12868,
											"end": 13054,
											"name": "STOP"
										},
										{
											"begin": 12122,
											"end": 12424,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 12122,
											"end": 12424,
											"name": "JUMPDEST"
										},
										{
											"begin": 12122,
											"end": 12424,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 12122,
											"end": 12424,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12122,
											"end": 12424,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12122,
											"end": 12424,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12122,
											"end": 12424,
											"name": "AND"
										},
										{
											"begin": 12122,
											"end": 12424,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 12122,
											"end": 12424,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12122,
											"end": 12424,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 12122,
											"end": 12424,
											"name": "JUMP"
										},
										{
											"begin": 10228,
											"end": 10250,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 10228,
											"end": 10250,
											"name": "JUMPDEST"
										},
										{
											"begin": 10228,
											"end": 10250,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 10228,
											"end": 10250,
											"name": "POP"
										},
										{
											"begin": 10228,
											"end": 10250,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 10228,
											"end": 10250,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 10228,
											"end": 10250,
											"name": "JUMP"
										},
										{
											"begin": 10228,
											"end": 10250,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 10228,
											"end": 10250,
											"name": "JUMPDEST"
										},
										{
											"begin": 10228,
											"end": 10250,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10228,
											"end": 10250,
											"name": "DUP1"
										},
										{
											"begin": 10228,
											"end": 10250,
											"name": "MLOAD"
										},
										{
											"begin": 10228,
											"end": 10250,
											"name": "SWAP2"
										},
										{
											"begin": 10228,
											"end": 10250,
											"name": "ISZERO"
										},
										{
											"begin": 10228,
											"end": 10250,
											"name": "ISZERO"
										},
										{
											"begin": 10228,
											"end": 10250,
											"name": "DUP3"
										},
										{
											"begin": 10228,
											"end": 10250,
											"name": "MSTORE"
										},
										{
											"begin": 10228,
											"end": 10250,
											"name": "MLOAD"
										},
										{
											"begin": 10228,
											"end": 10250,
											"name": "SWAP1"
										},
										{
											"begin": 10228,
											"end": 10250,
											"name": "DUP2"
										},
										{
											"begin": 10228,
											"end": 10250,
											"name": "SWAP1"
										},
										{
											"begin": 10228,
											"end": 10250,
											"name": "SUB"
										},
										{
											"begin": 10228,
											"end": 10250,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10228,
											"end": 10250,
											"name": "ADD"
										},
										{
											"begin": 10228,
											"end": 10250,
											"name": "SWAP1"
										},
										{
											"begin": 10228,
											"end": 10250,
											"name": "RETURN"
										},
										{
											"begin": 8774,
											"end": 8923,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 8774,
											"end": 8923,
											"name": "JUMPDEST"
										},
										{
											"begin": 8774,
											"end": 8923,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 8774,
											"end": 8923,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8774,
											"end": 8923,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8774,
											"end": 8923,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8774,
											"end": 8923,
											"name": "AND"
										},
										{
											"begin": 8774,
											"end": 8923,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 8774,
											"end": 8923,
											"name": "JUMP"
										},
										{
											"begin": 13120,
											"end": 13338,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 13120,
											"end": 13338,
											"name": "JUMPDEST"
										},
										{
											"begin": 13120,
											"end": 13338,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 13120,
											"end": 13338,
											"name": "POP"
										},
										{
											"begin": 13120,
											"end": 13338,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 13120,
											"end": 13338,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 13120,
											"end": 13338,
											"name": "JUMP"
										},
										{
											"begin": 13120,
											"end": 13338,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 13120,
											"end": 13338,
											"name": "JUMPDEST"
										},
										{
											"begin": 13120,
											"end": 13338,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13120,
											"end": 13338,
											"name": "DUP1"
										},
										{
											"begin": 13120,
											"end": 13338,
											"name": "MLOAD"
										},
										{
											"begin": 13120,
											"end": 13338,
											"name": "SWAP2"
										},
										{
											"begin": 13120,
											"end": 13338,
											"name": "DUP3"
										},
										{
											"begin": 13120,
											"end": 13338,
											"name": "MSTORE"
										},
										{
											"begin": 13120,
											"end": 13338,
											"name": "MLOAD"
										},
										{
											"begin": 13120,
											"end": 13338,
											"name": "SWAP1"
										},
										{
											"begin": 13120,
											"end": 13338,
											"name": "DUP2"
										},
										{
											"begin": 13120,
											"end": 13338,
											"name": "SWAP1"
										},
										{
											"begin": 13120,
											"end": 13338,
											"name": "SUB"
										},
										{
											"begin": 13120,
											"end": 13338,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13120,
											"end": 13338,
											"name": "ADD"
										},
										{
											"begin": 13120,
											"end": 13338,
											"name": "SWAP1"
										},
										{
											"begin": 13120,
											"end": 13338,
											"name": "RETURN"
										},
										{
											"begin": 11346,
											"end": 11708,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 11346,
											"end": 11708,
											"name": "JUMPDEST"
										},
										{
											"begin": 11346,
											"end": 11708,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 11346,
											"end": 11708,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 11346,
											"end": 11708,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11346,
											"end": 11708,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11346,
											"end": 11708,
											"name": "DUP2"
										},
										{
											"begin": 11346,
											"end": 11708,
											"name": "AND"
										},
										{
											"begin": 11346,
											"end": 11708,
											"name": "SWAP1"
										},
										{
											"begin": 11346,
											"end": 11708,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 11346,
											"end": 11708,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11346,
											"end": 11708,
											"name": "AND"
										},
										{
											"begin": 11346,
											"end": 11708,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 11346,
											"end": 11708,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11346,
											"end": 11708,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 11346,
											"end": 11708,
											"name": "JUMP"
										},
										{
											"begin": 10191,
											"end": 10221,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 10191,
											"end": 10221,
											"name": "JUMPDEST"
										},
										{
											"begin": 10191,
											"end": 10221,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 10191,
											"end": 10221,
											"name": "POP"
										},
										{
											"begin": 10191,
											"end": 10221,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 10191,
											"end": 10221,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 10191,
											"end": 10221,
											"name": "JUMP"
										},
										{
											"begin": 10191,
											"end": 10221,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 10191,
											"end": 10221,
											"name": "JUMPDEST"
										},
										{
											"begin": 10191,
											"end": 10221,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10191,
											"end": 10221,
											"name": "DUP1"
										},
										{
											"begin": 10191,
											"end": 10221,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10191,
											"end": 10221,
											"name": "SWAP1"
										},
										{
											"begin": 10191,
											"end": 10221,
											"name": "SWAP3"
										},
										{
											"begin": 10191,
											"end": 10221,
											"name": "AND"
										},
										{
											"begin": 10191,
											"end": 10221,
											"name": "DUP3"
										},
										{
											"begin": 10191,
											"end": 10221,
											"name": "MSTORE"
										},
										{
											"begin": 10191,
											"end": 10221,
											"name": "MLOAD"
										},
										{
											"begin": 10191,
											"end": 10221,
											"name": "SWAP1"
										},
										{
											"begin": 10191,
											"end": 10221,
											"name": "DUP2"
										},
										{
											"begin": 10191,
											"end": 10221,
											"name": "SWAP1"
										},
										{
											"begin": 10191,
											"end": 10221,
											"name": "SUB"
										},
										{
											"begin": 10191,
											"end": 10221,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10191,
											"end": 10221,
											"name": "ADD"
										},
										{
											"begin": 10191,
											"end": 10221,
											"name": "SWAP1"
										},
										{
											"begin": 10191,
											"end": 10221,
											"name": "RETURN"
										},
										{
											"begin": 2982,
											"end": 3022,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 2982,
											"end": 3022,
											"name": "JUMPDEST"
										},
										{
											"begin": 2982,
											"end": 3022,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 2982,
											"end": 3022,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2982,
											"end": 3022,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2982,
											"end": 3022,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2982,
											"end": 3022,
											"name": "AND"
										},
										{
											"begin": 2982,
											"end": 3022,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 2982,
											"end": 3022,
											"name": "JUMP"
										},
										{
											"begin": 10164,
											"end": 10184,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 10164,
											"end": 10184,
											"name": "JUMPDEST"
										},
										{
											"begin": 10164,
											"end": 10184,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 10164,
											"end": 10184,
											"name": "POP"
										},
										{
											"begin": 10164,
											"end": 10184,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 10164,
											"end": 10184,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 10164,
											"end": 10184,
											"name": "JUMP"
										},
										{
											"begin": 3148,
											"end": 3174,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 3148,
											"end": 3174,
											"name": "JUMPDEST"
										},
										{
											"begin": 3148,
											"end": 3174,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3148,
											"end": 3174,
											"name": "POP"
										},
										{
											"begin": 3148,
											"end": 3174,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 3148,
											"end": 3174,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 3148,
											"end": 3174,
											"name": "JUMP"
										},
										{
											"begin": 2084,
											"end": 2108,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 2084,
											"end": 2108,
											"name": "JUMPDEST"
										},
										{
											"begin": 2084,
											"end": 2108,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2084,
											"end": 2108,
											"name": "POP"
										},
										{
											"begin": 2084,
											"end": 2108,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 2084,
											"end": 2108,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 2084,
											"end": 2108,
											"name": "JUMP"
										},
										{
											"begin": 8216,
											"end": 8310,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 8216,
											"end": 8310,
											"name": "JUMPDEST"
										},
										{
											"begin": 8216,
											"end": 8310,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8216,
											"end": 8310,
											"name": "POP"
										},
										{
											"begin": 8216,
											"end": 8310,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 8216,
											"end": 8310,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 8216,
											"end": 8310,
											"name": "JUMP"
										},
										{
											"begin": 8488,
											"end": 8612,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 8488,
											"end": 8612,
											"name": "JUMPDEST"
										},
										{
											"begin": 8488,
											"end": 8612,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 8488,
											"end": 8612,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8488,
											"end": 8612,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8488,
											"end": 8612,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8488,
											"end": 8612,
											"name": "AND"
										},
										{
											"begin": 8488,
											"end": 8612,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 8488,
											"end": 8612,
											"name": "JUMP"
										},
										{
											"begin": 4782,
											"end": 4843,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 4782,
											"end": 4843,
											"name": "JUMPDEST"
										},
										{
											"begin": 4782,
											"end": 4843,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4782,
											"end": 4843,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4782,
											"end": 4843,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4782,
											"end": 4843,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4782,
											"end": 4843,
											"name": "DUP2"
										},
										{
											"begin": 4782,
											"end": 4843,
											"name": "AND"
										},
										{
											"begin": 4782,
											"end": 4843,
											"name": "SWAP1"
										},
										{
											"begin": 4782,
											"end": 4843,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 4782,
											"end": 4843,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4782,
											"end": 4843,
											"name": "AND"
										},
										{
											"begin": 4782,
											"end": 4843,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 4782,
											"end": 4843,
											"name": "JUMP"
										},
										{
											"begin": 7596,
											"end": 7622,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 7596,
											"end": 7622,
											"name": "JUMPDEST"
										},
										{
											"begin": 7596,
											"end": 7622,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 7596,
											"end": 7622,
											"name": "POP"
										},
										{
											"begin": 7596,
											"end": 7622,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 7596,
											"end": 7622,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 7596,
											"end": 7622,
											"name": "JUMP"
										},
										{
											"begin": 11793,
											"end": 12037,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 11793,
											"end": 12037,
											"name": "JUMPDEST"
										},
										{
											"begin": 11793,
											"end": 12037,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 11793,
											"end": 12037,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 11793,
											"end": 12037,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11793,
											"end": 12037,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11793,
											"end": 12037,
											"name": "AND"
										},
										{
											"begin": 11793,
											"end": 12037,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 11793,
											"end": 12037,
											"name": "JUMP"
										},
										{
											"begin": 8037,
											"end": 8129,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 8037,
											"end": 8129,
											"name": "JUMPDEST"
										},
										{
											"begin": 8037,
											"end": 8129,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8037,
											"end": 8129,
											"name": "POP"
										},
										{
											"begin": 8037,
											"end": 8129,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 8037,
											"end": 8129,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 8037,
											"end": 8129,
											"name": "JUMP"
										},
										{
											"begin": 8620,
											"end": 8707,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 8620,
											"end": 8707,
											"name": "JUMPDEST"
										},
										{
											"begin": 8620,
											"end": 8707,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8620,
											"end": 8707,
											"name": "POP"
										},
										{
											"begin": 8620,
											"end": 8707,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 8620,
											"end": 8707,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 8620,
											"end": 8707,
											"name": "JUMP"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "JUMPDEST"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "POP"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "JUMP"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "JUMPDEST"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "POP"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "JUMP"
										},
										{
											"begin": 10935,
											"end": 11261,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 10935,
											"end": 11261,
											"name": "JUMPDEST"
										},
										{
											"begin": 10935,
											"end": 11261,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 10935,
											"end": 11261,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10935,
											"end": 11261,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10935,
											"end": 11261,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10935,
											"end": 11261,
											"name": "AND"
										},
										{
											"begin": 10935,
											"end": 11261,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 10935,
											"end": 11261,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10935,
											"end": 11261,
											"name": "PUSH [tag]",
											"value": "108"
										},
										{
											"begin": 10935,
											"end": 11261,
											"name": "JUMP"
										},
										{
											"begin": 1353,
											"end": 1416,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 1353,
											"end": 1416,
											"name": "JUMPDEST"
										},
										{
											"begin": 1353,
											"end": 1416,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1353,
											"end": 1416,
											"name": "POP"
										},
										{
											"begin": 1353,
											"end": 1416,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 1353,
											"end": 1416,
											"name": "PUSH [tag]",
											"value": "111"
										},
										{
											"begin": 1353,
											"end": 1416,
											"name": "JUMP"
										},
										{
											"begin": 14249,
											"end": 14641,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 14249,
											"end": 14641,
											"name": "JUMPDEST"
										},
										{
											"begin": 14249,
											"end": 14641,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 14249,
											"end": 14641,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 14249,
											"end": 14641,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14249,
											"end": 14641,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14249,
											"end": 14641,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 14249,
											"end": 14641,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14249,
											"end": 14641,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 14249,
											"end": 14641,
											"name": "JUMP"
										},
										{
											"begin": 13502,
											"end": 13768,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 13502,
											"end": 13768,
											"name": "JUMPDEST"
										},
										{
											"begin": 13502,
											"end": 13768,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "115"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 13502,
											"end": 13768,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 13502,
											"end": 13768,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13502,
											"end": 13768,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13502,
											"end": 13768,
											"name": "PUSH [tag]",
											"value": "117"
										},
										{
											"begin": 13502,
											"end": 13768,
											"name": "JUMP"
										},
										{
											"begin": 13999,
											"end": 14241,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 13999,
											"end": 14241,
											"name": "JUMPDEST"
										},
										{
											"begin": 13999,
											"end": 14241,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "118"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 13999,
											"end": 14241,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 13999,
											"end": 14241,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13999,
											"end": 14241,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13999,
											"end": 14241,
											"name": "PUSH [tag]",
											"value": "120"
										},
										{
											"begin": 13999,
											"end": 14241,
											"name": "JUMP"
										},
										{
											"begin": 12509,
											"end": 12802,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 12509,
											"end": 12802,
											"name": "JUMPDEST"
										},
										{
											"begin": 12509,
											"end": 12802,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "121"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 12509,
											"end": 12802,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12509,
											"end": 12802,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12509,
											"end": 12802,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12509,
											"end": 12802,
											"name": "DUP2"
										},
										{
											"begin": 12509,
											"end": 12802,
											"name": "AND"
										},
										{
											"begin": 12509,
											"end": 12802,
											"name": "SWAP1"
										},
										{
											"begin": 12509,
											"end": 12802,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 12509,
											"end": 12802,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12509,
											"end": 12802,
											"name": "AND"
										},
										{
											"begin": 12509,
											"end": 12802,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 12509,
											"end": 12802,
											"name": "JUMP"
										},
										{
											"begin": 3110,
											"end": 3141,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 3110,
											"end": 3141,
											"name": "JUMPDEST"
										},
										{
											"begin": 3110,
											"end": 3141,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "124"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3110,
											"end": 3141,
											"name": "POP"
										},
										{
											"begin": 3110,
											"end": 3141,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 3110,
											"end": 3141,
											"name": "PUSH [tag]",
											"value": "126"
										},
										{
											"begin": 3110,
											"end": 3141,
											"name": "JUMP"
										},
										{
											"begin": 8715,
											"end": 8761,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 8715,
											"end": 8761,
											"name": "JUMPDEST"
										},
										{
											"begin": 8715,
											"end": 8761,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "127"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 8715,
											"end": 8761,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8715,
											"end": 8761,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8715,
											"end": 8761,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8715,
											"end": 8761,
											"name": "AND"
										},
										{
											"begin": 8715,
											"end": 8761,
											"name": "PUSH [tag]",
											"value": "129"
										},
										{
											"begin": 8715,
											"end": 8761,
											"name": "JUMP"
										},
										{
											"begin": 8931,
											"end": 9095,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 8931,
											"end": 9095,
											"name": "JUMPDEST"
										},
										{
											"begin": 8931,
											"end": 9095,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "130"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 8931,
											"end": 9095,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8931,
											"end": 9095,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8931,
											"end": 9095,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8931,
											"end": 9095,
											"name": "AND"
										},
										{
											"begin": 8931,
											"end": 9095,
											"name": "PUSH [tag]",
											"value": "132"
										},
										{
											"begin": 8931,
											"end": 9095,
											"name": "JUMP"
										},
										{
											"begin": 4852,
											"end": 4894,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 4852,
											"end": 4894,
											"name": "JUMPDEST"
										},
										{
											"begin": 4852,
											"end": 4894,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "133"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "133"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4852,
											"end": 4894,
											"name": "POP"
										},
										{
											"begin": 4852,
											"end": 4894,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 4852,
											"end": 4894,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 4852,
											"end": 4894,
											"name": "JUMP"
										},
										{
											"begin": 1765,
											"end": 1916,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 1765,
											"end": 1916,
											"name": "JUMPDEST"
										},
										{
											"begin": 1765,
											"end": 1916,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "136"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1765,
											"end": 1916,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1765,
											"end": 1916,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1765,
											"end": 1916,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1765,
											"end": 1916,
											"name": "AND"
										},
										{
											"begin": 1765,
											"end": 1916,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 1765,
											"end": 1916,
											"name": "JUMP"
										},
										{
											"begin": 9103,
											"end": 9432,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 9103,
											"end": 9432,
											"name": "JUMPDEST"
										},
										{
											"begin": 9103,
											"end": 9432,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "139"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "139"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 9103,
											"end": 9432,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 9103,
											"end": 9432,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9103,
											"end": 9432,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9103,
											"end": 9432,
											"name": "AND"
										},
										{
											"begin": 9103,
											"end": 9432,
											"name": "PUSH [tag]",
											"value": "141"
										},
										{
											"begin": 9103,
											"end": 9432,
											"name": "JUMP"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "JUMPDEST"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "DUP1"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "SLOAD"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "DUP1"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "MLOAD"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "DUP6"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "AND"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "ISZERO"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "MUL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "ADD"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "SWAP1"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "SWAP5"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "AND"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "SWAP4"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "SWAP1"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "SWAP4"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "DIV"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "DUP2"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "ADD"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "DUP5"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "SWAP1"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "DIV"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "DUP5"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "MUL"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "DUP3"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "ADD"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "DUP5"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "ADD"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "SWAP1"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "SWAP3"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "MSTORE"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "DUP2"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "DUP2"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "MSTORE"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "SWAP3"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "SWAP2"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "DUP4"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "ADD"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "DUP3"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "DUP3"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "DUP1"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "ISZERO"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "JUMPI"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "DUP1"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "LT"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "JUMPI"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "DUP1"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "DUP4"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "SLOAD"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "DIV"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "MUL"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "DUP4"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "MSTORE"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "SWAP2"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "ADD"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "SWAP2"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "JUMP"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "tag",
											"value": "143"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "JUMPDEST"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "DUP3"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "ADD"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "SWAP2"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "SWAP1"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "MSTORE"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "KECCAK256"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "SWAP1"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "tag",
											"value": "144"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "JUMPDEST"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "DUP2"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "SLOAD"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "DUP2"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "MSTORE"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "SWAP1"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "ADD"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "SWAP1"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "ADD"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "DUP1"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "DUP4"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "GT"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "JUMPI"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "DUP3"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "SWAP1"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "SUB"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "AND"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "DUP3"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "ADD"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "SWAP2"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "tag",
											"value": "142"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "JUMPDEST"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "POP"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "POP"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "POP"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "POP"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "POP"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "DUP2"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12868,
											"end": 13054,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 12868,
											"end": 13054,
											"name": "JUMPDEST"
										},
										{
											"begin": 1565,
											"end": 1570,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1565,
											"end": 1570,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1565,
											"end": 1570,
											"name": "AND"
										},
										{
											"begin": 1551,
											"end": 1561,
											"name": "CALLER"
										},
										{
											"begin": 1551,
											"end": 1570,
											"name": "EQ"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "PUSH [tag]",
											"value": "146"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "JUMPI"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "DUP1"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "REVERT"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "tag",
											"value": "146"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "JUMPDEST"
										},
										{
											"begin": 12941,
											"end": 12951,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 12941,
											"end": 12958,
											"name": "DUP1"
										},
										{
											"begin": 12941,
											"end": 12958,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FF0000000000000000000000000000000000000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 12941,
											"end": 12958,
											"name": "SWAP1"
										},
										{
											"begin": 12941,
											"end": 12958,
											"name": "SWAP2"
										},
										{
											"begin": 12941,
											"end": 12958,
											"name": "AND"
										},
										{
											"begin": 12941,
											"end": 12958,
											"name": "OR"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 12969,
											"end": 13003,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12969,
											"end": 13003,
											"name": "DUP4"
										},
										{
											"begin": 12969,
											"end": 13003,
											"name": "AND"
										},
										{
											"begin": 12969,
											"end": 13003,
											"name": "SWAP1"
										},
										{
											"begin": 12969,
											"end": 13003,
											"name": "DUP2"
										},
										{
											"begin": 12969,
											"end": 13003,
											"name": "OR"
										},
										{
											"begin": 12969,
											"end": 13003,
											"name": "SWAP1"
										},
										{
											"begin": 12969,
											"end": 13003,
											"name": "SWAP2"
										},
										{
											"begin": 12969,
											"end": 13003,
											"name": "SSTORE"
										},
										{
											"begin": 13019,
											"end": 13046,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13019,
											"end": 13046,
											"name": "DUP1"
										},
										{
											"begin": 13019,
											"end": 13046,
											"name": "MLOAD"
										},
										{
											"begin": 13019,
											"end": 13046,
											"name": "SWAP2"
										},
										{
											"begin": 13019,
											"end": 13046,
											"name": "DUP3"
										},
										{
											"begin": 13019,
											"end": 13046,
											"name": "MSTORE"
										},
										{
											"begin": 13019,
											"end": 13046,
											"name": "MLOAD"
										},
										{
											"begin": 13019,
											"end": 13046,
											"name": "PUSH",
											"value": "CC358699805E9A8B7F77B522628C7CB9ABD07D9EFB86B6FB616AF1609036A99E"
										},
										{
											"begin": 13019,
											"end": 13046,
											"name": "SWAP2"
										},
										{
											"begin": 13019,
											"end": 13046,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13019,
											"end": 13046,
											"name": "SWAP1"
										},
										{
											"begin": 13019,
											"end": 13046,
											"name": "DUP3"
										},
										{
											"begin": 13019,
											"end": 13046,
											"name": "SWAP1"
										},
										{
											"begin": 13019,
											"end": 13046,
											"name": "SUB"
										},
										{
											"begin": 13019,
											"end": 13046,
											"name": "ADD"
										},
										{
											"begin": 13019,
											"end": 13046,
											"name": "SWAP1"
										},
										{
											"begin": 13019,
											"end": 13046,
											"name": "LOG1"
										},
										{
											"begin": 12868,
											"end": 13054,
											"name": "POP"
										},
										{
											"begin": 12868,
											"end": 13054,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12122,
											"end": 12424,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 12122,
											"end": 12424,
											"name": "JUMPDEST"
										},
										{
											"begin": 12193,
											"end": 12199,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3327,
											"end": 3335,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 3309,
											"end": 3317,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3309,
											"end": 3335,
											"name": "LT"
										},
										{
											"begin": 3307,
											"end": 3336,
											"name": "ISZERO"
										},
										{
											"begin": 3299,
											"end": 3337,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 3299,
											"end": 3337,
											"name": "JUMPI"
										},
										{
											"begin": 3299,
											"end": 3337,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3299,
											"end": 3337,
											"name": "DUP1"
										},
										{
											"begin": 3299,
											"end": 3337,
											"name": "REVERT"
										},
										{
											"begin": 3299,
											"end": 3337,
											"name": "tag",
											"value": "149"
										},
										{
											"begin": 3299,
											"end": 3337,
											"name": "JUMPDEST"
										},
										{
											"begin": 12216,
											"end": 12226,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 12216,
											"end": 12226,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": 12216,
											"end": 12226,
											"name": "SWAP1"
										},
										{
											"begin": 12216,
											"end": 12226,
											"name": "DIV"
										},
										{
											"begin": 12216,
											"end": 12226,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 12216,
											"end": 12226,
											"name": "AND"
										},
										{
											"begin": 12212,
											"end": 12417,
											"name": "ISZERO"
										},
										{
											"begin": 12212,
											"end": 12417,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 12212,
											"end": 12417,
											"name": "JUMPI"
										},
										{
											"begin": 12272,
											"end": 12287,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 12272,
											"end": 12287,
											"name": "SLOAD"
										},
										{
											"begin": 12250,
											"end": 12334,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12250,
											"end": 12334,
											"name": "DUP1"
										},
										{
											"begin": 12250,
											"end": 12334,
											"name": "MLOAD"
										},
										{
											"begin": 12250,
											"end": 12334,
											"name": "PUSH",
											"value": "AEE92D3300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12250,
											"end": 12334,
											"name": "DUP2"
										},
										{
											"begin": 12250,
											"end": 12334,
											"name": "MSTORE"
										},
										{
											"begin": 12305,
											"end": 12315,
											"name": "CALLER"
										},
										{
											"begin": 12250,
											"end": 12334,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12250,
											"end": 12334,
											"name": "DUP3"
										},
										{
											"begin": 12250,
											"end": 12334,
											"name": "ADD"
										},
										{
											"begin": 12250,
											"end": 12334,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12250,
											"end": 12334,
											"name": "DUP7"
										},
										{
											"begin": 12250,
											"end": 12334,
											"name": "DUP2"
										},
										{
											"begin": 12250,
											"end": 12334,
											"name": "AND"
										},
										{
											"begin": 12250,
											"end": 12334,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 12250,
											"end": 12334,
											"name": "DUP4"
										},
										{
											"begin": 12250,
											"end": 12334,
											"name": "ADD"
										},
										{
											"begin": 12250,
											"end": 12334,
											"name": "MSTORE"
										},
										{
											"begin": 12250,
											"end": 12334,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 12250,
											"end": 12334,
											"name": "DUP3"
										},
										{
											"begin": 12250,
											"end": 12334,
											"name": "ADD"
										},
										{
											"begin": 12250,
											"end": 12334,
											"name": "DUP7"
										},
										{
											"begin": 12250,
											"end": 12334,
											"name": "SWAP1"
										},
										{
											"begin": 12250,
											"end": 12334,
											"name": "MSTORE"
										},
										{
											"begin": 12250,
											"end": 12334,
											"name": "SWAP2"
										},
										{
											"begin": 12250,
											"end": 12334,
											"name": "MLOAD"
										},
										{
											"begin": 12272,
											"end": 12287,
											"name": "SWAP2"
										},
										{
											"begin": 12272,
											"end": 12287,
											"name": "SWAP1"
										},
										{
											"begin": 12272,
											"end": 12287,
											"name": "SWAP3"
										},
										{
											"begin": 12272,
											"end": 12287,
											"name": "AND"
										},
										{
											"begin": 12272,
											"end": 12287,
											"name": "SWAP2"
										},
										{
											"begin": 12250,
											"end": 12304,
											"name": "PUSH",
											"value": "AEE92D33"
										},
										{
											"begin": 12250,
											"end": 12304,
											"name": "SWAP2"
										},
										{
											"begin": 12250,
											"end": 12334,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 12250,
											"end": 12334,
											"name": "DUP1"
										},
										{
											"begin": 12250,
											"end": 12334,
											"name": "DUP4"
										},
										{
											"begin": 12250,
											"end": 12334,
											"name": "ADD"
										},
										{
											"begin": 12250,
											"end": 12334,
											"name": "SWAP3"
										},
										{
											"begin": 12272,
											"end": 12287,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12272,
											"end": 12287,
											"name": "SWAP3"
										},
										{
											"begin": 12250,
											"end": 12334,
											"name": "SWAP2"
										},
										{
											"begin": 12250,
											"end": 12334,
											"name": "SWAP1"
										},
										{
											"begin": 12250,
											"end": 12334,
											"name": "DUP3"
										},
										{
											"begin": 12250,
											"end": 12334,
											"name": "SWAP1"
										},
										{
											"begin": 12250,
											"end": 12334,
											"name": "SUB"
										},
										{
											"begin": 12250,
											"end": 12334,
											"name": "ADD"
										},
										{
											"begin": 12250,
											"end": 12334,
											"name": "DUP2"
										},
										{
											"begin": 12272,
											"end": 12287,
											"name": "DUP4"
										},
										{
											"begin": 12272,
											"end": 12287,
											"name": "DUP8"
										},
										{
											"begin": 12250,
											"end": 12334,
											"name": "DUP1"
										},
										{
											"begin": 12250,
											"end": 12334,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 12250,
											"end": 12334,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "152"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "152"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 12250,
											"end": 12334,
											"name": "POP"
										},
										{
											"begin": 12250,
											"end": 12334,
											"name": "GAS"
										},
										{
											"begin": 12250,
											"end": 12334,
											"name": "CALL"
										},
										{
											"begin": 12250,
											"end": 12334,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "153"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "153"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 12250,
											"end": 12334,
											"name": "POP"
										},
										{
											"begin": 12250,
											"end": 12334,
											"name": "POP"
										},
										{
											"begin": 12250,
											"end": 12334,
											"name": "POP"
										},
										{
											"begin": 12250,
											"end": 12334,
											"name": "POP"
										},
										{
											"begin": 12243,
											"end": 12334,
											"name": "PUSH [tag]",
											"value": "155"
										},
										{
											"begin": 12243,
											"end": 12334,
											"name": "JUMP"
										},
										{
											"begin": 12212,
											"end": 12417,
											"name": "tag",
											"value": "151"
										},
										{
											"begin": 12212,
											"end": 12417,
											"name": "JUMPDEST"
										},
										{
											"begin": 12374,
											"end": 12405,
											"name": "PUSH [tag]",
											"value": "155"
										},
										{
											"begin": 12388,
											"end": 12396,
											"name": "DUP4"
										},
										{
											"begin": 12398,
											"end": 12404,
											"name": "DUP4"
										},
										{
											"begin": 12374,
											"end": 12387,
											"name": "PUSH [tag]",
											"value": "156"
										},
										{
											"begin": 12374,
											"end": 12405,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12374,
											"end": 12405,
											"name": "tag",
											"value": "155"
										},
										{
											"begin": 12374,
											"end": 12405,
											"name": "JUMPDEST"
										},
										{
											"begin": 12122,
											"end": 12424,
											"name": "POP"
										},
										{
											"begin": 12122,
											"end": 12424,
											"name": "POP"
										},
										{
											"begin": 12122,
											"end": 12424,
											"name": "POP"
										},
										{
											"begin": 12122,
											"end": 12424,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10228,
											"end": 10250,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 10228,
											"end": 10250,
											"name": "JUMPDEST"
										},
										{
											"begin": 10228,
											"end": 10250,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 10228,
											"end": 10250,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": 10228,
											"end": 10250,
											"name": "SWAP1"
										},
										{
											"begin": 10228,
											"end": 10250,
											"name": "DIV"
										},
										{
											"begin": 10228,
											"end": 10250,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 10228,
											"end": 10250,
											"name": "AND"
										},
										{
											"begin": 10228,
											"end": 10250,
											"name": "DUP2"
										},
										{
											"begin": 10228,
											"end": 10250,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8774,
											"end": 8923,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 8774,
											"end": 8923,
											"name": "JUMPDEST"
										},
										{
											"begin": 1565,
											"end": 1570,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1565,
											"end": 1570,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1565,
											"end": 1570,
											"name": "AND"
										},
										{
											"begin": 1551,
											"end": 1561,
											"name": "CALLER"
										},
										{
											"begin": 1551,
											"end": 1570,
											"name": "EQ"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "PUSH [tag]",
											"value": "158"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "JUMPI"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "DUP1"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "REVERT"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "tag",
											"value": "158"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8844,
											"end": 8868,
											"name": "DUP2"
										},
										{
											"begin": 8844,
											"end": 8868,
											"name": "AND"
										},
										{
											"begin": 8844,
											"end": 8868,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8844,
											"end": 8868,
											"name": "DUP2"
										},
										{
											"begin": 8844,
											"end": 8868,
											"name": "DUP2"
										},
										{
											"begin": 8844,
											"end": 8868,
											"name": "MSTORE"
										},
										{
											"begin": 8844,
											"end": 8857,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 8844,
											"end": 8868,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8844,
											"end": 8868,
											"name": "SWAP1"
										},
										{
											"begin": 8844,
											"end": 8868,
											"name": "DUP2"
										},
										{
											"begin": 8844,
											"end": 8868,
											"name": "MSTORE"
										},
										{
											"begin": 8844,
											"end": 8868,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8844,
											"end": 8868,
											"name": "SWAP2"
										},
										{
											"begin": 8844,
											"end": 8868,
											"name": "DUP3"
										},
										{
											"begin": 8844,
											"end": 8868,
											"name": "SWAP1"
										},
										{
											"begin": 8844,
											"end": 8868,
											"name": "KECCAK256"
										},
										{
											"begin": 8844,
											"end": 8875,
											"name": "DUP1"
										},
										{
											"begin": 8844,
											"end": 8875,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 8844,
											"end": 8875,
											"name": "AND"
										},
										{
											"begin": 8871,
											"end": 8875,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8844,
											"end": 8875,
											"name": "OR"
										},
										{
											"begin": 8844,
											"end": 8875,
											"name": "SWAP1"
										},
										{
											"begin": 8844,
											"end": 8875,
											"name": "SSTORE"
										},
										{
											"begin": 8890,
											"end": 8915,
											"name": "DUP2"
										},
										{
											"begin": 8890,
											"end": 8915,
											"name": "MLOAD"
										},
										{
											"begin": 8890,
											"end": 8915,
											"name": "SWAP3"
										},
										{
											"begin": 8890,
											"end": 8915,
											"name": "DUP4"
										},
										{
											"begin": 8890,
											"end": 8915,
											"name": "MSTORE"
										},
										{
											"begin": 8890,
											"end": 8915,
											"name": "SWAP1"
										},
										{
											"begin": 8890,
											"end": 8915,
											"name": "MLOAD"
										},
										{
											"begin": 8890,
											"end": 8915,
											"name": "PUSH",
											"value": "42E160154868087D6BFDC0CA23D96A1C1CFA32F1B72BA9BA27B69B98A0D819DC"
										},
										{
											"begin": 8890,
											"end": 8915,
											"name": "SWAP3"
										},
										{
											"begin": 8890,
											"end": 8915,
											"name": "DUP2"
										},
										{
											"begin": 8890,
											"end": 8915,
											"name": "SWAP1"
										},
										{
											"begin": 8890,
											"end": 8915,
											"name": "SUB"
										},
										{
											"begin": 8890,
											"end": 8915,
											"name": "SWAP1"
										},
										{
											"begin": 8890,
											"end": 8915,
											"name": "SWAP2"
										},
										{
											"begin": 8890,
											"end": 8915,
											"name": "ADD"
										},
										{
											"begin": 8890,
											"end": 8915,
											"name": "SWAP1"
										},
										{
											"begin": 8890,
											"end": 8915,
											"name": "LOG1"
										},
										{
											"begin": 8774,
											"end": 8923,
											"name": "POP"
										},
										{
											"begin": 8774,
											"end": 8923,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13120,
											"end": 13338,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 13120,
											"end": 13338,
											"name": "JUMPDEST"
										},
										{
											"begin": 13189,
											"end": 13199,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 13189,
											"end": 13199,
											"name": "SLOAD"
										},
										{
											"begin": 13168,
											"end": 13172,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13168,
											"end": 13172,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": 13189,
											"end": 13199,
											"name": "SWAP1"
										},
										{
											"begin": 13189,
											"end": 13199,
											"name": "DIV"
										},
										{
											"begin": 13189,
											"end": 13199,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 13189,
											"end": 13199,
											"name": "AND"
										},
										{
											"begin": 13185,
											"end": 13331,
											"name": "ISZERO"
										},
										{
											"begin": 13185,
											"end": 13331,
											"name": "PUSH [tag]",
											"value": "161"
										},
										{
											"begin": 13185,
											"end": 13331,
											"name": "JUMPI"
										},
										{
											"begin": 13237,
											"end": 13252,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 13237,
											"end": 13252,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13237,
											"end": 13252,
											"name": "SWAP1"
										},
										{
											"begin": 13237,
											"end": 13252,
											"name": "SLOAD"
										},
										{
											"begin": 13237,
											"end": 13252,
											"name": "SWAP1"
										},
										{
											"begin": 13237,
											"end": 13252,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 13237,
											"end": 13252,
											"name": "EXP"
										},
										{
											"begin": 13237,
											"end": 13252,
											"name": "SWAP1"
										},
										{
											"begin": 13237,
											"end": 13252,
											"name": "DIV"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13237,
											"end": 13252,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13223,
											"end": 13265,
											"name": "AND"
										},
										{
											"begin": 13223,
											"end": 13265,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 13223,
											"end": 13267,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13223,
											"end": 13267,
											"name": "MLOAD"
										},
										{
											"begin": 13223,
											"end": 13267,
											"name": "DUP2"
										},
										{
											"begin": 13223,
											"end": 13267,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 13223,
											"end": 13267,
											"name": "AND"
										},
										{
											"begin": 13223,
											"end": 13267,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13223,
											"end": 13267,
											"name": "MUL"
										},
										{
											"begin": 13223,
											"end": 13267,
											"name": "DUP2"
										},
										{
											"begin": 13223,
											"end": 13267,
											"name": "MSTORE"
										},
										{
											"begin": 13223,
											"end": 13267,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13223,
											"end": 13267,
											"name": "ADD"
										},
										{
											"begin": 13223,
											"end": 13267,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13223,
											"end": 13267,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13223,
											"end": 13267,
											"name": "MLOAD"
										},
										{
											"begin": 13223,
											"end": 13267,
											"name": "DUP1"
										},
										{
											"begin": 13223,
											"end": 13267,
											"name": "DUP4"
										},
										{
											"begin": 13223,
											"end": 13267,
											"name": "SUB"
										},
										{
											"begin": 13223,
											"end": 13267,
											"name": "DUP2"
										},
										{
											"begin": 13223,
											"end": 13267,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13223,
											"end": 13267,
											"name": "DUP8"
										},
										{
											"begin": 13223,
											"end": 13267,
											"name": "DUP1"
										},
										{
											"begin": 13223,
											"end": 13267,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 13223,
											"end": 13267,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "162"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "162"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 13223,
											"end": 13267,
											"name": "POP"
										},
										{
											"begin": 13223,
											"end": 13267,
											"name": "GAS"
										},
										{
											"begin": 13223,
											"end": 13267,
											"name": "CALL"
										},
										{
											"begin": 13223,
											"end": 13267,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "163"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "163"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 13223,
											"end": 13267,
											"name": "POP"
										},
										{
											"begin": 13223,
											"end": 13267,
											"name": "POP"
										},
										{
											"begin": 13223,
											"end": 13267,
											"name": "POP"
										},
										{
											"begin": 13223,
											"end": 13267,
											"name": "POP"
										},
										{
											"begin": 13223,
											"end": 13267,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13223,
											"end": 13267,
											"name": "MLOAD"
										},
										{
											"begin": 13223,
											"end": 13267,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "164"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "164"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 13223,
											"end": 13267,
											"name": "MLOAD"
										},
										{
											"begin": 13223,
											"end": 13267,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 13216,
											"end": 13267,
											"name": "PUSH [tag]",
											"value": "165"
										},
										{
											"begin": 13216,
											"end": 13267,
											"name": "JUMP"
										},
										{
											"begin": 13185,
											"end": 13331,
											"name": "tag",
											"value": "161"
										},
										{
											"begin": 13185,
											"end": 13331,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 13307,
											"end": 13319,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13307,
											"end": 13319,
											"name": "SLOAD"
										},
										{
											"begin": 13185,
											"end": 13331,
											"name": "tag",
											"value": "165"
										},
										{
											"begin": 13185,
											"end": 13331,
											"name": "JUMPDEST"
										},
										{
											"begin": 13120,
											"end": 13338,
											"name": "SWAP1"
										},
										{
											"begin": 13120,
											"end": 13338,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11346,
											"end": 11708,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 11346,
											"end": 11708,
											"name": "JUMPDEST"
										},
										{
											"begin": 7772,
											"end": 7778,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7772,
											"end": 7778,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": 7772,
											"end": 7778,
											"name": "SWAP1"
										},
										{
											"begin": 7772,
											"end": 7778,
											"name": "DIV"
										},
										{
											"begin": 7772,
											"end": 7778,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 7772,
											"end": 7778,
											"name": "AND"
										},
										{
											"begin": 7771,
											"end": 7778,
											"name": "ISZERO"
										},
										{
											"begin": 7763,
											"end": 7779,
											"name": "PUSH [tag]",
											"value": "167"
										},
										{
											"begin": 7763,
											"end": 7779,
											"name": "JUMPI"
										},
										{
											"begin": 7763,
											"end": 7779,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7763,
											"end": 7779,
											"name": "DUP1"
										},
										{
											"begin": 7763,
											"end": 7779,
											"name": "REVERT"
										},
										{
											"begin": 7763,
											"end": 7779,
											"name": "tag",
											"value": "167"
										},
										{
											"begin": 7763,
											"end": 7779,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 11450,
											"end": 11470,
											"name": "DUP4"
										},
										{
											"begin": 11450,
											"end": 11470,
											"name": "AND"
										},
										{
											"begin": 11450,
											"end": 11470,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11450,
											"end": 11470,
											"name": "SWAP1"
										},
										{
											"begin": 11450,
											"end": 11470,
											"name": "DUP2"
										},
										{
											"begin": 11450,
											"end": 11470,
											"name": "MSTORE"
										},
										{
											"begin": 11450,
											"end": 11463,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 11450,
											"end": 11470,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11450,
											"end": 11470,
											"name": "MSTORE"
										},
										{
											"begin": 11450,
											"end": 11470,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11450,
											"end": 11470,
											"name": "SWAP1"
										},
										{
											"begin": 11450,
											"end": 11470,
											"name": "KECCAK256"
										},
										{
											"begin": 11450,
											"end": 11470,
											"name": "SLOAD"
										},
										{
											"begin": 11450,
											"end": 11470,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11450,
											"end": 11470,
											"name": "AND"
										},
										{
											"begin": 11449,
											"end": 11470,
											"name": "ISZERO"
										},
										{
											"begin": 11441,
											"end": 11471,
											"name": "PUSH [tag]",
											"value": "169"
										},
										{
											"begin": 11441,
											"end": 11471,
											"name": "JUMPI"
										},
										{
											"begin": 11441,
											"end": 11471,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11441,
											"end": 11471,
											"name": "DUP1"
										},
										{
											"begin": 11441,
											"end": 11471,
											"name": "REVERT"
										},
										{
											"begin": 11441,
											"end": 11471,
											"name": "tag",
											"value": "169"
										},
										{
											"begin": 11441,
											"end": 11471,
											"name": "JUMPDEST"
										},
										{
											"begin": 11486,
											"end": 11496,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 11486,
											"end": 11496,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": 11486,
											"end": 11496,
											"name": "SWAP1"
										},
										{
											"begin": 11486,
											"end": 11496,
											"name": "DIV"
										},
										{
											"begin": 11486,
											"end": 11496,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11486,
											"end": 11496,
											"name": "AND"
										},
										{
											"begin": 11482,
											"end": 11701,
											"name": "ISZERO"
										},
										{
											"begin": 11482,
											"end": 11701,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 11482,
											"end": 11701,
											"name": "JUMPI"
										},
										{
											"begin": 11542,
											"end": 11557,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 11542,
											"end": 11557,
											"name": "SLOAD"
										},
										{
											"begin": 11520,
											"end": 11611,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11520,
											"end": 11611,
											"name": "DUP1"
										},
										{
											"begin": 11520,
											"end": 11611,
											"name": "MLOAD"
										},
										{
											"begin": 11520,
											"end": 11611,
											"name": "PUSH",
											"value": "8B477ADB00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11520,
											"end": 11611,
											"name": "DUP2"
										},
										{
											"begin": 11520,
											"end": 11611,
											"name": "MSTORE"
										},
										{
											"begin": 11580,
											"end": 11590,
											"name": "CALLER"
										},
										{
											"begin": 11520,
											"end": 11611,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11520,
											"end": 11611,
											"name": "DUP3"
										},
										{
											"begin": 11520,
											"end": 11611,
											"name": "ADD"
										},
										{
											"begin": 11520,
											"end": 11611,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 11520,
											"end": 11611,
											"name": "DUP7"
										},
										{
											"begin": 11520,
											"end": 11611,
											"name": "DUP2"
										},
										{
											"begin": 11520,
											"end": 11611,
											"name": "AND"
										},
										{
											"begin": 11520,
											"end": 11611,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 11520,
											"end": 11611,
											"name": "DUP4"
										},
										{
											"begin": 11520,
											"end": 11611,
											"name": "ADD"
										},
										{
											"begin": 11520,
											"end": 11611,
											"name": "MSTORE"
										},
										{
											"begin": 11520,
											"end": 11611,
											"name": "DUP6"
										},
										{
											"begin": 11520,
											"end": 11611,
											"name": "DUP2"
										},
										{
											"begin": 11520,
											"end": 11611,
											"name": "AND"
										},
										{
											"begin": 11520,
											"end": 11611,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 11520,
											"end": 11611,
											"name": "DUP4"
										},
										{
											"begin": 11520,
											"end": 11611,
											"name": "ADD"
										},
										{
											"begin": 11520,
											"end": 11611,
											"name": "MSTORE"
										},
										{
											"begin": 11520,
											"end": 11611,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 11520,
											"end": 11611,
											"name": "DUP3"
										},
										{
											"begin": 11520,
											"end": 11611,
											"name": "ADD"
										},
										{
											"begin": 11520,
											"end": 11611,
											"name": "DUP6"
										},
										{
											"begin": 11520,
											"end": 11611,
											"name": "SWAP1"
										},
										{
											"begin": 11520,
											"end": 11611,
											"name": "MSTORE"
										},
										{
											"begin": 11520,
											"end": 11611,
											"name": "SWAP2"
										},
										{
											"begin": 11520,
											"end": 11611,
											"name": "MLOAD"
										},
										{
											"begin": 11542,
											"end": 11557,
											"name": "SWAP2"
										},
										{
											"begin": 11542,
											"end": 11557,
											"name": "SWAP1"
										},
										{
											"begin": 11542,
											"end": 11557,
											"name": "SWAP3"
										},
										{
											"begin": 11542,
											"end": 11557,
											"name": "AND"
										},
										{
											"begin": 11542,
											"end": 11557,
											"name": "SWAP2"
										},
										{
											"begin": 11520,
											"end": 11579,
											"name": "PUSH",
											"value": "8B477ADB"
										},
										{
											"begin": 11520,
											"end": 11579,
											"name": "SWAP2"
										},
										{
											"begin": 11520,
											"end": 11611,
											"name": "PUSH",
											"value": "84"
										},
										{
											"begin": 11520,
											"end": 11611,
											"name": "DUP1"
										},
										{
											"begin": 11520,
											"end": 11611,
											"name": "DUP4"
										},
										{
											"begin": 11520,
											"end": 11611,
											"name": "ADD"
										},
										{
											"begin": 11520,
											"end": 11611,
											"name": "SWAP3"
										},
										{
											"begin": 11542,
											"end": 11557,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11542,
											"end": 11557,
											"name": "SWAP3"
										},
										{
											"begin": 11520,
											"end": 11611,
											"name": "SWAP2"
										},
										{
											"begin": 11520,
											"end": 11611,
											"name": "SWAP1"
										},
										{
											"begin": 11520,
											"end": 11611,
											"name": "DUP3"
										},
										{
											"begin": 11520,
											"end": 11611,
											"name": "SWAP1"
										},
										{
											"begin": 11520,
											"end": 11611,
											"name": "SUB"
										},
										{
											"begin": 11520,
											"end": 11611,
											"name": "ADD"
										},
										{
											"begin": 11520,
											"end": 11611,
											"name": "DUP2"
										},
										{
											"begin": 11542,
											"end": 11557,
											"name": "DUP4"
										},
										{
											"begin": 11542,
											"end": 11557,
											"name": "DUP8"
										},
										{
											"begin": 11520,
											"end": 11611,
											"name": "DUP1"
										},
										{
											"begin": 11520,
											"end": 11611,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 11520,
											"end": 11611,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "152"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 11482,
											"end": 11701,
											"name": "tag",
											"value": "170"
										},
										{
											"begin": 11482,
											"end": 11701,
											"name": "JUMPDEST"
										},
										{
											"begin": 11651,
											"end": 11689,
											"name": "PUSH [tag]",
											"value": "155"
										},
										{
											"begin": 11670,
											"end": 11675,
											"name": "DUP4"
										},
										{
											"begin": 11677,
											"end": 11680,
											"name": "DUP4"
										},
										{
											"begin": 11682,
											"end": 11688,
											"name": "DUP4"
										},
										{
											"begin": 11651,
											"end": 11669,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 11651,
											"end": 11689,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10191,
											"end": 10221,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 10191,
											"end": 10221,
											"name": "JUMPDEST"
										},
										{
											"begin": 10191,
											"end": 10221,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 10191,
											"end": 10221,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10191,
											"end": 10221,
											"name": "AND"
										},
										{
											"begin": 10191,
											"end": 10221,
											"name": "DUP2"
										},
										{
											"begin": 10191,
											"end": 10221,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2982,
											"end": 3022,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 2982,
											"end": 3022,
											"name": "JUMPDEST"
										},
										{
											"begin": 2982,
											"end": 3022,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2982,
											"end": 3022,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2982,
											"end": 3022,
											"name": "MSTORE"
										},
										{
											"begin": 2982,
											"end": 3022,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2982,
											"end": 3022,
											"name": "SWAP1"
										},
										{
											"begin": 2982,
											"end": 3022,
											"name": "DUP2"
										},
										{
											"begin": 2982,
											"end": 3022,
											"name": "MSTORE"
										},
										{
											"begin": 2982,
											"end": 3022,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2982,
											"end": 3022,
											"name": "SWAP1"
										},
										{
											"begin": 2982,
											"end": 3022,
											"name": "KECCAK256"
										},
										{
											"begin": 2982,
											"end": 3022,
											"name": "SLOAD"
										},
										{
											"begin": 2982,
											"end": 3022,
											"name": "DUP2"
										},
										{
											"begin": 2982,
											"end": 3022,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10164,
											"end": 10184,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 10164,
											"end": 10184,
											"name": "JUMPDEST"
										},
										{
											"begin": 10164,
											"end": 10184,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 10164,
											"end": 10184,
											"name": "SLOAD"
										},
										{
											"begin": 10164,
											"end": 10184,
											"name": "DUP2"
										},
										{
											"begin": 10164,
											"end": 10184,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3148,
											"end": 3174,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 3148,
											"end": 3174,
											"name": "JUMPDEST"
										},
										{
											"begin": 3148,
											"end": 3174,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3148,
											"end": 3174,
											"name": "SLOAD"
										},
										{
											"begin": 3148,
											"end": 3174,
											"name": "DUP2"
										},
										{
											"begin": 3148,
											"end": 3174,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2084,
											"end": 2108,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 2084,
											"end": 2108,
											"name": "JUMPDEST"
										},
										{
											"begin": 2084,
											"end": 2108,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2084,
											"end": 2108,
											"name": "SLOAD"
										},
										{
											"begin": 2084,
											"end": 2108,
											"name": "DUP2"
										},
										{
											"begin": 2084,
											"end": 2108,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8216,
											"end": 8310,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 8216,
											"end": 8310,
											"name": "JUMPDEST"
										},
										{
											"begin": 1565,
											"end": 1570,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1565,
											"end": 1570,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1565,
											"end": 1570,
											"name": "AND"
										},
										{
											"begin": 1551,
											"end": 1561,
											"name": "CALLER"
										},
										{
											"begin": 1551,
											"end": 1570,
											"name": "EQ"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "PUSH [tag]",
											"value": "177"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "JUMPI"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "DUP1"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "REVERT"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "tag",
											"value": "177"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "JUMPDEST"
										},
										{
											"begin": 7932,
											"end": 7938,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7932,
											"end": 7938,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": 7932,
											"end": 7938,
											"name": "SWAP1"
										},
										{
											"begin": 7932,
											"end": 7938,
											"name": "DIV"
										},
										{
											"begin": 7932,
											"end": 7938,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 7932,
											"end": 7938,
											"name": "AND"
										},
										{
											"begin": 7924,
											"end": 7939,
											"name": "ISZERO"
										},
										{
											"begin": 7924,
											"end": 7939,
											"name": "ISZERO"
										},
										{
											"begin": 7924,
											"end": 7939,
											"name": "PUSH [tag]",
											"value": "179"
										},
										{
											"begin": 7924,
											"end": 7939,
											"name": "JUMPI"
										},
										{
											"begin": 7924,
											"end": 7939,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7924,
											"end": 7939,
											"name": "DUP1"
										},
										{
											"begin": 7924,
											"end": 7939,
											"name": "REVERT"
										},
										{
											"begin": 7924,
											"end": 7939,
											"name": "tag",
											"value": "179"
										},
										{
											"begin": 7924,
											"end": 7939,
											"name": "JUMPDEST"
										},
										{
											"begin": 8279,
											"end": 8284,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8270,
											"end": 8284,
											"name": "DUP1"
										},
										{
											"begin": 8270,
											"end": 8284,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FF0000000000000000000000000000000000000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 8270,
											"end": 8284,
											"name": "AND"
										},
										{
											"begin": 8270,
											"end": 8284,
											"name": "DUP2"
										},
										{
											"begin": 8270,
											"end": 8284,
											"name": "SSTORE"
										},
										{
											"begin": 8295,
											"end": 8304,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8295,
											"end": 8304,
											"name": "MLOAD"
										},
										{
											"begin": 8295,
											"end": 8304,
											"name": "PUSH",
											"value": "7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33"
										},
										{
											"begin": 8295,
											"end": 8304,
											"name": "SWAP2"
										},
										{
											"begin": 8279,
											"end": 8284,
											"name": "SWAP1"
										},
										{
											"begin": 8295,
											"end": 8304,
											"name": "LOG1"
										},
										{
											"begin": 8216,
											"end": 8310,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8488,
											"end": 8612,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 8488,
											"end": 8612,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8583,
											"end": 8604,
											"name": "DUP2"
										},
										{
											"begin": 8583,
											"end": 8604,
											"name": "AND"
										},
										{
											"begin": 8559,
											"end": 8563,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8583,
											"end": 8604,
											"name": "SWAP1"
										},
										{
											"begin": 8583,
											"end": 8604,
											"name": "DUP2"
										},
										{
											"begin": 8583,
											"end": 8604,
											"name": "MSTORE"
										},
										{
											"begin": 8583,
											"end": 8596,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 8583,
											"end": 8604,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8583,
											"end": 8604,
											"name": "MSTORE"
										},
										{
											"begin": 8583,
											"end": 8604,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8583,
											"end": 8604,
											"name": "SWAP1"
										},
										{
											"begin": 8583,
											"end": 8604,
											"name": "KECCAK256"
										},
										{
											"begin": 8583,
											"end": 8604,
											"name": "SLOAD"
										},
										{
											"begin": 8583,
											"end": 8604,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 8583,
											"end": 8604,
											"name": "AND"
										},
										{
											"begin": 8488,
											"end": 8612,
											"name": "tag",
											"value": "181"
										},
										{
											"begin": 8488,
											"end": 8612,
											"name": "JUMPDEST"
										},
										{
											"begin": 8488,
											"end": 8612,
											"name": "SWAP2"
										},
										{
											"begin": 8488,
											"end": 8612,
											"name": "SWAP1"
										},
										{
											"begin": 8488,
											"end": 8612,
											"name": "POP"
										},
										{
											"begin": 8488,
											"end": 8612,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4782,
											"end": 4843,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 4782,
											"end": 4843,
											"name": "JUMPDEST"
										},
										{
											"begin": 4782,
											"end": 4843,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 4782,
											"end": 4843,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4782,
											"end": 4843,
											"name": "SWAP1"
										},
										{
											"begin": 4782,
											"end": 4843,
											"name": "DUP2"
										},
										{
											"begin": 4782,
											"end": 4843,
											"name": "MSTORE"
										},
										{
											"begin": 4782,
											"end": 4843,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4782,
											"end": 4843,
											"name": "SWAP3"
										},
										{
											"begin": 4782,
											"end": 4843,
											"name": "DUP4"
										},
										{
											"begin": 4782,
											"end": 4843,
											"name": "MSTORE"
										},
										{
											"begin": 4782,
											"end": 4843,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4782,
											"end": 4843,
											"name": "DUP1"
										},
										{
											"begin": 4782,
											"end": 4843,
											"name": "DUP5"
										},
										{
											"begin": 4782,
											"end": 4843,
											"name": "KECCAK256"
										},
										{
											"begin": 4782,
											"end": 4843,
											"name": "SWAP1"
										},
										{
											"begin": 4782,
											"end": 4843,
											"name": "SWAP2"
										},
										{
											"begin": 4782,
											"end": 4843,
											"name": "MSTORE"
										},
										{
											"begin": 4782,
											"end": 4843,
											"name": "SWAP1"
										},
										{
											"begin": 4782,
											"end": 4843,
											"name": "DUP3"
										},
										{
											"begin": 4782,
											"end": 4843,
											"name": "MSTORE"
										},
										{
											"begin": 4782,
											"end": 4843,
											"name": "SWAP1"
										},
										{
											"begin": 4782,
											"end": 4843,
											"name": "KECCAK256"
										},
										{
											"begin": 4782,
											"end": 4843,
											"name": "SLOAD"
										},
										{
											"begin": 4782,
											"end": 4843,
											"name": "DUP2"
										},
										{
											"begin": 4782,
											"end": 4843,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7596,
											"end": 7622,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 7596,
											"end": 7622,
											"name": "JUMPDEST"
										},
										{
											"begin": 7596,
											"end": 7622,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7596,
											"end": 7622,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": 7596,
											"end": 7622,
											"name": "SWAP1"
										},
										{
											"begin": 7596,
											"end": 7622,
											"name": "DIV"
										},
										{
											"begin": 7596,
											"end": 7622,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 7596,
											"end": 7622,
											"name": "AND"
										},
										{
											"begin": 7596,
											"end": 7622,
											"name": "DUP2"
										},
										{
											"begin": 7596,
											"end": 7622,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11793,
											"end": 12037,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 11793,
											"end": 12037,
											"name": "JUMPDEST"
										},
										{
											"begin": 11871,
											"end": 11881,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 11871,
											"end": 11881,
											"name": "SLOAD"
										},
										{
											"begin": 11850,
											"end": 11854,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11850,
											"end": 11854,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": 11871,
											"end": 11881,
											"name": "SWAP1"
										},
										{
											"begin": 11871,
											"end": 11881,
											"name": "DIV"
										},
										{
											"begin": 11871,
											"end": 11881,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11871,
											"end": 11881,
											"name": "AND"
										},
										{
											"begin": 11867,
											"end": 12030,
											"name": "ISZERO"
										},
										{
											"begin": 11867,
											"end": 12030,
											"name": "PUSH [tag]",
											"value": "183"
										},
										{
											"begin": 11867,
											"end": 12030,
											"name": "JUMPI"
										},
										{
											"begin": 11927,
											"end": 11942,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 11927,
											"end": 11942,
											"name": "SLOAD"
										},
										{
											"begin": 11905,
											"end": 11958,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11905,
											"end": 11958,
											"name": "DUP1"
										},
										{
											"begin": 11905,
											"end": 11958,
											"name": "MLOAD"
										},
										{
											"begin": 11905,
											"end": 11958,
											"name": "PUSH",
											"value": "70A0823100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11905,
											"end": 11958,
											"name": "DUP2"
										},
										{
											"begin": 11905,
											"end": 11958,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 11905,
											"end": 11958,
											"name": "DUP6"
										},
										{
											"begin": 11905,
											"end": 11958,
											"name": "DUP2"
										},
										{
											"begin": 11905,
											"end": 11958,
											"name": "AND"
										},
										{
											"begin": 11905,
											"end": 11958,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11905,
											"end": 11958,
											"name": "DUP4"
										},
										{
											"begin": 11905,
											"end": 11958,
											"name": "ADD"
										},
										{
											"begin": 11905,
											"end": 11958,
											"name": "MSTORE"
										},
										{
											"begin": 11905,
											"end": 11958,
											"name": "SWAP2"
										},
										{
											"begin": 11905,
											"end": 11958,
											"name": "MLOAD"
										},
										{
											"begin": 11927,
											"end": 11942,
											"name": "SWAP2"
										},
										{
											"begin": 11927,
											"end": 11942,
											"name": "SWAP1"
										},
										{
											"begin": 11927,
											"end": 11942,
											"name": "SWAP3"
										},
										{
											"begin": 11927,
											"end": 11942,
											"name": "AND"
										},
										{
											"begin": 11927,
											"end": 11942,
											"name": "SWAP2"
										},
										{
											"begin": 11905,
											"end": 11953,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 11905,
											"end": 11953,
											"name": "SWAP2"
										},
										{
											"begin": 11905,
											"end": 11958,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 11905,
											"end": 11958,
											"name": "DUP1"
										},
										{
											"begin": 11905,
											"end": 11958,
											"name": "DUP4"
										},
										{
											"begin": 11905,
											"end": 11958,
											"name": "ADD"
										},
										{
											"begin": 11905,
											"end": 11958,
											"name": "SWAP3"
										},
										{
											"begin": 11905,
											"end": 11958,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11905,
											"end": 11958,
											"name": "SWAP3"
										},
										{
											"begin": 11905,
											"end": 11958,
											"name": "SWAP2"
										},
										{
											"begin": 11905,
											"end": 11958,
											"name": "SWAP1"
										},
										{
											"begin": 11905,
											"end": 11958,
											"name": "DUP3"
										},
										{
											"begin": 11905,
											"end": 11958,
											"name": "SWAP1"
										},
										{
											"begin": 11905,
											"end": 11958,
											"name": "SUB"
										},
										{
											"begin": 11905,
											"end": 11958,
											"name": "ADD"
										},
										{
											"begin": 11905,
											"end": 11958,
											"name": "DUP2"
										},
										{
											"begin": 11927,
											"end": 11942,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11927,
											"end": 11942,
											"name": "DUP8"
										},
										{
											"begin": 11905,
											"end": 11958,
											"name": "DUP1"
										},
										{
											"begin": 11905,
											"end": 11958,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 11905,
											"end": 11958,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "184"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "184"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 11905,
											"end": 11958,
											"name": "POP"
										},
										{
											"begin": 11905,
											"end": 11958,
											"name": "GAS"
										},
										{
											"begin": 11905,
											"end": 11958,
											"name": "CALL"
										},
										{
											"begin": 11905,
											"end": 11958,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "185"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "185"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 11905,
											"end": 11958,
											"name": "POP"
										},
										{
											"begin": 11905,
											"end": 11958,
											"name": "POP"
										},
										{
											"begin": 11905,
											"end": 11958,
											"name": "POP"
										},
										{
											"begin": 11905,
											"end": 11958,
											"name": "POP"
										},
										{
											"begin": 11905,
											"end": 11958,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11905,
											"end": 11958,
											"name": "MLOAD"
										},
										{
											"begin": 11905,
											"end": 11958,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "186"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "186"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 11905,
											"end": 11958,
											"name": "MLOAD"
										},
										{
											"begin": 11905,
											"end": 11958,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 11898,
											"end": 11958,
											"name": "PUSH [tag]",
											"value": "181"
										},
										{
											"begin": 11898,
											"end": 11958,
											"name": "JUMP"
										},
										{
											"begin": 11867,
											"end": 12030,
											"name": "tag",
											"value": "183"
										},
										{
											"begin": 11867,
											"end": 12030,
											"name": "JUMPDEST"
										},
										{
											"begin": 11998,
											"end": 12018,
											"name": "PUSH [tag]",
											"value": "188"
										},
										{
											"begin": 12014,
											"end": 12017,
											"name": "DUP3"
										},
										{
											"begin": 11998,
											"end": 12013,
											"name": "PUSH [tag]",
											"value": "189"
										},
										{
											"begin": 11998,
											"end": 12018,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11998,
											"end": 12018,
											"name": "tag",
											"value": "188"
										},
										{
											"begin": 11998,
											"end": 12018,
											"name": "JUMPDEST"
										},
										{
											"begin": 11991,
											"end": 12018,
											"name": "SWAP1"
										},
										{
											"begin": 11991,
											"end": 12018,
											"name": "POP"
										},
										{
											"begin": 11991,
											"end": 12018,
											"name": "PUSH [tag]",
											"value": "181"
										},
										{
											"begin": 11991,
											"end": 12018,
											"name": "JUMP"
										},
										{
											"begin": 8037,
											"end": 8129,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 8037,
											"end": 8129,
											"name": "JUMPDEST"
										},
										{
											"begin": 1565,
											"end": 1570,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1565,
											"end": 1570,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1565,
											"end": 1570,
											"name": "AND"
										},
										{
											"begin": 1551,
											"end": 1561,
											"name": "CALLER"
										},
										{
											"begin": 1551,
											"end": 1570,
											"name": "EQ"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "PUSH [tag]",
											"value": "191"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "JUMPI"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "DUP1"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "REVERT"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "tag",
											"value": "191"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "JUMPDEST"
										},
										{
											"begin": 7772,
											"end": 7778,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7772,
											"end": 7778,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": 7772,
											"end": 7778,
											"name": "SWAP1"
										},
										{
											"begin": 7772,
											"end": 7778,
											"name": "DIV"
										},
										{
											"begin": 7772,
											"end": 7778,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 7772,
											"end": 7778,
											"name": "AND"
										},
										{
											"begin": 7771,
											"end": 7778,
											"name": "ISZERO"
										},
										{
											"begin": 7763,
											"end": 7779,
											"name": "PUSH [tag]",
											"value": "193"
										},
										{
											"begin": 7763,
											"end": 7779,
											"name": "JUMPI"
										},
										{
											"begin": 7763,
											"end": 7779,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7763,
											"end": 7779,
											"name": "DUP1"
										},
										{
											"begin": 7763,
											"end": 7779,
											"name": "REVERT"
										},
										{
											"begin": 7763,
											"end": 7779,
											"name": "tag",
											"value": "193"
										},
										{
											"begin": 7763,
											"end": 7779,
											"name": "JUMPDEST"
										},
										{
											"begin": 8092,
											"end": 8098,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8092,
											"end": 8105,
											"name": "DUP1"
										},
										{
											"begin": 8092,
											"end": 8105,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FF0000000000000000000000000000000000000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 8092,
											"end": 8105,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": 8092,
											"end": 8105,
											"name": "OR"
										},
										{
											"begin": 8092,
											"end": 8105,
											"name": "DUP2"
										},
										{
											"begin": 8092,
											"end": 8105,
											"name": "SSTORE"
										},
										{
											"begin": 8116,
											"end": 8123,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8116,
											"end": 8123,
											"name": "MLOAD"
										},
										{
											"begin": 8116,
											"end": 8123,
											"name": "PUSH",
											"value": "6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625"
										},
										{
											"begin": 8116,
											"end": 8123,
											"name": "SWAP2"
										},
										{
											"begin": 8092,
											"end": 8098,
											"name": "SWAP1"
										},
										{
											"begin": 8116,
											"end": 8123,
											"name": "LOG1"
										},
										{
											"begin": 8037,
											"end": 8129,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8620,
											"end": 8707,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 8620,
											"end": 8707,
											"name": "JUMPDEST"
										},
										{
											"begin": 8667,
											"end": 8674,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8694,
											"end": 8699,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8694,
											"end": 8699,
											"name": "AND"
										},
										{
											"begin": 8620,
											"end": 8707,
											"name": "SWAP1"
										},
										{
											"begin": 8620,
											"end": 8707,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "JUMPDEST"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "AND"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "DUP2"
										},
										{
											"begin": 1193,
											"end": 1213,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "tag",
											"value": "101"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "JUMPDEST"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "DUP1"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "SLOAD"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "DUP1"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "MLOAD"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "DUP6"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "AND"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "ISZERO"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "MUL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "ADD"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "SWAP1"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "SWAP5"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "AND"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "SWAP4"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "SWAP1"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "SWAP4"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "DIV"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "DUP2"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "ADD"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "DUP5"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "SWAP1"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "DIV"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "DUP5"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "MUL"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "DUP3"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "ADD"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "DUP5"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "ADD"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "SWAP1"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "SWAP3"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "MSTORE"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "DUP2"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "DUP2"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "MSTORE"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "SWAP3"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "SWAP2"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "DUP4"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "ADD"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "DUP3"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "DUP3"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "DUP1"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "ISZERO"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "JUMPI"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "DUP1"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "LT"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "JUMPI"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "DUP1"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "DUP4"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "SLOAD"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "DIV"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "MUL"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "DUP4"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "MSTORE"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "SWAP2"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "ADD"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "SWAP2"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "JUMP"
										},
										{
											"begin": 10935,
											"end": 11261,
											"name": "tag",
											"value": "108"
										},
										{
											"begin": 10935,
											"end": 11261,
											"name": "JUMPDEST"
										},
										{
											"begin": 7772,
											"end": 7778,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7772,
											"end": 7778,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": 7772,
											"end": 7778,
											"name": "SWAP1"
										},
										{
											"begin": 7772,
											"end": 7778,
											"name": "DIV"
										},
										{
											"begin": 7772,
											"end": 7778,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 7772,
											"end": 7778,
											"name": "AND"
										},
										{
											"begin": 7771,
											"end": 7778,
											"name": "ISZERO"
										},
										{
											"begin": 7763,
											"end": 7779,
											"name": "PUSH [tag]",
											"value": "200"
										},
										{
											"begin": 7763,
											"end": 7779,
											"name": "JUMPI"
										},
										{
											"begin": 7763,
											"end": 7779,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7763,
											"end": 7779,
											"name": "DUP1"
										},
										{
											"begin": 7763,
											"end": 7779,
											"name": "REVERT"
										},
										{
											"begin": 7763,
											"end": 7779,
											"name": "tag",
											"value": "200"
										},
										{
											"begin": 7763,
											"end": 7779,
											"name": "JUMPDEST"
										},
										{
											"begin": 11034,
											"end": 11044,
											"name": "CALLER"
										},
										{
											"begin": 11020,
											"end": 11045,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11020,
											"end": 11045,
											"name": "SWAP1"
										},
										{
											"begin": 11020,
											"end": 11045,
											"name": "DUP2"
										},
										{
											"begin": 11020,
											"end": 11045,
											"name": "MSTORE"
										},
										{
											"begin": 11020,
											"end": 11033,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 11020,
											"end": 11045,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11020,
											"end": 11045,
											"name": "MSTORE"
										},
										{
											"begin": 11020,
											"end": 11045,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11020,
											"end": 11045,
											"name": "SWAP1"
										},
										{
											"begin": 11020,
											"end": 11045,
											"name": "KECCAK256"
										},
										{
											"begin": 11020,
											"end": 11045,
											"name": "SLOAD"
										},
										{
											"begin": 11020,
											"end": 11045,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11020,
											"end": 11045,
											"name": "AND"
										},
										{
											"begin": 11019,
											"end": 11045,
											"name": "ISZERO"
										},
										{
											"begin": 11011,
											"end": 11046,
											"name": "PUSH [tag]",
											"value": "202"
										},
										{
											"begin": 11011,
											"end": 11046,
											"name": "JUMPI"
										},
										{
											"begin": 11011,
											"end": 11046,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11011,
											"end": 11046,
											"name": "DUP1"
										},
										{
											"begin": 11011,
											"end": 11046,
											"name": "REVERT"
										},
										{
											"begin": 11011,
											"end": 11046,
											"name": "tag",
											"value": "202"
										},
										{
											"begin": 11011,
											"end": 11046,
											"name": "JUMPDEST"
										},
										{
											"begin": 11061,
											"end": 11071,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 11061,
											"end": 11071,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": 11061,
											"end": 11071,
											"name": "SWAP1"
										},
										{
											"begin": 11061,
											"end": 11071,
											"name": "DIV"
										},
										{
											"begin": 11061,
											"end": 11071,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11061,
											"end": 11071,
											"name": "AND"
										},
										{
											"begin": 11057,
											"end": 11254,
											"name": "ISZERO"
										},
										{
											"begin": 11057,
											"end": 11254,
											"name": "PUSH [tag]",
											"value": "203"
										},
										{
											"begin": 11057,
											"end": 11254,
											"name": "JUMPI"
										},
										{
											"begin": 11117,
											"end": 11132,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 11117,
											"end": 11132,
											"name": "SLOAD"
										},
										{
											"begin": 11095,
											"end": 11175,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11095,
											"end": 11175,
											"name": "DUP1"
										},
										{
											"begin": 11095,
											"end": 11175,
											"name": "MLOAD"
										},
										{
											"begin": 11095,
											"end": 11175,
											"name": "PUSH",
											"value": "6E18980A00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11095,
											"end": 11175,
											"name": "DUP2"
										},
										{
											"begin": 11095,
											"end": 11175,
											"name": "MSTORE"
										},
										{
											"begin": 11151,
											"end": 11161,
											"name": "CALLER"
										},
										{
											"begin": 11095,
											"end": 11175,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11095,
											"end": 11175,
											"name": "DUP3"
										},
										{
											"begin": 11095,
											"end": 11175,
											"name": "ADD"
										},
										{
											"begin": 11095,
											"end": 11175,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 11095,
											"end": 11175,
											"name": "DUP6"
										},
										{
											"begin": 11095,
											"end": 11175,
											"name": "DUP2"
										},
										{
											"begin": 11095,
											"end": 11175,
											"name": "AND"
										},
										{
											"begin": 11095,
											"end": 11175,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 11095,
											"end": 11175,
											"name": "DUP4"
										},
										{
											"begin": 11095,
											"end": 11175,
											"name": "ADD"
										},
										{
											"begin": 11095,
											"end": 11175,
											"name": "MSTORE"
										},
										{
											"begin": 11095,
											"end": 11175,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 11095,
											"end": 11175,
											"name": "DUP3"
										},
										{
											"begin": 11095,
											"end": 11175,
											"name": "ADD"
										},
										{
											"begin": 11095,
											"end": 11175,
											"name": "DUP6"
										},
										{
											"begin": 11095,
											"end": 11175,
											"name": "SWAP1"
										},
										{
											"begin": 11095,
											"end": 11175,
											"name": "MSTORE"
										},
										{
											"begin": 11095,
											"end": 11175,
											"name": "SWAP2"
										},
										{
											"begin": 11095,
											"end": 11175,
											"name": "MLOAD"
										},
										{
											"begin": 11117,
											"end": 11132,
											"name": "SWAP2"
										},
										{
											"begin": 11117,
											"end": 11132,
											"name": "SWAP1"
										},
										{
											"begin": 11117,
											"end": 11132,
											"name": "SWAP3"
										},
										{
											"begin": 11117,
											"end": 11132,
											"name": "AND"
										},
										{
											"begin": 11117,
											"end": 11132,
											"name": "SWAP2"
										},
										{
											"begin": 11095,
											"end": 11150,
											"name": "PUSH",
											"value": "6E18980A"
										},
										{
											"begin": 11095,
											"end": 11150,
											"name": "SWAP2"
										},
										{
											"begin": 11095,
											"end": 11175,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 11095,
											"end": 11175,
											"name": "DUP1"
										},
										{
											"begin": 11095,
											"end": 11175,
											"name": "DUP4"
										},
										{
											"begin": 11095,
											"end": 11175,
											"name": "ADD"
										},
										{
											"begin": 11095,
											"end": 11175,
											"name": "SWAP3"
										},
										{
											"begin": 11117,
											"end": 11132,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11117,
											"end": 11132,
											"name": "SWAP3"
										},
										{
											"begin": 11095,
											"end": 11175,
											"name": "SWAP2"
										},
										{
											"begin": 11095,
											"end": 11175,
											"name": "SWAP1"
										},
										{
											"begin": 11095,
											"end": 11175,
											"name": "DUP3"
										},
										{
											"begin": 11095,
											"end": 11175,
											"name": "SWAP1"
										},
										{
											"begin": 11095,
											"end": 11175,
											"name": "SUB"
										},
										{
											"begin": 11095,
											"end": 11175,
											"name": "ADD"
										},
										{
											"begin": 11095,
											"end": 11175,
											"name": "DUP2"
										},
										{
											"begin": 11117,
											"end": 11132,
											"name": "DUP4"
										},
										{
											"begin": 11117,
											"end": 11132,
											"name": "DUP8"
										},
										{
											"begin": 11095,
											"end": 11175,
											"name": "DUP1"
										},
										{
											"begin": 11095,
											"end": 11175,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 11095,
											"end": 11175,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "204"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "204"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 11095,
											"end": 11175,
											"name": "POP"
										},
										{
											"begin": 11095,
											"end": 11175,
											"name": "GAS"
										},
										{
											"begin": 11095,
											"end": 11175,
											"name": "CALL"
										},
										{
											"begin": 11095,
											"end": 11175,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "205"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "205"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 11095,
											"end": 11175,
											"name": "POP"
										},
										{
											"begin": 11095,
											"end": 11175,
											"name": "POP"
										},
										{
											"begin": 11095,
											"end": 11175,
											"name": "POP"
										},
										{
											"begin": 11095,
											"end": 11175,
											"name": "POP"
										},
										{
											"begin": 11088,
											"end": 11175,
											"name": "PUSH [tag]",
											"value": "207"
										},
										{
											"begin": 11088,
											"end": 11175,
											"name": "JUMP"
										},
										{
											"begin": 11057,
											"end": 11254,
											"name": "tag",
											"value": "203"
										},
										{
											"begin": 11057,
											"end": 11254,
											"name": "JUMPDEST"
										},
										{
											"begin": 11215,
											"end": 11242,
											"name": "PUSH [tag]",
											"value": "207"
										},
										{
											"begin": 11230,
											"end": 11233,
											"name": "DUP3"
										},
										{
											"begin": 11235,
											"end": 11241,
											"name": "DUP3"
										},
										{
											"begin": 11215,
											"end": 11229,
											"name": "PUSH [tag]",
											"value": "208"
										},
										{
											"begin": 11215,
											"end": 11242,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11215,
											"end": 11242,
											"name": "tag",
											"value": "207"
										},
										{
											"begin": 11215,
											"end": 11242,
											"name": "JUMPDEST"
										},
										{
											"begin": 10935,
											"end": 11261,
											"name": "POP"
										},
										{
											"begin": 10935,
											"end": 11261,
											"name": "POP"
										},
										{
											"begin": 10935,
											"end": 11261,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1353,
											"end": 1416,
											"name": "tag",
											"value": "111"
										},
										{
											"begin": 1353,
											"end": 1416,
											"name": "JUMPDEST"
										},
										{
											"begin": 1390,
											"end": 1395,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1390,
											"end": 1408,
											"name": "DUP1"
										},
										{
											"begin": 1390,
											"end": 1408,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 1390,
											"end": 1408,
											"name": "AND"
										},
										{
											"begin": 1398,
											"end": 1408,
											"name": "CALLER"
										},
										{
											"begin": 1390,
											"end": 1408,
											"name": "OR"
										},
										{
											"begin": 1390,
											"end": 1408,
											"name": "SWAP1"
										},
										{
											"begin": 1390,
											"end": 1408,
											"name": "SSTORE"
										},
										{
											"begin": 1353,
											"end": 1416,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14249,
											"end": 14641,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 14249,
											"end": 14641,
											"name": "JUMPDEST"
										},
										{
											"begin": 1565,
											"end": 1570,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1565,
											"end": 1570,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1565,
											"end": 1570,
											"name": "AND"
										},
										{
											"begin": 1551,
											"end": 1561,
											"name": "CALLER"
										},
										{
											"begin": 1551,
											"end": 1570,
											"name": "EQ"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "PUSH [tag]",
											"value": "211"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "JUMPI"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "DUP1"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "REVERT"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "tag",
											"value": "211"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "JUMPDEST"
										},
										{
											"begin": 14447,
											"end": 14449,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 14430,
											"end": 14449,
											"name": "DUP3"
										},
										{
											"begin": 14430,
											"end": 14449,
											"name": "LT"
										},
										{
											"begin": 14422,
											"end": 14450,
											"name": "PUSH [tag]",
											"value": "213"
										},
										{
											"begin": 14422,
											"end": 14450,
											"name": "JUMPI"
										},
										{
											"begin": 14422,
											"end": 14450,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14422,
											"end": 14450,
											"name": "DUP1"
										},
										{
											"begin": 14422,
											"end": 14450,
											"name": "REVERT"
										},
										{
											"begin": 14422,
											"end": 14450,
											"name": "tag",
											"value": "213"
										},
										{
											"begin": 14422,
											"end": 14450,
											"name": "JUMPDEST"
										},
										{
											"begin": 14481,
											"end": 14483,
											"name": "PUSH",
											"value": "32"
										},
										{
											"begin": 14469,
											"end": 14483,
											"name": "DUP2"
										},
										{
											"begin": 14469,
											"end": 14483,
											"name": "LT"
										},
										{
											"begin": 14461,
											"end": 14484,
											"name": "PUSH [tag]",
											"value": "214"
										},
										{
											"begin": 14461,
											"end": 14484,
											"name": "JUMPI"
										},
										{
											"begin": 14461,
											"end": 14484,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14461,
											"end": 14484,
											"name": "DUP1"
										},
										{
											"begin": 14461,
											"end": 14484,
											"name": "REVERT"
										},
										{
											"begin": 14461,
											"end": 14484,
											"name": "tag",
											"value": "214"
										},
										{
											"begin": 14461,
											"end": 14484,
											"name": "JUMPDEST"
										},
										{
											"begin": 14497,
											"end": 14512,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 14497,
											"end": 14529,
											"name": "DUP3"
										},
										{
											"begin": 14497,
											"end": 14529,
											"name": "SWAP1"
										},
										{
											"begin": 14497,
											"end": 14529,
											"name": "SSTORE"
										},
										{
											"begin": 14571,
											"end": 14579,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 14571,
											"end": 14579,
											"name": "SLOAD"
										},
										{
											"begin": 14553,
											"end": 14580,
											"name": "PUSH [tag]",
											"value": "215"
										},
										{
											"begin": 14553,
											"end": 14580,
											"name": "SWAP1"
										},
										{
											"begin": 14553,
											"end": 14562,
											"name": "DUP3"
										},
										{
											"begin": 14553,
											"end": 14562,
											"name": "SWAP1"
										},
										{
											"begin": 14567,
											"end": 14569,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 14567,
											"end": 14579,
											"name": "EXP"
										},
										{
											"begin": 14553,
											"end": 14580,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14553,
											"end": 14566,
											"name": "PUSH [tag]",
											"value": "216"
										},
										{
											"begin": 14553,
											"end": 14580,
											"name": "AND"
										},
										{
											"begin": 14553,
											"end": 14580,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14553,
											"end": 14580,
											"name": "tag",
											"value": "215"
										},
										{
											"begin": 14553,
											"end": 14580,
											"name": "JUMPDEST"
										},
										{
											"begin": 14540,
											"end": 14550,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14540,
											"end": 14580,
											"name": "DUP2"
										},
										{
											"begin": 14540,
											"end": 14580,
											"name": "SWAP1"
										},
										{
											"begin": 14540,
											"end": 14580,
											"name": "SSTORE"
										},
										{
											"begin": 14605,
											"end": 14620,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 14605,
											"end": 14620,
											"name": "SLOAD"
										},
										{
											"begin": 14598,
											"end": 14633,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14598,
											"end": 14633,
											"name": "DUP1"
										},
										{
											"begin": 14598,
											"end": 14633,
											"name": "MLOAD"
										},
										{
											"begin": 14598,
											"end": 14633,
											"name": "SWAP2"
										},
										{
											"begin": 14598,
											"end": 14633,
											"name": "DUP3"
										},
										{
											"begin": 14598,
											"end": 14633,
											"name": "MSTORE"
										},
										{
											"begin": 14598,
											"end": 14633,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14598,
											"end": 14633,
											"name": "DUP3"
										},
										{
											"begin": 14598,
											"end": 14633,
											"name": "ADD"
										},
										{
											"begin": 14598,
											"end": 14633,
											"name": "SWAP3"
										},
										{
											"begin": 14598,
											"end": 14633,
											"name": "SWAP1"
										},
										{
											"begin": 14598,
											"end": 14633,
											"name": "SWAP3"
										},
										{
											"begin": 14598,
											"end": 14633,
											"name": "MSTORE"
										},
										{
											"begin": 14598,
											"end": 14633,
											"name": "DUP2"
										},
										{
											"begin": 14598,
											"end": 14633,
											"name": "MLOAD"
										},
										{
											"begin": 14598,
											"end": 14633,
											"name": "PUSH",
											"value": "B044A1E409EAC5C48E5AF22D4AF52670DD1A99059537A78B31B48C6500A6354E"
										},
										{
											"begin": 14598,
											"end": 14633,
											"name": "SWAP3"
										},
										{
											"begin": 14598,
											"end": 14633,
											"name": "SWAP2"
										},
										{
											"begin": 14598,
											"end": 14633,
											"name": "DUP2"
										},
										{
											"begin": 14598,
											"end": 14633,
											"name": "SWAP1"
										},
										{
											"begin": 14598,
											"end": 14633,
											"name": "SUB"
										},
										{
											"begin": 14598,
											"end": 14633,
											"name": "SWAP1"
										},
										{
											"begin": 14598,
											"end": 14633,
											"name": "SWAP2"
										},
										{
											"begin": 14598,
											"end": 14633,
											"name": "ADD"
										},
										{
											"begin": 14598,
											"end": 14633,
											"name": "SWAP1"
										},
										{
											"begin": 14598,
											"end": 14633,
											"name": "LOG1"
										},
										{
											"begin": 14249,
											"end": 14641,
											"name": "POP"
										},
										{
											"begin": 14249,
											"end": 14641,
											"name": "POP"
										},
										{
											"begin": 14249,
											"end": 14641,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13502,
											"end": 13768,
											"name": "tag",
											"value": "117"
										},
										{
											"begin": 13502,
											"end": 13768,
											"name": "JUMPDEST"
										},
										{
											"begin": 1565,
											"end": 1570,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1565,
											"end": 1570,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1565,
											"end": 1570,
											"name": "AND"
										},
										{
											"begin": 1551,
											"end": 1561,
											"name": "CALLER"
										},
										{
											"begin": 1551,
											"end": 1570,
											"name": "EQ"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "PUSH [tag]",
											"value": "218"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "JUMPI"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "DUP1"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "REVERT"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "tag",
											"value": "218"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "JUMPDEST"
										},
										{
											"begin": 13590,
											"end": 13602,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13590,
											"end": 13602,
											"name": "SLOAD"
										},
										{
											"begin": 13566,
											"end": 13587,
											"name": "DUP2"
										},
										{
											"begin": 13566,
											"end": 13587,
											"name": "DUP2"
										},
										{
											"begin": 13566,
											"end": 13587,
											"name": "ADD"
										},
										{
											"begin": 13566,
											"end": 13602,
											"name": "GT"
										},
										{
											"begin": 13558,
											"end": 13603,
											"name": "PUSH [tag]",
											"value": "220"
										},
										{
											"begin": 13558,
											"end": 13603,
											"name": "JUMPI"
										},
										{
											"begin": 13558,
											"end": 13603,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13558,
											"end": 13603,
											"name": "DUP1"
										},
										{
											"begin": 13558,
											"end": 13603,
											"name": "REVERT"
										},
										{
											"begin": 13558,
											"end": 13603,
											"name": "tag",
											"value": "220"
										},
										{
											"begin": 13558,
											"end": 13603,
											"name": "JUMPDEST"
										},
										{
											"begin": 13649,
											"end": 13664,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13658,
											"end": 13663,
											"name": "DUP1"
										},
										{
											"begin": 13658,
											"end": 13663,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13658,
											"end": 13663,
											"name": "AND"
										},
										{
											"begin": 13649,
											"end": 13664,
											"name": "DUP2"
										},
										{
											"begin": 13649,
											"end": 13664,
											"name": "MSTORE"
										},
										{
											"begin": 13649,
											"end": 13657,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 13649,
											"end": 13664,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13649,
											"end": 13664,
											"name": "MSTORE"
										},
										{
											"begin": 13649,
											"end": 13664,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13649,
											"end": 13664,
											"name": "SWAP1"
										},
										{
											"begin": 13649,
											"end": 13664,
											"name": "KECCAK256"
										},
										{
											"begin": 13649,
											"end": 13664,
											"name": "SLOAD"
										},
										{
											"begin": 13622,
											"end": 13646,
											"name": "DUP2"
										},
										{
											"begin": 13622,
											"end": 13646,
											"name": "DUP2"
										},
										{
											"begin": 13622,
											"end": 13646,
											"name": "ADD"
										},
										{
											"begin": 13622,
											"end": 13664,
											"name": "GT"
										},
										{
											"begin": 13614,
											"end": 13665,
											"name": "PUSH [tag]",
											"value": "221"
										},
										{
											"begin": 13614,
											"end": 13665,
											"name": "JUMPI"
										},
										{
											"begin": 13614,
											"end": 13665,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13614,
											"end": 13665,
											"name": "DUP1"
										},
										{
											"begin": 13614,
											"end": 13665,
											"name": "REVERT"
										},
										{
											"begin": 13614,
											"end": 13665,
											"name": "tag",
											"value": "221"
										},
										{
											"begin": 13614,
											"end": 13665,
											"name": "JUMPDEST"
										},
										{
											"begin": 13678,
											"end": 13693,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13687,
											"end": 13692,
											"name": "DUP1"
										},
										{
											"begin": 13687,
											"end": 13692,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13687,
											"end": 13692,
											"name": "AND"
										},
										{
											"begin": 13678,
											"end": 13693,
											"name": "DUP2"
										},
										{
											"begin": 13678,
											"end": 13693,
											"name": "MSTORE"
										},
										{
											"begin": 13678,
											"end": 13686,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 13678,
											"end": 13693,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13678,
											"end": 13693,
											"name": "SWAP1"
										},
										{
											"begin": 13678,
											"end": 13693,
											"name": "DUP2"
										},
										{
											"begin": 13678,
											"end": 13693,
											"name": "MSTORE"
										},
										{
											"begin": 13678,
											"end": 13693,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13678,
											"end": 13693,
											"name": "SWAP2"
										},
										{
											"begin": 13678,
											"end": 13693,
											"name": "DUP3"
										},
										{
											"begin": 13678,
											"end": 13693,
											"name": "SWAP1"
										},
										{
											"begin": 13678,
											"end": 13693,
											"name": "KECCAK256"
										},
										{
											"begin": 13678,
											"end": 13703,
											"name": "DUP1"
										},
										{
											"begin": 13678,
											"end": 13703,
											"name": "SLOAD"
										},
										{
											"begin": 13678,
											"end": 13703,
											"name": "DUP5"
										},
										{
											"begin": 13678,
											"end": 13703,
											"name": "ADD"
										},
										{
											"begin": 13678,
											"end": 13703,
											"name": "SWAP1"
										},
										{
											"begin": 13678,
											"end": 13703,
											"name": "SSTORE"
										},
										{
											"begin": 13687,
											"end": 13692,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13714,
											"end": 13736,
											"name": "DUP1"
										},
										{
											"begin": 13714,
											"end": 13736,
											"name": "SLOAD"
										},
										{
											"begin": 13714,
											"end": 13736,
											"name": "DUP5"
										},
										{
											"begin": 13714,
											"end": 13736,
											"name": "ADD"
										},
										{
											"begin": 13714,
											"end": 13736,
											"name": "SWAP1"
										},
										{
											"begin": 13714,
											"end": 13736,
											"name": "SSTORE"
										},
										{
											"begin": 13747,
											"end": 13760,
											"name": "DUP2"
										},
										{
											"begin": 13747,
											"end": 13760,
											"name": "MLOAD"
										},
										{
											"begin": 13747,
											"end": 13760,
											"name": "DUP4"
										},
										{
											"begin": 13747,
											"end": 13760,
											"name": "DUP2"
										},
										{
											"begin": 13747,
											"end": 13760,
											"name": "MSTORE"
										},
										{
											"begin": 13747,
											"end": 13760,
											"name": "SWAP2"
										},
										{
											"begin": 13747,
											"end": 13760,
											"name": "MLOAD"
										},
										{
											"begin": 13747,
											"end": 13760,
											"name": "PUSH",
											"value": "CB8241ADB0C3FDB35B70C24CE35C5EB0C17AF7431C99F827D44A445CA624176A"
										},
										{
											"begin": 13747,
											"end": 13760,
											"name": "SWAP3"
										},
										{
											"begin": 13747,
											"end": 13760,
											"name": "DUP2"
										},
										{
											"begin": 13747,
											"end": 13760,
											"name": "SWAP1"
										},
										{
											"begin": 13747,
											"end": 13760,
											"name": "SUB"
										},
										{
											"begin": 13747,
											"end": 13760,
											"name": "SWAP1"
										},
										{
											"begin": 13747,
											"end": 13760,
											"name": "SWAP2"
										},
										{
											"begin": 13747,
											"end": 13760,
											"name": "ADD"
										},
										{
											"begin": 13747,
											"end": 13760,
											"name": "SWAP1"
										},
										{
											"begin": 13747,
											"end": 13760,
											"name": "LOG1"
										},
										{
											"begin": 13502,
											"end": 13768,
											"name": "POP"
										},
										{
											"begin": 13502,
											"end": 13768,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13999,
											"end": 14241,
											"name": "tag",
											"value": "120"
										},
										{
											"begin": 13999,
											"end": 14241,
											"name": "JUMPDEST"
										},
										{
											"begin": 1565,
											"end": 1570,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1565,
											"end": 1570,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1565,
											"end": 1570,
											"name": "AND"
										},
										{
											"begin": 1551,
											"end": 1561,
											"name": "CALLER"
										},
										{
											"begin": 1551,
											"end": 1570,
											"name": "EQ"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "PUSH [tag]",
											"value": "223"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "JUMPI"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "DUP1"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "REVERT"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "tag",
											"value": "223"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "JUMPDEST"
										},
										{
											"begin": 14064,
											"end": 14076,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 14064,
											"end": 14076,
											"name": "SLOAD"
										},
										{
											"begin": 14064,
											"end": 14086,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT"
										},
										{
											"begin": 14064,
											"end": 14086,
											"name": "ISZERO"
										},
										{
											"begin": 14056,
											"end": 14087,
											"name": "PUSH [tag]",
											"value": "225"
										},
										{
											"begin": 14056,
											"end": 14087,
											"name": "JUMPI"
										},
										{
											"begin": 14056,
											"end": 14087,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14056,
											"end": 14087,
											"name": "DUP1"
										},
										{
											"begin": 14056,
											"end": 14087,
											"name": "REVERT"
										},
										{
											"begin": 14056,
											"end": 14087,
											"name": "tag",
											"value": "225"
										},
										{
											"begin": 14056,
											"end": 14087,
											"name": "JUMPDEST"
										},
										{
											"begin": 14106,
											"end": 14121,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14115,
											"end": 14120,
											"name": "DUP1"
										},
										{
											"begin": 14115,
											"end": 14120,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14115,
											"end": 14120,
											"name": "AND"
										},
										{
											"begin": 14106,
											"end": 14121,
											"name": "DUP2"
										},
										{
											"begin": 14106,
											"end": 14121,
											"name": "MSTORE"
										},
										{
											"begin": 14106,
											"end": 14114,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 14106,
											"end": 14121,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14106,
											"end": 14121,
											"name": "MSTORE"
										},
										{
											"begin": 14106,
											"end": 14121,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14106,
											"end": 14121,
											"name": "SWAP1"
										},
										{
											"begin": 14106,
											"end": 14121,
											"name": "KECCAK256"
										},
										{
											"begin": 14106,
											"end": 14121,
											"name": "SLOAD"
										},
										{
											"begin": 14106,
											"end": 14131,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT"
										},
										{
											"begin": 14106,
											"end": 14131,
											"name": "ISZERO"
										},
										{
											"begin": 14098,
											"end": 14132,
											"name": "PUSH [tag]",
											"value": "226"
										},
										{
											"begin": 14098,
											"end": 14132,
											"name": "JUMPI"
										},
										{
											"begin": 14098,
											"end": 14132,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14098,
											"end": 14132,
											"name": "DUP1"
										},
										{
											"begin": 14098,
											"end": 14132,
											"name": "REVERT"
										},
										{
											"begin": 14098,
											"end": 14132,
											"name": "tag",
											"value": "226"
										},
										{
											"begin": 14098,
											"end": 14132,
											"name": "JUMPDEST"
										},
										{
											"begin": 14145,
											"end": 14157,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 14145,
											"end": 14167,
											"name": "DUP1"
										},
										{
											"begin": 14145,
											"end": 14167,
											"name": "SLOAD"
										},
										{
											"begin": 14145,
											"end": 14167,
											"name": "DUP3"
										},
										{
											"begin": 14145,
											"end": 14167,
											"name": "SWAP1"
										},
										{
											"begin": 14145,
											"end": 14167,
											"name": "SUB"
										},
										{
											"begin": 14145,
											"end": 14167,
											"name": "SWAP1"
										},
										{
											"begin": 14145,
											"end": 14167,
											"name": "SSTORE"
										},
										{
											"begin": 14145,
											"end": 14157,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14187,
											"end": 14192,
											"name": "DUP1"
										},
										{
											"begin": 14187,
											"end": 14192,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14187,
											"end": 14192,
											"name": "AND"
										},
										{
											"begin": 14178,
											"end": 14193,
											"name": "DUP2"
										},
										{
											"begin": 14178,
											"end": 14193,
											"name": "MSTORE"
										},
										{
											"begin": 14178,
											"end": 14186,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 14178,
											"end": 14193,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14178,
											"end": 14193,
											"name": "SWAP1"
										},
										{
											"begin": 14178,
											"end": 14193,
											"name": "DUP2"
										},
										{
											"begin": 14178,
											"end": 14193,
											"name": "MSTORE"
										},
										{
											"begin": 14178,
											"end": 14193,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14178,
											"end": 14193,
											"name": "SWAP2"
										},
										{
											"begin": 14178,
											"end": 14193,
											"name": "DUP3"
										},
										{
											"begin": 14178,
											"end": 14193,
											"name": "SWAP1"
										},
										{
											"begin": 14178,
											"end": 14193,
											"name": "KECCAK256"
										},
										{
											"begin": 14178,
											"end": 14203,
											"name": "DUP1"
										},
										{
											"begin": 14178,
											"end": 14203,
											"name": "SLOAD"
										},
										{
											"begin": 14178,
											"end": 14203,
											"name": "DUP5"
										},
										{
											"begin": 14178,
											"end": 14203,
											"name": "SWAP1"
										},
										{
											"begin": 14178,
											"end": 14203,
											"name": "SUB"
										},
										{
											"begin": 14178,
											"end": 14203,
											"name": "SWAP1"
										},
										{
											"begin": 14178,
											"end": 14203,
											"name": "SSTORE"
										},
										{
											"begin": 14219,
											"end": 14233,
											"name": "DUP2"
										},
										{
											"begin": 14219,
											"end": 14233,
											"name": "MLOAD"
										},
										{
											"begin": 14219,
											"end": 14233,
											"name": "DUP4"
										},
										{
											"begin": 14219,
											"end": 14233,
											"name": "DUP2"
										},
										{
											"begin": 14219,
											"end": 14233,
											"name": "MSTORE"
										},
										{
											"begin": 14219,
											"end": 14233,
											"name": "SWAP2"
										},
										{
											"begin": 14219,
											"end": 14233,
											"name": "MLOAD"
										},
										{
											"begin": 14219,
											"end": 14233,
											"name": "PUSH",
											"value": "702D5967F45F6513A38FFC42D6BA9BF230BD40E8F53B16363C7EB4FD2DEB9A44"
										},
										{
											"begin": 14219,
											"end": 14233,
											"name": "SWAP3"
										},
										{
											"begin": 14219,
											"end": 14233,
											"name": "DUP2"
										},
										{
											"begin": 14219,
											"end": 14233,
											"name": "SWAP1"
										},
										{
											"begin": 14219,
											"end": 14233,
											"name": "SUB"
										},
										{
											"begin": 14219,
											"end": 14233,
											"name": "SWAP1"
										},
										{
											"begin": 14219,
											"end": 14233,
											"name": "SWAP2"
										},
										{
											"begin": 14219,
											"end": 14233,
											"name": "ADD"
										},
										{
											"begin": 14219,
											"end": 14233,
											"name": "SWAP1"
										},
										{
											"begin": 14219,
											"end": 14233,
											"name": "LOG1"
										},
										{
											"begin": 13999,
											"end": 14241,
											"name": "POP"
										},
										{
											"begin": 13999,
											"end": 14241,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12509,
											"end": 12802,
											"name": "tag",
											"value": "123"
										},
										{
											"begin": 12509,
											"end": 12802,
											"name": "JUMPDEST"
										},
										{
											"begin": 12618,
											"end": 12628,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 12618,
											"end": 12628,
											"name": "SLOAD"
										},
										{
											"begin": 12587,
											"end": 12601,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12587,
											"end": 12601,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": 12618,
											"end": 12628,
											"name": "SWAP1"
										},
										{
											"begin": 12618,
											"end": 12628,
											"name": "DIV"
										},
										{
											"begin": 12618,
											"end": 12628,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 12618,
											"end": 12628,
											"name": "AND"
										},
										{
											"begin": 12614,
											"end": 12795,
											"name": "ISZERO"
										},
										{
											"begin": 12614,
											"end": 12795,
											"name": "PUSH [tag]",
											"value": "228"
										},
										{
											"begin": 12614,
											"end": 12795,
											"name": "JUMPI"
										},
										{
											"begin": 12666,
											"end": 12681,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 12666,
											"end": 12681,
											"name": "SLOAD"
										},
										{
											"begin": 12652,
											"end": 12710,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12652,
											"end": 12710,
											"name": "DUP1"
										},
										{
											"begin": 12652,
											"end": 12710,
											"name": "MLOAD"
										},
										{
											"begin": 12652,
											"end": 12710,
											"name": "PUSH",
											"value": "DD62ED3E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12652,
											"end": 12710,
											"name": "DUP2"
										},
										{
											"begin": 12652,
											"end": 12710,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12652,
											"end": 12710,
											"name": "DUP7"
										},
										{
											"begin": 12652,
											"end": 12710,
											"name": "DUP2"
										},
										{
											"begin": 12652,
											"end": 12710,
											"name": "AND"
										},
										{
											"begin": 12652,
											"end": 12710,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12652,
											"end": 12710,
											"name": "DUP4"
										},
										{
											"begin": 12652,
											"end": 12710,
											"name": "ADD"
										},
										{
											"begin": 12652,
											"end": 12710,
											"name": "MSTORE"
										},
										{
											"begin": 12652,
											"end": 12710,
											"name": "DUP6"
										},
										{
											"begin": 12652,
											"end": 12710,
											"name": "DUP2"
										},
										{
											"begin": 12652,
											"end": 12710,
											"name": "AND"
										},
										{
											"begin": 12652,
											"end": 12710,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 12652,
											"end": 12710,
											"name": "DUP4"
										},
										{
											"begin": 12652,
											"end": 12710,
											"name": "ADD"
										},
										{
											"begin": 12652,
											"end": 12710,
											"name": "MSTORE"
										},
										{
											"begin": 12652,
											"end": 12710,
											"name": "SWAP2"
										},
										{
											"begin": 12652,
											"end": 12710,
											"name": "MLOAD"
										},
										{
											"begin": 12666,
											"end": 12681,
											"name": "SWAP2"
										},
										{
											"begin": 12666,
											"end": 12681,
											"name": "SWAP1"
										},
										{
											"begin": 12666,
											"end": 12681,
											"name": "SWAP3"
										},
										{
											"begin": 12666,
											"end": 12681,
											"name": "AND"
										},
										{
											"begin": 12666,
											"end": 12681,
											"name": "SWAP2"
										},
										{
											"begin": 12652,
											"end": 12692,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 12652,
											"end": 12692,
											"name": "SWAP2"
										},
										{
											"begin": 12652,
											"end": 12710,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 12652,
											"end": 12710,
											"name": "DUP1"
										},
										{
											"begin": 12652,
											"end": 12710,
											"name": "DUP4"
										},
										{
											"begin": 12652,
											"end": 12710,
											"name": "ADD"
										},
										{
											"begin": 12652,
											"end": 12710,
											"name": "SWAP3"
										},
										{
											"begin": 12652,
											"end": 12710,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12652,
											"end": 12710,
											"name": "SWAP3"
										},
										{
											"begin": 12652,
											"end": 12710,
											"name": "SWAP2"
										},
										{
											"begin": 12652,
											"end": 12710,
											"name": "SWAP1"
										},
										{
											"begin": 12652,
											"end": 12710,
											"name": "DUP3"
										},
										{
											"begin": 12652,
											"end": 12710,
											"name": "SWAP1"
										},
										{
											"begin": 12652,
											"end": 12710,
											"name": "SUB"
										},
										{
											"begin": 12652,
											"end": 12710,
											"name": "ADD"
										},
										{
											"begin": 12652,
											"end": 12710,
											"name": "DUP2"
										},
										{
											"begin": 12666,
											"end": 12681,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12666,
											"end": 12681,
											"name": "DUP8"
										},
										{
											"begin": 12652,
											"end": 12710,
											"name": "DUP1"
										},
										{
											"begin": 12652,
											"end": 12710,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 12652,
											"end": 12710,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "229"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "229"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 12652,
											"end": 12710,
											"name": "POP"
										},
										{
											"begin": 12652,
											"end": 12710,
											"name": "GAS"
										},
										{
											"begin": 12652,
											"end": 12710,
											"name": "CALL"
										},
										{
											"begin": 12652,
											"end": 12710,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "230"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "230"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 12652,
											"end": 12710,
											"name": "POP"
										},
										{
											"begin": 12652,
											"end": 12710,
											"name": "POP"
										},
										{
											"begin": 12652,
											"end": 12710,
											"name": "POP"
										},
										{
											"begin": 12652,
											"end": 12710,
											"name": "POP"
										},
										{
											"begin": 12652,
											"end": 12710,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12652,
											"end": 12710,
											"name": "MLOAD"
										},
										{
											"begin": 12652,
											"end": 12710,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "231"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "231"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 12652,
											"end": 12710,
											"name": "MLOAD"
										},
										{
											"begin": 12652,
											"end": 12710,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 12645,
											"end": 12710,
											"name": "PUSH [tag]",
											"value": "232"
										},
										{
											"begin": 12645,
											"end": 12710,
											"name": "JUMP"
										},
										{
											"begin": 12614,
											"end": 12795,
											"name": "tag",
											"value": "228"
										},
										{
											"begin": 12614,
											"end": 12795,
											"name": "JUMPDEST"
										},
										{
											"begin": 12750,
											"end": 12783,
											"name": "PUSH [tag]",
											"value": "233"
										},
										{
											"begin": 12766,
											"end": 12772,
											"name": "DUP4"
										},
										{
											"begin": 12774,
											"end": 12782,
											"name": "DUP4"
										},
										{
											"begin": 12750,
											"end": 12765,
											"name": "PUSH [tag]",
											"value": "234"
										},
										{
											"begin": 12750,
											"end": 12783,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12750,
											"end": 12783,
											"name": "tag",
											"value": "233"
										},
										{
											"begin": 12750,
											"end": 12783,
											"name": "JUMPDEST"
										},
										{
											"begin": 12743,
											"end": 12783,
											"name": "SWAP1"
										},
										{
											"begin": 12743,
											"end": 12783,
											"name": "POP"
										},
										{
											"begin": 12614,
											"end": 12795,
											"name": "tag",
											"value": "232"
										},
										{
											"begin": 12614,
											"end": 12795,
											"name": "JUMPDEST"
										},
										{
											"begin": 12509,
											"end": 12802,
											"name": "SWAP3"
										},
										{
											"begin": 12509,
											"end": 12802,
											"name": "SWAP2"
										},
										{
											"begin": 12509,
											"end": 12802,
											"name": "POP"
										},
										{
											"begin": 12509,
											"end": 12802,
											"name": "POP"
										},
										{
											"begin": 12509,
											"end": 12802,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3110,
											"end": 3141,
											"name": "tag",
											"value": "126"
										},
										{
											"begin": 3110,
											"end": 3141,
											"name": "JUMPDEST"
										},
										{
											"begin": 3110,
											"end": 3141,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 3110,
											"end": 3141,
											"name": "SLOAD"
										},
										{
											"begin": 3110,
											"end": 3141,
											"name": "DUP2"
										},
										{
											"begin": 3110,
											"end": 3141,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8715,
											"end": 8761,
											"name": "tag",
											"value": "129"
										},
										{
											"begin": 8715,
											"end": 8761,
											"name": "JUMPDEST"
										},
										{
											"begin": 8715,
											"end": 8761,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 8715,
											"end": 8761,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8715,
											"end": 8761,
											"name": "MSTORE"
										},
										{
											"begin": 8715,
											"end": 8761,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8715,
											"end": 8761,
											"name": "SWAP1"
										},
										{
											"begin": 8715,
											"end": 8761,
											"name": "DUP2"
										},
										{
											"begin": 8715,
											"end": 8761,
											"name": "MSTORE"
										},
										{
											"begin": 8715,
											"end": 8761,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8715,
											"end": 8761,
											"name": "SWAP1"
										},
										{
											"begin": 8715,
											"end": 8761,
											"name": "KECCAK256"
										},
										{
											"begin": 8715,
											"end": 8761,
											"name": "SLOAD"
										},
										{
											"begin": 8715,
											"end": 8761,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 8715,
											"end": 8761,
											"name": "AND"
										},
										{
											"begin": 8715,
											"end": 8761,
											"name": "DUP2"
										},
										{
											"begin": 8715,
											"end": 8761,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8931,
											"end": 9095,
											"name": "tag",
											"value": "132"
										},
										{
											"begin": 8931,
											"end": 9095,
											"name": "JUMPDEST"
										},
										{
											"begin": 1565,
											"end": 1570,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1565,
											"end": 1570,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1565,
											"end": 1570,
											"name": "AND"
										},
										{
											"begin": 1551,
											"end": 1561,
											"name": "CALLER"
										},
										{
											"begin": 1551,
											"end": 1570,
											"name": "EQ"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "PUSH [tag]",
											"value": "236"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "JUMPI"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "DUP1"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "REVERT"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "tag",
											"value": "236"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 9007,
											"end": 9034,
											"name": "DUP2"
										},
										{
											"begin": 9007,
											"end": 9034,
											"name": "AND"
										},
										{
											"begin": 9037,
											"end": 9042,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9007,
											"end": 9034,
											"name": "DUP2"
										},
										{
											"begin": 9007,
											"end": 9034,
											"name": "DUP2"
										},
										{
											"begin": 9007,
											"end": 9034,
											"name": "MSTORE"
										},
										{
											"begin": 9007,
											"end": 9020,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 9007,
											"end": 9034,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9007,
											"end": 9034,
											"name": "SWAP1"
										},
										{
											"begin": 9007,
											"end": 9034,
											"name": "DUP2"
										},
										{
											"begin": 9007,
											"end": 9034,
											"name": "MSTORE"
										},
										{
											"begin": 9007,
											"end": 9034,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9007,
											"end": 9034,
											"name": "SWAP2"
										},
										{
											"begin": 9007,
											"end": 9034,
											"name": "DUP3"
										},
										{
											"begin": 9007,
											"end": 9034,
											"name": "SWAP1"
										},
										{
											"begin": 9007,
											"end": 9034,
											"name": "KECCAK256"
										},
										{
											"begin": 9007,
											"end": 9042,
											"name": "DUP1"
										},
										{
											"begin": 9007,
											"end": 9042,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 9007,
											"end": 9042,
											"name": "AND"
										},
										{
											"begin": 9007,
											"end": 9042,
											"name": "SWAP1"
										},
										{
											"begin": 9007,
											"end": 9042,
											"name": "SSTORE"
										},
										{
											"begin": 9057,
											"end": 9087,
											"name": "DUP2"
										},
										{
											"begin": 9057,
											"end": 9087,
											"name": "MLOAD"
										},
										{
											"begin": 9057,
											"end": 9087,
											"name": "SWAP3"
										},
										{
											"begin": 9057,
											"end": 9087,
											"name": "DUP4"
										},
										{
											"begin": 9057,
											"end": 9087,
											"name": "MSTORE"
										},
										{
											"begin": 9057,
											"end": 9087,
											"name": "SWAP1"
										},
										{
											"begin": 9057,
											"end": 9087,
											"name": "MLOAD"
										},
										{
											"begin": 9057,
											"end": 9087,
											"name": "PUSH",
											"value": "D7E9EC6E6ECD65492DCE6BF513CD6867560D49544421D0783DDF06E76C24470C"
										},
										{
											"begin": 9057,
											"end": 9087,
											"name": "SWAP3"
										},
										{
											"begin": 9057,
											"end": 9087,
											"name": "DUP2"
										},
										{
											"begin": 9057,
											"end": 9087,
											"name": "SWAP1"
										},
										{
											"begin": 9057,
											"end": 9087,
											"name": "SUB"
										},
										{
											"begin": 9057,
											"end": 9087,
											"name": "SWAP1"
										},
										{
											"begin": 9057,
											"end": 9087,
											"name": "SWAP2"
										},
										{
											"begin": 9057,
											"end": 9087,
											"name": "ADD"
										},
										{
											"begin": 9057,
											"end": 9087,
											"name": "SWAP1"
										},
										{
											"begin": 9057,
											"end": 9087,
											"name": "LOG1"
										},
										{
											"begin": 8931,
											"end": 9095,
											"name": "POP"
										},
										{
											"begin": 8931,
											"end": 9095,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4852,
											"end": 4894,
											"name": "tag",
											"value": "135"
										},
										{
											"begin": 4852,
											"end": 4894,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 4852,
											"end": 4894,
											"name": "DUP2"
										},
										{
											"begin": 4852,
											"end": 4894,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1765,
											"end": 1916,
											"name": "tag",
											"value": "138"
										},
										{
											"begin": 1765,
											"end": 1916,
											"name": "JUMPDEST"
										},
										{
											"begin": 1565,
											"end": 1570,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1565,
											"end": 1570,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1565,
											"end": 1570,
											"name": "AND"
										},
										{
											"begin": 1551,
											"end": 1561,
											"name": "CALLER"
										},
										{
											"begin": 1551,
											"end": 1570,
											"name": "EQ"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "JUMPI"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "DUP1"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "REVERT"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "tag",
											"value": "239"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1842,
											"end": 1864,
											"name": "DUP2"
										},
										{
											"begin": 1842,
											"end": 1864,
											"name": "AND"
										},
										{
											"begin": 1842,
											"end": 1864,
											"name": "ISZERO"
										},
										{
											"begin": 1838,
											"end": 1909,
											"name": "PUSH [tag]",
											"value": "241"
										},
										{
											"begin": 1838,
											"end": 1909,
											"name": "JUMPI"
										},
										{
											"begin": 1881,
											"end": 1886,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1881,
											"end": 1897,
											"name": "DUP1"
										},
										{
											"begin": 1881,
											"end": 1897,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 1881,
											"end": 1897,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1881,
											"end": 1897,
											"name": "DUP4"
										},
										{
											"begin": 1881,
											"end": 1897,
											"name": "AND"
										},
										{
											"begin": 1881,
											"end": 1897,
											"name": "OR"
										},
										{
											"begin": 1881,
											"end": 1897,
											"name": "SWAP1"
										},
										{
											"begin": 1881,
											"end": 1897,
											"name": "SSTORE"
										},
										{
											"begin": 1838,
											"end": 1909,
											"name": "tag",
											"value": "241"
										},
										{
											"begin": 1838,
											"end": 1909,
											"name": "JUMPDEST"
										},
										{
											"begin": 1765,
											"end": 1916,
											"name": "POP"
										},
										{
											"begin": 1765,
											"end": 1916,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 9103,
											"end": 9432,
											"name": "tag",
											"value": "141"
										},
										{
											"begin": 9103,
											"end": 9432,
											"name": "JUMPDEST"
										},
										{
											"begin": 9236,
											"end": 9251,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1565,
											"end": 1570,
											"name": "DUP1"
										},
										{
											"begin": 1565,
											"end": 1570,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1565,
											"end": 1570,
											"name": "AND"
										},
										{
											"begin": 1551,
											"end": 1561,
											"name": "CALLER"
										},
										{
											"begin": 1551,
											"end": 1570,
											"name": "EQ"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "PUSH [tag]",
											"value": "243"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "JUMPI"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "DUP1"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "REVERT"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "tag",
											"value": "243"
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 9193,
											"end": 9224,
											"name": "DUP3"
										},
										{
											"begin": 9193,
											"end": 9224,
											"name": "AND"
										},
										{
											"begin": 9193,
											"end": 9224,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9193,
											"end": 9224,
											"name": "SWAP1"
										},
										{
											"begin": 9193,
											"end": 9224,
											"name": "DUP2"
										},
										{
											"begin": 9193,
											"end": 9224,
											"name": "MSTORE"
										},
										{
											"begin": 9193,
											"end": 9206,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 9193,
											"end": 9224,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9193,
											"end": 9224,
											"name": "MSTORE"
										},
										{
											"begin": 9193,
											"end": 9224,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9193,
											"end": 9224,
											"name": "SWAP1"
										},
										{
											"begin": 9193,
											"end": 9224,
											"name": "KECCAK256"
										},
										{
											"begin": 9193,
											"end": 9224,
											"name": "SLOAD"
										},
										{
											"begin": 9193,
											"end": 9224,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 9193,
											"end": 9224,
											"name": "AND"
										},
										{
											"begin": 9185,
											"end": 9225,
											"name": "ISZERO"
										},
										{
											"begin": 9185,
											"end": 9225,
											"name": "ISZERO"
										},
										{
											"begin": 9185,
											"end": 9225,
											"name": "PUSH [tag]",
											"value": "245"
										},
										{
											"begin": 9185,
											"end": 9225,
											"name": "JUMPI"
										},
										{
											"begin": 9185,
											"end": 9225,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9185,
											"end": 9225,
											"name": "DUP1"
										},
										{
											"begin": 9185,
											"end": 9225,
											"name": "REVERT"
										},
										{
											"begin": 9185,
											"end": 9225,
											"name": "tag",
											"value": "245"
										},
										{
											"begin": 9185,
											"end": 9225,
											"name": "JUMPDEST"
										},
										{
											"begin": 9254,
											"end": 9281,
											"name": "PUSH [tag]",
											"value": "246"
										},
										{
											"begin": 9264,
											"end": 9280,
											"name": "DUP3"
										},
										{
											"begin": 9254,
											"end": 9263,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 9254,
											"end": 9281,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9254,
											"end": 9281,
											"name": "tag",
											"value": "246"
										},
										{
											"begin": 9254,
											"end": 9281,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 9292,
											"end": 9318,
											"name": "DUP4"
										},
										{
											"begin": 9292,
											"end": 9318,
											"name": "AND"
										},
										{
											"begin": 9321,
											"end": 9322,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9292,
											"end": 9318,
											"name": "DUP2"
										},
										{
											"begin": 9292,
											"end": 9318,
											"name": "DUP2"
										},
										{
											"begin": 9292,
											"end": 9318,
											"name": "MSTORE"
										},
										{
											"begin": 9292,
											"end": 9300,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 9292,
											"end": 9318,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9292,
											"end": 9318,
											"name": "SWAP1"
										},
										{
											"begin": 9292,
											"end": 9318,
											"name": "DUP2"
										},
										{
											"begin": 9292,
											"end": 9318,
											"name": "MSTORE"
										},
										{
											"begin": 9292,
											"end": 9318,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9292,
											"end": 9318,
											"name": "DUP1"
										},
										{
											"begin": 9292,
											"end": 9318,
											"name": "DUP4"
										},
										{
											"begin": 9292,
											"end": 9318,
											"name": "KECCAK256"
										},
										{
											"begin": 9292,
											"end": 9322,
											"name": "SWAP3"
										},
										{
											"begin": 9292,
											"end": 9322,
											"name": "SWAP1"
										},
										{
											"begin": 9292,
											"end": 9322,
											"name": "SWAP3"
										},
										{
											"begin": 9292,
											"end": 9322,
											"name": "SSTORE"
										},
										{
											"begin": 9333,
											"end": 9345,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9333,
											"end": 9359,
											"name": "DUP1"
										},
										{
											"begin": 9333,
											"end": 9359,
											"name": "SLOAD"
										},
										{
											"begin": 9333,
											"end": 9359,
											"name": "DUP6"
										},
										{
											"begin": 9333,
											"end": 9359,
											"name": "SWAP1"
										},
										{
											"begin": 9333,
											"end": 9359,
											"name": "SUB"
										},
										{
											"begin": 9333,
											"end": 9359,
											"name": "SWAP1"
										},
										{
											"begin": 9333,
											"end": 9359,
											"name": "SSTORE"
										},
										{
											"begin": 9375,
											"end": 9424,
											"name": "DUP2"
										},
										{
											"begin": 9375,
											"end": 9424,
											"name": "MLOAD"
										},
										{
											"begin": 9375,
											"end": 9424,
											"name": "SWAP3"
										},
										{
											"begin": 9375,
											"end": 9424,
											"name": "DUP4"
										},
										{
											"begin": 9375,
											"end": 9424,
											"name": "MSTORE"
										},
										{
											"begin": 9375,
											"end": 9424,
											"name": "DUP3"
										},
										{
											"begin": 9375,
											"end": 9424,
											"name": "ADD"
										},
										{
											"begin": 9375,
											"end": 9424,
											"name": "DUP4"
										},
										{
											"begin": 9375,
											"end": 9424,
											"name": "SWAP1"
										},
										{
											"begin": 9375,
											"end": 9424,
											"name": "MSTORE"
										},
										{
											"begin": 9375,
											"end": 9424,
											"name": "DUP1"
										},
										{
											"begin": 9375,
											"end": 9424,
											"name": "MLOAD"
										},
										{
											"begin": 9236,
											"end": 9281,
											"name": "SWAP3"
										},
										{
											"begin": 9236,
											"end": 9281,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 9375,
											"end": 9424,
											"name": "PUSH",
											"value": "61E6E66B0D6339B2980AECC6CCC0039736791F0CCDE9ED512E789A7FBDD698C6"
										},
										{
											"begin": 9375,
											"end": 9424,
											"name": "SWAP3"
										},
										{
											"begin": 9375,
											"end": 9424,
											"name": "SWAP2"
										},
										{
											"begin": 9375,
											"end": 9424,
											"name": "DUP3"
										},
										{
											"begin": 9375,
											"end": 9424,
											"name": "SWAP1"
										},
										{
											"begin": 9375,
											"end": 9424,
											"name": "SUB"
										},
										{
											"begin": 9375,
											"end": 9424,
											"name": "ADD"
										},
										{
											"begin": 9375,
											"end": 9424,
											"name": "SWAP1"
										},
										{
											"begin": 9375,
											"end": 9424,
											"name": "LOG1"
										},
										{
											"begin": 9103,
											"end": 9432,
											"name": "POP"
										},
										{
											"begin": 9103,
											"end": 9432,
											"name": "POP"
										},
										{
											"begin": 9103,
											"end": 9432,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6343,
											"end": 6916,
											"name": "tag",
											"value": "156"
										},
										{
											"begin": 6343,
											"end": 6916,
											"name": "JUMPDEST"
										},
										{
											"begin": 6414,
											"end": 6420,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3327,
											"end": 3335,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 3309,
											"end": 3317,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3309,
											"end": 3335,
											"name": "LT"
										},
										{
											"begin": 3307,
											"end": 3336,
											"name": "ISZERO"
										},
										{
											"begin": 3299,
											"end": 3337,
											"name": "PUSH [tag]",
											"value": "248"
										},
										{
											"begin": 3299,
											"end": 3337,
											"name": "JUMPI"
										},
										{
											"begin": 3299,
											"end": 3337,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3299,
											"end": 3337,
											"name": "DUP1"
										},
										{
											"begin": 3299,
											"end": 3337,
											"name": "REVERT"
										},
										{
											"begin": 3299,
											"end": 3337,
											"name": "tag",
											"value": "248"
										},
										{
											"begin": 3299,
											"end": 3337,
											"name": "JUMPDEST"
										},
										{
											"begin": 6754,
											"end": 6765,
											"name": "DUP2"
										},
										{
											"begin": 6754,
											"end": 6765,
											"name": "ISZERO"
										},
										{
											"begin": 6754,
											"end": 6765,
											"name": "DUP1"
										},
										{
											"begin": 6754,
											"end": 6765,
											"name": "ISZERO"
										},
										{
											"begin": 6754,
											"end": 6765,
											"name": "SWAP1"
										},
										{
											"begin": 6753,
											"end": 6806,
											"name": "PUSH [tag]",
											"value": "250"
										},
										{
											"begin": 6753,
											"end": 6806,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 6779,
											"end": 6789,
											"name": "CALLER"
										},
										{
											"begin": 6771,
											"end": 6790,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6771,
											"end": 6790,
											"name": "SWAP1"
										},
										{
											"begin": 6771,
											"end": 6790,
											"name": "DUP2"
										},
										{
											"begin": 6771,
											"end": 6790,
											"name": "MSTORE"
										},
										{
											"begin": 6771,
											"end": 6778,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 6771,
											"end": 6790,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6771,
											"end": 6790,
											"name": "SWAP1"
										},
										{
											"begin": 6771,
											"end": 6790,
											"name": "DUP2"
										},
										{
											"begin": 6771,
											"end": 6790,
											"name": "MSTORE"
										},
										{
											"begin": 6771,
											"end": 6790,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6771,
											"end": 6790,
											"name": "DUP1"
										},
										{
											"begin": 6771,
											"end": 6790,
											"name": "DUP4"
										},
										{
											"begin": 6771,
											"end": 6790,
											"name": "KECCAK256"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6771,
											"end": 6800,
											"name": "DUP8"
										},
										{
											"begin": 6771,
											"end": 6800,
											"name": "AND"
										},
										{
											"begin": 6771,
											"end": 6800,
											"name": "DUP5"
										},
										{
											"begin": 6771,
											"end": 6800,
											"name": "MSTORE"
										},
										{
											"begin": 6771,
											"end": 6800,
											"name": "SWAP1"
										},
										{
											"begin": 6771,
											"end": 6800,
											"name": "SWAP2"
										},
										{
											"begin": 6771,
											"end": 6800,
											"name": "MSTORE"
										},
										{
											"begin": 6771,
											"end": 6800,
											"name": "SWAP1"
										},
										{
											"begin": 6771,
											"end": 6800,
											"name": "KECCAK256"
										},
										{
											"begin": 6771,
											"end": 6800,
											"name": "SLOAD"
										},
										{
											"begin": 6771,
											"end": 6805,
											"name": "ISZERO"
										},
										{
											"begin": 6771,
											"end": 6805,
											"name": "ISZERO"
										},
										{
											"begin": 6753,
											"end": 6806,
											"name": "tag",
											"value": "250"
										},
										{
											"begin": 6753,
											"end": 6806,
											"name": "JUMPDEST"
										},
										{
											"begin": 6751,
											"end": 6807,
											"name": "ISZERO"
										},
										{
											"begin": 6743,
											"end": 6808,
											"name": "PUSH [tag]",
											"value": "251"
										},
										{
											"begin": 6743,
											"end": 6808,
											"name": "JUMPI"
										},
										{
											"begin": 6743,
											"end": 6808,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6743,
											"end": 6808,
											"name": "DUP1"
										},
										{
											"begin": 6743,
											"end": 6808,
											"name": "REVERT"
										},
										{
											"begin": 6743,
											"end": 6808,
											"name": "tag",
											"value": "251"
										},
										{
											"begin": 6743,
											"end": 6808,
											"name": "JUMPDEST"
										},
										{
											"begin": 6829,
											"end": 6839,
											"name": "CALLER"
										},
										{
											"begin": 6821,
											"end": 6840,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6821,
											"end": 6840,
											"name": "DUP2"
										},
										{
											"begin": 6821,
											"end": 6840,
											"name": "DUP2"
										},
										{
											"begin": 6821,
											"end": 6840,
											"name": "MSTORE"
										},
										{
											"begin": 6821,
											"end": 6828,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 6821,
											"end": 6840,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6821,
											"end": 6840,
											"name": "SWAP1"
										},
										{
											"begin": 6821,
											"end": 6840,
											"name": "DUP2"
										},
										{
											"begin": 6821,
											"end": 6840,
											"name": "MSTORE"
										},
										{
											"begin": 6821,
											"end": 6840,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6821,
											"end": 6840,
											"name": "DUP1"
										},
										{
											"begin": 6821,
											"end": 6840,
											"name": "DUP4"
										},
										{
											"begin": 6821,
											"end": 6840,
											"name": "KECCAK256"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6821,
											"end": 6850,
											"name": "DUP9"
										},
										{
											"begin": 6821,
											"end": 6850,
											"name": "AND"
										},
										{
											"begin": 6821,
											"end": 6850,
											"name": "DUP1"
										},
										{
											"begin": 6821,
											"end": 6850,
											"name": "DUP6"
										},
										{
											"begin": 6821,
											"end": 6850,
											"name": "MSTORE"
										},
										{
											"begin": 6821,
											"end": 6850,
											"name": "SWAP1"
										},
										{
											"begin": 6821,
											"end": 6850,
											"name": "DUP4"
										},
										{
											"begin": 6821,
											"end": 6850,
											"name": "MSTORE"
										},
										{
											"begin": 6821,
											"end": 6850,
											"name": "SWAP3"
										},
										{
											"begin": 6821,
											"end": 6850,
											"name": "DUP2"
										},
										{
											"begin": 6821,
											"end": 6850,
											"name": "SWAP1"
										},
										{
											"begin": 6821,
											"end": 6850,
											"name": "KECCAK256"
										},
										{
											"begin": 6821,
											"end": 6859,
											"name": "DUP7"
										},
										{
											"begin": 6821,
											"end": 6859,
											"name": "SWAP1"
										},
										{
											"begin": 6821,
											"end": 6859,
											"name": "SSTORE"
										},
										{
											"begin": 6870,
											"end": 6908,
											"name": "DUP1"
										},
										{
											"begin": 6870,
											"end": 6908,
											"name": "MLOAD"
										},
										{
											"begin": 6870,
											"end": 6908,
											"name": "DUP7"
										},
										{
											"begin": 6870,
											"end": 6908,
											"name": "DUP2"
										},
										{
											"begin": 6870,
											"end": 6908,
											"name": "MSTORE"
										},
										{
											"begin": 6870,
											"end": 6908,
											"name": "SWAP1"
										},
										{
											"begin": 6870,
											"end": 6908,
											"name": "MLOAD"
										},
										{
											"begin": 6821,
											"end": 6850,
											"name": "SWAP3"
										},
										{
											"begin": 6821,
											"end": 6850,
											"name": "SWAP4"
										},
										{
											"begin": 6829,
											"end": 6839,
											"name": "SWAP3"
										},
										{
											"begin": 6870,
											"end": 6908,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 6870,
											"end": 6908,
											"name": "SWAP3"
										},
										{
											"begin": 6870,
											"end": 6908,
											"name": "SWAP2"
										},
										{
											"begin": 6870,
											"end": 6908,
											"name": "DUP2"
										},
										{
											"begin": 6870,
											"end": 6908,
											"name": "SWAP1"
										},
										{
											"begin": 6870,
											"end": 6908,
											"name": "SUB"
										},
										{
											"begin": 6870,
											"end": 6908,
											"name": "SWAP1"
										},
										{
											"begin": 6870,
											"end": 6908,
											"name": "SWAP2"
										},
										{
											"begin": 6870,
											"end": 6908,
											"name": "ADD"
										},
										{
											"begin": 6870,
											"end": 6908,
											"name": "SWAP1"
										},
										{
											"begin": 6870,
											"end": 6908,
											"name": "LOG3"
										},
										{
											"begin": 6343,
											"end": 6916,
											"name": "POP"
										},
										{
											"begin": 6343,
											"end": 6916,
											"name": "POP"
										},
										{
											"begin": 6343,
											"end": 6916,
											"name": "POP"
										},
										{
											"begin": 6343,
											"end": 6916,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5184,
											"end": 6096,
											"name": "tag",
											"value": "175"
										},
										{
											"begin": 5184,
											"end": 6096,
											"name": "JUMPDEST"
										},
										{
											"begin": 5289,
											"end": 5304,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5289,
											"end": 5304,
											"name": "DUP1"
										},
										{
											"begin": 5289,
											"end": 5304,
											"name": "DUP1"
										},
										{
											"begin": 5270,
											"end": 5276,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 3327,
											"end": 3335,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 3309,
											"end": 3317,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3309,
											"end": 3335,
											"name": "LT"
										},
										{
											"begin": 3307,
											"end": 3336,
											"name": "ISZERO"
										},
										{
											"begin": 3299,
											"end": 3337,
											"name": "PUSH [tag]",
											"value": "253"
										},
										{
											"begin": 3299,
											"end": 3337,
											"name": "JUMPI"
										},
										{
											"begin": 3299,
											"end": 3337,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3299,
											"end": 3337,
											"name": "DUP1"
										},
										{
											"begin": 3299,
											"end": 3337,
											"name": "REVERT"
										},
										{
											"begin": 3299,
											"end": 3337,
											"name": "tag",
											"value": "253"
										},
										{
											"begin": 3299,
											"end": 3337,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5307,
											"end": 5321,
											"name": "DUP8"
										},
										{
											"begin": 5307,
											"end": 5321,
											"name": "AND"
										},
										{
											"begin": 5307,
											"end": 5321,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5307,
											"end": 5321,
											"name": "SWAP1"
										},
										{
											"begin": 5307,
											"end": 5321,
											"name": "DUP2"
										},
										{
											"begin": 5307,
											"end": 5321,
											"name": "MSTORE"
										},
										{
											"begin": 5307,
											"end": 5314,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 5307,
											"end": 5321,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5307,
											"end": 5321,
											"name": "SWAP1"
										},
										{
											"begin": 5307,
											"end": 5321,
											"name": "DUP2"
										},
										{
											"begin": 5307,
											"end": 5321,
											"name": "MSTORE"
										},
										{
											"begin": 5307,
											"end": 5321,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5307,
											"end": 5321,
											"name": "DUP1"
										},
										{
											"begin": 5307,
											"end": 5321,
											"name": "DUP4"
										},
										{
											"begin": 5307,
											"end": 5321,
											"name": "KECCAK256"
										},
										{
											"begin": 5322,
											"end": 5332,
											"name": "CALLER"
										},
										{
											"begin": 5307,
											"end": 5333,
											"name": "DUP5"
										},
										{
											"begin": 5307,
											"end": 5333,
											"name": "MSTORE"
										},
										{
											"begin": 5307,
											"end": 5333,
											"name": "SWAP1"
										},
										{
											"begin": 5307,
											"end": 5333,
											"name": "SWAP2"
										},
										{
											"begin": 5307,
											"end": 5333,
											"name": "MSTORE"
										},
										{
											"begin": 5307,
											"end": 5333,
											"name": "SWAP1"
										},
										{
											"begin": 5307,
											"end": 5333,
											"name": "KECCAK256"
										},
										{
											"begin": 5307,
											"end": 5333,
											"name": "SLOAD"
										},
										{
											"begin": 5527,
											"end": 5542,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 5527,
											"end": 5542,
											"name": "SLOAD"
										},
										{
											"begin": 5307,
											"end": 5333,
											"name": "SWAP1"
										},
										{
											"begin": 5307,
											"end": 5333,
											"name": "SWAP5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5515,
											"end": 5555,
											"name": "PUSH [tag]",
											"value": "255"
										},
										{
											"begin": 5515,
											"end": 5555,
											"name": "SWAP1"
										},
										{
											"begin": 5549,
											"end": 5554,
											"name": "PUSH",
											"value": "2710"
										},
										{
											"begin": 5549,
											"end": 5554,
											"name": "SWAP1"
										},
										{
											"begin": 5516,
											"end": 5543,
											"name": "PUSH [tag]",
											"value": "256"
										},
										{
											"begin": 5516,
											"end": 5543,
											"name": "SWAP1"
										},
										{
											"begin": 5516,
											"end": 5522,
											"name": "DUP9"
										},
										{
											"begin": 5516,
											"end": 5522,
											"name": "SWAP1"
										},
										{
											"begin": 5516,
											"end": 5543,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5516,
											"end": 5526,
											"name": "PUSH [tag]",
											"value": "216"
										},
										{
											"begin": 5516,
											"end": 5543,
											"name": "AND"
										},
										{
											"begin": 5516,
											"end": 5543,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5516,
											"end": 5543,
											"name": "tag",
											"value": "256"
										},
										{
											"begin": 5516,
											"end": 5543,
											"name": "JUMPDEST"
										},
										{
											"begin": 5515,
											"end": 5548,
											"name": "SWAP1"
										},
										{
											"begin": 5515,
											"end": 5555,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5515,
											"end": 5548,
											"name": "PUSH [tag]",
											"value": "257"
										},
										{
											"begin": 5515,
											"end": 5555,
											"name": "AND"
										},
										{
											"begin": 5515,
											"end": 5555,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5515,
											"end": 5555,
											"name": "tag",
											"value": "255"
										},
										{
											"begin": 5515,
											"end": 5555,
											"name": "JUMPDEST"
										},
										{
											"begin": 5504,
											"end": 5555,
											"name": "SWAP3"
										},
										{
											"begin": 5504,
											"end": 5555,
											"name": "POP"
										},
										{
											"begin": 5576,
											"end": 5586,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5576,
											"end": 5586,
											"name": "SLOAD"
										},
										{
											"begin": 5570,
											"end": 5573,
											"name": "DUP4"
										},
										{
											"begin": 5570,
											"end": 5586,
											"name": "GT"
										},
										{
											"begin": 5566,
											"end": 5631,
											"name": "ISZERO"
										},
										{
											"begin": 5566,
											"end": 5631,
											"name": "PUSH [tag]",
											"value": "258"
										},
										{
											"begin": 5566,
											"end": 5631,
											"name": "JUMPI"
										},
										{
											"begin": 5609,
											"end": 5619,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5609,
											"end": 5619,
											"name": "SLOAD"
										},
										{
											"begin": 5603,
											"end": 5619,
											"name": "SWAP3"
										},
										{
											"begin": 5603,
											"end": 5619,
											"name": "POP"
										},
										{
											"begin": 5566,
											"end": 5631,
											"name": "tag",
											"value": "258"
										},
										{
											"begin": 5566,
											"end": 5631,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 5645,
											"end": 5655,
											"name": "DUP5"
										},
										{
											"begin": 5645,
											"end": 5666,
											"name": "LT"
										},
										{
											"begin": 5641,
											"end": 5746,
											"name": "ISZERO"
										},
										{
											"begin": 5641,
											"end": 5746,
											"name": "PUSH [tag]",
											"value": "259"
										},
										{
											"begin": 5641,
											"end": 5746,
											"name": "JUMPI"
										},
										{
											"begin": 5712,
											"end": 5734,
											"name": "PUSH [tag]",
											"value": "260"
										},
										{
											"begin": 5712,
											"end": 5722,
											"name": "DUP5"
										},
										{
											"begin": 5727,
											"end": 5733,
											"name": "DUP7"
										},
										{
											"begin": 5712,
											"end": 5734,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5712,
											"end": 5726,
											"name": "PUSH [tag]",
											"value": "261"
										},
										{
											"begin": 5712,
											"end": 5734,
											"name": "AND"
										},
										{
											"begin": 5712,
											"end": 5734,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5712,
											"end": 5734,
											"name": "tag",
											"value": "260"
										},
										{
											"begin": 5712,
											"end": 5734,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5683,
											"end": 5697,
											"name": "DUP9"
										},
										{
											"begin": 5683,
											"end": 5697,
											"name": "AND"
										},
										{
											"begin": 5683,
											"end": 5697,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5683,
											"end": 5697,
											"name": "SWAP1"
										},
										{
											"begin": 5683,
											"end": 5697,
											"name": "DUP2"
										},
										{
											"begin": 5683,
											"end": 5697,
											"name": "MSTORE"
										},
										{
											"begin": 5683,
											"end": 5690,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 5683,
											"end": 5697,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5683,
											"end": 5697,
											"name": "SWAP1"
										},
										{
											"begin": 5683,
											"end": 5697,
											"name": "DUP2"
										},
										{
											"begin": 5683,
											"end": 5697,
											"name": "MSTORE"
										},
										{
											"begin": 5683,
											"end": 5697,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5683,
											"end": 5697,
											"name": "DUP1"
										},
										{
											"begin": 5683,
											"end": 5697,
											"name": "DUP4"
										},
										{
											"begin": 5683,
											"end": 5697,
											"name": "KECCAK256"
										},
										{
											"begin": 5698,
											"end": 5708,
											"name": "CALLER"
										},
										{
											"begin": 5683,
											"end": 5709,
											"name": "DUP5"
										},
										{
											"begin": 5683,
											"end": 5709,
											"name": "MSTORE"
										},
										{
											"begin": 5683,
											"end": 5709,
											"name": "SWAP1"
										},
										{
											"begin": 5683,
											"end": 5709,
											"name": "SWAP2"
										},
										{
											"begin": 5683,
											"end": 5709,
											"name": "MSTORE"
										},
										{
											"begin": 5683,
											"end": 5709,
											"name": "SWAP1"
										},
										{
											"begin": 5683,
											"end": 5709,
											"name": "KECCAK256"
										},
										{
											"begin": 5683,
											"end": 5734,
											"name": "SSTORE"
										},
										{
											"begin": 5641,
											"end": 5746,
											"name": "tag",
											"value": "259"
										},
										{
											"begin": 5641,
											"end": 5746,
											"name": "JUMPDEST"
										},
										{
											"begin": 5774,
											"end": 5789,
											"name": "PUSH [tag]",
											"value": "262"
										},
										{
											"begin": 5774,
											"end": 5780,
											"name": "DUP6"
										},
										{
											"begin": 5785,
											"end": 5788,
											"name": "DUP5"
										},
										{
											"begin": 5774,
											"end": 5789,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5774,
											"end": 5784,
											"name": "PUSH [tag]",
											"value": "261"
										},
										{
											"begin": 5774,
											"end": 5789,
											"name": "AND"
										},
										{
											"begin": 5774,
											"end": 5789,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5774,
											"end": 5789,
											"name": "tag",
											"value": "262"
										},
										{
											"begin": 5774,
											"end": 5789,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5818,
											"end": 5833,
											"name": "DUP9"
										},
										{
											"begin": 5818,
											"end": 5833,
											"name": "AND"
										},
										{
											"begin": 5818,
											"end": 5833,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5818,
											"end": 5833,
											"name": "SWAP1"
										},
										{
											"begin": 5818,
											"end": 5833,
											"name": "DUP2"
										},
										{
											"begin": 5818,
											"end": 5833,
											"name": "MSTORE"
										},
										{
											"begin": 5818,
											"end": 5826,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5818,
											"end": 5833,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5818,
											"end": 5833,
											"name": "MSTORE"
										},
										{
											"begin": 5818,
											"end": 5833,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5818,
											"end": 5833,
											"name": "SWAP1"
										},
										{
											"begin": 5818,
											"end": 5833,
											"name": "KECCAK256"
										},
										{
											"begin": 5818,
											"end": 5833,
											"name": "SLOAD"
										},
										{
											"begin": 5756,
											"end": 5789,
											"name": "SWAP1"
										},
										{
											"begin": 5756,
											"end": 5789,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5818,
											"end": 5845,
											"name": "PUSH [tag]",
											"value": "263"
										},
										{
											"begin": 5818,
											"end": 5845,
											"name": "SWAP1"
										},
										{
											"begin": 5838,
											"end": 5844,
											"name": "DUP7"
										},
										{
											"begin": 5818,
											"end": 5845,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5818,
											"end": 5837,
											"name": "PUSH [tag]",
											"value": "261"
										},
										{
											"begin": 5818,
											"end": 5845,
											"name": "AND"
										},
										{
											"begin": 5818,
											"end": 5845,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5818,
											"end": 5845,
											"name": "tag",
											"value": "263"
										},
										{
											"begin": 5818,
											"end": 5845,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5800,
											"end": 5815,
											"name": "DUP1"
										},
										{
											"begin": 5800,
											"end": 5815,
											"name": "DUP10"
										},
										{
											"begin": 5800,
											"end": 5815,
											"name": "AND"
										},
										{
											"begin": 5800,
											"end": 5815,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5800,
											"end": 5815,
											"name": "SWAP1"
										},
										{
											"begin": 5800,
											"end": 5815,
											"name": "DUP2"
										},
										{
											"begin": 5800,
											"end": 5815,
											"name": "MSTORE"
										},
										{
											"begin": 5800,
											"end": 5808,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5800,
											"end": 5815,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5800,
											"end": 5815,
											"name": "MSTORE"
										},
										{
											"begin": 5800,
											"end": 5815,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5800,
											"end": 5815,
											"name": "DUP1"
										},
										{
											"begin": 5800,
											"end": 5815,
											"name": "DUP3"
										},
										{
											"begin": 5800,
											"end": 5815,
											"name": "KECCAK256"
										},
										{
											"begin": 5800,
											"end": 5845,
											"name": "SWAP4"
										},
										{
											"begin": 5800,
											"end": 5845,
											"name": "SWAP1"
										},
										{
											"begin": 5800,
											"end": 5845,
											"name": "SWAP4"
										},
										{
											"begin": 5800,
											"end": 5845,
											"name": "SSTORE"
										},
										{
											"begin": 5872,
											"end": 5885,
											"name": "SWAP1"
										},
										{
											"begin": 5872,
											"end": 5885,
											"name": "DUP9"
										},
										{
											"begin": 5872,
											"end": 5885,
											"name": "AND"
										},
										{
											"begin": 5872,
											"end": 5885,
											"name": "DUP2"
										},
										{
											"begin": 5872,
											"end": 5885,
											"name": "MSTORE"
										},
										{
											"begin": 5872,
											"end": 5885,
											"name": "KECCAK256"
										},
										{
											"begin": 5872,
											"end": 5885,
											"name": "SLOAD"
										},
										{
											"begin": 5872,
											"end": 5901,
											"name": "PUSH [tag]",
											"value": "264"
										},
										{
											"begin": 5872,
											"end": 5901,
											"name": "SWAP1"
										},
										{
											"begin": 5890,
											"end": 5900,
											"name": "DUP4"
										},
										{
											"begin": 5872,
											"end": 5901,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "PUSH [tag]",
											"value": "265"
										},
										{
											"begin": 5872,
											"end": 5901,
											"name": "AND"
										},
										{
											"begin": 5872,
											"end": 5901,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5872,
											"end": 5901,
											"name": "tag",
											"value": "264"
										},
										{
											"begin": 5872,
											"end": 5901,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5856,
											"end": 5869,
											"name": "DUP8"
										},
										{
											"begin": 5856,
											"end": 5869,
											"name": "AND"
										},
										{
											"begin": 5856,
											"end": 5869,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5856,
											"end": 5869,
											"name": "SWAP1"
										},
										{
											"begin": 5856,
											"end": 5869,
											"name": "DUP2"
										},
										{
											"begin": 5856,
											"end": 5869,
											"name": "MSTORE"
										},
										{
											"begin": 5856,
											"end": 5864,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5856,
											"end": 5869,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5856,
											"end": 5869,
											"name": "MSTORE"
										},
										{
											"begin": 5856,
											"end": 5869,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5856,
											"end": 5869,
											"name": "DUP2"
										},
										{
											"begin": 5856,
											"end": 5869,
											"name": "KECCAK256"
										},
										{
											"begin": 5856,
											"end": 5901,
											"name": "SWAP2"
										},
										{
											"begin": 5856,
											"end": 5901,
											"name": "SWAP1"
										},
										{
											"begin": 5856,
											"end": 5901,
											"name": "SWAP2"
										},
										{
											"begin": 5856,
											"end": 5901,
											"name": "SSTORE"
										},
										{
											"begin": 5916,
											"end": 5923,
											"name": "DUP4"
										},
										{
											"begin": 5916,
											"end": 5923,
											"name": "GT"
										},
										{
											"begin": 5912,
											"end": 6041,
											"name": "ISZERO"
										},
										{
											"begin": 5912,
											"end": 6041,
											"name": "PUSH [tag]",
											"value": "266"
										},
										{
											"begin": 5912,
											"end": 6041,
											"name": "JUMPI"
										},
										{
											"begin": 5958,
											"end": 5973,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5967,
											"end": 5972,
											"name": "DUP1"
										},
										{
											"begin": 5967,
											"end": 5972,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5967,
											"end": 5972,
											"name": "AND"
										},
										{
											"begin": 5958,
											"end": 5973,
											"name": "DUP2"
										},
										{
											"begin": 5958,
											"end": 5973,
											"name": "MSTORE"
										},
										{
											"begin": 5958,
											"end": 5966,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5958,
											"end": 5973,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5958,
											"end": 5973,
											"name": "MSTORE"
										},
										{
											"begin": 5958,
											"end": 5973,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5958,
											"end": 5973,
											"name": "SWAP1"
										},
										{
											"begin": 5958,
											"end": 5973,
											"name": "KECCAK256"
										},
										{
											"begin": 5958,
											"end": 5973,
											"name": "SLOAD"
										},
										{
											"begin": 5958,
											"end": 5982,
											"name": "PUSH [tag]",
											"value": "267"
										},
										{
											"begin": 5958,
											"end": 5982,
											"name": "SWAP1"
										},
										{
											"begin": 5978,
											"end": 5981,
											"name": "DUP5"
										},
										{
											"begin": 5958,
											"end": 5982,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5958,
											"end": 5977,
											"name": "PUSH [tag]",
											"value": "265"
										},
										{
											"begin": 5958,
											"end": 5982,
											"name": "AND"
										},
										{
											"begin": 5958,
											"end": 5982,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5958,
											"end": 5982,
											"name": "tag",
											"value": "267"
										},
										{
											"begin": 5958,
											"end": 5982,
											"name": "JUMPDEST"
										},
										{
											"begin": 5940,
											"end": 5955,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5949,
											"end": 5954,
											"name": "DUP1"
										},
										{
											"begin": 5949,
											"end": 5954,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5949,
											"end": 5954,
											"name": "SWAP1"
										},
										{
											"begin": 5949,
											"end": 5954,
											"name": "DUP2"
										},
										{
											"begin": 5949,
											"end": 5954,
											"name": "AND"
										},
										{
											"begin": 5940,
											"end": 5955,
											"name": "DUP3"
										},
										{
											"begin": 5940,
											"end": 5955,
											"name": "MSTORE"
										},
										{
											"begin": 5940,
											"end": 5948,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5940,
											"end": 5955,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5940,
											"end": 5955,
											"name": "SWAP1"
										},
										{
											"begin": 5940,
											"end": 5955,
											"name": "DUP2"
										},
										{
											"begin": 5940,
											"end": 5955,
											"name": "MSTORE"
										},
										{
											"begin": 5940,
											"end": 5955,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5940,
											"end": 5955,
											"name": "DUP1"
										},
										{
											"begin": 5940,
											"end": 5955,
											"name": "DUP5"
										},
										{
											"begin": 5940,
											"end": 5955,
											"name": "KECCAK256"
										},
										{
											"begin": 5940,
											"end": 5982,
											"name": "SWAP5"
										},
										{
											"begin": 5940,
											"end": 5982,
											"name": "SWAP1"
										},
										{
											"begin": 5940,
											"end": 5982,
											"name": "SWAP5"
										},
										{
											"begin": 5940,
											"end": 5982,
											"name": "SSTORE"
										},
										{
											"begin": 6018,
											"end": 6023,
											"name": "SWAP2"
										},
										{
											"begin": 6018,
											"end": 6023,
											"name": "SLOAD"
										},
										{
											"begin": 6002,
											"end": 6029,
											"name": "DUP4"
										},
										{
											"begin": 6002,
											"end": 6029,
											"name": "MLOAD"
										},
										{
											"begin": 6002,
											"end": 6029,
											"name": "DUP8"
										},
										{
											"begin": 6002,
											"end": 6029,
											"name": "DUP2"
										},
										{
											"begin": 6002,
											"end": 6029,
											"name": "MSTORE"
										},
										{
											"begin": 6002,
											"end": 6029,
											"name": "SWAP4"
										},
										{
											"begin": 6002,
											"end": 6029,
											"name": "MLOAD"
										},
										{
											"begin": 6018,
											"end": 6023,
											"name": "SWAP1"
										},
										{
											"begin": 6018,
											"end": 6023,
											"name": "DUP3"
										},
										{
											"begin": 6018,
											"end": 6023,
											"name": "AND"
										},
										{
											"begin": 6018,
											"end": 6023,
											"name": "SWAP4"
										},
										{
											"begin": 6002,
											"end": 6029,
											"name": "SWAP2"
										},
										{
											"begin": 6002,
											"end": 6029,
											"name": "DUP12"
										},
										{
											"begin": 6002,
											"end": 6029,
											"name": "AND"
										},
										{
											"begin": 6002,
											"end": 6029,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 6002,
											"end": 6029,
											"name": "SWAP3"
										},
										{
											"begin": 6002,
											"end": 6029,
											"name": "DUP3"
										},
										{
											"begin": 6002,
											"end": 6029,
											"name": "SWAP1"
										},
										{
											"begin": 6002,
											"end": 6029,
											"name": "SUB"
										},
										{
											"begin": 6002,
											"end": 6029,
											"name": "ADD"
										},
										{
											"begin": 6002,
											"end": 6029,
											"name": "SWAP1"
										},
										{
											"begin": 6002,
											"end": 6029,
											"name": "LOG3"
										},
										{
											"begin": 5912,
											"end": 6041,
											"name": "tag",
											"value": "266"
										},
										{
											"begin": 5912,
											"end": 6041,
											"name": "JUMPDEST"
										},
										{
											"begin": 6072,
											"end": 6075,
											"name": "DUP6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6056,
											"end": 6088,
											"name": "AND"
										},
										{
											"begin": 6065,
											"end": 6070,
											"name": "DUP8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6056,
											"end": 6088,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 6077,
											"end": 6087,
											"name": "DUP5"
										},
										{
											"begin": 6056,
											"end": 6088,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6056,
											"end": 6088,
											"name": "MLOAD"
										},
										{
											"begin": 6056,
											"end": 6088,
											"name": "DUP1"
										},
										{
											"begin": 6056,
											"end": 6088,
											"name": "DUP3"
										},
										{
											"begin": 6056,
											"end": 6088,
											"name": "DUP2"
										},
										{
											"begin": 6056,
											"end": 6088,
											"name": "MSTORE"
										},
										{
											"begin": 6056,
											"end": 6088,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6056,
											"end": 6088,
											"name": "ADD"
										},
										{
											"begin": 6056,
											"end": 6088,
											"name": "SWAP2"
										},
										{
											"begin": 6056,
											"end": 6088,
											"name": "POP"
										},
										{
											"begin": 6056,
											"end": 6088,
											"name": "POP"
										},
										{
											"begin": 6056,
											"end": 6088,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6056,
											"end": 6088,
											"name": "MLOAD"
										},
										{
											"begin": 6056,
											"end": 6088,
											"name": "DUP1"
										},
										{
											"begin": 6056,
											"end": 6088,
											"name": "SWAP2"
										},
										{
											"begin": 6056,
											"end": 6088,
											"name": "SUB"
										},
										{
											"begin": 6056,
											"end": 6088,
											"name": "SWAP1"
										},
										{
											"begin": 6056,
											"end": 6088,
											"name": "LOG3"
										},
										{
											"begin": 5184,
											"end": 6096,
											"name": "POP"
										},
										{
											"begin": 5184,
											"end": 6096,
											"name": "POP"
										},
										{
											"begin": 5184,
											"end": 6096,
											"name": "POP"
										},
										{
											"begin": 5184,
											"end": 6096,
											"name": "POP"
										},
										{
											"begin": 5184,
											"end": 6096,
											"name": "POP"
										},
										{
											"begin": 5184,
											"end": 6096,
											"name": "POP"
										},
										{
											"begin": 5184,
											"end": 6096,
											"name": "POP"
										},
										{
											"begin": 5184,
											"end": 6096,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4331,
											"end": 4447,
											"name": "tag",
											"value": "189"
										},
										{
											"begin": 4331,
											"end": 4447,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4423,
											"end": 4439,
											"name": "AND"
										},
										{
											"begin": 4391,
											"end": 4403,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4423,
											"end": 4439,
											"name": "SWAP1"
										},
										{
											"begin": 4423,
											"end": 4439,
											"name": "DUP2"
										},
										{
											"begin": 4423,
											"end": 4439,
											"name": "MSTORE"
										},
										{
											"begin": 4423,
											"end": 4431,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4423,
											"end": 4439,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4423,
											"end": 4439,
											"name": "MSTORE"
										},
										{
											"begin": 4423,
											"end": 4439,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4423,
											"end": 4439,
											"name": "SWAP1"
										},
										{
											"begin": 4423,
											"end": 4439,
											"name": "KECCAK256"
										},
										{
											"begin": 4423,
											"end": 4439,
											"name": "SLOAD"
										},
										{
											"begin": 4423,
											"end": 4439,
											"name": "SWAP1"
										},
										{
											"begin": 4331,
											"end": 4447,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3530,
											"end": 4113,
											"name": "tag",
											"value": "208"
										},
										{
											"begin": 3530,
											"end": 4113,
											"name": "JUMPDEST"
										},
										{
											"begin": 3616,
											"end": 3624,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3616,
											"end": 3624,
											"name": "DUP1"
										},
										{
											"begin": 3597,
											"end": 3603,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3327,
											"end": 3335,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 3309,
											"end": 3317,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3309,
											"end": 3335,
											"name": "LT"
										},
										{
											"begin": 3307,
											"end": 3336,
											"name": "ISZERO"
										},
										{
											"begin": 3299,
											"end": 3337,
											"name": "PUSH [tag]",
											"value": "270"
										},
										{
											"begin": 3299,
											"end": 3337,
											"name": "JUMPI"
										},
										{
											"begin": 3299,
											"end": 3337,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3299,
											"end": 3337,
											"name": "DUP1"
										},
										{
											"begin": 3299,
											"end": 3337,
											"name": "REVERT"
										},
										{
											"begin": 3299,
											"end": 3337,
											"name": "tag",
											"value": "270"
										},
										{
											"begin": 3299,
											"end": 3337,
											"name": "JUMPDEST"
										},
										{
											"begin": 3627,
											"end": 3667,
											"name": "PUSH [tag]",
											"value": "272"
										},
										{
											"begin": 3661,
											"end": 3666,
											"name": "PUSH",
											"value": "2710"
										},
										{
											"begin": 3628,
											"end": 3655,
											"name": "PUSH [tag]",
											"value": "256"
										},
										{
											"begin": 3639,
											"end": 3654,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 3639,
											"end": 3654,
											"name": "SLOAD"
										},
										{
											"begin": 3628,
											"end": 3634,
											"name": "DUP8"
										},
										{
											"begin": 3628,
											"end": 3638,
											"name": "PUSH [tag]",
											"value": "216"
										},
										{
											"begin": 3628,
											"end": 3638,
											"name": "SWAP1"
										},
										{
											"begin": 3628,
											"end": 3655,
											"name": "SWAP2"
										},
										{
											"begin": 3628,
											"end": 3655,
											"name": "SWAP1"
										},
										{
											"begin": 3628,
											"end": 3655,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3628,
											"end": 3655,
											"name": "AND"
										},
										{
											"begin": 3628,
											"end": 3655,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3627,
											"end": 3667,
											"name": "tag",
											"value": "272"
										},
										{
											"begin": 3627,
											"end": 3667,
											"name": "JUMPDEST"
										},
										{
											"begin": 3616,
											"end": 3667,
											"name": "SWAP3"
										},
										{
											"begin": 3616,
											"end": 3667,
											"name": "POP"
										},
										{
											"begin": 3688,
											"end": 3698,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3688,
											"end": 3698,
											"name": "SLOAD"
										},
										{
											"begin": 3682,
											"end": 3685,
											"name": "DUP4"
										},
										{
											"begin": 3682,
											"end": 3698,
											"name": "GT"
										},
										{
											"begin": 3678,
											"end": 3743,
											"name": "ISZERO"
										},
										{
											"begin": 3678,
											"end": 3743,
											"name": "PUSH [tag]",
											"value": "274"
										},
										{
											"begin": 3678,
											"end": 3743,
											"name": "JUMPI"
										},
										{
											"begin": 3721,
											"end": 3731,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3721,
											"end": 3731,
											"name": "SLOAD"
										},
										{
											"begin": 3715,
											"end": 3731,
											"name": "SWAP3"
										},
										{
											"begin": 3715,
											"end": 3731,
											"name": "POP"
										},
										{
											"begin": 3678,
											"end": 3743,
											"name": "tag",
											"value": "274"
										},
										{
											"begin": 3678,
											"end": 3743,
											"name": "JUMPDEST"
										},
										{
											"begin": 3771,
											"end": 3786,
											"name": "PUSH [tag]",
											"value": "275"
										},
										{
											"begin": 3771,
											"end": 3777,
											"name": "DUP5"
										},
										{
											"begin": 3782,
											"end": 3785,
											"name": "DUP5"
										},
										{
											"begin": 3771,
											"end": 3786,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3771,
											"end": 3781,
											"name": "PUSH [tag]",
											"value": "261"
										},
										{
											"begin": 3771,
											"end": 3786,
											"name": "AND"
										},
										{
											"begin": 3771,
											"end": 3786,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3771,
											"end": 3786,
											"name": "tag",
											"value": "275"
										},
										{
											"begin": 3771,
											"end": 3786,
											"name": "JUMPDEST"
										},
										{
											"begin": 3829,
											"end": 3839,
											"name": "CALLER"
										},
										{
											"begin": 3820,
											"end": 3840,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3820,
											"end": 3840,
											"name": "SWAP1"
										},
										{
											"begin": 3820,
											"end": 3840,
											"name": "DUP2"
										},
										{
											"begin": 3820,
											"end": 3840,
											"name": "MSTORE"
										},
										{
											"begin": 3820,
											"end": 3828,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3820,
											"end": 3840,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3820,
											"end": 3840,
											"name": "MSTORE"
										},
										{
											"begin": 3820,
											"end": 3840,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3820,
											"end": 3840,
											"name": "SWAP1"
										},
										{
											"begin": 3820,
											"end": 3840,
											"name": "KECCAK256"
										},
										{
											"begin": 3820,
											"end": 3840,
											"name": "SLOAD"
										},
										{
											"begin": 3753,
											"end": 3786,
											"name": "SWAP1"
										},
										{
											"begin": 3753,
											"end": 3786,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "PUSH [tag]",
											"value": "276"
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "SWAP1"
										},
										{
											"begin": 3845,
											"end": 3851,
											"name": "DUP6"
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3820,
											"end": 3844,
											"name": "PUSH [tag]",
											"value": "261"
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "AND"
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "tag",
											"value": "276"
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "JUMPDEST"
										},
										{
											"begin": 3806,
											"end": 3816,
											"name": "CALLER"
										},
										{
											"begin": 3797,
											"end": 3817,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3797,
											"end": 3817,
											"name": "SWAP1"
										},
										{
											"begin": 3797,
											"end": 3817,
											"name": "DUP2"
										},
										{
											"begin": 3797,
											"end": 3817,
											"name": "MSTORE"
										},
										{
											"begin": 3797,
											"end": 3805,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3797,
											"end": 3817,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3797,
											"end": 3817,
											"name": "MSTORE"
										},
										{
											"begin": 3797,
											"end": 3817,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3797,
											"end": 3817,
											"name": "DUP1"
										},
										{
											"begin": 3797,
											"end": 3817,
											"name": "DUP3"
										},
										{
											"begin": 3797,
											"end": 3817,
											"name": "KECCAK256"
										},
										{
											"begin": 3797,
											"end": 3852,
											"name": "SWAP3"
										},
										{
											"begin": 3797,
											"end": 3852,
											"name": "SWAP1"
										},
										{
											"begin": 3797,
											"end": 3852,
											"name": "SWAP3"
										},
										{
											"begin": 3797,
											"end": 3852,
											"name": "SSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3879,
											"end": 3892,
											"name": "DUP8"
										},
										{
											"begin": 3879,
											"end": 3892,
											"name": "AND"
										},
										{
											"begin": 3879,
											"end": 3892,
											"name": "DUP2"
										},
										{
											"begin": 3879,
											"end": 3892,
											"name": "MSTORE"
										},
										{
											"begin": 3879,
											"end": 3892,
											"name": "KECCAK256"
										},
										{
											"begin": 3879,
											"end": 3892,
											"name": "SLOAD"
										},
										{
											"begin": 3879,
											"end": 3908,
											"name": "PUSH [tag]",
											"value": "277"
										},
										{
											"begin": 3879,
											"end": 3908,
											"name": "SWAP1"
										},
										{
											"begin": 3897,
											"end": 3907,
											"name": "DUP4"
										},
										{
											"begin": 3879,
											"end": 3908,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3879,
											"end": 3896,
											"name": "PUSH [tag]",
											"value": "265"
										},
										{
											"begin": 3879,
											"end": 3908,
											"name": "AND"
										},
										{
											"begin": 3879,
											"end": 3908,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3879,
											"end": 3908,
											"name": "tag",
											"value": "277"
										},
										{
											"begin": 3879,
											"end": 3908,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3863,
											"end": 3876,
											"name": "DUP7"
										},
										{
											"begin": 3863,
											"end": 3876,
											"name": "AND"
										},
										{
											"begin": 3863,
											"end": 3876,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3863,
											"end": 3876,
											"name": "SWAP1"
										},
										{
											"begin": 3863,
											"end": 3876,
											"name": "DUP2"
										},
										{
											"begin": 3863,
											"end": 3876,
											"name": "MSTORE"
										},
										{
											"begin": 3863,
											"end": 3871,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3863,
											"end": 3876,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3863,
											"end": 3876,
											"name": "MSTORE"
										},
										{
											"begin": 3863,
											"end": 3876,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3863,
											"end": 3876,
											"name": "DUP2"
										},
										{
											"begin": 3863,
											"end": 3876,
											"name": "KECCAK256"
										},
										{
											"begin": 3863,
											"end": 3908,
											"name": "SWAP2"
										},
										{
											"begin": 3863,
											"end": 3908,
											"name": "SWAP1"
										},
										{
											"begin": 3863,
											"end": 3908,
											"name": "SWAP2"
										},
										{
											"begin": 3863,
											"end": 3908,
											"name": "SSTORE"
										},
										{
											"begin": 3923,
											"end": 3930,
											"name": "DUP4"
										},
										{
											"begin": 3923,
											"end": 3930,
											"name": "GT"
										},
										{
											"begin": 3919,
											"end": 4053,
											"name": "ISZERO"
										},
										{
											"begin": 3919,
											"end": 4053,
											"name": "PUSH [tag]",
											"value": "278"
										},
										{
											"begin": 3919,
											"end": 4053,
											"name": "JUMPI"
										},
										{
											"begin": 3965,
											"end": 3980,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3974,
											"end": 3979,
											"name": "DUP1"
										},
										{
											"begin": 3974,
											"end": 3979,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3974,
											"end": 3979,
											"name": "AND"
										},
										{
											"begin": 3965,
											"end": 3980,
											"name": "DUP2"
										},
										{
											"begin": 3965,
											"end": 3980,
											"name": "MSTORE"
										},
										{
											"begin": 3965,
											"end": 3973,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3965,
											"end": 3980,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3965,
											"end": 3980,
											"name": "MSTORE"
										},
										{
											"begin": 3965,
											"end": 3980,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3965,
											"end": 3980,
											"name": "SWAP1"
										},
										{
											"begin": 3965,
											"end": 3980,
											"name": "KECCAK256"
										},
										{
											"begin": 3965,
											"end": 3980,
											"name": "SLOAD"
										},
										{
											"begin": 3965,
											"end": 3989,
											"name": "PUSH [tag]",
											"value": "279"
										},
										{
											"begin": 3965,
											"end": 3989,
											"name": "SWAP1"
										},
										{
											"begin": 3985,
											"end": 3988,
											"name": "DUP5"
										},
										{
											"begin": 3965,
											"end": 3989,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3965,
											"end": 3984,
											"name": "PUSH [tag]",
											"value": "265"
										},
										{
											"begin": 3965,
											"end": 3989,
											"name": "AND"
										},
										{
											"begin": 3965,
											"end": 3989,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3965,
											"end": 3989,
											"name": "tag",
											"value": "279"
										},
										{
											"begin": 3965,
											"end": 3989,
											"name": "JUMPDEST"
										},
										{
											"begin": 3947,
											"end": 3962,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3956,
											"end": 3961,
											"name": "DUP1"
										},
										{
											"begin": 3956,
											"end": 3961,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3956,
											"end": 3961,
											"name": "SWAP1"
										},
										{
											"begin": 3956,
											"end": 3961,
											"name": "DUP2"
										},
										{
											"begin": 3956,
											"end": 3961,
											"name": "AND"
										},
										{
											"begin": 3947,
											"end": 3962,
											"name": "DUP3"
										},
										{
											"begin": 3947,
											"end": 3962,
											"name": "MSTORE"
										},
										{
											"begin": 3947,
											"end": 3955,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3947,
											"end": 3962,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3947,
											"end": 3962,
											"name": "SWAP1"
										},
										{
											"begin": 3947,
											"end": 3962,
											"name": "DUP2"
										},
										{
											"begin": 3947,
											"end": 3962,
											"name": "MSTORE"
										},
										{
											"begin": 3947,
											"end": 3962,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3947,
											"end": 3962,
											"name": "DUP1"
										},
										{
											"begin": 3947,
											"end": 3962,
											"name": "DUP5"
										},
										{
											"begin": 3947,
											"end": 3962,
											"name": "KECCAK256"
										},
										{
											"begin": 3947,
											"end": 3989,
											"name": "SWAP5"
										},
										{
											"begin": 3947,
											"end": 3989,
											"name": "SWAP1"
										},
										{
											"begin": 3947,
											"end": 3989,
											"name": "SWAP5"
										},
										{
											"begin": 3947,
											"end": 3989,
											"name": "SSTORE"
										},
										{
											"begin": 4030,
											"end": 4035,
											"name": "SWAP2"
										},
										{
											"begin": 4030,
											"end": 4035,
											"name": "SLOAD"
										},
										{
											"begin": 4009,
											"end": 4041,
											"name": "DUP4"
										},
										{
											"begin": 4009,
											"end": 4041,
											"name": "MLOAD"
										},
										{
											"begin": 4009,
											"end": 4041,
											"name": "DUP8"
										},
										{
											"begin": 4009,
											"end": 4041,
											"name": "DUP2"
										},
										{
											"begin": 4009,
											"end": 4041,
											"name": "MSTORE"
										},
										{
											"begin": 4009,
											"end": 4041,
											"name": "SWAP4"
										},
										{
											"begin": 4009,
											"end": 4041,
											"name": "MLOAD"
										},
										{
											"begin": 4030,
											"end": 4035,
											"name": "SWAP2"
										},
										{
											"begin": 4030,
											"end": 4035,
											"name": "AND"
										},
										{
											"begin": 4030,
											"end": 4035,
											"name": "SWAP3"
										},
										{
											"begin": 4018,
											"end": 4028,
											"name": "CALLER"
										},
										{
											"begin": 4018,
											"end": 4028,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 4009,
											"end": 4041,
											"name": "SWAP3"
										},
										{
											"begin": 4009,
											"end": 4041,
											"name": "SWAP2"
										},
										{
											"begin": 4009,
											"end": 4041,
											"name": "DUP3"
										},
										{
											"begin": 4009,
											"end": 4041,
											"name": "SWAP1"
										},
										{
											"begin": 4009,
											"end": 4041,
											"name": "SUB"
										},
										{
											"begin": 4009,
											"end": 4041,
											"name": "ADD"
										},
										{
											"begin": 4009,
											"end": 4041,
											"name": "SWAP1"
										},
										{
											"begin": 4009,
											"end": 4041,
											"name": "LOG3"
										},
										{
											"begin": 3919,
											"end": 4053,
											"name": "tag",
											"value": "278"
										},
										{
											"begin": 3919,
											"end": 4053,
											"name": "JUMPDEST"
										},
										{
											"begin": 4068,
											"end": 4105,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4068,
											"end": 4105,
											"name": "DUP1"
										},
										{
											"begin": 4068,
											"end": 4105,
											"name": "MLOAD"
										},
										{
											"begin": 4068,
											"end": 4105,
											"name": "DUP4"
										},
										{
											"begin": 4068,
											"end": 4105,
											"name": "DUP2"
										},
										{
											"begin": 4068,
											"end": 4105,
											"name": "MSTORE"
										},
										{
											"begin": 4068,
											"end": 4105,
											"name": "SWAP1"
										},
										{
											"begin": 4068,
											"end": 4105,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4068,
											"end": 4105,
											"name": "DUP8"
										},
										{
											"begin": 4068,
											"end": 4105,
											"name": "AND"
										},
										{
											"begin": 4068,
											"end": 4105,
											"name": "SWAP2"
										},
										{
											"begin": 4077,
											"end": 4087,
											"name": "CALLER"
										},
										{
											"begin": 4077,
											"end": 4087,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 4068,
											"end": 4105,
											"name": "SWAP2"
										},
										{
											"begin": 4068,
											"end": 4105,
											"name": "DUP2"
										},
										{
											"begin": 4068,
											"end": 4105,
											"name": "SWAP1"
										},
										{
											"begin": 4068,
											"end": 4105,
											"name": "SUB"
										},
										{
											"begin": 4068,
											"end": 4105,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4068,
											"end": 4105,
											"name": "ADD"
										},
										{
											"begin": 4068,
											"end": 4105,
											"name": "SWAP1"
										},
										{
											"begin": 4068,
											"end": 4105,
											"name": "LOG3"
										},
										{
											"begin": 3530,
											"end": 4113,
											"name": "POP"
										},
										{
											"begin": 3530,
											"end": 4113,
											"name": "POP"
										},
										{
											"begin": 3530,
											"end": 4113,
											"name": "POP"
										},
										{
											"begin": 3530,
											"end": 4113,
											"name": "POP"
										},
										{
											"begin": 3530,
											"end": 4113,
											"name": "POP"
										},
										{
											"begin": 3530,
											"end": 4113,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 177,
											"end": 385,
											"name": "tag",
											"value": "216"
										},
										{
											"begin": 177,
											"end": 385,
											"name": "JUMPDEST"
										},
										{
											"begin": 235,
											"end": 242,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 235,
											"end": 242,
											"name": "DUP1"
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP4"
										},
										{
											"begin": 259,
											"end": 265,
											"name": "ISZERO"
										},
										{
											"begin": 255,
											"end": 302,
											"name": "ISZERO"
										},
										{
											"begin": 255,
											"end": 302,
											"name": "PUSH [tag]",
											"value": "281"
										},
										{
											"begin": 255,
											"end": 302,
											"name": "JUMPI"
										},
										{
											"begin": 289,
											"end": 290,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 282,
											"end": 290,
											"name": "SWAP2"
										},
										{
											"begin": 282,
											"end": 290,
											"name": "POP"
										},
										{
											"begin": 282,
											"end": 290,
											"name": "PUSH [tag]",
											"value": "280"
										},
										{
											"begin": 282,
											"end": 290,
											"name": "JUMP"
										},
										{
											"begin": 255,
											"end": 302,
											"name": "tag",
											"value": "281"
										},
										{
											"begin": 255,
											"end": 302,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 324,
											"end": 329,
											"name": "DUP3"
										},
										{
											"begin": 324,
											"end": 329,
											"name": "DUP3"
										},
										{
											"begin": 324,
											"end": 329,
											"name": "MUL"
										},
										{
											"begin": 328,
											"end": 329,
											"name": "DUP3"
										},
										{
											"begin": 324,
											"end": 325,
											"name": "DUP5"
										},
										{
											"begin": 324,
											"end": 329,
											"name": "DUP3"
										},
										{
											"begin": 347,
											"end": 352,
											"name": "DUP2"
										},
										{
											"begin": 347,
											"end": 352,
											"name": "ISZERO"
										},
										{
											"begin": 347,
											"end": 352,
											"name": "ISZERO"
										},
										{
											"begin": 347,
											"end": 352,
											"name": "PUSH [tag]",
											"value": "282"
										},
										{
											"begin": 347,
											"end": 352,
											"name": "JUMPI"
										},
										{
											"begin": 347,
											"end": 352,
											"name": "INVALID"
										},
										{
											"begin": 347,
											"end": 352,
											"name": "tag",
											"value": "282"
										},
										{
											"begin": 347,
											"end": 352,
											"name": "JUMPDEST"
										},
										{
											"begin": 347,
											"end": 352,
											"name": "DIV"
										},
										{
											"begin": 347,
											"end": 357,
											"name": "EQ"
										},
										{
											"begin": 340,
											"end": 358,
											"name": "PUSH [tag]",
											"value": "283"
										},
										{
											"begin": 340,
											"end": 358,
											"name": "JUMPI"
										},
										{
											"begin": 340,
											"end": 358,
											"name": "INVALID"
										},
										{
											"begin": 340,
											"end": 358,
											"name": "tag",
											"value": "283"
										},
										{
											"begin": 340,
											"end": 358,
											"name": "JUMPDEST"
										},
										{
											"begin": 376,
											"end": 377,
											"name": "DUP1"
										},
										{
											"begin": 369,
											"end": 377,
											"name": "SWAP2"
										},
										{
											"begin": 369,
											"end": 377,
											"name": "POP"
										},
										{
											"begin": 177,
											"end": 385,
											"name": "tag",
											"value": "280"
										},
										{
											"begin": 177,
											"end": 385,
											"name": "JUMPDEST"
										},
										{
											"begin": 177,
											"end": 385,
											"name": "POP"
										},
										{
											"begin": 177,
											"end": 385,
											"name": "SWAP3"
										},
										{
											"begin": 177,
											"end": 385,
											"name": "SWAP2"
										},
										{
											"begin": 177,
											"end": 385,
											"name": "POP"
										},
										{
											"begin": 177,
											"end": 385,
											"name": "POP"
										},
										{
											"begin": 177,
											"end": 385,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7249,
											"end": 7394,
											"name": "tag",
											"value": "234"
										},
										{
											"begin": 7249,
											"end": 7394,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7361,
											"end": 7376,
											"name": "SWAP2"
										},
										{
											"begin": 7361,
											"end": 7376,
											"name": "DUP3"
										},
										{
											"begin": 7361,
											"end": 7376,
											"name": "AND"
										},
										{
											"begin": 7327,
											"end": 7341,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7361,
											"end": 7376,
											"name": "SWAP1"
										},
										{
											"begin": 7361,
											"end": 7376,
											"name": "DUP2"
										},
										{
											"begin": 7361,
											"end": 7376,
											"name": "MSTORE"
										},
										{
											"begin": 7361,
											"end": 7368,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 7361,
											"end": 7376,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7361,
											"end": 7376,
											"name": "SWAP1"
										},
										{
											"begin": 7361,
											"end": 7376,
											"name": "DUP2"
										},
										{
											"begin": 7361,
											"end": 7376,
											"name": "MSTORE"
										},
										{
											"begin": 7361,
											"end": 7376,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7361,
											"end": 7376,
											"name": "DUP1"
										},
										{
											"begin": 7361,
											"end": 7376,
											"name": "DUP4"
										},
										{
											"begin": 7361,
											"end": 7376,
											"name": "KECCAK256"
										},
										{
											"begin": 7361,
											"end": 7386,
											"name": "SWAP4"
										},
										{
											"begin": 7361,
											"end": 7386,
											"name": "SWAP1"
										},
										{
											"begin": 7361,
											"end": 7386,
											"name": "SWAP5"
										},
										{
											"begin": 7361,
											"end": 7386,
											"name": "AND"
										},
										{
											"begin": 7361,
											"end": 7386,
											"name": "DUP3"
										},
										{
											"begin": 7361,
											"end": 7386,
											"name": "MSTORE"
										},
										{
											"begin": 7361,
											"end": 7386,
											"name": "SWAP2"
										},
										{
											"begin": 7361,
											"end": 7386,
											"name": "SWAP1"
										},
										{
											"begin": 7361,
											"end": 7386,
											"name": "SWAP2"
										},
										{
											"begin": 7361,
											"end": 7386,
											"name": "MSTORE"
										},
										{
											"begin": 7361,
											"end": 7386,
											"name": "KECCAK256"
										},
										{
											"begin": 7361,
											"end": 7386,
											"name": "SLOAD"
										},
										{
											"begin": 7361,
											"end": 7386,
											"name": "SWAP1"
										},
										{
											"begin": 7249,
											"end": 7394,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 393,
											"end": 681,
											"name": "tag",
											"value": "257"
										},
										{
											"begin": 393,
											"end": 681,
											"name": "JUMPDEST"
										},
										{
											"begin": 451,
											"end": 458,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 550,
											"end": 559,
											"name": "DUP1"
										},
										{
											"begin": 566,
											"end": 567,
											"name": "DUP3"
										},
										{
											"begin": 562,
											"end": 563,
											"name": "DUP5"
										},
										{
											"begin": 562,
											"end": 567,
											"name": "DUP2"
										},
										{
											"begin": 562,
											"end": 567,
											"name": "ISZERO"
										},
										{
											"begin": 562,
											"end": 567,
											"name": "ISZERO"
										},
										{
											"begin": 562,
											"end": 567,
											"name": "PUSH [tag]",
											"value": "286"
										},
										{
											"begin": 562,
											"end": 567,
											"name": "JUMPI"
										},
										{
											"begin": 562,
											"end": 567,
											"name": "INVALID"
										},
										{
											"begin": 562,
											"end": 567,
											"name": "tag",
											"value": "286"
										},
										{
											"begin": 562,
											"end": 567,
											"name": "JUMPDEST"
										},
										{
											"begin": 562,
											"end": 567,
											"name": "DIV"
										},
										{
											"begin": 562,
											"end": 567,
											"name": "SWAP5"
										},
										{
											"begin": 393,
											"end": 681,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 393,
											"end": 681,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 689,
											"end": 812,
											"name": "tag",
											"value": "261"
										},
										{
											"begin": 689,
											"end": 812,
											"name": "JUMPDEST"
										},
										{
											"begin": 747,
											"end": 754,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 774,
											"end": 780,
											"name": "DUP3"
										},
										{
											"begin": 774,
											"end": 780,
											"name": "DUP3"
										},
										{
											"begin": 774,
											"end": 780,
											"name": "GT"
										},
										{
											"begin": 774,
											"end": 780,
											"name": "ISZERO"
										},
										{
											"begin": 767,
											"end": 781,
											"name": "PUSH [tag]",
											"value": "288"
										},
										{
											"begin": 767,
											"end": 781,
											"name": "JUMPI"
										},
										{
											"begin": 767,
											"end": 781,
											"name": "INVALID"
										},
										{
											"begin": 767,
											"end": 781,
											"name": "tag",
											"value": "288"
										},
										{
											"begin": 767,
											"end": 781,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 799,
											"end": 804,
											"name": "SWAP1"
										},
										{
											"begin": 799,
											"end": 804,
											"name": "SUB"
										},
										{
											"begin": 799,
											"end": 804,
											"name": "SWAP1"
										},
										{
											"begin": 689,
											"end": 812,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 820,
											"end": 967,
											"name": "tag",
											"value": "265"
										},
										{
											"begin": 820,
											"end": 967,
											"name": "JUMPDEST"
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 910,
											"end": 915,
											"name": "DUP3"
										},
										{
											"begin": 910,
											"end": 915,
											"name": "DUP3"
										},
										{
											"begin": 910,
											"end": 915,
											"name": "ADD"
										},
										{
											"begin": 933,
											"end": 939,
											"name": "DUP4"
										},
										{
											"begin": 933,
											"end": 939,
											"name": "DUP2"
										},
										{
											"begin": 933,
											"end": 939,
											"name": "LT"
										},
										{
											"begin": 933,
											"end": 939,
											"name": "ISZERO"
										},
										{
											"begin": 926,
											"end": 940,
											"name": "PUSH [tag]",
											"value": "283"
										},
										{
											"begin": 926,
											"end": 940,
											"name": "JUMPI"
										},
										{
											"begin": 926,
											"end": 940,
											"name": "INVALID"
										}
									],
									".data": {
										"ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
									}
								}
							}
						},
						"methodIdentifiers": {
							"MAX_UINT()": "e5b5019a",
							"_totalSupply()": "3eaaf86b",
							"addBlackList(address)": "0ecb93c0",
							"allowance(address,address)": "dd62ed3e",
							"allowed(address,address)": "5c658165",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"balances(address)": "27e235e3",
							"basisPointsRate()": "dd644f72",
							"decimals()": "313ce567",
							"deprecate(address)": "0753c30c",
							"deprecated()": "0e136b19",
							"destroyBlackFunds(address)": "f3bdc228",
							"getBlackListStatus(address)": "59bf1abe",
							"getOwner()": "893d20e8",
							"isBlackListed(address)": "e47d6060",
							"issue(uint256)": "cc872b66",
							"maximumFee()": "35390714",
							"name()": "06fdde03",
							"ownable()": "b38854be",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"redeem(uint256)": "db006a75",
							"removeBlackList(address)": "e4997dc5",
							"setParams(uint256,uint256)": "c0324c77",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a",
							"upgradedAddress()": "26976e3f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_upgradedAddress\",\"type\":\"address\"}],\"name\":\"deprecate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"deprecated\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_evilUser\",\"type\":\"address\"}],\"name\":\"addBlackList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"upgradedAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maximumFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_maker\",\"type\":\"address\"}],\"name\":\"getBlackListStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"ownable\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newBasisPoints\",\"type\":\"uint256\"},{\"name\":\"newMaxFee\",\"type\":\"uint256\"}],\"name\":\"setParams\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"issue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"basisPointsRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"isBlackListed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_clearedUser\",\"type\":\"address\"}],\"name\":\"removeBlackList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_UINT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_blackListedUser\",\"type\":\"address\"}],\"name\":\"destroyBlackFunds\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_initialSupply\",\"type\":\"uint256\"},{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"},{\"name\":\"_decimals\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Issue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Redeem\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"Deprecate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"feeBasisPoints\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"maxFee\",\"type\":\"uint256\"}],\"name\":\"Params\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_blackListedUser\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_balance\",\"type\":\"uint256\"}],\"name\":\"DestroyedBlackFunds\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"AddedBlackList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"RemovedBlackList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"ownable()\":{\"details\":\"The Ownable constructor sets the original `owner` of the contract to the sender\\r account.\\r\"},\"pause()\":{\"details\":\"called by the owner to pause, triggers stopped state\\r\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\\r\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\\r\"}},\"unpause()\":{\"details\":\"called by the owner to unpause, returns to normal state\\r\"}}},\"userdoc\":{\"methods\":{\"getBlackListStatus(address)\":{\"notice\":\"//// Getters to allow the same blacklist to be used also by other contracts (including upgraded Tether) ///////\\r\"}}}},\"settings\":{\"compilationTarget\":{\"contracts/Online/ERC20/TetherToken.sol\":\"TetherToken\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Online/ERC20/TetherToken.sol\":{\"keccak256\":\"0x1be4c35b4a2fe43aa8634352b33338e83e01c821ce429b205acfd0c573367fac\",\"urls\":[\"bzzr://e4b62ea0df615e3876e2e264b43942fada818008cadc1ae4530c2fcca01199a5\"]}},\"version\":1}",
					"userdoc": {
						"methods": {
							"getBlackListStatus(address)": {
								"notice": "//// Getters to allow the same blacklist to be used also by other contracts (including upgraded Tether) ///////\r"
							}
						}
					}
				},
				"UpgradedStandardToken": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "_spender",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_from",
									"type": "address"
								},
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "balances",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "maximumFee",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								},
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "allowed",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "from",
									"type": "address"
								},
								{
									"name": "to",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferByLegacy",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "balance",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "sender",
									"type": "address"
								},
								{
									"name": "from",
									"type": "address"
								},
								{
									"name": "spender",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromByLegacy",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "from",
									"type": "address"
								},
								{
									"name": "spender",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveByLegacy",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "ownable",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_owner",
									"type": "address"
								},
								{
									"name": "_spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"name": "remaining",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "basisPointsRate",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MAX_UINT",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "Function to check the amount of tokens than an owner allowed to a spender.\r",
								"params": {
									"_owner": "address The address which owns the funds.\r",
									"_spender": "address The address which will spend the funds.\r"
								},
								"return": "A uint specifying the amount of tokens still available for the spender.\r"
							},
							"approve(address,uint256)": {
								"details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\r",
								"params": {
									"_spender": "The address which will spend the funds.\r",
									"_value": "The amount of tokens to be spent.\r"
								}
							},
							"balanceOf(address)": {
								"details": "Gets the balance of the specified address.\r",
								"params": {
									"_owner": "The address to query the the balance of.\r"
								},
								"return": "An uint representing the amount owned by the passed address.\r"
							},
							"ownable()": {
								"details": "The Ownable constructor sets the original `owner` of the contract to the sender\r account.\r"
							},
							"transfer(address,uint256)": {
								"details": "transfer token for a specified address\r",
								"params": {
									"_to": "The address to transfer to.\r",
									"_value": "The amount to be transferred.\r"
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfer tokens from one address to another\r",
								"params": {
									"_from": "address The address which you want to send tokens from\r",
									"_to": "address The address which you want to transfer to\r",
									"_value": "uint the amount of tokens to be transferred\r"
								}
							},
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.\r",
								"params": {
									"newOwner": "The address to transfer ownership to.\r"
								}
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"MAX_UINT()": "e5b5019a",
							"_totalSupply()": "3eaaf86b",
							"allowance(address,address)": "dd62ed3e",
							"allowed(address,address)": "5c658165",
							"approve(address,uint256)": "095ea7b3",
							"approveByLegacy(address,address,uint256)": "aee92d33",
							"balanceOf(address)": "70a08231",
							"balances(address)": "27e235e3",
							"basisPointsRate()": "dd644f72",
							"maximumFee()": "35390714",
							"ownable()": "b38854be",
							"owner()": "8da5cb5b",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferByLegacy(address,address,uint256)": "6e18980a",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromByLegacy(address,address,address,uint256)": "8b477adb",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "contracts/Online/ERC20/TetherToken.sol:326:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.\n    function TetherToken(uint _initialSupply, string _name, string _symbol, uint _decimals) public {\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.",
				"severity": "warning",
				"sourceLocation": {
					"end": 10850,
					"file": "contracts/Online/ERC20/TetherToken.sol",
					"start": 10554
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "contracts/Online/ERC20/TetherToken.sol:204:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        Approval(msg.sender, _spender, _value);\r\n        ^------------------------------------^\n",
				"message": "Invoking events without \"emit\" prefix is deprecated.",
				"severity": "warning",
				"sourceLocation": {
					"end": 6908,
					"file": "contracts/Online/ERC20/TetherToken.sol",
					"start": 6870
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "contracts/Online/ERC20/TetherToken.sol:408:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        Issue(amount);\r\n        ^-----------^\n",
				"message": "Invoking events without \"emit\" prefix is deprecated.",
				"severity": "warning",
				"sourceLocation": {
					"end": 13760,
					"file": "contracts/Online/ERC20/TetherToken.sol",
					"start": 13747
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/Online/ERC20/TetherToken.sol": {
				"ast": {
					"absolutePath": "contracts/Online/ERC20/TetherToken.sol",
					"exportedSymbols": {
						"BasicToken": [
							347
						],
						"BlackList": [
							718
						],
						"ERC20": [
							205
						],
						"ERC20Basic": [
							169
						],
						"Ownable": [
							139
						],
						"Pausable": [
							604
						],
						"SafeMath": [
							97
						],
						"StandardToken": [
							547
						],
						"TetherToken": [
							1143
						],
						"UpgradedStandardToken": [
							750
						]
					},
					"id": 1144,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@title SafeMath\r\n@dev Math operations with safety checks that throw on error\r",
							"fullyImplemented": true,
							"id": 97,
							"linearizedBaseContracts": [
								97
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "244:141:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 12,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 10,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "259:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 11,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "264:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "259:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 16,
												"nodeType": "IfStatement",
												"src": "255:47:0",
												"trueBody": {
													"id": 15,
													"nodeType": "Block",
													"src": "267:35:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 13,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "289:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 9,
															"id": 14,
															"nodeType": "Return",
															"src": "282:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													18
												],
												"declarations": [
													{
														"constant": false,
														"id": 18,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 34,
														"src": "312:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 17,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "312:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 22,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 19,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "324:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 20,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "328:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "324:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "312:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 28,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 26,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 24,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "347:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 25,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "351:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "347:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 27,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "356:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "347:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 23,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1147,
														"src": "340:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 29,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "340:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 30,
												"nodeType": "ExpressionStatement",
												"src": "340:18:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 31,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 18,
													"src": "376:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 9,
												"id": 32,
												"nodeType": "Return",
												"src": "369:8:0"
											}
										]
									},
									"documentation": null,
									"id": 34,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "190:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "190:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "201:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "201:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "189:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "235:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 7,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "235:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "234:9:0"
									},
									"scope": 97,
									"src": "177:208:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 51,
										"nodeType": "Block",
										"src": "460:221:0",
										"statements": [
											{
												"assignments": [
													44
												],
												"declarations": [
													{
														"constant": false,
														"id": 44,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 52,
														"src": "550:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 43,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "550:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 48,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 45,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "562:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 46,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 38,
														"src": "566:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "562:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "550:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 49,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 44,
													"src": "672:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 42,
												"id": 50,
												"nodeType": "Return",
												"src": "665:8:0"
											}
										]
									},
									"documentation": null,
									"id": 52,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "406:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 35,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "417:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "417:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "405:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "451:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "450:9:0"
									},
									"scope": 97,
									"src": "393:288:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 71,
										"nodeType": "Block",
										"src": "756:56:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 62,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 56,
																"src": "774:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 63,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 54,
																"src": "779:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "774:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 61,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1147,
														"src": "767:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "767:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "767:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 67,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "799:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 68,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "803:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "799:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 60,
												"id": 70,
												"nodeType": "Return",
												"src": "792:12:0"
											}
										]
									},
									"documentation": null,
									"id": 72,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "702:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 53,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "702:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "713:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 55,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "713:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "701:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "747:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "747:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "746:9:0"
									},
									"scope": 97,
									"src": "689:123:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 95,
										"nodeType": "Block",
										"src": "887:80:0",
										"statements": [
											{
												"assignments": [
													82
												],
												"declarations": [
													{
														"constant": false,
														"id": 82,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 96,
														"src": "898:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 81,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "898:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 86,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 83,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 74,
														"src": "910:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 84,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "914:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "910:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "898:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 90,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 88,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 82,
																"src": "933:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 89,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 74,
																"src": "938:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "933:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 87,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1147,
														"src": "926:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "926:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 92,
												"nodeType": "ExpressionStatement",
												"src": "926:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 93,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 82,
													"src": "958:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 80,
												"id": 94,
												"nodeType": "Return",
												"src": "951:8:0"
											}
										]
									},
									"documentation": null,
									"id": 96,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "833:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "844:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "844:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "832:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "878:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "877:9:0"
									},
									"scope": 97,
									"src": "820:147:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 1144,
							"src": "153:817:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": "@title Ownable\r\n@dev The Ownable contract has an owner address, and provides basic authorization control\r\nfunctions, this simplifies the implementation of \"user permissions\".\r",
							"fullyImplemented": true,
							"id": 139,
							"linearizedBaseContracts": [
								139
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 99,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 139,
									"src": "1193:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 98,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1193:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "1379:37:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 102,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 99,
														"src": "1390:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 103,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1158,
															"src": "1398:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1398:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1390:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 106,
												"nodeType": "ExpressionStatement",
												"src": "1390:18:0"
											}
										]
									},
									"documentation": "@dev The Ownable constructor sets the original `owner` of the contract to the sender\r\naccount.\r",
									"id": 108,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "ownable",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1369:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:0:0"
									},
									"scope": 139,
									"src": "1353:63:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 118,
										"nodeType": "Block",
										"src": "1532:59:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 111,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1158,
																	"src": "1551:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 112,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1551:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 113,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 99,
																"src": "1565:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1551:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 110,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1161,
															1162
														],
														"referencedDeclaration": 1161,
														"src": "1543:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1543:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 116,
												"nodeType": "ExpressionStatement",
												"src": "1543:28:0"
											},
											{
												"id": 117,
												"nodeType": "PlaceholderStatement",
												"src": "1582:1:0"
											}
										]
									},
									"documentation": "@dev Throws if called by any account other than the owner.\r",
									"id": 119,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1529:2:0"
									},
									"src": "1511:80:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 137,
										"nodeType": "Block",
										"src": "1827:89:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 126,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "1842:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 128,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1862:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 127,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1854:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 129,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1854:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1842:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 136,
												"nodeType": "IfStatement",
												"src": "1838:71:0",
												"trueBody": {
													"id": 135,
													"nodeType": "Block",
													"src": "1866:43:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 131,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 99,
																	"src": "1881:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 132,
																	"name": "newOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 121,
																	"src": "1889:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1881:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 134,
															"nodeType": "ExpressionStatement",
															"src": "1881:16:0"
														}
													]
												}
											}
										]
									},
									"documentation": "@dev Allows the current owner to transfer control of the contract to a newOwner.\r\n@param newOwner The address to transfer ownership to.\r",
									"id": 138,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 124,
											"modifierName": {
												"argumentTypes": null,
												"id": 123,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 119,
												"src": "1817:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1817:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "1792:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1792:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1791:18:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1827:0:0"
									},
									"scope": 139,
									"src": "1765:151:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 1144,
							"src": "1169:752:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": "@title ERC20Basic\r\n@dev Simpler version of ERC20 interface\r\n@dev see https://github.com/ethereum/EIPs/issues/20\r",
							"fullyImplemented": false,
							"id": 169,
							"linearizedBaseContracts": [
								169
							],
							"name": "ERC20Basic",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 141,
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 169,
									"src": "2084:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 140,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "2084:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 146,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2135:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2163:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 143,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2163:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2162:6:0"
									},
									"scope": 169,
									"src": "2115:54:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 153,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"name": "who",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "2194:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2194:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2193:13:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "2232:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 150,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2232:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2231:6:0"
									},
									"scope": 169,
									"src": "2175:63:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 160,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2262:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2262:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2274:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2274:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2261:24:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2292:0:0"
									},
									"scope": 169,
									"src": "2244:49:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 168,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "2314:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2314:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "2336:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2336:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "2356:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2356:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2313:54:0"
									},
									"src": "2299:69:0"
								}
							],
							"scope": 1144,
							"src": "2057:314:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 170,
										"name": "ERC20Basic",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 169,
										"src": "2486:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20Basic_$169",
											"typeString": "contract ERC20Basic"
										}
									},
									"id": 171,
									"nodeType": "InheritanceSpecifier",
									"src": "2486:10:0"
								}
							],
							"contractDependencies": [
								169
							],
							"contractKind": "contract",
							"documentation": "@title ERC20 interface\r\n@dev see https://github.com/ethereum/EIPs/issues/20\r",
							"fullyImplemented": false,
							"id": 205,
							"linearizedBaseContracts": [
								205,
								169
							],
							"name": "ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 180,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2523:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2523:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2538:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2538:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2522:32:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2580:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2580:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2579:6:0"
									},
									"scope": 205,
									"src": "2504:82:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 189,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2614:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2614:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2628:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2628:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2640:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2640:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2613:38:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2658:0:0"
									},
									"scope": 205,
									"src": "2592:67:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 196,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "2682:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 193,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "2699:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2699:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2681:29:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2717:0:0"
									},
									"scope": 205,
									"src": "2665:53:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 204,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "2739:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "2762:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2762:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "2787:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2787:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2738:60:0"
									},
									"src": "2724:75:0"
								}
							],
							"scope": 1144,
							"src": "2468:334:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 206,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 139,
										"src": "2923:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$139",
											"typeString": "contract Ownable"
										}
									},
									"id": 207,
									"nodeType": "InheritanceSpecifier",
									"src": "2923:7:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 208,
										"name": "ERC20Basic",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 169,
										"src": "2932:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20Basic_$169",
											"typeString": "contract ERC20Basic"
										}
									},
									"id": 209,
									"nodeType": "InheritanceSpecifier",
									"src": "2932:10:0"
								}
							],
							"contractDependencies": [
								169,
								139
							],
							"contractKind": "contract",
							"documentation": "@title Basic token\r\n@dev Basic version of StandardToken, with no allowances.\r",
							"fullyImplemented": false,
							"id": 347,
							"linearizedBaseContracts": [
								347,
								169,
								139
							],
							"name": "BasicToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 212,
									"libraryName": {
										"contractScope": null,
										"id": 210,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 97,
										"src": "2956:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$97",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "2950:24:0",
									"typeName": {
										"id": 211,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "2969:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 216,
									"name": "balances",
									"nodeType": "VariableDeclaration",
									"scope": 347,
									"src": "2982:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 215,
										"keyType": {
											"id": 213,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2990:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2982:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 214,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "3001:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 219,
									"name": "basisPointsRate",
									"nodeType": "VariableDeclaration",
									"scope": 347,
									"src": "3110:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 217,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "3110:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 218,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3140:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 222,
									"name": "maximumFee",
									"nodeType": "VariableDeclaration",
									"scope": 347,
									"src": "3148:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 220,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "3148:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 221,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3173:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 239,
										"nodeType": "Block",
										"src": "3288:69:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3307:29:0",
															"subExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 233,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 227,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1158,
																					"src": "3309:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 228,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "data",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "3309:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_calldata_ptr",
																					"typeString": "bytes calldata"
																				}
																			},
																			"id": 229,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "3309:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 232,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 230,
																				"name": "size",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 224,
																				"src": "3327:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "34",
																				"id": 231,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3334:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "3327:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3309:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 234,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3308:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 226,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1161,
															1162
														],
														"referencedDeclaration": 1161,
														"src": "3299:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3299:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 237,
												"nodeType": "ExpressionStatement",
												"src": "3299:38:0"
											},
											{
												"id": 238,
												"nodeType": "PlaceholderStatement",
												"src": "3348:1:0"
											}
										]
									},
									"documentation": "@dev Fix for the ERC20 short address attack.\r",
									"id": 240,
									"name": "onlyPayloadSize",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"name": "size",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "3277:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3277:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3276:11:0"
									},
									"src": "3252:105:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "3605:508:0",
										"statements": [
											{
												"assignments": [
													253
												],
												"declarations": [
													{
														"constant": false,
														"id": 253,
														"name": "fee",
														"nodeType": "VariableDeclaration",
														"scope": 334,
														"src": "3616:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 252,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3616:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 262,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "3130303030",
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3661:5:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															},
															"value": "10000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															}
														],
														"expression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 256,
																			"name": "basisPointsRate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 219,
																			"src": "3639:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 254,
																			"name": "_value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 244,
																			"src": "3628:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 255,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 34,
																		"src": "3628:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 257,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3628:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 258,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3627:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 52,
														"src": "3627:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3627:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3616:51:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 263,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 253,
														"src": "3682:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 264,
														"name": "maximumFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 222,
														"src": "3688:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3682:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 271,
												"nodeType": "IfStatement",
												"src": "3678:65:0",
												"trueBody": {
													"id": 270,
													"nodeType": "Block",
													"src": "3700:43:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 266,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 253,
																	"src": "3715:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 267,
																	"name": "maximumFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 222,
																	"src": "3721:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3715:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 269,
															"nodeType": "ExpressionStatement",
															"src": "3715:16:0"
														}
													]
												}
											},
											{
												"assignments": [
													273
												],
												"declarations": [
													{
														"constant": false,
														"id": 273,
														"name": "sendAmount",
														"nodeType": "VariableDeclaration",
														"scope": 334,
														"src": "3753:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 272,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3753:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 278,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 276,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 253,
															"src": "3782:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 274,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "3771:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 72,
														"src": "3771:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3771:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3753:33:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 279,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "3797:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 282,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 280,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1158,
																"src": "3806:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3806:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3797:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 288,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 244,
																"src": "3845:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 283,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 216,
																	"src": "3820:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 286,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 284,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1158,
																		"src": "3829:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "3829:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3820:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 72,
															"src": "3820:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 289,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3820:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3797:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 291,
												"nodeType": "ExpressionStatement",
												"src": "3797:55:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 292,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "3863:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 294,
														"indexExpression": {
															"argumentTypes": null,
															"id": 293,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3872:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3863:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 299,
																"name": "sendAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 273,
																"src": "3897:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 295,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 216,
																	"src": "3879:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 297,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 296,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "3888:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3879:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 96,
															"src": "3879:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 300,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3879:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3863:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "3863:45:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 303,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 253,
														"src": "3923:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 304,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3929:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3923:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 325,
												"nodeType": "IfStatement",
												"src": "3919:134:0",
												"trueBody": {
													"id": 324,
													"nodeType": "Block",
													"src": "3932:121:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 315,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 306,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 216,
																		"src": "3947:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 308,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 307,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 99,
																		"src": "3956:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3947:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 313,
																			"name": "fee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 253,
																			"src": "3985:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 309,
																				"name": "balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 216,
																				"src": "3965:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 311,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 310,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 99,
																				"src": "3974:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3965:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 312,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 96,
																		"src": "3965:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3965:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3947:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 316,
															"nodeType": "ExpressionStatement",
															"src": "3947:42:0"
														},
														{
															"eventCall": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 318,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1158,
																			"src": "4018:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 319,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "4018:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 320,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 99,
																		"src": "4030:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 321,
																		"name": "fee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 253,
																		"src": "4037:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 317,
																	"name": "Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 168,
																	"src": "4009:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 322,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4009:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 323,
															"nodeType": "EmitStatement",
															"src": "4004:37:0"
														}
													]
												}
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 327,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1158,
																"src": "4077:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "4077:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 329,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "4089:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 330,
															"name": "sendAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 273,
															"src": "4094:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 326,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 168,
														"src": "4068:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4068:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 332,
												"nodeType": "EmitStatement",
												"src": "4063:42:0"
											}
										]
									},
									"documentation": "@dev transfer token for a specified address\r\n@param _to The address to transfer to.\r\n@param _value The amount to be transferred.\r",
									"id": 334,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_rational_64_by_1",
														"typeString": "int_const 64"
													},
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 247,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3597:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3332",
														"id": 248,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3601:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "3597:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_64_by_1",
														"typeString": "int_const 64"
													}
												}
											],
											"id": 250,
											"modifierName": {
												"argumentTypes": null,
												"id": 246,
												"name": "onlyPayloadSize",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 240,
												"src": "3581:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_uint256_$",
													"typeString": "modifier (uint256)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3581:23:0"
										}
									],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "3548:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3548:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "3561:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 243,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3561:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3547:26:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3605:0:0"
									},
									"scope": 347,
									"src": "3530:583:0",
									"stateMutability": "nonpayable",
									"superFunction": 160,
									"visibility": "public"
								},
								{
									"body": {
										"id": 345,
										"nodeType": "Block",
										"src": "4405:42:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 341,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 216,
														"src": "4423:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 343,
													"indexExpression": {
														"argumentTypes": null,
														"id": 342,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 336,
														"src": "4432:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4423:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 340,
												"id": 344,
												"nodeType": "Return",
												"src": "4416:23:0"
											}
										]
									},
									"documentation": "@dev Gets the balance of the specified address.\r\n@param _owner The address to query the the balance of.\r\n@return An uint representing the amount owned by the passed address.\r",
									"id": 346,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "4350:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4349:16:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"name": "balance",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "4391:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4391:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4390:14:0"
									},
									"scope": 347,
									"src": "4331:116:0",
									"stateMutability": "view",
									"superFunction": 153,
									"visibility": "public"
								}
							],
							"scope": 1144,
							"src": "2900:1552:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 348,
										"name": "BasicToken",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 347,
										"src": "4755:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_BasicToken_$347",
											"typeString": "contract BasicToken"
										}
									},
									"id": 349,
									"nodeType": "InheritanceSpecifier",
									"src": "4755:10:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 350,
										"name": "ERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 205,
										"src": "4767:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$205",
											"typeString": "contract ERC20"
										}
									},
									"id": 351,
									"nodeType": "InheritanceSpecifier",
									"src": "4767:5:0"
								}
							],
							"contractDependencies": [
								169,
								347,
								139,
								205
							],
							"contractKind": "contract",
							"documentation": "@title Standard ERC20 token\r\n\n * @dev Implementation of the basic standard token.\r\n@dev https://github.com/ethereum/EIPs/issues/20\r\n@dev Based oncode by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\r",
							"fullyImplemented": false,
							"id": 547,
							"linearizedBaseContracts": [
								547,
								205,
								347,
								169,
								139
							],
							"name": "StandardToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 357,
									"name": "allowed",
									"nodeType": "VariableDeclaration",
									"scope": 547,
									"src": "4782:61:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 356,
										"keyType": {
											"id": 352,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4791:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4782:46:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 355,
											"keyType": {
												"id": 353,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4811:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "4802:25:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 354,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "4822:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 364,
									"name": "MAX_UINT",
									"nodeType": "VariableDeclaration",
									"scope": 547,
									"src": "4852:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 358,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "4852:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
											"typeString": "int_const 1157...(70 digits omitted)...9935"
										},
										"id": 363,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"commonType": {
												"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
												"typeString": "int_const 1157...(70 digits omitted)...9936"
											},
											"id": 361,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"argumentTypes": null,
												"hexValue": "32",
												"id": 359,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "4884:1:0",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"argumentTypes": null,
												"hexValue": "323536",
												"id": 360,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "4887:3:0",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_rational_256_by_1",
													"typeString": "int_const 256"
												},
												"value": "256"
											},
											"src": "4884:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
												"typeString": "int_const 1157...(70 digits omitted)...9936"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "31",
											"id": 362,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "4893:1:0",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "4884:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
											"typeString": "int_const 1157...(70 digits omitted)...9935"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "5278:818:0",
										"statements": [
											{
												"assignments": [
													379
												],
												"declarations": [
													{
														"constant": false,
														"id": 379,
														"name": "_allowance",
														"nodeType": "VariableDeclaration",
														"scope": 482,
														"src": "5289:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 378,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5289:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 386,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 380,
															"name": "allowed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "5307:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 382,
														"indexExpression": {
															"argumentTypes": null,
															"id": 381,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "5315:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5307:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 385,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 383,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1158,
															"src": "5322:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 384,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "5322:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5307:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5289:44:0"
											},
											{
												"assignments": [
													388
												],
												"declarations": [
													{
														"constant": false,
														"id": 388,
														"name": "fee",
														"nodeType": "VariableDeclaration",
														"scope": 482,
														"src": "5504:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 387,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5504:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 397,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "3130303030",
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5549:5:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															},
															"value": "10000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															}
														],
														"expression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 391,
																			"name": "basisPointsRate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 219,
																			"src": "5527:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 389,
																			"name": "_value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 370,
																			"src": "5516:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 390,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 34,
																		"src": "5516:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 392,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5516:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 393,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5515:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 394,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 52,
														"src": "5515:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5515:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5504:51:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 398,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 388,
														"src": "5570:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 399,
														"name": "maximumFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 222,
														"src": "5576:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5570:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 406,
												"nodeType": "IfStatement",
												"src": "5566:65:0",
												"trueBody": {
													"id": 405,
													"nodeType": "Block",
													"src": "5588:43:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 401,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "5603:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 402,
																	"name": "maximumFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 222,
																	"src": "5609:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5603:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 404,
															"nodeType": "ExpressionStatement",
															"src": "5603:16:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 407,
														"name": "_allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 379,
														"src": "5645:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 408,
														"name": "MAX_UINT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 364,
														"src": "5658:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5645:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 423,
												"nodeType": "IfStatement",
												"src": "5641:105:0",
												"trueBody": {
													"id": 422,
													"nodeType": "Block",
													"src": "5668:78:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 420,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 410,
																			"name": "allowed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 357,
																			"src": "5683:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 414,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 411,
																			"name": "_from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 366,
																			"src": "5691:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5683:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 415,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 412,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1158,
																			"src": "5698:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 413,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "5698:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5683:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 418,
																			"name": "_value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 370,
																			"src": "5727:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 416,
																			"name": "_allowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 379,
																			"src": "5712:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 417,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 72,
																		"src": "5712:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 419,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5712:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5683:51:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 421,
															"nodeType": "ExpressionStatement",
															"src": "5683:51:0"
														}
													]
												}
											},
											{
												"assignments": [
													425
												],
												"declarations": [
													{
														"constant": false,
														"id": 425,
														"name": "sendAmount",
														"nodeType": "VariableDeclaration",
														"scope": 482,
														"src": "5756:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 424,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5756:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 430,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 428,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "5785:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 426,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 370,
															"src": "5774:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 427,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 72,
														"src": "5774:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5774:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5756:33:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 431,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "5800:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 433,
														"indexExpression": {
															"argumentTypes": null,
															"id": 432,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "5809:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5800:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 438,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 370,
																"src": "5838:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 434,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 216,
																	"src": "5818:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 436,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 435,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 366,
																	"src": "5827:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5818:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 72,
															"src": "5818:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 439,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5818:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5800:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 441,
												"nodeType": "ExpressionStatement",
												"src": "5800:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 442,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "5856:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 444,
														"indexExpression": {
															"argumentTypes": null,
															"id": 443,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "5865:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5856:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 449,
																"name": "sendAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "5890:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 445,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 216,
																	"src": "5872:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 447,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 446,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 368,
																	"src": "5881:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5872:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 96,
															"src": "5872:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 450,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5872:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5856:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 452,
												"nodeType": "ExpressionStatement",
												"src": "5856:45:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 453,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 388,
														"src": "5916:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 454,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5922:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5916:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 474,
												"nodeType": "IfStatement",
												"src": "5912:129:0",
												"trueBody": {
													"id": 473,
													"nodeType": "Block",
													"src": "5925:116:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 465,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 456,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 216,
																		"src": "5940:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 458,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 457,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 99,
																		"src": "5949:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5940:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 463,
																			"name": "fee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "5978:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 459,
																				"name": "balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 216,
																				"src": "5958:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 461,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 460,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 99,
																				"src": "5967:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5958:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 462,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 96,
																		"src": "5958:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5958:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5940:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 466,
															"nodeType": "ExpressionStatement",
															"src": "5940:42:0"
														},
														{
															"eventCall": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 468,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 366,
																		"src": "6011:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 469,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 99,
																		"src": "6018:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 470,
																		"name": "fee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 388,
																		"src": "6025:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 467,
																	"name": "Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 168,
																	"src": "6002:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 471,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6002:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 472,
															"nodeType": "EmitStatement",
															"src": "5997:32:0"
														}
													]
												}
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 476,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "6065:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 477,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "6072:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 478,
															"name": "sendAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "6077:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 475,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 168,
														"src": "6056:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6056:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 480,
												"nodeType": "EmitStatement",
												"src": "6051:37:0"
											}
										]
									},
									"documentation": "@dev Transfer tokens from one address to another\r\n@param _from address The address which you want to send tokens from\r\n@param _to address The address which you want to transfer to\r\n@param _value uint the amount of tokens to be transferred\r",
									"id": 482,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_rational_96_by_1",
														"typeString": "int_const 96"
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"hexValue": "33",
														"id": 373,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5270:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3332",
														"id": 374,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5274:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "5270:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_96_by_1",
														"typeString": "int_const 96"
													}
												}
											],
											"id": 376,
											"modifierName": {
												"argumentTypes": null,
												"id": 372,
												"name": "onlyPayloadSize",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 240,
												"src": "5254:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_uint256_$",
													"typeString": "modifier (uint256)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "5254:23:0"
										}
									],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5206:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5206:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5221:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5221:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5234:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 369,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5234:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5205:41:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5278:0:0"
									},
									"scope": 547,
									"src": "5184:912:0",
									"stateMutability": "nonpayable",
									"superFunction": 189,
									"visibility": "public"
								},
								{
									"body": {
										"id": 529,
										"nodeType": "Block",
										"src": "6422:494:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "6751:56:0",
															"subExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 508,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"components": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 497,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 495,
																						"name": "_value",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 486,
																						"src": "6754:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "30",
																						"id": 496,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "6764:1:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "6754:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 498,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "6753:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"components": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 506,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"baseExpression": {
																								"argumentTypes": null,
																								"id": 499,
																								"name": "allowed",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 357,
																								"src": "6771:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																									"typeString": "mapping(address => mapping(address => uint256))"
																								}
																							},
																							"id": 502,
																							"indexExpression": {
																								"argumentTypes": null,
																								"expression": {
																									"argumentTypes": null,
																									"id": 500,
																									"name": "msg",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1158,
																									"src": "6779:3:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_message",
																										"typeString": "msg"
																									}
																								},
																								"id": 501,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "sender",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": null,
																								"src": "6779:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "6771:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 504,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 503,
																							"name": "_spender",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 484,
																							"src": "6791:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "6771:29:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "30",
																						"id": 505,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "6804:1:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "6771:34:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "6770:36:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "6753:53:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 509,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6752:55:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 494,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1161,
															1162
														],
														"referencedDeclaration": 1161,
														"src": "6743:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6743:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 512,
												"nodeType": "ExpressionStatement",
												"src": "6743:65:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 513,
																"name": "allowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "6821:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 517,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 514,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1158,
																	"src": "6829:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 515,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "6829:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6821:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 518,
														"indexExpression": {
															"argumentTypes": null,
															"id": 516,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 484,
															"src": "6841:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6821:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 519,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 486,
														"src": "6853:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6821:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 521,
												"nodeType": "ExpressionStatement",
												"src": "6821:38:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 523,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1158,
																"src": "6879:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 524,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "6879:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 525,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 484,
															"src": "6891:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 526,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "6901:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 204,
														"src": "6870:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6870:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 528,
												"nodeType": "ExpressionStatement",
												"src": "6870:38:0"
											}
										]
									},
									"documentation": "@dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\r\n@param _spender The address which will spend the funds.\r\n@param _value The amount of tokens to be spent.\r",
									"id": 530,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_rational_64_by_1",
														"typeString": "int_const 64"
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 489,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6414:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3332",
														"id": 490,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6418:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "6414:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_64_by_1",
														"typeString": "int_const 64"
													}
												}
											],
											"id": 492,
											"modifierName": {
												"argumentTypes": null,
												"id": 488,
												"name": "onlyPayloadSize",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 240,
												"src": "6398:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_uint256_$",
													"typeString": "modifier (uint256)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "6398:23:0"
										}
									],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "6360:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6360:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "6378:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 485,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6378:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6359:31:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6422:0:0"
									},
									"scope": 547,
									"src": "6343:573:0",
									"stateMutability": "nonpayable",
									"superFunction": 196,
									"visibility": "public"
								},
								{
									"body": {
										"id": 545,
										"nodeType": "Block",
										"src": "7343:51:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 539,
															"name": "allowed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "7361:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 541,
														"indexExpression": {
															"argumentTypes": null,
															"id": 540,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7369:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7361:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 543,
													"indexExpression": {
														"argumentTypes": null,
														"id": 542,
														"name": "_spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "7377:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7361:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 538,
												"id": 544,
												"nodeType": "Return",
												"src": "7354:32:0"
											}
										]
									},
									"documentation": "@dev Function to check the amount of tokens than an owner allowed to a spender.\r\n@param _owner address The address which owns the funds.\r\n@param _spender address The address which will spend the funds.\r\n@return A uint specifying the amount of tokens still available for the spender.\r",
									"id": 546,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "7268:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7268:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "7284:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7284:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7267:34:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"name": "remaining",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "7327:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 536,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7327:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7326:16:0"
									},
									"scope": 547,
									"src": "7249:145:0",
									"stateMutability": "view",
									"superFunction": 180,
									"visibility": "public"
								}
							],
							"scope": 1144,
							"src": "4729:2670:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 548,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 139,
										"src": "7543:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$139",
											"typeString": "contract Ownable"
										}
									},
									"id": 549,
									"nodeType": "InheritanceSpecifier",
									"src": "7543:7:0"
								}
							],
							"contractDependencies": [
								139
							],
							"contractKind": "contract",
							"documentation": "@title Pausable\r\n@dev Base contract which allows children to implement an emergency stop mechanism.\r",
							"fullyImplemented": true,
							"id": 604,
							"linearizedBaseContracts": [
								604,
								139
							],
							"name": "Pausable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": null,
									"id": 551,
									"name": "Pause",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7567:2:0"
									},
									"src": "7556:14:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 553,
									"name": "Unpause",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7587:2:0"
									},
									"src": "7574:16:0"
								},
								{
									"constant": false,
									"id": 556,
									"name": "paused",
									"nodeType": "VariableDeclaration",
									"scope": 604,
									"src": "7596:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 554,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "7596:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "66616c7365",
										"id": 555,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7617:5:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 564,
										"nodeType": "Block",
										"src": "7756:37:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "7771:7:0",
															"subExpression": {
																"argumentTypes": null,
																"id": 559,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 556,
																"src": "7772:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 558,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1161,
															1162
														],
														"referencedDeclaration": 1161,
														"src": "7763:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7763:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 562,
												"nodeType": "ExpressionStatement",
												"src": "7763:16:0"
											},
											{
												"id": 563,
												"nodeType": "PlaceholderStatement",
												"src": "7786:1:0"
											}
										]
									},
									"documentation": "@dev Modifier to make a function callable only when the contract is not paused.\r",
									"id": 565,
									"name": "whenNotPaused",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7753:2:0"
									},
									"src": "7731:62:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 572,
										"nodeType": "Block",
										"src": "7917:36:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 568,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 556,
															"src": "7932:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 567,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1161,
															1162
														],
														"referencedDeclaration": 1161,
														"src": "7924:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7924:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 570,
												"nodeType": "ExpressionStatement",
												"src": "7924:15:0"
											},
											{
												"id": 571,
												"nodeType": "PlaceholderStatement",
												"src": "7946:1:0"
											}
										]
									},
									"documentation": "@dev Modifier to make a function callable only when the contract is paused.\r",
									"id": 573,
									"name": "whenPaused",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7914:2:0"
									},
									"src": "7895:58:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 587,
										"nodeType": "Block",
										"src": "8085:44:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 580,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 556,
														"src": "8092:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 581,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8101:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "8092:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "ExpressionStatement",
												"src": "8092:13:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 584,
														"name": "Pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 551,
														"src": "8116:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8116:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 586,
												"nodeType": "EmitStatement",
												"src": "8111:12:0"
											}
										]
									},
									"documentation": "@dev called by the owner to pause, triggers stopped state\r",
									"id": 588,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 576,
											"modifierName": {
												"argumentTypes": null,
												"id": 575,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 119,
												"src": "8054:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "8054:9:0"
										},
										{
											"arguments": null,
											"id": 578,
											"modifierName": {
												"argumentTypes": null,
												"id": 577,
												"name": "whenNotPaused",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 565,
												"src": "8064:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "8064:13:0"
										}
									],
									"name": "pause",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8051:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8085:0:0"
									},
									"scope": 604,
									"src": "8037:92:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 602,
										"nodeType": "Block",
										"src": "8263:47:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 595,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 556,
														"src": "8270:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 596,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8279:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "8270:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 598,
												"nodeType": "ExpressionStatement",
												"src": "8270:14:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 599,
														"name": "Unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 553,
														"src": "8295:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8295:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 601,
												"nodeType": "EmitStatement",
												"src": "8290:14:0"
											}
										]
									},
									"documentation": "@dev called by the owner to unpause, returns to normal state\r",
									"id": 603,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 591,
											"modifierName": {
												"argumentTypes": null,
												"id": 590,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 119,
												"src": "8235:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "8235:9:0"
										},
										{
											"arguments": null,
											"id": 593,
											"modifierName": {
												"argumentTypes": null,
												"id": 592,
												"name": "whenPaused",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 573,
												"src": "8245:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "8245:10:0"
										}
									],
									"name": "unpause",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8232:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8263:0:0"
									},
									"scope": 604,
									"src": "8216:94:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 1144,
							"src": "7522:791:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 605,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 139,
										"src": "8339:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$139",
											"typeString": "contract Ownable"
										}
									},
									"id": 606,
									"nodeType": "InheritanceSpecifier",
									"src": "8339:7:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 607,
										"name": "BasicToken",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 347,
										"src": "8348:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_BasicToken_$347",
											"typeString": "contract BasicToken"
										}
									},
									"id": 608,
									"nodeType": "InheritanceSpecifier",
									"src": "8348:10:0"
								}
							],
							"contractDependencies": [
								169,
								347,
								139
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": false,
							"id": 718,
							"linearizedBaseContracts": [
								718,
								347,
								169,
								139
							],
							"name": "BlackList",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 619,
										"nodeType": "Block",
										"src": "8565:47:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 615,
														"name": "isBlackListed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 632,
														"src": "8583:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 617,
													"indexExpression": {
														"argumentTypes": null,
														"id": 616,
														"name": "_maker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 610,
														"src": "8597:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8583:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 614,
												"id": 618,
												"nodeType": "Return",
												"src": "8576:28:0"
											}
										]
									},
									"documentation": "//// Getters to allow the same blacklist to be used also by other contracts (including upgraded Tether) ///////\r",
									"id": 620,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "getBlackListStatus",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"name": "_maker",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "8516:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 609,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8516:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8515:16:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "8559:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 612,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8559:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8558:6:0"
									},
									"scope": 718,
									"src": "8488:124:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 627,
										"nodeType": "Block",
										"src": "8676:31:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 625,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 99,
													"src": "8694:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 624,
												"id": 626,
												"nodeType": "Return",
												"src": "8687:12:0"
											}
										]
									},
									"documentation": null,
									"id": 628,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8637:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "8667:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 622,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8667:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8666:9:0"
									},
									"scope": 718,
									"src": "8620:87:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"constant": false,
									"id": 632,
									"name": "isBlackListed",
									"nodeType": "VariableDeclaration",
									"scope": 718,
									"src": "8715:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 631,
										"keyType": {
											"id": 629,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "8724:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "8715:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 630,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "8735:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "8833:90:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 639,
															"name": "isBlackListed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "8844:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 641,
														"indexExpression": {
															"argumentTypes": null,
															"id": 640,
															"name": "_evilUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 634,
															"src": "8858:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8844:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 642,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8871:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "8844:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 644,
												"nodeType": "ExpressionStatement",
												"src": "8844:31:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 646,
															"name": "_evilUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 634,
															"src": "8905:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 645,
														"name": "AddedBlackList",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 713,
														"src": "8890:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8890:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 648,
												"nodeType": "EmitStatement",
												"src": "8885:30:0"
											}
										]
									},
									"documentation": null,
									"id": 650,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 637,
											"modifierName": {
												"argumentTypes": null,
												"id": 636,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 119,
												"src": "8823:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "8823:9:0"
										}
									],
									"name": "addBlackList",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 634,
												"name": "_evilUser",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "8797:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8797:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8796:19:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8833:0:0"
									},
									"scope": 718,
									"src": "8774:149:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 667,
										"nodeType": "Block",
										"src": "8996:99:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 657,
															"name": "isBlackListed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "9007:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 659,
														"indexExpression": {
															"argumentTypes": null,
															"id": 658,
															"name": "_clearedUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "9021:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9007:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 660,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9037:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "9007:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 662,
												"nodeType": "ExpressionStatement",
												"src": "9007:35:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 664,
															"name": "_clearedUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "9074:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 663,
														"name": "RemovedBlackList",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 717,
														"src": "9057:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9057:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 666,
												"nodeType": "EmitStatement",
												"src": "9052:35:0"
											}
										]
									},
									"documentation": null,
									"id": 668,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 655,
											"modifierName": {
												"argumentTypes": null,
												"id": 654,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 119,
												"src": "8986:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "8986:9:0"
										}
									],
									"name": "removeBlackList",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 652,
												"name": "_clearedUser",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "8957:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 651,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8957:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8956:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8996:0:0"
									},
									"scope": 718,
									"src": "8931:164:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 702,
										"nodeType": "Block",
										"src": "9174:258:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 676,
																"name": "isBlackListed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 632,
																"src": "9193:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 678,
															"indexExpression": {
																"argumentTypes": null,
																"id": 677,
																"name": "_blackListedUser",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 670,
																"src": "9207:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9193:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 675,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1161,
															1162
														],
														"referencedDeclaration": 1161,
														"src": "9185:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9185:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 680,
												"nodeType": "ExpressionStatement",
												"src": "9185:40:0"
											},
											{
												"assignments": [
													682
												],
												"declarations": [
													{
														"constant": false,
														"id": 682,
														"name": "dirtyFunds",
														"nodeType": "VariableDeclaration",
														"scope": 703,
														"src": "9236:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 681,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "9236:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 686,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 684,
															"name": "_blackListedUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 670,
															"src": "9264:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 683,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															346
														],
														"referencedDeclaration": 346,
														"src": "9254:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9254:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9236:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 687,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "9292:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 689,
														"indexExpression": {
															"argumentTypes": null,
															"id": 688,
															"name": "_blackListedUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 670,
															"src": "9301:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9292:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 690,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9321:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9292:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 692,
												"nodeType": "ExpressionStatement",
												"src": "9292:30:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 693,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "9333:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 694,
														"name": "dirtyFunds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 682,
														"src": "9349:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9333:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 696,
												"nodeType": "ExpressionStatement",
												"src": "9333:26:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 698,
															"name": "_blackListedUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 670,
															"src": "9395:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 699,
															"name": "dirtyFunds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 682,
															"src": "9413:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 697,
														"name": "DestroyedBlackFunds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 709,
														"src": "9375:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9375:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 701,
												"nodeType": "EmitStatement",
												"src": "9370:54:0"
											}
										]
									},
									"documentation": null,
									"id": 703,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 673,
											"modifierName": {
												"argumentTypes": null,
												"id": 672,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 119,
												"src": "9164:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "9164:9:0"
										}
									],
									"name": "destroyBlackFunds",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"name": "_blackListedUser",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "9131:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 669,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9131:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9130:26:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9174:0:0"
									},
									"scope": 718,
									"src": "9103:329:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 709,
									"name": "DestroyedBlackFunds",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"indexed": false,
												"name": "_blackListedUser",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "9466:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9466:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"indexed": false,
												"name": "_balance",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "9492:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 706,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9492:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9465:41:0"
									},
									"src": "9440:67:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 713,
									"name": "AddedBlackList",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 711,
												"indexed": false,
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "9536:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 710,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9536:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9535:15:0"
									},
									"src": "9515:36:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 717,
									"name": "RemovedBlackList",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 715,
												"indexed": false,
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "9582:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 714,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9582:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9581:15:0"
									},
									"src": "9559:38:0"
								}
							],
							"scope": 1144,
							"src": "8317:1285:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 719,
										"name": "StandardToken",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 547,
										"src": "9640:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_StandardToken_$547",
											"typeString": "contract StandardToken"
										}
									},
									"id": 720,
									"nodeType": "InheritanceSpecifier",
									"src": "9640:13:0"
								}
							],
							"contractDependencies": [
								169,
								347,
								547,
								139,
								205
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": false,
							"id": 750,
							"linearizedBaseContracts": [
								750,
								547,
								205,
								347,
								169,
								139
							],
							"name": "UpgradedStandardToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 729,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transferByLegacy",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "9809:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 721,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9809:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "9823:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 723,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9823:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 726,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "9835:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 725,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9835:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9808:38:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9853:0:0"
									},
									"scope": 750,
									"src": "9783:71:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 740,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transferFromByLegacy",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 731,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "9890:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 730,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9890:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 733,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "9906:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 732,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9906:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 735,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "9920:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 734,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9920:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 737,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "9937:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 736,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9937:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9889:59:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9955:0:0"
									},
									"scope": 750,
									"src": "9860:96:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 749,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "approveByLegacy",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "9987:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9987:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "10001:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10001:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 746,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "10018:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 745,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10018:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9986:43:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10036:0:0"
									},
									"scope": 750,
									"src": "9962:75:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 1144,
							"src": "9606:434:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 751,
										"name": "Pausable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 604,
										"src": "10068:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Pausable_$604",
											"typeString": "contract Pausable"
										}
									},
									"id": 752,
									"nodeType": "InheritanceSpecifier",
									"src": "10068:8:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 753,
										"name": "StandardToken",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 547,
										"src": "10078:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_StandardToken_$547",
											"typeString": "contract StandardToken"
										}
									},
									"id": 754,
									"nodeType": "InheritanceSpecifier",
									"src": "10078:13:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 755,
										"name": "BlackList",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 718,
										"src": "10093:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_BlackList_$718",
											"typeString": "contract BlackList"
										}
									},
									"id": 756,
									"nodeType": "InheritanceSpecifier",
									"src": "10093:9:0"
								}
							],
							"contractDependencies": [
								169,
								347,
								547,
								604,
								139,
								205,
								718
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1143,
							"linearizedBaseContracts": [
								1143,
								718,
								547,
								205,
								347,
								169,
								604,
								139
							],
							"name": "TetherToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 758,
									"name": "name",
									"nodeType": "VariableDeclaration",
									"scope": 1143,
									"src": "10112:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 757,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "10112:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 760,
									"name": "symbol",
									"nodeType": "VariableDeclaration",
									"scope": 1143,
									"src": "10137:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 759,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "10137:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 762,
									"name": "decimals",
									"nodeType": "VariableDeclaration",
									"scope": 1143,
									"src": "10164:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 761,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "10164:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 764,
									"name": "upgradedAddress",
									"nodeType": "VariableDeclaration",
									"scope": 1143,
									"src": "10191:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 763,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "10191:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 766,
									"name": "deprecated",
									"nodeType": "VariableDeclaration",
									"scope": 1143,
									"src": "10228:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 765,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "10228:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 803,
										"nodeType": "Block",
										"src": "10649:201:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 777,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "10660:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 778,
														"name": "_initialSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 768,
														"src": "10675:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10660:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 780,
												"nodeType": "ExpressionStatement",
												"src": "10660:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 781,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 758,
														"src": "10700:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 782,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "10707:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "10700:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 784,
												"nodeType": "ExpressionStatement",
												"src": "10700:12:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 785,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "10723:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 786,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 772,
														"src": "10732:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "10723:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 788,
												"nodeType": "ExpressionStatement",
												"src": "10723:16:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 789,
														"name": "decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 762,
														"src": "10750:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 790,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 774,
														"src": "10761:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10750:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 792,
												"nodeType": "ExpressionStatement",
												"src": "10750:20:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 793,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "10781:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 795,
														"indexExpression": {
															"argumentTypes": null,
															"id": 794,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 99,
															"src": "10790:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10781:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 796,
														"name": "_initialSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 768,
														"src": "10799:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10781:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 798,
												"nodeType": "ExpressionStatement",
												"src": "10781:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 799,
														"name": "deprecated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 766,
														"src": "10824:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 800,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10837:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "10824:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 802,
												"nodeType": "ExpressionStatement",
												"src": "10824:18:0"
											}
										]
									},
									"documentation": null,
									"id": 804,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "TetherToken",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 768,
												"name": "_initialSupply",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "10575:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 767,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10575:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 770,
												"name": "_name",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "10596:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 769,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10596:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 772,
												"name": "_symbol",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "10610:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 771,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10610:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 774,
												"name": "_decimals",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "10626:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 773,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10626:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10574:67:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10649:0:0"
									},
									"scope": 1143,
									"src": "10554:296:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 841,
										"nodeType": "Block",
										"src": "11000:261:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "11019:26:0",
															"subExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 814,
																	"name": "isBlackListed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 632,
																	"src": "11020:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 817,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 815,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1158,
																		"src": "11034:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "11034:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11020:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 813,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1161,
															1162
														],
														"referencedDeclaration": 1161,
														"src": "11011:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11011:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 820,
												"nodeType": "ExpressionStatement",
												"src": "11011:35:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 821,
													"name": "deprecated",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 766,
													"src": "11061:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 839,
													"nodeType": "Block",
													"src": "11193:61:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 835,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 806,
																		"src": "11230:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 836,
																		"name": "_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 808,
																		"src": "11235:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 833,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1190,
																		"src": "11215:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_super$_TetherToken_$1143",
																			"typeString": "contract super TetherToken"
																		}
																	},
																	"id": 834,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 334,
																	"src": "11215:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 837,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11215:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"functionReturnParameters": 812,
															"id": 838,
															"nodeType": "Return",
															"src": "11208:34:0"
														}
													]
												},
												"id": 840,
												"nodeType": "IfStatement",
												"src": "11057:197:0",
												"trueBody": {
													"id": 832,
													"nodeType": "Block",
													"src": "11073:114:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 826,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1158,
																			"src": "11151:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 827,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "11151:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 828,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 806,
																		"src": "11163:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 829,
																		"name": "_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 808,
																		"src": "11168:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 823,
																				"name": "upgradedAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 764,
																				"src": "11117:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 822,
																			"name": "UpgradedStandardToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 750,
																			"src": "11095:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_UpgradedStandardToken_$750_$",
																				"typeString": "type(contract UpgradedStandardToken)"
																			}
																		},
																		"id": 824,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11095:38:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_UpgradedStandardToken_$750",
																			"typeString": "contract UpgradedStandardToken"
																		}
																	},
																	"id": 825,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transferByLegacy",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 729,
																	"src": "11095:55:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) external"
																	}
																},
																"id": 830,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11095:80:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"functionReturnParameters": 812,
															"id": 831,
															"nodeType": "Return",
															"src": "11088:87:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 842,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 811,
											"modifierName": {
												"argumentTypes": null,
												"id": 810,
												"name": "whenNotPaused",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 565,
												"src": "10986:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "10986:13:0"
										}
									],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "10953:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 805,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10953:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 808,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "10966:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 807,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10966:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10952:26:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11000:0:0"
									},
									"scope": 1143,
									"src": "10935:326:0",
									"stateMutability": "nonpayable",
									"superFunction": 334,
									"visibility": "public"
								},
								{
									"body": {
										"id": 882,
										"nodeType": "Block",
										"src": "11430:278:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 857,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "11449:21:0",
															"subExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 854,
																	"name": "isBlackListed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 632,
																	"src": "11450:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 856,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 855,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 844,
																	"src": "11464:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11450:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 853,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1161,
															1162
														],
														"referencedDeclaration": 1161,
														"src": "11441:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11441:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 859,
												"nodeType": "ExpressionStatement",
												"src": "11441:30:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 860,
													"name": "deprecated",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 766,
													"src": "11486:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 880,
													"nodeType": "Block",
													"src": "11629:72:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 875,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 844,
																		"src": "11670:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 876,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 846,
																		"src": "11677:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 877,
																		"name": "_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 848,
																		"src": "11682:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 873,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1190,
																		"src": "11651:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_super$_TetherToken_$1143",
																			"typeString": "contract super TetherToken"
																		}
																	},
																	"id": 874,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 482,
																	"src": "11651:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 878,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11651:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"functionReturnParameters": 852,
															"id": 879,
															"nodeType": "Return",
															"src": "11644:45:0"
														}
													]
												},
												"id": 881,
												"nodeType": "IfStatement",
												"src": "11482:219:0",
												"trueBody": {
													"id": 872,
													"nodeType": "Block",
													"src": "11498:125:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 865,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1158,
																			"src": "11580:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 866,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "11580:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 867,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 844,
																		"src": "11592:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 868,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 846,
																		"src": "11599:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 869,
																		"name": "_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 848,
																		"src": "11604:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 862,
																				"name": "upgradedAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 764,
																				"src": "11542:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 861,
																			"name": "UpgradedStandardToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 750,
																			"src": "11520:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_UpgradedStandardToken_$750_$",
																				"typeString": "type(contract UpgradedStandardToken)"
																			}
																		},
																		"id": 863,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11520:38:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_UpgradedStandardToken_$750",
																			"typeString": "contract UpgradedStandardToken"
																		}
																	},
																	"id": 864,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transferFromByLegacy",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 740,
																	"src": "11520:59:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,address,uint256) external"
																	}
																},
																"id": 870,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11520:91:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"functionReturnParameters": 852,
															"id": 871,
															"nodeType": "Return",
															"src": "11513:98:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 883,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 851,
											"modifierName": {
												"argumentTypes": null,
												"id": 850,
												"name": "whenNotPaused",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 565,
												"src": "11416:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "11416:13:0"
										}
									],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 844,
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "11368:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 843,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11368:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 846,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "11383:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 845,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11383:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 848,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "11396:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 847,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11396:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11367:41:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11430:0:0"
									},
									"scope": 1143,
									"src": "11346:362:0",
									"stateMutability": "nonpayable",
									"superFunction": 482,
									"visibility": "public"
								},
								{
									"body": {
										"id": 906,
										"nodeType": "Block",
										"src": "11856:181:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 890,
													"name": "deprecated",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 766,
													"src": "11871:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 904,
													"nodeType": "Block",
													"src": "11976:54:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 901,
																		"name": "who",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 885,
																		"src": "12014:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 899,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1190,
																		"src": "11998:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_super$_TetherToken_$1143",
																			"typeString": "contract super TetherToken"
																		}
																	},
																	"id": 900,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 346,
																	"src": "11998:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 902,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11998:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 889,
															"id": 903,
															"nodeType": "Return",
															"src": "11991:27:0"
														}
													]
												},
												"id": 905,
												"nodeType": "IfStatement",
												"src": "11867:163:0",
												"trueBody": {
													"id": 898,
													"nodeType": "Block",
													"src": "11883:87:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 895,
																		"name": "who",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 885,
																		"src": "11954:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 892,
																				"name": "upgradedAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 764,
																				"src": "11927:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 891,
																			"name": "UpgradedStandardToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 750,
																			"src": "11905:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_UpgradedStandardToken_$750_$",
																				"typeString": "type(contract UpgradedStandardToken)"
																			}
																		},
																		"id": 893,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11905:38:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_UpgradedStandardToken_$750",
																			"typeString": "contract UpgradedStandardToken"
																		}
																	},
																	"id": 894,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 346,
																	"src": "11905:48:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 896,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11905:53:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 889,
															"id": 897,
															"nodeType": "Return",
															"src": "11898:60:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 907,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"name": "who",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "11812:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 884,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11812:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11811:13:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "11850:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 887,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11850:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11849:6:0"
									},
									"scope": 1143,
									"src": "11793:244:0",
									"stateMutability": "view",
									"superFunction": 346,
									"visibility": "public"
								},
								{
									"body": {
										"id": 939,
										"nodeType": "Block",
										"src": "12201:223:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 919,
													"name": "deprecated",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 766,
													"src": "12216:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 937,
													"nodeType": "Block",
													"src": "12352:65:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 933,
																		"name": "_spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 909,
																		"src": "12388:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 934,
																		"name": "_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 911,
																		"src": "12398:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 931,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1190,
																		"src": "12374:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_super$_TetherToken_$1143",
																			"typeString": "contract super TetherToken"
																		}
																	},
																	"id": 932,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "approve",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 530,
																	"src": "12374:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 935,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12374:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"functionReturnParameters": 918,
															"id": 936,
															"nodeType": "Return",
															"src": "12367:38:0"
														}
													]
												},
												"id": 938,
												"nodeType": "IfStatement",
												"src": "12212:205:0",
												"trueBody": {
													"id": 930,
													"nodeType": "Block",
													"src": "12228:118:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 924,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1158,
																			"src": "12305:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 925,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "12305:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 926,
																		"name": "_spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 909,
																		"src": "12317:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 927,
																		"name": "_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 911,
																		"src": "12327:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 921,
																				"name": "upgradedAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 764,
																				"src": "12272:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 920,
																			"name": "UpgradedStandardToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 750,
																			"src": "12250:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_UpgradedStandardToken_$750_$",
																				"typeString": "type(contract UpgradedStandardToken)"
																			}
																		},
																		"id": 922,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12250:38:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_UpgradedStandardToken_$750",
																			"typeString": "contract UpgradedStandardToken"
																		}
																	},
																	"id": 923,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "approveByLegacy",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 749,
																	"src": "12250:54:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) external"
																	}
																},
																"id": 928,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12250:84:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"functionReturnParameters": 918,
															"id": 929,
															"nodeType": "Return",
															"src": "12243:91:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 940,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_rational_64_by_1",
														"typeString": "int_const 64"
													},
													"id": 916,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 914,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12193:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3332",
														"id": 915,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12197:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "12193:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_64_by_1",
														"typeString": "int_const 64"
													}
												}
											],
											"id": 917,
											"modifierName": {
												"argumentTypes": null,
												"id": 913,
												"name": "onlyPayloadSize",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 240,
												"src": "12177:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_uint256_$",
													"typeString": "modifier (uint256)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "12177:23:0"
										}
									],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "12139:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12139:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 911,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "12157:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 910,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12157:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12138:31:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12201:0:0"
									},
									"scope": 1143,
									"src": "12122:302:0",
									"stateMutability": "nonpayable",
									"superFunction": 530,
									"visibility": "public"
								},
								{
									"body": {
										"id": 967,
										"nodeType": "Block",
										"src": "12603:199:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 949,
													"name": "deprecated",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 766,
													"src": "12618:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 965,
													"nodeType": "Block",
													"src": "12728:67:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 961,
																		"name": "_owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 942,
																		"src": "12766:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 962,
																		"name": "_spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 944,
																		"src": "12774:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 959,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1190,
																		"src": "12750:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_super$_TetherToken_$1143",
																			"typeString": "contract super TetherToken"
																		}
																	},
																	"id": 960,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 546,
																	"src": "12750:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 963,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12750:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 948,
															"id": 964,
															"nodeType": "Return",
															"src": "12743:40:0"
														}
													]
												},
												"id": 966,
												"nodeType": "IfStatement",
												"src": "12614:181:0",
												"trueBody": {
													"id": 958,
													"nodeType": "Block",
													"src": "12630:92:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 954,
																		"name": "_owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 942,
																		"src": "12693:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 955,
																		"name": "_spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 944,
																		"src": "12701:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 951,
																				"name": "upgradedAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 764,
																				"src": "12666:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 950,
																			"name": "StandardToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 547,
																			"src": "12652:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_StandardToken_$547_$",
																				"typeString": "type(contract StandardToken)"
																			}
																		},
																		"id": 952,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12652:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_StandardToken_$547",
																			"typeString": "contract StandardToken"
																		}
																	},
																	"id": 953,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 546,
																	"src": "12652:40:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view external returns (uint256)"
																	}
																},
																"id": 956,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12652:58:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 948,
															"id": 957,
															"nodeType": "Return",
															"src": "12645:65:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 968,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 942,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "12528:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 941,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12528:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 944,
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "12544:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 943,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12544:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12527:34:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 947,
												"name": "remaining",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "12587:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 946,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12587:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12586:16:0"
									},
									"scope": 1143,
									"src": "12509:293:0",
									"stateMutability": "view",
									"superFunction": 546,
									"visibility": "public"
								},
								{
									"body": {
										"id": 987,
										"nodeType": "Block",
										"src": "12930:124:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 975,
														"name": "deprecated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 766,
														"src": "12941:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 976,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12954:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "12941:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 978,
												"nodeType": "ExpressionStatement",
												"src": "12941:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 979,
														"name": "upgradedAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 764,
														"src": "12969:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 980,
														"name": "_upgradedAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 970,
														"src": "12987:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12969:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 982,
												"nodeType": "ExpressionStatement",
												"src": "12969:34:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 984,
															"name": "_upgradedAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "13029:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 983,
														"name": "Deprecate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1136,
														"src": "13019:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13019:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 986,
												"nodeType": "EmitStatement",
												"src": "13014:32:0"
											}
										]
									},
									"documentation": null,
									"id": 988,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 973,
											"modifierName": {
												"argumentTypes": null,
												"id": 972,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 119,
												"src": "12920:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "12920:9:0"
										}
									],
									"name": "deprecate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 970,
												"name": "_upgradedAddress",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "12887:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 969,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12886:26:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12930:0:0"
									},
									"scope": 1143,
									"src": "12868:186:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1005,
										"nodeType": "Block",
										"src": "13174:164:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 993,
													"name": "deprecated",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 766,
													"src": "13189:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1003,
													"nodeType": "Block",
													"src": "13285:46:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1001,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 141,
																"src": "13307:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 992,
															"id": 1002,
															"nodeType": "Return",
															"src": "13300:19:0"
														}
													]
												},
												"id": 1004,
												"nodeType": "IfStatement",
												"src": "13185:146:0",
												"trueBody": {
													"id": 1000,
													"nodeType": "Block",
													"src": "13201:78:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 995,
																				"name": "upgradedAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 764,
																				"src": "13237:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 994,
																			"name": "StandardToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 547,
																			"src": "13223:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_StandardToken_$547_$",
																				"typeString": "type(contract StandardToken)"
																			}
																		},
																		"id": 996,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13223:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_StandardToken_$547",
																			"typeString": "contract StandardToken"
																		}
																	},
																	"id": 997,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "totalSupply",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 146,
																	"src": "13223:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																		"typeString": "function () view external returns (uint256)"
																	}
																},
																"id": 998,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13223:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 992,
															"id": 999,
															"nodeType": "Return",
															"src": "13216:51:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 1006,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13140:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 991,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "13168:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 990,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "13168:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13167:6:0"
									},
									"scope": 1143,
									"src": "13120:218:0",
									"stateMutability": "view",
									"superFunction": 146,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1047,
										"nodeType": "Block",
										"src": "13547:221:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1016,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1014,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "13566:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1015,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1008,
																	"src": "13581:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13566:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1017,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 141,
																"src": "13590:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13566:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1013,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1161,
															1162
														],
														"referencedDeclaration": 1161,
														"src": "13558:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13558:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1020,
												"nodeType": "ExpressionStatement",
												"src": "13558:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1030,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1026,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1022,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 216,
																		"src": "13622:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1024,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1023,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 99,
																		"src": "13631:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "13622:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1025,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1008,
																	"src": "13640:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13622:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1027,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 216,
																	"src": "13649:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1029,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1028,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 99,
																	"src": "13658:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "13649:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13622:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1021,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1161,
															1162
														],
														"referencedDeclaration": 1161,
														"src": "13614:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13614:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1032,
												"nodeType": "ExpressionStatement",
												"src": "13614:51:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1033,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "13678:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1035,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1034,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 99,
															"src": "13687:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13678:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1036,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1008,
														"src": "13697:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13678:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1038,
												"nodeType": "ExpressionStatement",
												"src": "13678:25:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1039,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "13714:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1040,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1008,
														"src": "13730:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13714:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1042,
												"nodeType": "ExpressionStatement",
												"src": "13714:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1044,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1008,
															"src": "13753:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1043,
														"name": "Issue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1128,
														"src": "13747:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13747:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1046,
												"nodeType": "ExpressionStatement",
												"src": "13747:13:0"
											}
										]
									},
									"documentation": null,
									"id": 1048,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 1011,
											"modifierName": {
												"argumentTypes": null,
												"id": 1010,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 119,
												"src": "13537:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "13537:9:0"
										}
									],
									"name": "issue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1008,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1048,
												"src": "13517:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1007,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "13517:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13516:13:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13547:0:0"
									},
									"scope": 1143,
									"src": "13502:266:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1083,
										"nodeType": "Block",
										"src": "14045:196:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1058,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1056,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 141,
																"src": "14064:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1057,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1050,
																"src": "14080:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14064:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1055,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1161,
															1162
														],
														"referencedDeclaration": 1161,
														"src": "14056:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14056:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1060,
												"nodeType": "ExpressionStatement",
												"src": "14056:31:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1062,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 216,
																	"src": "14106:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1064,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1063,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 99,
																	"src": "14115:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "14106:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1065,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1050,
																"src": "14125:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14106:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1061,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1161,
															1162
														],
														"referencedDeclaration": 1161,
														"src": "14098:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14098:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1068,
												"nodeType": "ExpressionStatement",
												"src": "14098:34:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1069,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "14145:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1070,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1050,
														"src": "14161:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14145:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1072,
												"nodeType": "ExpressionStatement",
												"src": "14145:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1073,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "14178:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1075,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1074,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 99,
															"src": "14187:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14178:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1076,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1050,
														"src": "14197:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14178:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1078,
												"nodeType": "ExpressionStatement",
												"src": "14178:25:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1080,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1050,
															"src": "14226:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1079,
														"name": "Redeem",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1132,
														"src": "14219:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14219:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1082,
												"nodeType": "EmitStatement",
												"src": "14214:19:0"
											}
										]
									},
									"documentation": null,
									"id": 1084,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 1053,
											"modifierName": {
												"argumentTypes": null,
												"id": 1052,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 119,
												"src": "14035:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "14035:9:0"
										}
									],
									"name": "redeem",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1050,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "14015:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1049,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14015:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14014:13:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14045:0:0"
									},
									"scope": 1143,
									"src": "13999:242:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1123,
										"nodeType": "Block",
										"src": "14322:319:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1096,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1094,
																"name": "newBasisPoints",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1086,
																"src": "14430:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3230",
																"id": 1095,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14447:2:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_20_by_1",
																	"typeString": "int_const 20"
																},
																"value": "20"
															},
															"src": "14430:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1093,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1161,
															1162
														],
														"referencedDeclaration": 1161,
														"src": "14422:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14422:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1098,
												"nodeType": "ExpressionStatement",
												"src": "14422:28:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1100,
																"name": "newMaxFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1088,
																"src": "14469:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3530",
																"id": 1101,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14481:2:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_50_by_1",
																	"typeString": "int_const 50"
																},
																"value": "50"
															},
															"src": "14469:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1099,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1161,
															1162
														],
														"referencedDeclaration": 1161,
														"src": "14461:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14461:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1104,
												"nodeType": "ExpressionStatement",
												"src": "14461:23:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1105,
														"name": "basisPointsRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "14497:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1106,
														"name": "newBasisPoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1086,
														"src": "14515:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14497:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1108,
												"nodeType": "ExpressionStatement",
												"src": "14497:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1109,
														"name": "maximumFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 222,
														"src": "14540:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1114,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"hexValue": "3130",
																	"id": 1112,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14567:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1113,
																	"name": "decimals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 762,
																	"src": "14571:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14567:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1110,
																"name": "newMaxFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1088,
																"src": "14553:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 34,
															"src": "14553:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1115,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14553:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14540:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1117,
												"nodeType": "ExpressionStatement",
												"src": "14540:40:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1119,
															"name": "basisPointsRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "14605:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1120,
															"name": "maximumFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 222,
															"src": "14622:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1118,
														"name": "Params",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1142,
														"src": "14598:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14598:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1122,
												"nodeType": "EmitStatement",
												"src": "14593:40:0"
											}
										]
									},
									"documentation": null,
									"id": 1124,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 1091,
											"modifierName": {
												"argumentTypes": null,
												"id": 1090,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 119,
												"src": "14312:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "14312:9:0"
										}
									],
									"name": "setParams",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"name": "newBasisPoints",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "14268:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1085,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14268:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1088,
												"name": "newMaxFee",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "14289:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1087,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14289:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14267:37:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14322:0:0"
									},
									"scope": 1143,
									"src": "14249:392:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1128,
									"name": "Issue",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1126,
												"indexed": false,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "14702:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1125,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14702:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14701:13:0"
									},
									"src": "14690:25:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1132,
									"name": "Redeem",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1130,
												"indexed": false,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "14776:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1129,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14776:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14775:13:0"
									},
									"src": "14763:26:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1136,
									"name": "Deprecate",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1134,
												"indexed": false,
												"name": "newAddress",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "14856:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14856:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14855:20:0"
									},
									"src": "14840:36:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1142,
									"name": "Params",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1138,
												"indexed": false,
												"name": "feeBasisPoints",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "14939:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1137,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14939:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1140,
												"indexed": false,
												"name": "maxFee",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "14960:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1139,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14960:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14938:34:0"
									},
									"src": "14926:47:0"
								}
							],
							"scope": 1144,
							"src": "10044:4932:0"
						}
					],
					"src": "33:14943:0"
				},
				"id": 0
			}
		}
	}
}